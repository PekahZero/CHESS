[
  [
    "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "SELECT MAX(eligible_free_rate) AS highest_eligible_free_rate FROM ( SELECT (T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) AS eligible_free_rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Alameda' AND T1.`Enrollment (Ages 5-17)` > 0 -- To avoid division by zero ) AS rates\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "SELECT (T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) AS eligible_free_rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' AND T1.`Free Meal Count (Ages 5-17)` IS NOT NULL AND T1.`Enrollment (Ages 5-17)` IS NOT NULL ORDER BY eligible_free_rate ASC LIMIT 3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "SELECT `Zip` FROM schools WHERE `CDSCode` IN ( SELECT `CDSCode` FROM frpm WHERE `County Name` = 'Fresno' ) AND `Charter` = 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?",
    "SELECT T3.`MailStreet`, T3.`MailCity`, T3.`MailZip`, T3.`MailState` FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` WHERE T1.`CDSCode` = ( SELECT `CDSCode` FROM frpm WHERE `FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "SELECT T1.`Phone` FROM schools AS T1 WHERE T1.`FundingType` = 'Directly funded' AND T1.`OpenDate` > '2000-01-01' AND T1.`Charter` = 1 AND T1.`Phone` IS NOT NULL AND T1.`OpenDate` IS NOT NULL AND T1.`FundingType` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Virtual` = 'F' AND T2.`AvgScrMath` < 400\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "SELECT DISTINCT T2.`School` FROM schools AS T2 JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T1.`NumTstTakr` > 500 AND T2.`Magnet` = 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "SELECT T3.`Phone` FROM satscores AS T2 INNER JOIN schools AS T3 ON T2.`cds` = T3.`CDSCode` WHERE T2.`NumGE1500` = ( SELECT MAX(T2.`NumGE1500`) FROM satscores AS T2 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?",
    "SELECT SUM(T2.`NumTstTakr`) FROM satscores AS T2 WHERE T2.`cds` IN ( SELECT T1.`CDSCode` FROM frpm AS T1 WHERE T1.`FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "SELECT COUNT(*) FROM schools AS T1 JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Charter` = 1 AND T2.`AvgScrMath` > 560\t----- bird -----\tcalifornia_schools"
  ],
  [
    "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "SELECT T1.`Free Meal Count (Ages 5-17)` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T3.AvgScrRead = ( SELECT MAX(T4.AvgScrRead) FROM satscores AS T4 ) AND T1.`Free Meal Count (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the codes of the schools with a total enrollment of over 500.",
    "SELECT T1.`CDSCode` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE (T1.`Enrollment (Ages 5-17)` + T2.`enroll12`) > 500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "SELECT MAX(CAST(T3.`Free Meal Count (Ages 5-17)` AS REAL) / CAST(T3.`Enrollment (Ages 5-17)` AS REAL)) AS highest_eligible_free_rate FROM frpm AS T3 JOIN schools AS T1 ON T3.`CDSCode` = T1.`CDSCode` JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE CAST(T2.`NumGE1500` AS REAL) / CAST(T2.`NumTstTakr` AS REAL) > 0.3 AND T3.`Free Meal Count (Ages 5-17)` IS NOT NULL AND T3.`Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "SELECT T3.`Phone` FROM ( SELECT T3.`CDSCode`, CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` AS excellence_rate FROM satscores AS T2 INNER JOIN schools AS T3 ON T2.`cds` = T3.`CDSCode` WHERE T2.`NumTstTakr` > 0 -- To avoid division by zero ORDER BY excellence_rate DESC LIMIT 3 ) AS TopSchools INNER JOIN schools AS T3 ON TopSchools.`CDSCode` = T3.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "SELECT T2.`NCESSchool` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` ORDER BY T1.`Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which active district has the highest average score in Reading?",
    "SELECT T1.District FROM ( SELECT T3.District, AVG(T2.AvgScrRead) AS avg_reading_score FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T3.StatusType = 'Active' AND T2.AvgScrRead IS NOT NULL GROUP BY T3.District ) AS T1 ORDER BY T1.avg_reading_score DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in merged Alameda have number of test takers less than 100?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Alameda' AND T1.`StatusType` = 'Merged' AND T2.`NumTstTakr` < 100\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the charter number of the school that the average score in Writing is 499?",
    "SELECT T2.`CharterNum` FROM schools AS T2 JOIN satscores AS T1 ON T1.cds = T2.`CDSCode` WHERE T1.`AvgScrWrite` = 499 AND T2.`CharterNum` IS NOT NULL GROUP BY T2.`CharterNum`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Contra Costa (directly funded) have number of test takers not more than 250?",
    "SELECT COUNT(*) FROM satscores AS T2 WHERE T2.`cds` IN ( SELECT T1.`CDSCode` FROM schools AS T1 WHERE T1.`County` = 'Contra Costa' AND T1.`FundingType` = 'Directly funded' ) AND T2.`NumTstTakr` <= 250\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest average score in Math?",
    "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL ) AND T2.Phone IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "SELECT COUNT(*) FROM schools AS S WHERE S.County = 'Amador'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "SELECT COUNT(*) FROM frpm AS T2 INNER JOIN schools AS T1 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Los Angeles' AND T2.`Free Meal Count (K-12)` > 500 AND T2.`Free Meal Count (K-12)` < 700\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which school in Contra Costa has the highest number of test takers?",
    "SELECT T2.`sname`, MAX(T2.`NumTstTakr`) AS MaxNumTstTakr FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Alameda' AND T2.`NumTstTakr` IS NOT NULL GROUP BY T2.`sname` ORDER BY MaxNumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "SELECT T2.`School`, T2.`Street`, T2.`City`, T2.`Zip` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "SELECT T3.`School` FROM schools AS T3 INNER JOIN frpm AS T1 ON T3.`CDSCode` = T1.`CDSCode` INNER JOIN satscores AS T2 ON T3.`CDSCode` = T2.`cds` WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.`NumGE1500` > 0\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "SELECT T1.`School`, T1.`FundingType` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Riverside' AND T2.`AvgScrMath` IS NOT NULL GROUP BY T1.`School`, T1.`FundingType` HAVING AVG(T2.`AvgScrMath`) > 400\t----- bird -----\tcalifornia_schools"
  ],
  [
    "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "-- SQL Script Type: SELECT SELECT T2.`sname`, T3.`Street`, T3.`City`, T3.`Zip`, T3.`State` FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` INNER JOIN satscores AS T2 ON T2.`cds` = T1.`CDSCode` WHERE T3.`City` = 'Monterey' AND T1.`FreeReducedMealCount` IS NOT NULL -- Assuming this is the correct column GROUP BY T2.`sname`, T3.`Street`, T3.`City`, T3.`Zip`, T3.`State` HAVING SUM(T1.`FreeReducedMealCount`) > 800 -- Adjusting to use SUM for the count\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "SELECT T1.`School`, T2.`AvgScrWrite`, T1.`Phone` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE (T1.`OpenDate` > '1991-01-01' OR T1.`ClosedDate` < '2000-01-01') AND T2.`AvgScrWrite` IS NOT NULL AND T1.`Phone` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "-- SQL Script Type: SELECT SELECT T2.`School`, T2.`DOCType` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`FundingType` = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > ( SELECT AVG(Difference) FROM ( SELECT (T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) AS Difference FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.`CDSCode` = T4.`CDSCode` WHERE T4.`FundingType` = 'Locally funded' ) AS AvgDifferences )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "SELECT s.OpenDate FROM schools AS s JOIN satscores AS ss ON ss.cds = s.CDSCode WHERE ss.enroll12 IS NOT NULL AND s.OpenDate IS NOT NULL AND ss.enroll12 = ( SELECT MAX(enroll12) FROM satscores WHERE enroll12 IS NOT NULL )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "SELECT DISTINCT S.City FROM schools AS S JOIN satscores AS SS ON S.CDSCode = SS.cds WHERE SS.enroll12 IS NOT NULL ORDER BY SS.enroll12 ASC LIMIT 5;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "SELECT T1.`CDSCode`, (T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)`) AS `Eligible Free Rate` FROM frpm AS T1 WHERE T1.`CDSCode` IN ( SELECT T2.`CDSCode` FROM frpm AS T2 ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 11 ) ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "SELECT (T1.`FRPM Count (K-12)` / T1.`Enrollment (K-12)`) AS `Eligible Free or Reduced Price Meal Rate` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`SOC` = '66' ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "-- SQL Script Type: SELECT SELECT T2.`sname`, T2.`Website` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000 AND T1.`Free Meal Count (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "SELECT S.`School`, (F.`Free Meal Count (Ages 5-17)` * 1.0 / F.`Enrollment (Ages 5-17)`) AS Free_Rate FROM frpm AS F JOIN schools AS S ON F.`CDSCode` = S.`CDSCode` WHERE S.`School` = 'Kacey Gibson' AND F.`Free Meal Count (Ages 5-17)` IS NOT NULL AND F.`Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "SELECT T3.`AdmEmail1` FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` WHERE T1.`Charter School (Y/N)` = 1 AND T1.`Enrollment (K-12)` = ( SELECT MIN(T2.`Enrollment (K-12)`) FROM frpm AS T2 WHERE T2.`Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name.",
    "-- SQL Type: SELECT SELECT COALESCE(T2.AdmFName1 || ' ' || T2.AdmLName1, '') AS FullName1, COALESCE(T2.AdmFName2 || ' ' || T2.AdmLName2, '') AS FullName2, COALESCE(T2.AdmFName3 || ' ' || T2.AdmLName3, '') AS FullName3 FROM schools AS T2 JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 > 0 ORDER BY T1.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
    "SELECT S.`Street`, S.`City`, S.`Zip`, S.`State` FROM schools AS S JOIN satscores AS SS ON S.`CDSCode` = SS.`cds` WHERE SS.`NumTstTakr` > 0 -- Ensure we do not divide by zero ORDER BY (SS.`NumGE1500` * 1.0 / SS.`NumTstTakr`) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "SELECT T2.`Website` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`County` = 'Los Angeles' AND T1.`NumTstTakr` BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "SELECT AVG(T2.`NumTstTakr`) FROM satscores AS T2 WHERE T2.`cds` IN ( SELECT T1.`CDSCode` FROM schools AS T1 WHERE T1.`County` = 'Fresno' AND T1.`OpenDate` BETWEEN '1980-01-01' AND '1980-12-31' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "SELECT T1.`Phone` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`District` = 'Fresno Unified' ORDER BY T2.`AvgScrRead` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which exclusively virtual schools have the top 5 highest average reading scores?",
    "SELECT T1.`School`, AVG(T2.`AvgScrRead`) AS AvgReadingScore FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Virtual` = 'F' AND T2.`AvgScrRead` IS NOT NULL GROUP BY T1.`School` ORDER BY AvgReadingScore DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the type of education offered in the school who scored the highest average in Math?",
    "SELECT T2.StatusType FROM schools AS T2 INNER JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "SELECT T2.`AvgScrMath`, T1.`County` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`CDSCode` = ( SELECT T1.`CDSCode` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrMath` IS NOT NULL AND T2.`AvgScrRead` IS NOT NULL AND T2.`AvgScrWrite` IS NOT NULL GROUP BY T1.`CDSCode` ORDER BY (T2.`AvgScrMath` + T2.`AvgScrRead` + T2.`AvgScrWrite`) ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "WITH HighestTestTakerSchool AS ( SELECT T2.`cds` FROM satscores AS T2 WHERE T2.`NumTstTakr` > 0 ORDER BY T2.`NumGE1500` DESC LIMIT 1 ) SELECT AVG(T3.`AvgScrWrite`) AS average_writing_score, T4.`City` FROM satscores AS T3 JOIN schools AS T4 ON T4.`CDSCode` = (SELECT `cds` FROM HighestTestTakerSchool) WHERE T3.`cds` = (SELECT `cds` FROM HighestTestTakerSchool)\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "SELECT T3.`School`, AVG(T2.`AvgScrWrite`) AS `Average_Writing_Score` FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.`CDSCode` = T2.`cds` WHERE T2.`AvgScrWrite` IS NOT NULL GROUP BY T3.`School`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "SELECT T2.`School` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T2.`FundingType` = 'Directly funded' GROUP BY T2.`School` HAVING SUM(T3.`enroll12`) = ( SELECT MAX(total_enrollment) FROM ( SELECT SUM(T3.`enroll12`) AS total_enrollment FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T2.`FundingType` = 'Directly funded' GROUP BY T2.`School` ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "SELECT COUNT(*) / 12.0 AS monthly_average FROM schools WHERE `County` = 'Alameda' AND `OpenDate` BETWEEN '1980-01-01' AND '1980-12-31' AND `District` = '52'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "SELECT (SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange' AND StatusType = 'Merged') * 1.0 / (SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange' AND StatusType = 'Merged') AS ratio\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "SELECT T3.`School`, T3.`ClosedDate` FROM schools AS T3 WHERE T3.`StatusType` = 'Closed' AND T3.`County` = ( SELECT T3.`County` FROM schools AS T3 WHERE T3.`StatusType` = 'Closed' GROUP BY T3.`County` ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the postal street address for the school with the 6th highest Math average? Indicate the school's name.",
    "SELECT T3.`School`, T3.`Street` FROM satscores AS T1 INNER JOIN schools AS T3 ON T1.`cds` = T3.`CDSCode` WHERE T1.`AvgScrMath` = ( SELECT DISTINCT T2.`AvgScrMath` FROM satscores AS T2 ORDER BY T2.`AvgScrMath` DESC LIMIT 1 OFFSET 5 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "-- SQL Type: SELECT SELECT T2.School AS sname, T2.MailStreet FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "SELECT COUNT(*) FROM ( SELECT (T2.`AvgScrRead` + T2.`AvgScrMath` + T2.`AvgScrWrite`) AS TotalSATScore FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`MailCity` = 'Lakeport' ) AS SubQuery WHERE TotalSATScore >= 1500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "SELECT SUM(T2.`NumTstTakr`) FROM satscores AS T2 INNER JOIN schools AS T1 ON T1.`CDSCode` = T2.`cds` WHERE T1.`City` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "SELECT S.`School`, S.`MailZip` FROM schools AS S INNER JOIN satscores AS SS ON S.`CDSCode` = SS.`cds` WHERE S.`AdmFName1` = 'Avetik Atoian' AND S.`MailZip` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "SELECT (SELECT COUNT(*) FROM schools WHERE County = 'Colusa' AND State = 'CA') * 1.0 / NULLIF((SELECT COUNT(*) FROM schools WHERE County = 'Humboldt' AND State = 'CA'), 0) AS ratio\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of all the schools with a mailing state address in California, how many are active in San Joaquin?",
    "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active' AND District = 'San Joaquin'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "SELECT T2.`Phone`, T2.`Ext` FROM ( SELECT DISTINCT T1.`AvgScrWrite` FROM satscores AS T1 WHERE T1.`AvgScrWrite` IS NOT NULL ORDER BY T1.`AvgScrWrite` DESC LIMIT 1 OFFSET 332 ) AS T3 INNER JOIN satscores AS T1 ON T3.`AvgScrWrite` = T1.`AvgScrWrite` INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`Phone` IS NOT NULL AND T2.`Ext` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "SELECT T3.`School`, T3.`Phone`, T3.`Ext` FROM schools AS T3 WHERE T3.`Zip` = '95203-3704'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "-- SQL to retrieve the website for schools under the administrations of Mike Larson and Dante Alvarez SELECT DISTINCT T3.`Website` FROM schools AS T3 JOIN frpm AS T1 ON T1.`CDSCode` = T3.`CDSCode` WHERE T1.`County Name` IN ('Mike Larson', 'Dante Alvarez') -- Assuming County Name represents administrators AND T1.`CDSCode` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "SELECT T1.`Website` FROM schools AS T1 WHERE T1.`Charter` = 1 AND T1.`Virtual` = 'P' AND T1.`County` = 'San Joaquin' AND T1.`Website` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "SELECT COUNT(*) FROM schools WHERE `County` = 'Hickman' AND `DOC` = '52' AND `Charter` = 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "SELECT COUNT(*) AS total_non_chartered_schools FROM ( SELECT T1.`CDSCode`, (T2.`Free Meal Count (Ages 5-17)` * 100.0 / T2.`Enrollment (Ages 5-17)`) AS eligible_free_meal_percent FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Los Angeles' AND T1.`Charter` = 0 ) AS subquery WHERE eligible_free_meal_percent < 0.18\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "SELECT T1.`School`, T1.`City`, T1.`AdmFName1`, T1.`AdmLName1`, T1.`AdmFName2`, T1.`AdmLName2` FROM schools AS T1 WHERE T1.`CDSCode` LIKE '00D2%' AND T1.`AdmFName1` IS NOT NULL AND T1.`AdmLName1` IS NOT NULL OR T1.`AdmFName2` IS NOT NULL AND T1.`AdmLName2` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "SELECT COUNT(*) FROM schools WHERE `CharterNum` = '00D4' AND `MailCity` = 'Hickman'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "SELECT (COUNT(CASE WHEN FundingType = 'Locally funded' THEN 1 END) * 100.0 / COUNT(*)) AS funding_ratio_percentage FROM schools WHERE County = 'Santa Clara'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "SELECT COUNT(*) FROM schools WHERE `FundingType` = 'Directly funded' AND `OpenDate` IS NOT NULL AND `OpenDate` BETWEEN '2000-01-01' AND '2005-12-31' AND `County` = 'Stanislaus'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "SELECT COUNT(*) AS total_closures FROM schools WHERE `ClosedDate` = '1989-06-30' AND `City` = 'San Francisco'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "SELECT T1.`County` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`StatusType` = 'Closed' AND T2.`Academic Year` BETWEEN '1980-1981' AND '1989-1990' AND T1.`SOC` = '11' GROUP BY T1.`County` ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "SELECT T1.`NCESDist` FROM schools AS T1 WHERE T1.`SOC` = '31'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "-- Check distinct county names SELECT DISTINCT `County Name` FROM frpm; -- Check distinct district types SELECT DISTINCT `District Type` FROM frpm;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "SELECT T2.`District Code` FROM frpm AS T2 WHERE T2.`CDSCode` IN ( SELECT T1.`CDSCode` FROM schools AS T1 WHERE T1.`City` = 'Fresno' AND T1.`Magnet` = 0 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "-- SQL Script Type: SELECT SELECT SUM(T3.enroll12) AS total_enrollment FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds WHERE T2.EdOpsCode = 'SSS' AND T1.\"Academic Year\" = '2014-2015' AND T2.District = 'Fremont' AND T3.enroll12 IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "-- SQL Script Type: SELECT SELECT SUM(`FRPM Count (Ages 5-17)`) AS Total_FRPM_Count FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.School = 'Youth Authority School' AND schools.MailStreet = 'PO Box 1040' AND `FRPM Count (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360?",
    "-- SQL Script Type: SELECT SELECT MIN(ss.enroll12) FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.EdOpsCode = 'SPECON' AND s.NCESDist = '613360' AND ss.enroll12 IS NOT NULL GROUP BY ss.enroll12\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "-- SQL Type: SELECT SELECT T1.School Name FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County Code = '37' AND T2.Breakfast Provision = '2'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "SELECT DISTINCT schools.County FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode JOIN satscores ON schools.CDSCode = satscores.cds WHERE frpm.County_Code = '19' -- Assuming '19' is the code for Merced AND schools.School IS NOT NULL; -- Ensuring we only get valid school entries\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "SELECT T1.`CDSCode`, (T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)`) * 100 AS `Percent Eligible FRPM` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Los Angeles' AND T1.`CDSCode` IN ( SELECT T1.`CDSCode` FROM schools AS T1 WHERE T1.`County` = 'Los Angeles' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the most common type of grade span served in the city of Adelanto?",
    "SELECT T3.`GSserved` FROM schools AS T3 WHERE T3.`City` = 'Adelanto' GROUP BY T3.`GSserved` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "SELECT County, school_count FROM ( SELECT 'San Diego' AS County, COUNT(*) AS school_count FROM schools WHERE County = 'San Diego' AND Virtual = 'F' UNION ALL SELECT 'Santa Barbara' AS County, COUNT(*) AS school_count FROM schools WHERE County = 'Santa Barbara' AND Virtual = 'F' ) AS counts ORDER BY school_count DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "SELECT T1.School, T1.Latitude, T1.County FROM schools AS T1 WHERE T1.Latitude = ( SELECT MAX(Latitude) FROM schools )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "SELECT T1.`School`, T1.`City`, 'K' AS Lowest_Grade FROM schools AS T1 WHERE T1.`City` IS NOT NULL ORDER BY T1.`Latitude` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the grade span offered in the school with the highest longitude?",
    "SELECT GSoffered FROM schools WHERE Latitude = ( SELECT MAX(Latitude) FROM schools )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "-- SQL script type: SELECT WITH MagnetSchoolCount AS ( SELECT COUNT(*) AS Magnet_School_Count FROM schools WHERE GSserved = 'K-8' AND Magnet = 1 ), CitySchoolCount AS ( SELECT County, COUNT(*) AS Number_of_Schools FROM schools WHERE GSserved = 'K-8' GROUP BY County ) SELECT (SELECT Magnet_School_Count FROM MagnetSchoolCount) AS Magnet_School_Count, County, Number_of_Schools FROM CitySchoolCount;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "-- SQL script type: SELECT SELECT T1.AdmFName1, T1.District FROM schools AS T1 WHERE T1.AdmFName1 IS NOT NULL GROUP BY T1.AdmFName1, T1.District ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "SELECT T1.`District Code`, (T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) * 100 AS `Percent Eligible Free` FROM frpm AS T1 WHERE T1.`CDSCode` = ( SELECT T3.`CDSCode` FROM schools AS T3 WHERE T3.`AdmFName1` = 'Alusine' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "-- SQL Script Type: SELECT SELECT * FROM schools WHERE CharterNum = '40'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools?",
    "-- SQL Type: SELECT SELECT T1.`Email` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'San Bernardino' AND T1.`District` = 'San Bernardino City Unified' AND T2.`StatusType` = 'Active' AND T2.`SOCType` IN ('Intermediate/Middle Schools (Public)', 'Unified Schools') AND T1.`Academic Year` BETWEEN '2009-2009' AND '2010-2010'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "SELECT T3.AdmEmail1, T3.School -- SQL Script Type: SELECT FROM schools AS T3 INNER JOIN satscores AS T2 ON T3.CDSCode = T2.cds WHERE T2.NumTstTakr IS NOT NULL AND T2.NumGE1500 > 0 AND T2.NumTstTakr = ( SELECT MAX(T4.NumTstTakr) FROM satscores AS T4 WHERE T4.NumGE1500 > 0 AND T4.NumTstTakr IS NOT NULL )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'east Bohemia' AND T1.`frequency` = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts who have region in Prague are eligible for loans?",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM account AS T1 WHERE T1.`district_id` IN ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' ) AND T1.`account_id` IN ( SELECT `account_id` FROM loan )\t----- bird -----\tfinancial"
  ],
  [
    "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "SELECT CASE WHEN (SELECT AVG(CAST(A12 AS REAL)) FROM district WHERE A12 IS NOT NULL) > (SELECT AVG(CAST(A13 AS REAL)) FROM district WHERE A13 IS NOT NULL) THEN '1995 has a higher average unemployment rate' WHEN (SELECT AVG(CAST(A12 AS REAL)) FROM district WHERE A12 IS NOT NULL) < (SELECT AVG(CAST(A13 AS REAL)) FROM district WHERE A13 IS NOT NULL) THEN '1996 has a higher average unemployment rate' ELSE 'Both years have the same average unemployment rate' END AS result\t----- bird -----\tfinancial"
  ],
  [
    "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "SELECT COUNT(*) FROM ( SELECT T1.`district_id`, AVG(T1.`A11`) AS female_avg_salary FROM client AS T2 INNER JOIN district AS T1 ON T2.`district_id` = T1.`district_id` WHERE T2.`gender` = 'F' GROUP BY T1.`district_id` ) AS subquery WHERE female_avg_salary > 6000 AND female_avg_salary < 10000\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "SELECT COUNT(*) FROM client AS T1 WHERE T1.`district_id` IN ( SELECT `district_id` FROM district WHERE `A3` = 'north Bohemia' AND `A11` > 8000 ) AND T1.`gender` = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
    "WITH SalaryInfo AS ( SELECT MIN(A11) AS lowest_avg_salary, MAX(A11) AS highest_avg_salary FROM district ), OldestFemaleClient AS ( SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T2.gender = 'F' AND T4.A11 = (SELECT lowest_avg_salary FROM SalaryInfo) ORDER BY T2.birth_date ASC LIMIT 1 ) SELECT (SELECT account_id FROM OldestFemaleClient) AS account_number, (SELECT highest_avg_salary FROM SalaryInfo) - (SELECT lowest_avg_salary FROM SalaryInfo) AS salary_gap;\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of clients who are youngest and have highest average salary?",
    "SELECT DISTINCT d.account_id FROM disp AS d INNER JOIN client AS c ON d.client_id = c.client_id WHERE c.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district)) AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district)))\t----- bird -----\tfinancial"
  ],
  [
    "How many customers who choose statement of weekly issuance are Owner?",
    "SELECT COUNT(DISTINCT T1.client_id) AS owner_count FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "List out the clients who choose statement of issuance after transaction are Disponent?",
    "SELECT DISTINCT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK PO OBRATU' AND T1.type = 'DISPONENT'\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "-- Correct SQL SELECT DISTINCT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = ( SELECT MIN(amount) FROM loan WHERE date BETWEEN '1997-01-01' AND '1997-12-31' ) AND T2.frequency = 'POPLATEK TYDNE' AND T1.date BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "SELECT T1.`account_id` FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`duration` > 12 AND strftime('%Y', T1.`date`) = '1993' AND T2.`amount` = ( SELECT MAX(T2_inner.`amount`) FROM account AS T1_inner INNER JOIN loan AS T2_inner ON T1_inner.`account_id` = T2_inner.`account_id` WHERE T2_inner.`duration` > 12 AND strftime('%Y', T1_inner.`date`) = '1993' )\t----- bird -----\tfinancial"
  ],
  [
    "Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T1.`birth_date` < '1950-01-01' AND T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Slokolov' )\t----- bird -----\tfinancial"
  ],
  [
    "List out the accounts who have the earliest trading date in 1995 ?",
    "SELECT DISTINCT `account_id` FROM trans WHERE `date` = ( SELECT MIN(`date`) FROM trans WHERE `date` BETWEEN '1995-01-01' AND '1995-12-31' )\t----- bird -----\tfinancial"
  ],
  [
    "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "SELECT DISTINCT T1.`account_id` FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` < '1997-01-01' AND T2.`amount` > 3000\t----- bird -----\tfinancial"
  ],
  [
    "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "SELECT T1.`client_id` FROM disp AS T1 INNER JOIN card AS T2 ON T1.`disp_id` = T2.`disp_id` WHERE T2.`issued` = '1994-03-03'\t----- bird -----\tfinancial"
  ],
  [
    "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "SELECT `date` FROM account WHERE `account_id` = ( SELECT `account_id` FROM trans WHERE `amount` = 840 AND `date` = '1998-10-14' )\t----- bird -----\tfinancial"
  ],
  [
    "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "SELECT T1.`district_id` FROM account AS T1 WHERE T1.`account_id` = ( SELECT `account_id` FROM loan WHERE `date` = '1994-08-25' )\t----- bird -----\tfinancial"
  ],
  [
    "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "SELECT MAX(T3.amount) FROM trans AS T3 INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN card AS T1 ON T2.disp_id = T1.disp_id WHERE T1.issued = '1996-10-21'\t----- bird -----\tfinancial"
  ],
  [
    "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`district_id` = ( SELECT `district_id` FROM district ORDER BY `A11` DESC LIMIT 1 ) ORDER BY T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "SELECT `amount` FROM trans WHERE `account_id` = ( SELECT `account_id` FROM loan ORDER BY `amount` DESC LIMIT 1 ) ORDER BY `date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many clients opened their accounts in Jesenik branch were women?",
    "SELECT COUNT(*) FROM client AS T1 WHERE T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Jesenik' ) AND T1.`gender` = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "SELECT `disp_id` FROM disp WHERE `account_id` = ( SELECT `account_id` FROM trans WHERE `amount` = 5100 AND `date` = '1998-09-02' )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts were opened in Litomerice in 1996?",
    "SELECT COUNT(*) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Litomerice' ) AND strftime('%Y', `date`) = '1996'\t----- bird -----\tfinancial"
  ],
  [
    "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "SELECT T2.`A2` FROM district AS T2 WHERE T2.`district_id` = ( SELECT T1.`district_id` FROM client AS T1 WHERE T1.`client_id` = ( SELECT `client_id` FROM client WHERE `gender` = 'F' AND `birth_date` = '1976-01-29' ) )\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "SELECT `birth_date` FROM client WHERE `client_id` = ( SELECT `client_id` FROM disp WHERE `account_id` = ( SELECT `account_id` FROM loan WHERE `amount` = 98832 AND `date` = '1996-01-03' ) )\t----- bird -----\tfinancial"
  ],
  [
    "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "SELECT T2.`account_id` FROM client AS T1 INNER JOIN disp AS T3 ON T1.`client_id` = T3.`client_id` INNER JOIN account AS T2 ON T3.`account_id` = T2.`account_id` WHERE T1.`district_id` = (SELECT `district_id` FROM district WHERE `A3` = 'Prague') ORDER BY T2.`date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "SELECT (CAST(male_count AS REAL) / total_clients) * 100 AS male_percentage FROM ( SELECT COUNT(*) AS male_count FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'south Bohemia' ORDER BY CAST(`A4` AS INTEGER) DESC LIMIT 1 ) AND `gender` = 'M' ) AS male_count_table, ( SELECT COUNT(*) AS total_clients FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'south Bohemia' ORDER BY CAST(`A4` AS INTEGER) DESC LIMIT 1 ) ) AS total_clients_table\t----- bird -----\tfinancial"
  ],
  [
    "For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "-- SQL Type: SELECT SELECT ((balance_1998_12_27 - balance_1993_03_22) / balance_1993_03_22) * 100 AS increase_rate FROM ( SELECT (SELECT SUM(T3.amount) FROM trans AS T3 INNER JOIN disp AS D ON T3.account_id = D.account_id WHERE D.client_id = ( SELECT D2.client_id FROM loan AS L INNER JOIN disp AS D2 ON L.account_id = D2.account_id WHERE L.date = '1993-07-05' LIMIT 1 ) AND T3.date <= '1993-03-22') AS balance_1993_03_22, (SELECT SUM(T3.amount) FROM trans AS T3 INNER JOIN disp AS D ON T3.account_id = D.account_id WHERE D.client_id = ( SELECT D2.client_id FROM loan AS L INNER JOIN disp AS D2 ON L.account_id = D2.account_id WHERE L.date = '1993-07-05' LIMIT 1 ) AND T3.date <= '1998-12-27') AS balance_1998_12_27 ) AS balances\t----- bird -----\tfinancial"
  ],
  [
    "What is the percentage of loan amount that has been fully paid with no issue.",
    "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) / SUM(amount)) * 100 AS percentage_paid FROM loan\t----- bird -----\tfinancial"
  ],
  [
    "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "SELECT (SUM(CASE WHEN `status` = 'C' THEN `amount` ELSE 0 END) * 100.0 / NULLIF(SUM(`amount`), 0)) AS percentage_running FROM loan WHERE `amount` < 100000\t----- bird -----\tfinancial"
  ],
  [
    "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "SELECT T1.`account_id`, T2.`A2` AS district_name, T2.`A3` AS district_region FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`date` LIKE '1993%' AND T1.`frequency` = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial"
  ],
  [
    "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "SELECT T1.`account_id`, T1.`frequency` FROM account AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' ) AND T1.`date` BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "List account ID and account opening date for accounts from 'Prachatice'.",
    "SELECT `account_id`, `date` FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Prachatice' )\t----- bird -----\tfinancial"
  ],
  [
    "State the district and region for loan ID '4990'.",
    "SELECT `A2`, `A3` FROM district WHERE `district_id` = ( SELECT `district_id` FROM account WHERE `account_id` = ( SELECT `account_id` FROM loan WHERE `loan_id` = '4990' ) )\t----- bird -----\tfinancial"
  ],
  [
    "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "SELECT T1.account_id, T3.A2 AS district, T3.A3 AS region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial"
  ],
  [
    "List the loan ID, district and average salary for loan with duration of 60 months.",
    "SELECT T1.`loan_id`, T2.`district_id`, T3.`A11` AS `average_salary` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T2.`district_id` = T3.`district_id` WHERE T1.`duration` = 60\t----- bird -----\tfinancial"
  ],
  [
    "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "SELECT D.district_id, ((D.A13 - D.A12) / D.A12) * 100 AS unemployment_increment FROM district AS D WHERE D.district_id IN ( SELECT DISTINCT A.district_id FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN disp AS D2 ON A.account_id = D2.account_id INNER JOIN client AS C ON D2.client_id = C.client_id WHERE L.status = 'D' )\t----- bird -----\tfinancial"
  ],
  [
    "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.",
    "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM account WHERE date LIKE '1993%')) * 100 AS percentage_decin_accounts FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE D.A2 = 'Decin' AND A.date LIKE '1993%'\t----- bird -----\tfinancial"
  ],
  [
    "List the account IDs with monthly issuance of statements.",
    "SELECT `account_id` FROM account WHERE `frequency` = 'POPLATEK MESICNE'\t----- bird -----\tfinancial"
  ],
  [
    "List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "SELECT T2.`district_id`, COUNT(T1.`client_id`) AS female_count FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' GROUP BY T2.`district_id` ORDER BY female_count DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996?",
    "SELECT T3.`A2` AS district_name, SUM(T4.`amount`) AS total_withdrawals FROM trans AS T4 INNER JOIN account AS T1 ON T4.`account_id` = T1.`account_id` INNER JOIN district AS T3 ON T1.`district_id` = T3.`district_id` WHERE T4.`type` = 'VYDAJ' AND T4.`date` LIKE '1996-01%' GROUP BY T3.`district_id` ORDER BY total_withdrawals DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "How many of the account holders in South Bohemia still do not own credit cards?",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM account AS T1 LEFT JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T1.`district_id` = T3.`district_id` WHERE T3.`A3` = 'south Bohemia' AND T2.`disp_id` IS NULL\t----- bird -----\tfinancial"
  ],
  [
    "Which district has highest active loan?",
    "SELECT T4.`A3` AS district_name FROM ( SELECT T3.`district_id`, COUNT(T1.`loan_id`) AS active_loans FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T2.`district_id` = T3.`district_id` WHERE T1.`status` IN ('C', 'D') GROUP BY T3.`district_id` ) AS subquery INNER JOIN district AS T4 ON subquery.`district_id` = T4.`district_id` ORDER BY subquery.active_loans DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the average loan amount by male borrowers?",
    "SELECT AVG(loan.amount) AS average_loan_amount FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "SELECT district_id, A2 FROM district WHERE A13 = ( SELECT MAX(A13) FROM district )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "SELECT COUNT(*) AS account_count FROM account WHERE `district_id` = ( SELECT `district_id` FROM district ORDER BY `A16` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM account AS T1 WHERE T1.`frequency` = 'POPLATEK MESICNE' AND T1.`account_id` IN ( SELECT DISTINCT T2.`account_id` FROM trans AS T2 WHERE T2.`operation` = 'VYBER KARTOU' AND T2.`balance` < 0 )\t----- bird -----\tfinancial"
  ],
  [
    "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`frequency` = 'POPLATEK MESICNE' AND T1.`amount` >= 250000 AND T1.`date` BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have running contracts in Branch location 1?",
    "SELECT COUNT(*) FROM account AS A WHERE A.`district_id` = 1 AND A.`account_id` IN ( SELECT D.`account_id` FROM disp AS D WHERE D.`type` IN ('OWNER', 'DISPONENT') AND D.`client_id` IN ( SELECT C.`client_id` FROM client AS C WHERE C.`district_id` = A.`district_id` ) AND D.`account_id` IN ( SELECT L.`account_id` FROM loan AS L WHERE L.`status` IN ('C', 'D') ) )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`district_id` = ( SELECT `district_id` FROM district ORDER BY `A15` DESC LIMIT 1 OFFSET 1 ) AND T1.`gender` = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "How many high-level credit cards have \"disponent\" type of disposition?",
    "SELECT COUNT(DISTINCT T1.`card_id`) FROM card AS T1 INNER JOIN disp AS T2 ON T1.`disp_id` = T2.`disp_id` WHERE T1.`type` = 'gold' AND T2.`type` = 'DISPONENT'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts are there in the district of \"Pisek\"?",
    "SELECT COUNT(*) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "Which districts have transactions greater than USS$10,000 in 1997?",
    "SELECT DISTINCT T2.`district_id` FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`amount` > 10000 AND strftime('%Y', T1.`date`) = '1997'\t----- bird -----\tfinancial"
  ],
  [
    "Which accounts placed orders for household payment in Pisek?",
    "SELECT DISTINCT T1.`account_id` FROM account AS T1 INNER JOIN `order` AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`k_symbol` = 'SIPO' AND T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "What are the accounts that have both gold and junior credit cards?",
    "SELECT DISTINCT type FROM card;\t----- bird -----\tfinancial"
  ],
  [
    "How much is the average amount in credit card made by account holders in a month, in year 2021?",
    "-- SQL Type: SELECT SELECT AVG(monthly_avg) AS overall_average FROM ( SELECT AVG(amount) AS monthly_avg FROM trans WHERE operation = 'VYBER KARTOU' AND date BETWEEN '2021-01-01' AND '2021-12-31' AND amount IS NOT NULL GROUP BY strftime('%Y-%m', date) ) AS monthly_data\t----- bird -----\tfinancial"
  ],
  [
    "Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998?",
    "SELECT DISTINCT T2.client_id FROM disp AS T2 INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN trans AS T1 ON T3.account_id = T1.account_id WHERE T1.type = 'VYBER' AND T1.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY T2.client_id HAVING SUM(T1.amount) / COUNT(DISTINCT strftime('%m', T1.date)) < ( SELECT AVG(monthly_spending) FROM ( SELECT SUM(T1.amount) / COUNT(DISTINCT strftime('%m', T1.date)) AS monthly_spending FROM trans AS T1 WHERE T1.type = 'VYBER' AND T1.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY strftime('%m', T1.date) ) AS monthly_totals )\t----- bird -----\tfinancial"
  ],
  [
    "Who are the female account holders who own credit cards and also have loans?",
    "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "How many female clients' accounts are in the region of South Bohemia?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 WHERE T1.`gender` = 'F' AND T1.`district_id` IN ( SELECT `district_id` FROM district WHERE `A3` = 'south Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "Please list the accounts whose district is Tabor that are eligible for loans.",
    "SELECT T1.`account_id` FROM account AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'OWNER' AND T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Tabor' )\t----- bird -----\tfinancial"
  ],
  [
    "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
    "SELECT DISTINCT T1.`type` FROM disp AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`type` <> 'OWNER' AND T2.`district_id` IN ( SELECT T3.`district_id` FROM district AS T3 WHERE T3.`A11` > 8000 AND T3.`A11` <= 9000 )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?",
    "SELECT COUNT(DISTINCT T1.account_id) AS account_count FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN \"order\" AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'north Bohemia' AND T3.bank_to = 'AB'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the name of the districts with accounts that made withdrawal transactions.",
    "SELECT DISTINCT T2.`A2` FROM district AS T2 WHERE T2.`district_id` IN ( SELECT DISTINCT T1.`district_id` FROM account AS T1 WHERE T1.`account_id` IN ( SELECT DISTINCT `account_id` FROM trans WHERE `type` = 'VYDAJ' ) )\t----- bird -----\tfinancial"
  ],
  [
    "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?",
    "SELECT AVG(T1.`A15`) FROM district AS T1 WHERE T1.`district_id` IN ( SELECT DISTINCT T2.`district_id` FROM district AS T2 INNER JOIN account AS T3 ON T2.`district_id` = T3.`district_id` WHERE T2.`A15` > 4000 AND T3.`date` >= '1997-01-01' )\t----- bird -----\tfinancial"
  ],
  [
    "How many 'classic' cards are eligible for loan?",
    "SELECT COUNT(T2.`card_id`) FROM card AS T2 INNER JOIN disp AS T1 ON T2.`disp_id` = T1.`disp_id` WHERE T2.`type` = 'classic' AND T1.`account_id` IN ( SELECT DISTINCT T1.`account_id` FROM disp AS T1 WHERE T1.`type` = 'OWNER' )\t----- bird -----\tfinancial"
  ],
  [
    "How many male clients in 'Hl.m. Praha' district?",
    "SELECT COUNT(*) FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Hl.m. Praha' ) AND `gender` = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "How many percent of 'Gold' cards were issued prior to 1998?",
    "SELECT (CAST((SELECT COUNT(*) FROM card WHERE type = 'gold' AND issued < '1998-01-01') AS REAL) / (SELECT COUNT(*) FROM card)) * 100 AS percent_gold_prior_1998\t----- bird -----\tfinancial"
  ],
  [
    "Who is the owner of the account with the largest loan amount?",
    "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id = ( SELECT account_id FROM loan WHERE amount = ( SELECT MAX(amount) FROM loan ) ) AND T1.type = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "What is the number of committed crimes in 1995 in the district of the account with the id 532?",
    "SELECT `A15` FROM district WHERE `district_id` = ( SELECT `district_id` FROM account WHERE `account_id` = 532 )\t----- bird -----\tfinancial"
  ],
  [
    "What is the district Id of the account that placed the order with the id 33333?",
    "SELECT T1.`district_id` FROM account AS T1 WHERE T1.`account_id` = ( SELECT `account_id` FROM `order` WHERE `order_id` = 33333 )\t----- bird -----\tfinancial"
  ],
  [
    "List all the withdrawals in cash transactions that the client with the id 3356 makes.",
    "SELECT T.trans_id, T.date, T.amount FROM trans AS T JOIN disp AS D ON T.account_id = D.account_id WHERE D.client_id = 3356 AND T.operation = 'VYBER' AND T.operation IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "Among the weekly issuance accounts, how many have a loan of under 200000?",
    "SELECT COUNT(*) FROM loan AS T1 WHERE T1.`account_id` IN ( SELECT `account_id` FROM account WHERE `frequency` = 'POPLATEK TYDNE' ) AND T1.`amount` < 200000\t----- bird -----\tfinancial"
  ],
  [
    "What type of credit card does the client with the id 13539 own?",
    "SELECT T1.`type` FROM card AS T1 INNER JOIN disp AS T2 ON T1.`disp_id` = T2.`disp_id` WHERE T2.`client_id` = 13539\t----- bird -----\tfinancial"
  ],
  [
    "What is the region of the client with the id 3541 from?",
    "SELECT T2.`A3` FROM district AS T2 INNER JOIN client AS T1 ON T1.`district_id` = T2.`district_id` WHERE T1.`client_id` = 3541\t----- bird -----\tfinancial"
  ],
  [
    "Which district has the most accounts with loan contracts finished with no problems?",
    "SELECT T2.`district_id` FROM ( SELECT T2.`district_id`, COUNT(T1.`account_id`) AS account_count FROM account AS T1 INNER JOIN loan AS T3 ON T1.`account_id` = T3.`account_id` INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T3.`status` = 'A' GROUP BY T2.`district_id` ) AS T2 ORDER BY T2.`account_count` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Who placed the order with the id 32423?",
    "SELECT T1.`gender` FROM `order` AS T2 INNER JOIN `disp` AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN `client` AS T1 ON T3.`client_id` = T1.`client_id` WHERE T2.`order_id` = 32423\t----- bird -----\tfinancial"
  ],
  [
    "Please list all the transactions made by accounts from district 5.",
    "SELECT T.trans_id, T.account_id, T.date, T.type, T.operation, T.amount FROM trans AS T JOIN account AS A ON T.account_id = A.account_id WHERE A.district_id = 5 AND T.operation IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "How many of the accounts are from Jesenik district?",
    "SELECT COUNT(*) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Jesenik' )\t----- bird -----\tfinancial"
  ],
  [
    "List all the clients' IDs whose junior credit cards were issued after 1996.",
    "SELECT DISTINCT T1.`client_id` FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN card AS T3 ON T2.`disp_id` = T3.`disp_id` WHERE T3.`type` = 'junior' AND T3.`issued` >= '1997-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?",
    "SELECT (CAST(COUNT(CASE WHEN `gender` = 'F' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS female_percentage FROM client WHERE `district_id` IN ( SELECT `district_id` FROM district WHERE `A11` > 10000 )\t----- bird -----\tfinancial"
  ],
  [
    "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
    "WITH amounts AS ( SELECT (SELECT SUM(L.amount) FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN client AS C ON A.account_id = C.client_id WHERE C.gender = 'M' AND L.date LIKE '1996%') AS total_amount_1996, (SELECT SUM(L.amount) FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN client AS C ON A.account_id = C.client_id WHERE C.gender = 'M' AND L.date LIKE '1997%') AS total_amount_1997 ) SELECT (total_amount_1997 - total_amount_1996) / total_amount_1996 * 100 AS growth_rate FROM amounts WHERE total_amount_1996 IS NOT NULL; -- Ensure we don't divide by zero\t----- bird -----\tfinancial"
  ],
  [
    "How many credit card withdrawals were recorded after 1995?",
    "SELECT COUNT(*) FROM trans WHERE `type` = 'VYBER' AND `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "SELECT (SELECT SUM(CAST(A16 AS INTEGER)) FROM district WHERE A3 = 'north Bohemia') - (SELECT SUM(CAST(A16 AS INTEGER)) FROM district WHERE A3 = 'east Bohemia') AS crime_difference\t----- bird -----\tfinancial"
  ],
  [
    "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "SELECT (SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type = 'OWNER') + (SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type = 'DISPONENT') AS total_dispositions\t----- bird -----\tfinancial"
  ],
  [
    "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
    "SELECT `k_symbol` FROM `order` WHERE `amount` = 3539\t----- bird -----\tfinancial"
  ],
  [
    "What year was account owner number 130 born?",
    "SELECT strftime('%Y', `birth_date`) AS birth_year FROM client WHERE `client_id` = ( SELECT `client_id` FROM disp WHERE `account_id` = ( SELECT `account_id` FROM disp WHERE `client_id` = 130 ) )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM disp AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`type` = 'OWNER' AND T2.`frequency` = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial"
  ],
  [
    "What is the amount of debt that client number 992 has, and how is this client doing with payments?",
    "SELECT T1.`loan_id`, T1.`amount`, T1.`duration`, T1.`payments` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN disp AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN client AS T4 ON T3.`client_id` = T4.`client_id` WHERE T4.`client_id` = 992\t----- bird -----\tfinancial"
  ],
  [
    "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` WHERE T2.`account_id` = ( SELECT T3.`account_id` FROM disp AS T3 WHERE T3.`client_id` = 4 )\t----- bird -----\tfinancial"
  ],
  [
    "Which kind of credit card does client number 9 possess?",
    "SELECT T1.`type` FROM card AS T1 INNER JOIN disp AS T2 ON T1.`disp_id` = T2.`disp_id` WHERE T2.`client_id` = 9\t----- bird -----\tfinancial"
  ],
  [
    "How much, in total, did client number 617 pay for all of the transactions in 1998?",
    "SELECT SUM(`amount`) AS total_paid FROM trans WHERE `account_id` IN ( SELECT `account_id` FROM disp WHERE `client_id` = 617 ) AND `date` LIKE '1998%' AND `type` = 'VYDAJ'\t----- bird -----\tfinancial"
  ],
  [
    "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND T2.`district_id` IN ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "Please provide the IDs of the 3 female clients with the largest loans.",
    "SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000?",
    "SELECT COUNT(DISTINCT T1.client_id) AS male_client_count FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN \"order\" AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.k_symbol = 'SIPO' AND T4.amount > 4000\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in Beroun were opened after 1996?",
    "SELECT COUNT(*) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Beroun' ) AND `date` > '1996-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many female customers have a junior credit card?",
    "SELECT COUNT(DISTINCT T1.client_id) AS female_junior_card_count FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'\t----- bird -----\tfinancial"
  ],
  [
    "What proportion of customers who have accounts at the Prague branch are female?",
    "SELECT (COUNT(DISTINCT CASE WHEN T1.`gender` = 'F' THEN T1.`client_id` END) * 100.0 / COUNT(DISTINCT T1.`client_id`)) AS female_proportion FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN account AS T3 ON T2.`account_id` = T3.`account_id` WHERE T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' )\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of male clients request for weekly statements to be issued?",
    "SELECT (SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T3.gender = 'M') * 100.0 / (SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE') AS male_percentage\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who choose statement of weekly issuance are User?",
    "SELECT COUNT(DISTINCT T1.`client_id`) FROM disp AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`frequency` = 'POPLATEK TYDNE' AND T1.`type` = 'OWNER' -- Assuming 'User' refers to clients with type 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.",
    "SELECT T1.`account_id` FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`duration` > 24 AND T1.`date` < '1997-01-01' AND T2.`amount` = ( SELECT MIN(T2.`amount`) FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`duration` > 24 AND T1.`date` < '1997-01-01' )\t----- bird -----\tfinancial"
  ],
  [
    "Name the account numbers of female clients who are oldest and have lowest average salary?",
    "SELECT T2.`account_id` FROM client AS T1 INNER JOIN disp AS T3 ON T1.`client_id` = T3.`client_id` INNER JOIN account AS T2 ON T3.`account_id` = T2.`account_id` WHERE T1.`gender` = 'F' AND T1.`district_id` = ( SELECT `district_id` FROM district ORDER BY `A11` ASC LIMIT 1 ) ORDER BY T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who were born in 1920 stay in east Bohemia?",
    "SELECT COUNT(*) FROM client WHERE `district_id` IN ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' ) AND strftime('%Y', `birth_date`) = '1920'\t----- bird -----\tfinancial"
  ],
  [
    "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement.",
    "SELECT COUNT(DISTINCT L.`account_id`) AS loan_count FROM loan AS L INNER JOIN account AS A ON L.`account_id` = A.`account_id` WHERE L.`duration` = 24 AND A.`frequency` = 'POPLATEK TYDNE'\t----- bird -----\tfinancial"
  ],
  [
    "What is the average amount of loan which are still on running contract with statement issuance after each transaction?",
    "SELECT AVG(L.amount) AS average_loan_amount FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE L.status IN ('C', 'D') AND T.type = 'POPLATEK PO OBRATU' AND L.amount IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "List all ID and district for clients that can only have the right to issue permanent orders or apply for loans.",
    "SELECT T1.client_id, T1.district_id FROM client AS T1 WHERE T1.client_id NOT IN ( SELECT T2.client_id FROM disp AS T2 WHERE T2.type = 'OWNER' )\t----- bird -----\tfinancial"
  ],
  [
    "Provide the IDs and age of the client with high level credit card, which is eligible for loans.",
    "SELECT DISTINCT T1.client_id, (strftime('%Y', '2023-10-01') - strftime('%Y', T1.birth_date)) - (strftime('%m', '2023-10-01') < strftime('%m', T1.birth_date) OR (strftime('%m', '2023-10-01') = strftime('%m', T1.birth_date) AND strftime('%d', '2023-10-01') < strftime('%d', T1.birth_date))) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN account AS T4 ON T2.account_id = T4.account_id INNER JOIN loan AS T5 ON T4.account_id = T5.account_id WHERE T3.type = 'gold';\t----- bird -----\tfinancial"
  ],
  [
    "What is the most common bond type?",
    "SELECT bond_type FROM ( SELECT bond_type, COUNT(*) AS bond_count FROM bond GROUP BY bond_type ) AS bond_counts ORDER BY bond_count DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "In the non-carcinogenic molecules, how many contain chlorine atoms?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM atom AS T1 INNER JOIN ( SELECT `molecule_id` FROM molecule WHERE `label` = '-' ) AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the average number of oxygen atoms in single-bonded molecules.",
    "SELECT AVG(oxygen_count) AS average_oxygen_atoms FROM ( SELECT COUNT(T2.`atom_id`) AS oxygen_count FROM atom AS T2 WHERE T2.`element` = 'o' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' ) GROUP BY T2.`molecule_id` )\t----- bird -----\ttoxicology"
  ],
  [
    "On average how many carcinogenic molecules are single bonded?",
    "SELECT (SELECT COUNT(*) FROM bond AS T1 WHERE T1.`molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '+' ) AND T1.`bond_type` = '-') * 1.0 / (SELECT COUNT(*) FROM molecule WHERE `label` = '+') AS average_single_bond\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule containing sodium atoms, how many are non-carcinogenic?",
    "SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-' AND T1.`molecule_id` IN ( SELECT DISTINCT T3.`molecule_id` FROM atom AS T3 WHERE T3.`element` = 'na' )\t----- bird -----\ttoxicology"
  ],
  [
    "Find the triple-bonded molecules which are carcinogenic.",
    "SELECT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carbon in double-bond molecules?",
    "SELECT (CAST(COUNT(T2.atom_id) AS REAL) / NULLIF(COUNT(T3.atom_id), 0)) * 100 AS carbon_percentage FROM atom AS T2 JOIN bond AS T1 ON T2.molecule_id = T1.molecule_id JOIN atom AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.element = 'c' AND T1.bond_type = '=' GROUP BY T2.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "How many triple type bonds are there?",
    "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "In how many atoms is there no bromine?",
    "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology"
  ],
  [
    "Of the first 100 molecules in number order, how many are carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify by their ID the molecules in which there is silicon.",
    "SELECT DISTINCT `molecule_id` FROM atom WHERE `atom_id` IN ( SELECT `atom_id` FROM atom WHERE `element` = 'si' )\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in the TR004_8_9 bond atoms?",
    "SELECT DISTINCT T3.element FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in a double type bond?",
    "SELECT DISTINCT `element` FROM atom WHERE `atom_id` IN ( SELECT `atom_id` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `bond_type` = '=' ) ) UNION SELECT DISTINCT `element` FROM atom WHERE `atom_id` IN ( SELECT `atom_id2` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `bond_type` = '=' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "Which type of label is the most numerous in atoms with hydrogen?",
    "SELECT T2.`label` FROM molecule AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'h' ) GROUP BY T2.`label` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Tellurium is in what type of bond?",
    "SELECT T3.`bond_type` FROM bond AS T3 WHERE T3.`molecule_id` IN ( SELECT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'te' )\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms are connected in single type bonds?",
    "SELECT DISTINCT T1.`atom_id`, T1.`atom_id2` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate which atoms are connected in non-carcinogenic type molecules.",
    "SELECT T1.`atom_id`, T1.`atom_id2` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Which element is the least numerous in non-carcinogenic molecules?",
    "SELECT `element` FROM ( SELECT T1.`element`, COUNT(*) AS `element_count` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-' GROUP BY T1.`element` ) AS subquery ORDER BY `element_count` ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What type of bond is there between the atoms TR004_8 and TR004_20?",
    "SELECT T2.`bond_type` FROM bond AS T2 WHERE T2.`bond_id` = ( SELECT T3.`bond_id` FROM connected AS T3 WHERE T3.`atom_id` = 'TR004_8' AND T3.`atom_id2` = 'TR004_20' )\t----- bird -----\ttoxicology"
  ],
  [
    "What type of label is not on molecules with atoms with tin?",
    "SELECT DISTINCT T2.`label` FROM molecule AS T2 WHERE T2.`label` NOT IN ( SELECT DISTINCT T3.`label` FROM molecule AS T3 WHERE T3.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'sn' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms with iodine and sulfur type elements are there in single bond molecules?",
    "SELECT COUNT(T2.`atom_id`) FROM atom AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' ) AND T2.`element` IN ('i', 's')\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all connected atoms with a triple bond.",
    "SELECT T1.`atom_id`, T1.`atom_id2` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all the atoms that are connected to the atoms of the TR181 molecule.",
    "SELECT DISTINCT T2.`atom_id` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T1.`atom_id` IN ( SELECT T1.`atom_id` FROM atom AS T1 WHERE T1.`molecule_id` = 'TR181' )\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of carcinogenic-type molecules does not contain fluorine?",
    "SELECT (COUNT(DISTINCT T1.`molecule_id`) - COUNT(DISTINCT T2.`molecule_id`)) * 100.0 / COUNT(DISTINCT T1.`molecule_id`) AS percentage FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` AND T2.`element` = 'f' WHERE T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carcinogenic molecules in triple type bonds?",
    "SELECT (CAST(SUM(CASE WHEN T2.`label` = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.`bond_id`)) * 100 AS percent FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = 'TR000' ORDER BY T1.`element` ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6?",
    "SELECT T3.`element` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN atom AS T3 ON T1.`atom_id` = T3.`atom_id` WHERE T2.`molecule_id` = 'TR001' AND T2.`bond_id` = 'TR001_2_6'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the difference between the number of molecules that are carcinogenic and those that are not?",
    "SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+') - (SELECT COUNT(*) FROM molecule WHERE label = '-') AS difference\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atom IDs of the bond TR_000_2_5?",
    "SELECT DISTINCT T1.atom_id -- SQL Script Type: SELECT FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR_000_2_5';\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond IDs that have the same atom ID 2 of TR000_2?",
    "SELECT `bond_id` FROM connected WHERE `atom_id2` = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top five molecules that have double bonds in alphabetical order.",
    "SELECT DISTINCT T2.label FROM molecule AS T2 JOIN bond AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.bond_type = ' = ' ORDER BY T2.label ASC LIMIT 5;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of double bonds in the molecule TR008?",
    "SELECT (SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008' AND bond_type = '=') * 100.0 / (SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008') AS percentage_double_bonds\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of molecules that are carcinogenic?",
    "SELECT (COUNT(CASE WHEN label = '+' THEN 1 END) * 100.0) / COUNT(molecule_id) AS carcinogenic_percentage FROM molecule\t----- bird -----\ttoxicology"
  ],
  [
    "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage.",
    "SELECT (CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(atom_id)) * 100 AS hydrogen_percentage FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of bond that molecule TR000 has when involved in any bonds?",
    "SELECT DISTINCT T2.`bond_type` FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.`molecule_id` = T1.`molecule_id` WHERE T1.`molecule_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the toxicology and label of molecule TR060?",
    "SELECT T1.`element`, T2.`label` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = 'TR060'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic?",
    "-- SQL Type: SELECT WITH MajorityBond AS ( SELECT T1.bond_type FROM bond AS T1 WHERE T1.molecule_id = 'TR018' AND T1.bond_type IS NOT NULL GROUP BY T1.bond_type ORDER BY COUNT(*) DESC LIMIT 1 ), CarcinogenicStatus AS ( SELECT T2.label FROM molecule AS T2 WHERE T2.molecule_id = 'TR018' ) SELECT MB.bond_type, CASE WHEN CS.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM MajorityBond AS MB JOIN CarcinogenicStatus AS CS ON 1=1; -- Using a cross join since we only expect one row from each CTE\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
    "SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '-' AND T1.`label` = '-' ORDER BY T1.`molecule_id` ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top two bonds that happened with the molecule TR006 in alphabetical order.",
    "SELECT T2.`bond_type` FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.`molecule_id` = T1.`molecule_id` WHERE T1.`molecule_id` = 'TR006' ORDER BY T2.`bond_type` ASC LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds which involved atom 12 does molecule TR009 have?",
    "SELECT COUNT(*) FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE molecule_id = 'TR009' ) AND (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules are carcinogenic and have the bromine element?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`element` = 'br'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type and the atoms of the bond ID of TR001_6_9?",
    "SELECT B.`bond_type`, C.`atom_id`, C.`atom_id2` FROM bond AS B INNER JOIN connected AS C ON B.`bond_id` = C.`bond_id` WHERE B.`bond_id` = 'TR001_6_9'\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.",
    "SELECT T1.`molecule_id`, CASE WHEN T2.`label` = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`atom_id` = 'TR001_10'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a triple bond type?",
    "SELECT COUNT(DISTINCT `molecule_id`) FROM bond WHERE `bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "How many connections does the atom 19 have?",
    "SELECT COUNT(*) FROM connected WHERE `atom_id` = 19 OR `atom_id2` = 19\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of the toxicology of the molecule \"TR004\".",
    "-- SQL Type: SELECT SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are not carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.",
    "SELECT DISTINCT m.molecule_id FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25';\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bonds that have phosphorus and nitrogen as their atom elements?",
    "SELECT T2.`bond_id` FROM bond AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` IN ('p', 'n') GROUP BY T1.`molecule_id` HAVING COUNT(DISTINCT T1.`element`) = 2 )\t----- bird -----\ttoxicology"
  ],
  [
    "Is the molecule with the most double bonds carcinogenic?",
    "SELECT CASE WHEN T2.`label` = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '=' GROUP BY T1.`molecule_id` ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the average number of bonds the atoms with the element iodine have?",
    "SELECT AVG(bond_count) AS average_bonds FROM ( SELECT COUNT(T3.`bond_id`) AS bond_count FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` LEFT JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T1.`element` = 'i' GROUP BY T1.`atom_id` ) AS bond_counts\t----- bird -----\ttoxicology"
  ],
  [
    "List the bond type and the bond ID of the atom 45.",
    "SELECT T2.bond_type, T2.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = (SELECT atom_id FROM atom WHERE SUBSTR(atom_id, 7, 2) + 0 = 45)\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of atoms that can not bond with any other atoms.",
    "SELECT T1.`element` FROM atom AS T1 WHERE T1.`atom_id` NOT IN ( SELECT DISTINCT `atom_id` FROM connected )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms of the triple bond with the molecule \"TR447\"?",
    "-- SQL Type: SELECT SELECT DISTINCT A.`atom_id` FROM molecule AS M INNER JOIN bond AS B ON M.`molecule_id` = B.`molecule_id` INNER JOIN connected AS C ON B.`bond_id` = C.`bond_id` INNER JOIN atom AS A ON C.`atom_id2` = A.`atom_id` WHERE B.`bond_type` = '#' AND M.`label` = 'TR447'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the atoms of TR144_8_19?",
    "SELECT T3.`element` FROM atom AS T3 WHERE T3.`atom_id` IN ( SELECT T2.`atom_id` FROM atom AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR144_8_19' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "Of all the carcinogenic molecules, which one has the most double bonds?",
    "-- SQL Script Type: SELECT SELECT T1.molecule_id FROM ( SELECT T2.molecule_id, COUNT(T3.bond_id) AS double_bond_count FROM molecule AS T2 LEFT JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = '+' AND T3.bond_type = '=' GROUP BY T2.molecule_id ) AS T1 ORDER BY T1.double_bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the least common element of all carcinogenic molecules?",
    "SELECT T2.`element` FROM ( SELECT T2.`element`, COUNT(*) AS `element_count` FROM atom AS T2 WHERE T2.`molecule_id` IN ( SELECT T1.`molecule_id` FROM molecule AS T1 WHERE T1.`label` = '+' ) GROUP BY T2.`element` ) AS T2 ORDER BY T2.`element_count` ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that can bond with the atom that has the element lead?",
    "SELECT T2.`atom_id` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T1.`atom_id` = ( SELECT `atom_id` FROM atom WHERE `element` = 'pb' )\t----- bird -----\ttoxicology"
  ],
  [
    "List the elements of all the triple bonds.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 WHERE T1.`atom_id` IN ( SELECT `atom_id` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `bond_type` = '#' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of bonds have the most common combination of atoms' elements?",
    "SELECT (CAST(common_bond_count AS REAL) / total_bonds) * 100 AS percentage FROM ( SELECT COUNT(DISTINCT T3.`bond_id`) AS common_bond_count FROM connected AS T3 INNER JOIN bond AS T2 ON T3.`bond_id` = T2.`bond_id` INNER JOIN atom AS T1 ON T3.`atom_id` = T1.`atom_id` WHERE T1.`element` IN ( SELECT element FROM atom AS T1 GROUP BY T1.`molecule_id` ORDER BY COUNT(*) DESC LIMIT 1 ) ) AS common_bonds, ( SELECT COUNT(*) AS total_bonds FROM bond ) AS total\t----- bird -----\ttoxicology"
  ],
  [
    "What proportion of single bonds are carcinogenic?",
    "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.bond_id) AS proportion_carcinogenic FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms consisting of the element carbon and hydrogen.",
    "SELECT COUNT(*) AS total_atoms FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology"
  ],
  [
    "List down atom id2 for atoms with element sulfur.",
    "SELECT `atom_id2` FROM connected WHERE `atom_id` IN ( SELECT `atom_id` FROM atom WHERE `element` = 's' )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type for atoms with element Tin?",
    "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T3.element = 'sn'\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are there for single bond molecules?",
    "SELECT COUNT(DISTINCT T2.`element`) FROM atom AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' )\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.",
    "SELECT COUNT(T4.`atom_id`) FROM atom AS T4 WHERE T4.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN atom AS T3 ON T2.`atom_id` = T3.`atom_id` WHERE T1.`bond_type` = '#' AND T3.`element` IN ('p', 'br') )\t----- bird -----\ttoxicology"
  ],
  [
    "Write down bond id for molecules that are carcinogenic.",
    "SELECT T2.`bond_id` FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.`molecule_id` = T1.`molecule_id` WHERE T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the single bond molecule id, which molecules are not carcinogenic?",
    "SELECT T2.`molecule_id` FROM molecule AS T2 WHERE T2.`label` = '-' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the composition of element chlorine in percentage among the single bond molecules?",
    "SELECT (SELECT COUNT(T2.`atom_id`) FROM atom AS T2 WHERE T2.`element` = 'cl' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' )) * 100.0 / (SELECT COUNT(T2.`atom_id`) FROM atom AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' )) AS percent\t----- bird -----\ttoxicology"
  ],
  [
    "What are the labels for TR000, TR001 and TR002?",
    "SELECT `label` FROM molecule WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology"
  ],
  [
    "List down the molecule id for non carcinogenic molecules.",
    "SELECT `molecule_id` FROM molecule WHERE `label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
    "SELECT COUNT(*) FROM molecule WHERE `molecule_id` BETWEEN 'TR000' AND 'TR030' AND `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "List down the bond type for molecules from molecule id TR000 to TR050.",
    "SELECT T2.`bond_type` FROM bond AS T2 INNER JOIN molecule AS T1 ON T2.`molecule_id` = T1.`molecule_id` WHERE T1.`molecule_id` BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements for bond id TR001_10_11?",
    "SELECT T3.`element` FROM atom AS T3 WHERE T3.`atom_id` IN ( SELECT T1.`atom_id` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_id` = 'TR001_10_11' ) UNION SELECT T4.`element` FROM atom AS T4 WHERE T4.`atom_id` IN ( SELECT T1.`atom_id2` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many bond id have element iodine?",
    "SELECT COUNT(DISTINCT C.`bond_id`) AS `bond_count` FROM connected AS C INNER JOIN atom AS A1 ON C.`atom_id` = A1.`atom_id` INNER JOIN atom AS A2 ON C.`atom_id2` = A2.`atom_id` WHERE A1.`element` = 'i' OR A2.`element` = 'i'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?",
    "SELECT T2.`label` FROM molecule AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'ca' ) GROUP BY T2.`label` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Does bond id TR001_1_8 have both element of chlorine and carbon?",
    "SELECT CASE WHEN COUNT(DISTINCT T2.`element`) = 2 THEN 'Yes' ELSE 'No' END AS has_both_elements FROM atom AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_1_8' ) AND T2.`element` IN ('cl', 'c')\t----- bird -----\ttoxicology"
  ],
  [
    "List down two molecule id of triple bond non carcinogenic molecules with element carbon.",
    "SELECT DISTINCT T3.`molecule_id` FROM atom AS T3 INNER JOIN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#' AND T2.`label` = '-' ) AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T3.`element` = 'c' LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of element chlorine in carcinogenic molecules?",
    "SELECT (CAST(SUM(CASE WHEN T1.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.`atom_id`)) * 100 AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "List the toxicology elements associated with molecule TR001.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = 'TR001'\t----- bird -----\ttoxicology"
  ],
  [
    "Give me the molecule ID of the double bond type.",
    "SELECT DISTINCT `molecule_id` FROM bond WHERE `bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Write down the atom IDs of the first and second atoms of triple bond type molecules.",
    "SELECT `atom_id`, `atom_id2` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `bond_type` = '#' )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the toxicology elements associated with bond ID TR005_16_26?",
    "SELECT `element` FROM atom WHERE `atom_id` IN ( SELECT `atom_id` FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM bond WHERE `bond_id` = 'TR005_16_26' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the single bond type molecules are non-carcinogenic?",
    "SELECT COUNT(DISTINCT T2.`molecule_id`) FROM molecule AS T2 WHERE T2.`label` = '-' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '-' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the label for bond ID TR001_10_11?",
    "SELECT T2.`label` FROM molecule AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.",
    "SELECT T1.`bond_id`, CASE WHEN T2.`label` = '+' THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS `Carcinogenic Status` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
    "SELECT T2.`element`, COUNT(*) AS `tally` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND SUBSTR(T2.`atom_id`, 7, 1) = '4' GROUP BY T2.`element`\t----- bird -----\ttoxicology"
  ],
  [
    "What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label.",
    "SELECT CAST(SUM(CASE WHEN T1.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS hydrogen_ratio, T2.`label` FROM atom AS T1 JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`molecule_id` = 'TR006' GROUP BY T2.`label`\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the chemical compound that contains Calcium is carcinogenic.",
    "SELECT CASE WHEN T2.`label` = '+' THEN 'Carcinogenic' WHEN T2.`label` = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS carcinogenic_status FROM molecule AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'ca' )\t----- bird -----\ttoxicology"
  ],
  [
    "Determine the bond type that is formed in the chemical compound containing element Tellurium.",
    "SELECT DISTINCT T2.`bond_type` FROM bond AS T2 WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'te' )\t----- bird -----\ttoxicology"
  ],
  [
    "Name chemical elements that form a bond TR001_10_11.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 WHERE T1.`atom_id` IN ( SELECT T2.`atom_id` FROM bond AS T3 INNER JOIN connected AS T2 ON T3.`bond_id` = T2.`bond_id` WHERE T3.`bond_id` = 'TR001_10_11' UNION SELECT T2.`atom_id2` FROM bond AS T3 INNER JOIN connected AS T2 ON T3.`bond_id` = T2.`bond_id` WHERE T3.`bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.",
    "SELECT (CAST(triple_bond_count AS REAL) / NULLIF(total_count, 0)) * 100 AS percentage_triple_bond FROM ( SELECT COUNT(DISTINCT T1.`molecule_id`) AS triple_bond_count, (SELECT COUNT(DISTINCT `molecule_id`) FROM molecule) AS total_count FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`bond_type` = '#' ) AS counts\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.",
    "SELECT (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR047' AND bond_type = '=') * 100.0 / (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR047') AS percent_double_bond\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the molecule that contains atom TR001_1 is carcinogenic.",
    "SELECT CASE WHEN M.`label` = '+' THEN 'Carcinogenic' ELSE 'Not Carcinogenic' END AS `Carcinogenic_Status` FROM molecule AS M WHERE M.`molecule_id` = ( SELECT A.`molecule_id` FROM atom AS A WHERE A.`atom_id` = 'TR001_1' )\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR151 carcinogenic?",
    "SELECT CASE WHEN T1.`label` = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule AS T1 WHERE T1.`molecule_id` = 'TR151'\t----- bird -----\ttoxicology"
  ],
  [
    "Which toxic element can be found in the molecule TR151?",
    "SELECT DISTINCT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND element IN ('cl', 's', 'n', 'p', 'br', 'f', 'i', 'sn', 'pb', 'te');\t----- bird -----\ttoxicology"
  ],
  [
    "How many chemical compounds in the database are identified as carcinogenic.",
    "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN ( SELECT `molecule_id` FROM molecule WHERE CAST(SUBSTR(`molecule_id`, 3, 3) AS INTEGER) > 10 AND CAST(SUBSTR(`molecule_id`, 3, 3) AS INTEGER) < 50 ) AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule labeled with carcinogenic compounds?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond ids are double-bond with carcinogenic compound?",
    "SELECT T2.`bond_id` FROM bond AS T2 WHERE T2.`bond_type` = '=' AND T2.`molecule_id` IN ( SELECT T1.`molecule_id` FROM molecule AS T1 WHERE T1.`label` = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` IN ( SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'h' AND T2.`label` = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.",
    "-- SQL to find the molecule id belonging to the TR00_1_2 bond with the first atom named TR00_1 SELECT DISTINCT b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id2 = a.atom_id WHERE b.bond_type = 'TR00_1_2' AND a.atom_id = 'TR00_1';\t----- bird -----\ttoxicology"
  ],
  [
    "Among the atoms that contain element carbon, which one does not contain compound carcinogenic?",
    "SELECT `atom_id` FROM atom WHERE `element` = 'c' AND `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '-' ) AND `atom_id` NOT IN ( SELECT DISTINCT `connected`.`atom_id` FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label != '-' )\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
    "SELECT (SELECT COUNT(DISTINCT T1.`molecule_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'h' AND T2.`label` = '+') * 100.0 / (SELECT COUNT(DISTINCT T1.`molecule_id`) FROM atom AS T1 WHERE T1.`element` = 'h') AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR124 carcinogenic?",
    "SELECT CASE WHEN T1.`label` = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule AS T1 WHERE T1.`molecule_id` = 'TR124'\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms comprise TR186?",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = 'TR186'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the bond type of TR007_4_19?",
    "-- SQL Type: SELECT SELECT * FROM molecule WHERE label = 'TR007_4_19';\t----- bird -----\ttoxicology"
  ],
  [
    "Name the elements that comprise the atoms of bond TR001_2_4.",
    "-- SQL Type: SELECT SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "How many double bonds does TR006 have and is it carcinogenic?",
    "SELECT COUNT(T1.bond_id) AS double_bond_count, T2.label AS carcinogenic_status FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' AND T1.bond_type = '=' GROUP BY T2.label;\t----- bird -----\ttoxicology"
  ],
  [
    "List all carcinogenic molecules and their elements.",
    "SELECT T2.`molecule_id`, T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Name all bonds with single bond types and what atoms are connected to the molecules.",
    "SELECT T1.bond_id, T1.molecule_id, T2.atom_id, T3.atom_id AS atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecules have triple bonds and list all the elements they contain.",
    "SELECT T3.`molecule_id`, GROUP_CONCAT(T2.`element`) AS elements FROM atom AS T2 INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '#' ) GROUP BY T3.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "Name the atoms' elements that form bond TR000_2_3.",
    "-- SQL Type: SELECT SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR000_2_3';\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds are created by bonding atoms with chlorine element?",
    "SELECT COUNT(DISTINCT T1.`bond_id`) AS bond_count FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`element` = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?",
    "SELECT COUNT(DISTINCT T1.`bond_type`) AS bond_type_count FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = 'TR346'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) AS carcinogenic_count FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '=' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules without sulphur element is not having double bond?",
    "-- SQL Type: SELECT SELECT COUNT(DISTINCT MoleculesWithoutSulphur.molecule_id) AS molecule_count FROM ( SELECT DISTINCT a.molecule_id FROM atom AS a WHERE a.element != 's' ) AS MoleculesWithoutSulphur INNER JOIN ( SELECT DISTINCT b.molecule_id FROM bond AS b WHERE b.bond_type != '=' ) AS MoleculesWithoutDoubleBond ON MoleculesWithoutSulphur.molecule_id = MoleculesWithoutDoubleBond.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the carcinogenic label for bond TR001_2_4?",
    "SELECT T2.`label` FROM molecule AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_2_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to molecule id TR005?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` = 'TR005'\t----- bird -----\ttoxicology"
  ],
  [
    "How many single bonds are there in the list?",
    "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"cl\" element, which of them are carcinogenic?",
    "SELECT T2.`molecule_id` FROM molecule AS T2 WHERE T2.`label` = '+' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'cl' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"c\" element, which of them are not carcinogenic?",
    "SELECT T2.`molecule_id` FROM molecule AS T2 WHERE T2.`label` = '-' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'c' )\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules which contain the Chlorine element.",
    "SELECT (SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 WHERE T1.`label` = '+') AS total_carcinogenic, (SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`element` = 'cl') AS carcinogenic_with_cl, (SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`element` = 'cl') * 100.0 / (SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 WHERE T1.`label` = '+') AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule id of bond id TR001_1_7?",
    "SELECT `molecule_id` FROM bond WHERE `bond_id` = 'TR001_1_7'\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are contained in bond_id TR001_3_4?",
    "SELECT COUNT(DISTINCT T2.`element`) FROM atom AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_3_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2?",
    "SELECT B.bond_type FROM connected AS C INNER JOIN atom AS A1 ON C.atom_id = A1.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id INNER JOIN bond AS B ON C.bond_id = B.bond_id WHERE A1.atom_id = 'TR000_1' AND A2.atom_id = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?",
    "SELECT T3.`label` FROM molecule AS T3 WHERE T3.`molecule_id` = ( SELECT T1.`molecule_id` FROM atom AS T1 WHERE T1.`atom_id` = 'TR000_2' INTERSECT SELECT T2.`molecule_id` FROM atom AS T2 WHERE T2.`atom_id` = 'TR000_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element of toxicology for the atom with the ID of TR000_1?",
    "SELECT `element` FROM atom WHERE `atom_id` = 'TR000_1'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR000 is carcinogenic or not?",
    "SELECT CASE WHEN `label` = '+' THEN 'Carcinogenic' WHEN `label` = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS carcinogenic_status FROM molecule WHERE `molecule_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the percentage of atoms with single bond.",
    "SELECT (SELECT COUNT(bond_id) FROM bond WHERE bond_type = '-') * 100.0 / (SELECT COUNT(bond_id) FROM bond) AS percentage_of_single_bonds\t----- bird -----\ttoxicology"
  ],
  [
    "How many carcinogenic molecules that consisted of Nitrogen?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`element` = 'n'\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule consisted of Sulphur atom with double bond?",
    "SELECT DISTINCT T4.label FROM molecule AS T4 WHERE T4.molecule_id IN ( SELECT DISTINCT T2.molecule_id FROM bond AS T2 INNER JOIN connected AS T1 ON T2.bond_id = T1.bond_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T3.element = 's' AND T2.bond_type = '=' )\t----- bird -----\ttoxicology"
  ],
  [
    "Which non-carcinogenic molecules consisted more than 5 atoms?",
    "SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '-' GROUP BY T1.`molecule_id` HAVING COUNT(T2.`atom_id`) > 5\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements with double bond, consisted in molecule TR024.",
    "SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = ( SELECT m.molecule_id FROM molecule m WHERE m.label = 'TR024' ) AND b.bond_type = '=' AND a.molecule_id IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "Which carcinogenic molecule have the highest number of atoms consisted in it?",
    "SELECT T1.`molecule_id` FROM ( SELECT T1.`molecule_id`, COUNT(T2.`atom_id`) AS atom_count FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' GROUP BY T1.`molecule_id` ) AS T1 ORDER BY T1.atom_count DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
    "SELECT (CAST(SUM(CASE WHEN T4.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T1.molecule_id)) * 100.0 AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T1.element = 'h' AND T3.bond_type = '#' AND T4.label IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules between TR004 to TR010, how many of them has single bonds?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '-' AND T2.`molecule_id` BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule TR008, how many carbons are present?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR008' ) AND `element` = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
    "SELECT `element` FROM atom WHERE `atom_id` = 'TR004_7' AND `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '-' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the total number of molecules with double bonded oxygen?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) AS total_molecules FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T1.`element` = 'o' AND T3.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "in molecules with triple bonds, how many of them are not carcinogenic?",
    "SELECT COUNT(DISTINCT T2.`molecule_id`) FROM molecule AS T2 WHERE T2.`label` = '-' AND T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '#' )\t----- bird -----\ttoxicology"
  ],
  [
    "List the element and bond type included in the molecule with molecule ID of TR016.",
    "SELECT T1.`element` AS value FROM atom AS T1 WHERE T1.`molecule_id` = 'TR016' UNION SELECT T2.`bond_type` AS value FROM bond AS T2 WHERE T2.`molecule_id` = 'TR016'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the atom ID of double bonded carbon in TR012 molecule?",
    "SELECT DISTINCT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = ( SELECT molecule_id FROM molecule WHERE label = 'TR012' ) AND T1.element = 'c' AND T2.bond_type = '='\t----- bird -----\ttoxicology"
  ],
  [
    "List the atom ID of the carcinogenic molecule that contains oxygen?",
    "SELECT T1.`atom_id` FROM atom AS T1 WHERE T1.`molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '+' ) AND T1.`element` = 'o'\t----- bird -----\ttoxicology"
  ],
  [
    "Which are the cards that have incredibly powerful foils.",
    "SELECT DISTINCT cardKingdomId, cardKingdomFoilId FROM cards WHERE cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL AND cardKingdomFoilId = cardKingdomId;\t----- bird -----\tcard_games"
  ],
  [
    "What are the borderless cards available without powerful foils?",
    "SELECT T1.`name` FROM cards AS T1 WHERE T1.`borderColor` = 'borderless' AND T1.`availability` IS NOT NULL AND T1.`cardKingdomId` IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "List the card names with value that cost more converted mana for the face.",
    "SELECT name FROM cards WHERE faceConvertedManaCost = ( SELECT MAX(faceConvertedManaCost) FROM cards WHERE faceConvertedManaCost IS NOT NULL )\t----- bird -----\tcard_games"
  ],
  [
    "Name all cards with 2015 frame style ranking below 100 on EDHRec.",
    "SELECT `name` FROM cards WHERE `frameVersion` = '2015' AND `edhrecRank` < 100\t----- bird -----\tcard_games"
  ],
  [
    "List all the mythic rarity print cards banned in gladiator format.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`rarity` = 'mythic' AND T2.`status` = 'Banned' AND T2.`format` = 'gladiator'\t----- bird -----\tcard_games"
  ],
  [
    "For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format.",
    "SELECT T2.`status` FROM legalities AS T2 WHERE T2.`uuid` IN ( SELECT T1.`uuid` FROM cards AS T1 WHERE T1.`type` = 'Artifact' AND T1.`side` IS NULL ) AND T2.`format` = 'vintage'\t----- bird -----\tcard_games"
  ],
  [
    "List all the card id and artist with unknown power which are legal for commander play format.",
    "SELECT T1.`id`, T1.`artist` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE (T1.`power` IS NULL OR T1.`power` = '*') AND T2.`format` = 'commander' AND T2.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.",
    "SELECT T1.`id`, T2.`text`, CASE WHEN T1.`flavorText` IS NULL OR T1.`text` IS NULL THEN 'Missing properties' ELSE 'No missing properties' END AS `property_status` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Stephen Daniele'\t----- bird -----\tcard_games"
  ],
  [
    "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.",
    "SELECT `text` FROM rulings WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Sublime Epiphany' AND `number` = '74s' )\t----- bird -----\tcard_games"
  ],
  [
    "Name the card and artist with the most ruling information. Also state if the card is a promotional printing.",
    "SELECT T1.`name`, T1.`artist`, T1.`isPromo` FROM cards AS T1 WHERE T1.`uuid` = ( SELECT T1.`uuid` FROM cards AS T1 LEFT JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` GROUP BY T1.`uuid` ORDER BY COUNT(T2.`uuid`) DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "State the alternative languages available for card named Annul numbered 29.",
    "SELECT `language` FROM foreign_data WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Annul' AND `number` = '29' )\t----- bird -----\tcard_games"
  ],
  [
    "Name all the cards which have alternative language in Japanese.",
    "SELECT T1.`name` FROM cards AS T1 WHERE T1.`uuid` IN ( SELECT `uuid` FROM foreign_data WHERE `language` = 'Japanese' )\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of the cards availabe in Chinese Simplified.",
    "SELECT (CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.id)) * 100 AS percentage_chinese_simplified FROM cards AS T1 LEFT JOIN foreign_data AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games"
  ],
  [
    "List all the sets available in Italian translation. State the total number of cards per set.",
    "SELECT T1.`name`, T1.`totalSetSize` FROM sets AS T1 WHERE T1.`id` IN ( SELECT DISTINCT `id` FROM set_translations WHERE `language` = 'Italian' )\t----- bird -----\tcard_games"
  ],
  [
    "How many types of cards does the artist Aaron Boyd illustrated about card art?",
    "SELECT COUNT(DISTINCT `type`) AS `number_of_types` FROM cards WHERE `artist` = 'Aaron Boyd'\t----- bird -----\tcard_games"
  ],
  [
    "What is the keyword found on card 'Angel of Mercy'?",
    "SELECT `keywords` FROM cards WHERE `name` = 'Angel of Mercy'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have infinite power?",
    "SELECT COUNT(*) AS card_count FROM cards WHERE power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "What type of promotion is of card 'Duress'?",
    "-- SQL Type: SELECT SELECT `promoTypes` FROM cards WHERE `name` = 'Duress' AND `promoTypes` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the border color of card \"Ancestor's Chosen\"?",
    "SELECT `borderColor` FROM cards WHERE `name` = \"Ancestor's Chosen\"\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of the card \"Ancestor's Chosen\" as originally printed?",
    "SELECT `originalType` FROM cards WHERE `name` = \"Ancestor's Chosen\" AND `originalType` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
    "SELECT DISTINCT `language` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM sets WHERE `id` = ( SELECT `id` FROM cards WHERE `name` = 'Angel of Mercy' ) )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted have text boxes?",
    "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.`id` = T2.`id` WHERE T1.`status` = 'Restricted' AND T2.`text` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the description about the ruling of card \"Condemn\"?",
    "SELECT `text` FROM rulings WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Condemn' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted are found in a starter deck?",
    "SELECT COUNT(DISTINCT T1.`id`) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`isStarter` = 1 AND T2.`status` = 'Restricted'\t----- bird -----\tcard_games"
  ],
  [
    "What is the status of card \"Cloudchaser Eagle\"?",
    "SELECT `status` FROM legalities WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Cloudchaser Eagle' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of card \"Benalish Knight\"?",
    "SELECT `type` FROM cards WHERE `name` = 'Benalish Knight'\t----- bird -----\tcard_games"
  ],
  [
    "What is the rule of playing card \"Benalish Knight\"?",
    "SELECT `format`, `status` FROM legalities WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Benalish Knight' )\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the names of the artists who illustrated the card art in Phyrexian.",
    "-- SQL Type: SELECT SELECT DISTINCT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of borderless cards?",
    "SELECT (CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) AS REAL) / COUNT(id)) * 100 AS percentage_borderless FROM cards\t----- bird -----\tcard_games"
  ],
  [
    "How many cards that illusrtated in German have been reprinted?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`id` = T2.`id` WHERE T2.`language` = 'German' AND T1.`isReprint` = 1\t----- bird -----\tcard_games"
  ],
  [
    "How many borderless cards are illustrated in Russian?",
    "SELECT COUNT(*) FROM foreign_data WHERE `language` = 'Russian' AND `uuid` IN ( SELECT `uuid` FROM cards WHERE `borderColor` = 'borderless' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of cards whose language is French among the Story Spotlight cards?",
    "SELECT (CAST( (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1 AND id IN ( SELECT id FROM foreign_data WHERE language = 'French' ) ) AS REAL) / (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1) ) * 100 AS percentage_french_story_spotlight\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there with toughness of 99?",
    "SELECT COUNT(*) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games"
  ],
  [
    "Name the cards that were illustrated by Aaron Boyd.",
    "SELECT `name` FROM cards WHERE `artist` = 'Aaron Boyd'\t----- bird -----\tcard_games"
  ],
  [
    "How many black border cards are only available on mtgo?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'black' AND `availability` = 'mtgo'\t----- bird -----\tcard_games"
  ],
  [
    "List down all the card IDs with converted mana cost of 0.",
    "SELECT `id` FROM cards WHERE `convertedManaCost` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What are the card layout of cards with keyword of flying?",
    "SELECT `layout` FROM cards WHERE `id` IN ( SELECT `id` FROM cards WHERE `keywords` LIKE '%flying%' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
    "SELECT COUNT(*) FROM cards WHERE `originalType` = 'Summon - Angel' AND `subtypes` != 'Angel'\t----- bird -----\tcard_games"
  ],
  [
    "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.",
    "SELECT `id` FROM cards WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards belong to duel deck a? List the ID.",
    "SELECT `id` FROM cards WHERE `duelDeck` = 'a'\t----- bird -----\tcard_games"
  ],
  [
    "List the edhrecRank for cards with frame version 2015.",
    "SELECT `edhrecRank` FROM cards WHERE `frameVersion` = '2015'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of artists for cards in Chinese Simplified.",
    "SELECT DISTINCT T2.`artist` FROM cards AS T2 WHERE T2.`id` IN ( SELECT T1.`id` FROM foreign_data AS T1 WHERE T1.`language` = 'Chinese Simplified' )\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards that only available in paper and Japanese language?",
    "-- SQL Type: SELECT SELECT T1.id, T1.artist, T1.availability, T1.name, T1.rarity FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese' AND T1.availability IS NOT NULL AND T2.language IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many of the banned cards are white border?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`id` = T2.`id` WHERE T2.`status` = 'Banned' AND T1.`borderColor` = 'white'\t----- bird -----\tcard_games"
  ],
  [
    "List down the uuid for legacy cards and the foreign language of these cards.",
    "SELECT T1.`uuid`, T2.`language` FROM legalities AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`format` = 'legacy'\t----- bird -----\tcard_games"
  ],
  [
    "Write down the ruling of Beacon of Immortality.",
    "SELECT `text` FROM rulings WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Beacon of Immortality' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are having future frame version and what are the legality status of these cards?",
    "SELECT T3.`status` FROM cards AS T1 INNER JOIN legalities AS T3 ON T1.`uuid` = T3.`uuid` WHERE T1.`frameVersion` = 'future'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards for set OGW? State the colour for these cards.",
    "SELECT T1.`name`, T1.`colors` FROM cards AS T1 WHERE T1.`setCode` = 'OGW' AND T1.`colors` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
    "SELECT T1.`name`, T2.`language`, T2.`translation` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`setCode` = '10E' AND T1.`convertedManaCost` = 5 AND T2.`translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of cards with original types of Creature - Elf and the date of rulings for these cards.",
    "SELECT T1.`name`, T2.`date` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`originalType` = 'Creature - Elf'\t----- bird -----\tcard_games"
  ],
  [
    "What are the colors of cards from ID 1-20? What are the format of these cards?",
    "SELECT T2.`format` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`id` BETWEEN 1 AND 20\t----- bird -----\tcard_games"
  ],
  [
    "Among the Artifact cards, which are black color and comes with foreign languague translation?",
    "SELECT T1.`name`, T1.`id` FROM cards AS T1 WHERE T1.`originalType` = 'Artifact' AND T1.`colors` LIKE '%B%' AND T1.`uuid` IN ( SELECT T2.`uuid` FROM foreign_data AS T2 WHERE T2.`uuid` = T1.`uuid` )\t----- bird -----\tcard_games"
  ],
  [
    "Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`rarity` = 'uncommon' ORDER BY T2.`date` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "On how many cards designed by John Avon is its foil non-powerful?",
    "SELECT COUNT(*) FROM cards WHERE `artist` = 'John Avon' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many white bordered cards are powerful?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'white' AND `cardKingdomFoilId` = `cardKingdomId` AND `cardKingdomId` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
    "SELECT COUNT(*) FROM cards WHERE `artist` = 'UDON' AND `availability` = 'mtgo' AND `hand` = '-1'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with a 1993 frame version and available on paper have a sensitive content warning?",
    "SELECT COUNT(*) FROM cards WHERE `frameVersion` = '1993' AND `availability` = 'paper' AND `hasContentWarning` = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
    "SELECT `manaCost` FROM cards WHERE `frameVersion` = '2003' AND `borderColor` = 'black' AND `availability` LIKE '%paper%' AND `availability` LIKE '%mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "How much unconverted mana do all the cards created by Rob Alexander cost in total?",
    "SELECT SUM(CASE WHEN T1.`manaCost` IS NOT NULL THEN (SELECT SUM(CAST(SUBSTR(T1.`manaCost`, INSTR(T1.`manaCost`, '{') + 1, INSTR(T1.`manaCost`, '}') - INSTR(T1.`manaCost`, '{') - 1) AS REAL)) FROM cards AS T1 WHERE T1.`artist` = 'Rob Alexander') ELSE 0 END) AS total_unconverted_mana FROM cards AS T1 WHERE T1.`artist` = 'Rob Alexander'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards available in arena.",
    "-- SQL Script Type: SELECT SELECT DISTINCT `subtypes` AS `type` FROM cards WHERE `availability` = 'arena' AND `subtypes` IS NOT NULL UNION SELECT DISTINCT `supertypes` AS `type` FROM cards WHERE `availability` = 'arena' AND `supertypes` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Lists the set code of all cards translated into Spanish.",
    "SELECT DISTINCT T1.`setCode` FROM set_translations AS T1 WHERE T1.`language` = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?",
    "SELECT (CAST(COUNT(CASE WHEN hand = '+3' THEN 1 END) AS REAL) / COUNT(id)) * 100 AS percentage FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.",
    "SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of cards in Spanish. List them by name.",
    "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the name of all the languages into which the set whose number of cards is 309 is translated.",
    "SELECT DISTINCT `language` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `baseSetSize` = 309 )\t----- bird -----\tcard_games"
  ],
  [
    "How many Brazilian Portuguese translated sets are inside the Commander block?",
    "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`id` WHERE T2.`block` = 'Commander' AND T1.`language` = 'Portuguese (Brazil)'\t----- bird -----\tcard_games"
  ],
  [
    "Lists by ID all Creature-type cards with legal status.",
    "SELECT T1.`id` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`types` = 'Creature' AND T2.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards in German.",
    "SELECT DISTINCT T1.`subtypes` AS card_type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'German' AND T1.`subtypes` IS NOT NULL UNION SELECT DISTINCT T1.`supertypes` AS card_type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'German' AND T1.`supertypes` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many null power cards contain info about the triggered ability",
    "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text IS NOT NULL AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces.",
    "SELECT COUNT(DISTINCT T1.`id`) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN legalities AS T3 ON T1.`uuid` = T3.`uuid` WHERE T2.`text` = 'This is a triggered mana ability' AND T3.`format` = 'pre-modern' AND T3.`status` = 'Legal' AND T1.`loyalty` IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.",
    "SELECT T1.`id` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Erica Yang' AND T1.`availability` = 'paper' AND T2.`format` = 'pauper' AND T2.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?",
    "SELECT DISTINCT `artist` FROM cards WHERE `flavorText` = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games"
  ],
  [
    "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
    "SELECT COUNT(*) FROM foreign_data WHERE `language` = 'French';\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with print rarity have ruling text printed on 10/01/2009?",
    "SELECT COUNT(DISTINCT T1.`uuid`) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`rarity` = 'rare' AND T2.`date` = '2009-01-10'\t----- bird -----\tcard_games"
  ],
  [
    "What language is the set of 180 cards that belongs to the Ravnica block translated into?",
    "SELECT DISTINCT T2.`language` FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.`setCode` = T1.`code` WHERE T1.`baseSetSize` = 180 AND T1.`block` = 'Ravnica'\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards with format commander and legal status do not have a content warning?",
    "SELECT (CAST(COUNT(CASE WHEN T1.`hasContentWarning` = 0 THEN 1 END) AS REAL) / COUNT(*)) * 100 AS percentage FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`format` = 'commander' AND T2.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards without power are in French?",
    "SELECT (CAST(COUNT(CASE WHEN T2.language = 'French' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS percentage FROM cards AS T1 LEFT JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of Japanese translated sets are expansion sets?",
    "SELECT (CAST(COUNT(CASE WHEN T1.`type` = 'expansion' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS percentage_expansion FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T2.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "What kind of printing is on the card that Daren Bader created?",
    "SELECT `availability` FROM cards WHERE `artist` = 'Daren Bader'\t----- bird -----\tcard_games"
  ],
  [
    "How many color cards with no borders have been ranked higher than 12000 on EDHRec?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are oversized, reprinted, and printed for promotions?",
    "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.",
    "SELECT T1.`name` FROM cards AS T1 WHERE T1.`power` IS NULL OR T1.`power` = '*' AND T1.`promoTypes` = 'arenaleague' ORDER BY T1.`name` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card with the multiverse number 149934?",
    "SELECT * FROM foreign_data WHERE uuid IN (SELECT uuid FROM cards WHERE multiverseId = 149934);\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order.",
    "SELECT T1.`id` FROM cards AS T1 WHERE T1.`cardKingdomFoilId` IS NOT NULL AND T1.`cardKingdomId` IS NOT NULL ORDER BY T1.`cardKingdomFoilId` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What proportion of cards do not have a text box with a normal layout?",
    "SELECT (CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS proportion FROM cards\t----- bird -----\tcard_games"
  ],
  [
    "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?",
    "-- SQL Script Type: SELECT SELECT id FROM cards WHERE colors IS NULL AND subtypes IS NOT NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games"
  ],
  [
    "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.",
    "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What languages are available in the set known as Archenemy on the magic card market and having the code ARC?",
    "-- SQL Query to find available languages for the Archenemy set with code ARC SELECT DISTINCT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Archenemy' AND T2.code = 'ARC'\t----- bird -----\tcard_games"
  ],
  [
    "What is the name of set number 5 and its translation?",
    "SELECT S.`name`, ST.`translation` FROM sets AS S LEFT JOIN set_translations AS ST ON S.`code` = ST.`setCode` WHERE S.`id` = 5 AND ST.`translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and expansion type of set number 206?",
    "SELECT T2.language, T1.type FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 206 AND T2.language IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.",
    "SELECT T1.`id`, T1.`name` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`block` = 'Shadowmoor' AND T2.`language` = 'Italian' ORDER BY T1.`name` ASC LIMIT 2\t----- bird -----\tcard_games"
  ],
  [
    "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
    "SELECT S.id FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.isForeignOnly = 1 AND S.isFoilOnly = 1 AND ST.language = 'Japanese' GROUP BY S.id\t----- bird -----\tcard_games"
  ],
  [
    "Which Russian set of cards contains the most cards overall?",
    "SELECT T1.`name`, T1.`baseSetSize` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T2.`language` = 'Russian' AND T1.`baseSetSize` = ( SELECT MAX(T3.`baseSetSize`) FROM sets AS T3 INNER JOIN set_translations AS T4 ON T3.`id` = T4.`id` WHERE T4.`language` = 'Russian' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?",
    "SELECT (CAST(T2.online_only_chinese_cards AS REAL) / T1.total_cards) * 100 AS percentage FROM ( SELECT COUNT(*) AS total_cards FROM cards ) AS T1, ( SELECT COUNT(*) AS online_only_chinese_cards FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1 ) AS T2\t----- bird -----\tcard_games"
  ],
  [
    "How many sets are available just in Japanese and not in Magic: The Gathering Online?",
    "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` = 'Japanese' AND T1.`isOnlineOnly` = 0\t----- bird -----\tcard_games"
  ],
  [
    "How many card border with black color ? List out the card id.",
    "SELECT id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have frame effect as extendedart? List out the id of those cards.",
    "SELECT `id` FROM cards WHERE `frameEffects` = 'extendedart'\t----- bird -----\tcard_games"
  ],
  [
    "Among black card borders, which card has full artwork?",
    "SELECT `name` FROM cards WHERE `borderColor` = 'black' AND `isFullArt` = 1\t----- bird -----\tcard_games"
  ],
  [
    "Point out the language of set id \"174\"?",
    "SELECT st.language -- SQL Script Type: SELECT FROM sets s LEFT JOIN set_translations st ON s.code = st.setCode WHERE s.id = 174 AND st.language IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "List out the set name of the set code \"ALL\".",
    "SELECT `name` FROM sets WHERE `code` = 'ALL'\t----- bird -----\tcard_games"
  ],
  [
    "Which foreign language used by \"A Pedra Fellwar\"?",
    "SELECT DISTINCT fd.language FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.name = 'A Pedra Fellwar' AND fd.language IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "State the set code of the set with release date of 07/13/2007?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2007-07-13'\t----- bird -----\tcard_games"
  ],
  [
    "Mention the base set size and set code of the set that was in block named \"Masques\" and \"Mirage\".",
    "SELECT `baseSetSize`, `code` FROM sets WHERE `block` IN ('Masques', 'Mirage')\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion type of 'expansion'?",
    "SELECT `code` FROM sets WHERE `type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has boros watermark? List out the type of this card.",
    "SELECT `type` FROM cards WHERE `watermark` = 'boros'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.",
    "SELECT T2.`type` FROM cards AS T2 WHERE T2.`watermark` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror?",
    "SELECT (CAST(COUNT(CASE WHEN T1.convertedManaCost = 10 THEN 1 END) AS REAL) / COUNT(T1.convertedManaCost)) * 100 AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.id WHERE T2.name = 'Abyssal Horror' AND T1.convertedManaCost IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion commander type?",
    "SELECT `code` FROM sets WHERE `type` = 'expansion' OR `type` = 'commander'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has abzan watermark? List out the type of this card.",
    "SELECT T1.`type` FROM cards AS T1 WHERE T1.`watermark` = 'abzan'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card that has azorius watermark? List out the type of this card.",
    "SELECT T2.`language`, T1.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`watermark` = 'azorius'\t----- bird -----\tcard_games"
  ],
  [
    "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards available in paper have a positive starting maximum hand size?",
    "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards that have a text box.",
    "SELECT `name` FROM cards WHERE `isTextless` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?",
    "SELECT convertedManaCost AS unconvertedManaCost FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with a white border color, how many of them have unknown power?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'white' AND (`power` IS NULL OR `power` = '*')\t----- bird -----\tcard_games"
  ],
  [
    "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.",
    "SELECT T1.name FROM cards AS T1 WHERE T1.isPromo = 1 AND T1.faceConvertedManaCost IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?",
    "SELECT `subtypes` AS `type` FROM cards WHERE `name` = 'Molimo, Maro-Sorcerer' UNION SELECT `supertypes` AS `type` FROM cards WHERE `name` = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".",
    "SELECT `purchaseUrls` FROM cards WHERE `promoTypes` = 'bundle'\t----- bird -----\tcard_games"
  ],
  [
    "How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type?",
    "SELECT COUNT(DISTINCT T1.`artist`) AS artist_count FROM cards AS T1 WHERE T1.`borderColor` = 'black' AND T1.`availability` LIKE '%arena%' AND T1.`availability` LIKE '%mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "SELECT CASE WHEN (SELECT `convertedManaCost` FROM cards WHERE `name` = 'Serra Angel') > (SELECT `convertedManaCost` FROM cards WHERE `name` = 'Shrine Keeper') THEN 'Serra Angel' WHEN (SELECT `convertedManaCost` FROM cards WHERE `name` = 'Serra Angel') < (SELECT `convertedManaCost` FROM cards WHERE `name` = 'Shrine Keeper') THEN 'Shrine Keeper' ELSE 'Both have the same converted mana cost' END AS result\t----- bird -----\tcard_games"
  ],
  [
    "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
    "SELECT `artist` FROM cards WHERE `flavorName` = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.",
    "SELECT T1.`name` FROM cards AS T1 WHERE T1.`frameVersion` = '2003' ORDER BY T1.`convertedManaCost` DESC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?",
    "SELECT st.translation FROM set_translations st JOIN sets s ON st.setCode = s.code JOIN cards c ON c.setCode = s.code WHERE c.name = 'Ancestor\\'s Chosen' AND st.language = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "How many translations are there for the set of cards with \"Angel of Mercy\" in it?",
    "-- SQL Type: SELECT SELECT COUNT(*) FROM set_translations AS ST WHERE ST.setCode IN ( SELECT S.code FROM cards AS C INNER JOIN foreign_data AS FD ON C.uuid = FD.uuid INNER JOIN sets AS S ON FD.name = S.name WHERE C.name = 'Angel of Mercy' )\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards in the set \"Hauptset Zehnte Edition\".",
    "SELECT DISTINCT T3.name FROM cards AS T3 INNER JOIN foreign_data AS T4 ON T3.uuid = T4.uuid INNER JOIN sets AS T1 ON T4.multiverseid = T1.id INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games"
  ],
  [
    "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?",
    "SELECT EXISTS ( SELECT 1 FROM foreign_data WHERE `uuid` IN ( SELECT `uuid` FROM cards WHERE `name` = 'Ancestor''s Chosen' ) AND `language` = 'Korean' ) AS has_korean_version\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?",
    "SELECT COUNT(*) FROM cards AS T1 WHERE T1.`artist` = 'Adam Rex' AND T1.`setCode` = ( SELECT T1.`id` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T2.`translation` = 'Hauptset Zehnte Edition' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the base set of \"Hauptset Zehnte Edition\"?",
    "SELECT T1.`baseSetSize` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T2.`translation` = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games"
  ],
  [
    "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Eighth Edition' ) AND `language` = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?",
    "SELECT CASE WHEN EXISTS ( SELECT 1 FROM sets AS T1 INNER JOIN cards AS T2 ON T1.`id` = T2.`id` WHERE T2.`name` = 'Angel of Mercy' AND T1.`mtgoCode` IS NOT NULL ) THEN 'Yes' ELSE 'No' END AS `AppearsOnMTGO`\t----- bird -----\tcard_games"
  ],
  [
    "When was the set of cards with \"Ancestor's Chosen\" released?",
    "SELECT `releaseDate` FROM sets WHERE `id` = ( SELECT `id` FROM cards WHERE `name` = 'Ancestor''s Chosen' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the expansion type of the set \"Hauptset Zehnte Edition\"?",
    "SELECT T1.`type` FROM sets AS T1 WHERE T1.`id` = ( SELECT T2.`id` FROM set_translations AS T2 WHERE T2.`translation` = 'Hauptset Zehnte Edition' )\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?",
    "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
    "-- SQL Type: SELECT SELECT CASE WHEN s.isForeignOnly = 1 THEN 'Yes' ELSE 'No' END AS Availability FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN sets s ON f.name = s.name WHERE c.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10?",
    "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T2.`language` = 'Italian' AND T2.`translation` IS NOT NULL AND T1.`baseSetSize` < 10\t----- bird -----\tcard_games"
  ],
  [
    "How many cards in the set Coldsnap have a black border color?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'black' AND `id` IN ( SELECT `id` FROM sets WHERE `name` = 'Coldsnap' )\t----- bird -----\tcard_games"
  ],
  [
    "Please list the name of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT cards.name FROM cards INNER JOIN sets ON cards.id = sets.id WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost = ( SELECT MAX(cards.convertedManaCost) FROM cards INNER JOIN sets ON cards.id = sets.id WHERE sets.name = 'Coldsnap' )\t----- bird -----\tcard_games"
  ],
  [
    "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
    "-- SQL Type: SELECT SELECT DISTINCT c.artist FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games"
  ],
  [
    "What is card number 4 in the set Coldsnap?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`number` = '4'\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
    "SELECT COUNT(*) FROM cards AS T1 WHERE T1.`convertedManaCost` > 5 AND (T1.`power` IS NULL OR T1.`power` = 'None') AND T1.`id` IN ( SELECT `id` FROM sets WHERE `name` = 'Coldsnap' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the Italian flavor text of the card \"Ancestor's Chosen\"?",
    "SELECT `flavorText` FROM foreign_data WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Ancestor''s Chosen' ) AND `language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.",
    "SELECT DISTINCT `language` FROM foreign_data WHERE `id` = ( SELECT `id` FROM cards WHERE `name` = 'Ancestor''s Chosen' ) AND `flavorText` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What's the German type of the card \"Ancestor's Chosen\"?",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'German' AND T1.`name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian text ruling of all the cards in the set Coldsnap.",
    "SELECT T3.text FROM rulings AS T3 INNER JOIN cards AS T1 ON T1.uuid = T3.uuid INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T4 ON T1.uuid = T4.id WHERE T4.name = 'Coldsnap' AND T2.language = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost.",
    "-- SQL Script Type: SELECT SELECT fd.name FROM foreign_data AS fd INNER JOIN cards AS c ON fd.uuid = c.uuid INNER JOIN sets AS s ON c.uuid = s.id WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedManaCost = ( SELECT MAX(c2.convertedManaCost) FROM cards AS c2 INNER JOIN sets AS s2 ON c2.uuid = s2.id WHERE s2.name = 'Coldsnap' )\t----- bird -----\tcard_games"
  ],
  [
    "When was the ruling for the card 'Reminisce' created?",
    "SELECT `date` FROM rulings WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Reminisce' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
    "SELECT (CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.convertedManaCost)) * 100 AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of incredibly powerful cards in the set Coldsnap?",
    "SELECT -- SQL Type: SELECT (CAST(SUM(CASE WHEN c.cardKingdomFoilId = c.cardKingdomId AND c.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / NULLIF(COUNT(*), 0) * 100) AS percentage FROM cards c JOIN sets s ON c.setCode = s.id WHERE s.name = 'Coldsnap'\t----- bird -----\tcard_games"
  ],
  [
    "What's the code for the set which was released on 2017/7/14?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2017-07-14'\t----- bird -----\tcard_games"
  ],
  [
    "List the keyrune code for the set whose code is 'PKHC'.",
    "SELECT `keyruneCode` FROM sets WHERE `code` = 'PKHC'\t----- bird -----\tcard_games"
  ],
  [
    "For the set which had 'SS2' as the code, what is its magic card market id?",
    "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games"
  ],
  [
    "What's the magic card market name for the set which was released on 2017/6/9?",
    "SELECT `mcmName` FROM sets WHERE `releaseDate` = '2017-06-09'\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"From the Vault: Lore\", what is its expansion type?",
    "SELECT `type` FROM sets WHERE `name` LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"Commander 2014 Oversized\" , give its parent code.",
    "SELECT `parentCode` FROM sets WHERE `name` = 'Commander 2014 Oversized'\t----- bird -----\tcard_games"
  ],
  [
    "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
    "SELECT T1.`id`, T1.`name`, T2.`text` AS ruling_text, CASE WHEN T1.`hasContentWarning` = 1 THEN 'Yes' ELSE 'No' END AS has_missing_or_degraded_properties FROM cards AS T1 LEFT JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Jim Pavelec' AND T2.`uuid` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What was the release date for the set which card \"Evacuation\" in it?",
    "SELECT s.releaseDate FROM sets AS s JOIN cards AS c ON c.uuid = s.code WHERE c.name = 'Evacuation'\t----- bird -----\tcard_games"
  ],
  [
    "What is the number of cards are there in the set of \"Rinascita di Alara\"?",
    "SELECT T1.`baseSetSize` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T2.`translation` = 'Rinascita di Alara'\t----- bird -----\tcard_games"
  ],
  [
    "List the expansion type of the set \"Huitième édition\".",
    "SELECT T1.`type` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`translation` = 'Huitième édition'\t----- bird -----\tcard_games"
  ],
  [
    "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
    "SELECT st.translation FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.name = 'Tendo Ice Bridge' AND st.language = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many translations of the name of the set \"Salvat 2011\"?",
    "SELECT COUNT(*) FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Salvat 2011' ) AND `translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Tell the Japanese name of the set which card \"Fellwar Stone\" is in it.",
    "SELECT ST.translation FROM cards AS C INNER JOIN foreign_data AS FD ON C.uuid = FD.uuid INNER JOIN sets AS S ON FD.id = S.id INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.language = 'Japanese' AND C.name = 'Fellwar Stone';\t----- bird -----\tcard_games"
  ],
  [
    "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`id` = ( SELECT `id` FROM sets WHERE `name` = 'Journey into Nyx Hero''s Path' ) ORDER BY T1.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the release date for the set \"Ola de frío\"?",
    "SELECT T2.`releaseDate` FROM sets AS T2 WHERE T2.`code` = ( SELECT T1.`setCode` FROM set_translations AS T1 WHERE T1.`translation` = 'Ola de frío' )\t----- bird -----\tcard_games"
  ],
  [
    "What was the expansion type for the set which card \"Samite Pilgrim\" in it?",
    "SELECT S.type FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid INNER JOIN sets AS S ON F.multiverseid = S.id WHERE C.name = 'Samite Pilgrim'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.",
    "SELECT COUNT(*) FROM cards WHERE `setCode` = ( SELECT `id` FROM sets WHERE `name` = 'World Championship Decks 2004' ) AND `convertedManaCost` = 3\t----- bird -----\tcard_games"
  ],
  [
    "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Mirrodin' ) AND `language` = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
    "SELECT (SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T1.`setCode` = T3.`code` WHERE T2.`language` = 'Japanese' AND T3.`isNonFoilOnly` = 1) * 100.0 / (SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'Japanese') AS percentage_non_foil\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
    "SELECT (SUM(CASE WHEN C.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM foreign_data AS FD INNER JOIN cards AS C ON FD.uuid = C.uuid WHERE FD.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games"
  ],
  [
    "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
    "SELECT DISTINCT T1.`availability` FROM cards AS T1 WHERE T1.`artist` = 'Aleksi Briclot' AND T1.`isTextless` = 1 AND T1.`availability` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the unique id of the set that has the highest number of cards?",
    "SELECT `id` FROM sets WHERE `baseSetSize` = ( SELECT MAX(`baseSetSize`) FROM sets )\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?",
    "SELECT `artist` FROM cards WHERE `convertedManaCost` = ( SELECT MAX(`convertedManaCost`) FROM cards WHERE `id` IS NOT NULL ) AND `id` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the most common visual frame effects among the incredibly powerful foils?",
    "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND frameEffects IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with unknown power that can't be found in foil is in duel deck A?",
    "SELECT COUNT(*) FROM cards WHERE `power` IS NULL AND `hasFoil` = 0 AND `duelDeck` = 'a'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
    "SELECT `id` FROM sets WHERE `type` = 'commander' AND `totalSetSize` = ( SELECT MAX(`totalSetSize`) FROM sets WHERE `type` = 'commander' )\t----- bird -----\tcard_games"
  ],
  [
    "In duels, what are the top 10 cards with the highest uncoverted mana cost?",
    "SELECT T1.`name`, T1.`manaCost` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`format` = 'duel' ORDER BY T1.`convertedManaCost` DESC LIMIT 10\t----- bird -----\tcard_games"
  ],
  [
    "How many cards did Volkan BaÇµa illustrated whose foreign language is in French?",
    "SELECT COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`id` = T2.`id` WHERE T2.`artist` = 'Volkan Baga' AND T1.`language` = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many rare enchantment Abundance cards are there whose play format status are all legal?",
    "SELECT COUNT(*) FROM legalities AS T1 WHERE T1.`uuid` IN ( SELECT T2.`uuid` FROM cards AS T2 WHERE T2.`rarity` = 'rare' AND T2.`types` = 'Enchantment' AND T2.`name` = 'Abundance' ) AND T1.`status` = 'Legal' GROUP BY T1.`uuid` HAVING COUNT(*) = ( SELECT COUNT(*) FROM legalities AS T3 WHERE T3.`uuid` = T1.`uuid` )\t----- bird -----\tcard_games"
  ],
  [
    "Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card.",
    "SELECT T2.`name`, T1.`format` FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`status` = 'Banned' AND T1.`format` = ( SELECT T1.`format` FROM ( SELECT T1.`format`, COUNT(*) AS banned_count FROM legalities AS T1 WHERE T1.`status` = 'Banned' GROUP BY T1.`format` ) AS T1 ORDER BY T1.banned_count DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the \"Battlebond\" set?",
    "-- SQL Type: SELECT SELECT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Battlebond' AND st.language IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated.",
    "-- SQL Script Type: SELECT SELECT DISTINCT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = ( SELECT artist FROM ( SELECT artist, COUNT(id) AS card_count FROM cards WHERE artist IS NOT NULL GROUP BY artist ORDER BY card_count ASC LIMIT 1 ) AS subquery )\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
    "SELECT T2.`status` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`frameVersion` = '1997' AND T1.`artist` = 'D. Alexander Gregory' AND T1.`hasContentWarning` = 1 AND T2.`format` = 'legacy'\t----- bird -----\tcard_games"
  ],
  [
    "Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format.",
    "SELECT T1.`name`, T2.`format` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`edhrecRank` = 1 AND T2.`status` = 'Banned'\t----- bird -----\tcard_games"
  ],
  [
    "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
    "SELECT (SELECT COUNT(*) FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31') / (2015 - 2012 + 1) AS annual_average_sets, (SELECT language FROM foreign_data AS FD INNER JOIN cards AS C ON FD.uuid = C.uuid INNER JOIN sets AS S ON C.id = S.id WHERE S.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY language ORDER BY COUNT(language) DESC LIMIT 1) AS common_language\t----- bird -----\tcard_games"
  ],
  [
    "List the artists who illustrated cards with black borders which are available only in arena.",
    "SELECT DISTINCT T1.`artist` FROM cards AS T1 WHERE T1.`borderColor` = 'black' AND T1.`availability` = 'arena'\t----- bird -----\tcard_games"
  ],
  [
    "Find the uuid of cards in which the old school format is restricted or banned.",
    "SELECT T1.`uuid` FROM legalities AS T1 WHERE T1.`format` = 'oldschool' AND (T1.`status` = 'Banned' OR T1.`status` = 'Restricted')\t----- bird -----\tcard_games"
  ],
  [
    "Among the card designed by Matthew D. Wilson, how many are available only in the paper?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games"
  ],
  [
    "What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.",
    "SELECT T1.`text` FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`artist` = 'Kev Walker' ORDER BY T1.`date` DESC\t----- bird -----\tcard_games"
  ],
  [
    "List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.",
    "SELECT T1.`name`, T3.`format` FROM cards AS T1 INNER JOIN legalities AS T3 ON T1.`uuid` = T3.`uuid` INNER JOIN sets AS T2 ON T1.`id` = T2.`id` WHERE T2.`name` = 'Hour of Devastation' AND T3.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
    "-- SQL Script Type: SELECT SELECT DISTINCT s.name FROM sets AS s JOIN set_translations AS st_korean ON s.code = st_korean.setCode AND st_korean.language = 'Korean' LEFT JOIN set_translations AS st_japanese ON s.code = st_japanese.setCode AND st_japanese.language = 'Japanese' WHERE st_japanese.setCode IS NULL;\t----- bird -----\tcard_games"
  ],
  [
    "List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any.",
    "SELECT DISTINCT T1.frameVersion, T1.name FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' GROUP BY T1.frameVersion, T1.name HAVING MAX(T2.status) = 'Banned' OR MAX(T2.status) IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "Which user has a higher reputation, Harlan or Jarrod Dixon?",
    "SELECT `DisplayName`, `Reputation` FROM users WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') ORDER BY `Reputation` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users whose accounts were created in the year 2014.",
    "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users last accessed the website after 2014/9/1?",
    "SELECT COUNT(*) FROM users WHERE `LastAccessDate` > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has the most number of views?",
    "SELECT DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
    "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users with more than 10 views created their account after the year 2013?",
    "SELECT COUNT(*) FROM users WHERE `Views` > 10 AND `CreationDate` > '2013-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts does the user csgillespie own?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the titles of the posts owned by the user csgillespie?",
    "-- SQL Script Type: SELECT SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.OwnerUserId IS NOT NULL AND p.Title IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the owner of the post \"Eliciting priors from experts\"?",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Title` = 'Eliciting priors from experts' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post that is owned by csgillespie and has the highest popularity?",
    "SELECT `Title` FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) ORDER BY `ViewCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who is the owner of the most valuable post?",
    "SELECT u.DisplayName FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE p.Id = ( SELECT Id FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total number of comments of all the posts owned by csgillespie?",
    "SELECT SUM(T1.`CommentCount`) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post that got the most number of answers owned by csgillespie, how many answers did it get?",
    "SELECT T1.`AnswerCount` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie' AND T1.`Id` = ( SELECT T3.`Id` FROM posts AS T3 INNER JOIN users AS T4 ON T3.`OwnerUserId` = T4.`Id` WHERE T4.`DisplayName` = 'csgillespie' ORDER BY T3.`AnswerCount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `LastEditorUserId` FROM posts WHERE `Id` = ( SELECT `Id` FROM posts WHERE `Title` = 'Examples for teaching: Correlation does not mean causation' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by csgillespie, how many of them are root posts?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) AND `ParentId` IS NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users who owns a post that is well-finished.",
    "SELECT DISTINCT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`ClosedDate` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by an elder user, how many of them have a score of over 19?",
    "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN ( SELECT Id FROM users WHERE Age > 65 ) AND Score >= 20\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the location of the owner of the post \"Eliciting priors from experts\"?",
    "SELECT `Location` FROM users WHERE `Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Title` = 'Eliciting priors from experts' )\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the tag \"bayesian\" excerpted from? Please give the body of the post.",
    "SELECT `Body` FROM posts WHERE `Id` = ( SELECT `ExcerptPostId` FROM tags WHERE `TagName` = 'bayesian' )\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the most popular tag excerpted from? Please give the body of the post.",
    "SELECT `Body` FROM posts WHERE `Id` = ( SELECT `ExcerptPostId` FROM tags WHERE `Id` = ( SELECT `Id` FROM tags ORDER BY `Count` DESC LIMIT 1 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many badges has the user csgillespie obtained?",
    "SELECT COUNT(*) FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the names of the badges obtained by csgillespie.",
    "SELECT T1.`Name` FROM badges AS T1 WHERE T1.`UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?",
    "SELECT COUNT(*) FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) AND strftime('%Y', `Date`) = '2011'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has obtained the most number of badges?",
    "SELECT DisplayName FROM users WHERE Id = ( SELECT UserId FROM ( SELECT UserId, COUNT(Id) AS badge_count FROM badges GROUP BY UserId ) AS badge_counts ORDER BY badge_count DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of the posts owned by the user csgillespie?",
    "SELECT AVG(`Score`) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of badges obtained by a user with over 200 views?",
    "SELECT CAST(COUNT(T1.`Id`) AS REAL) / COUNT(DISTINCT T2.`Id`) AS average_badges FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Views` > 200\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with a score of over 20, what is the percentage of them being owned by an elder user?",
    "SELECT (CAST(COUNT(CASE WHEN U.Age > 65 THEN 1 END) AS REAL) / COUNT(*)) * 100 AS elder_percentage FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Score > 20\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes did the user No.58 take on 2010/7/19?",
    "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community"
  ],
  [
    "Indicate the creation date of the maximum number of votes.",
    "SELECT v.CreationDate FROM votes AS v JOIN ( SELECT PostId, COUNT(*) AS vote_count FROM votes GROUP BY PostId ) AS vote_counts ON v.PostId = vote_counts.PostId WHERE vote_counts.vote_count = ( SELECT MAX(vote_count) FROM ( SELECT COUNT(*) AS vote_count FROM votes GROUP BY PostId ) AS inner_vote_counts )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of \"Revival\" badges.",
    "SELECT COUNT(*) FROM badges WHERE `Name` = 'Revival'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title for the post which got the highest score comment?",
    "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments WHERE Score = ( SELECT MAX(Score) FROM comments ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post which got 1910 view counts, how many comments does it get?",
    "SELECT COUNT(*) FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `ViewCount` = 1910 )\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?",
    "SELECT T2.`FavoriteCount` FROM posts AS T2 WHERE T2.`Id` = ( SELECT T1.`PostId` FROM comments AS T1 WHERE T1.`UserId` = 3025 AND T1.`CreationDate` = '2014-04-23 20:29:39.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the only one comment text of the post with parent id 107829.",
    "SELECT `Text` FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `ParentId` = 107829 AND `CommentCount` = 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.23853 gave a comment to a post at 9:08:18 on 2013/7/12, was that post well-finished?",
    "SELECT CASE WHEN p.`ClosedDate` IS NULL THEN 'Not Well-Finished' ELSE 'Well-Finished' END AS PostStatus FROM posts AS p WHERE p.`Id` = ( SELECT c.`PostId` FROM comments AS c WHERE c.`UserId` = 23853 AND c.`CreationDate` = '2013-07-12 09:08:18.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the owner user of post No. 65041, what is his/her reputation points?",
    "SELECT `Reputation` FROM users WHERE `Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Id` = 65041 )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Tiago Pasqualini' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the display name of the user who made the vote No.6347.",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `UserId` FROM votes WHERE `Id` = 6347 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of votes for the post about data visualization.",
    "SELECT COUNT(*) FROM votes WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` LIKE '%data visualization%' )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user whose display name is \"DatEpicCoderGuyWhoPrograms\", what is his/her badge's name?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user No.24, how many times is the number of his/her posts compared to his/her votes?",
    "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) * 1.0 / (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS post_to_vote_ratio\t----- bird -----\tcodebase_community"
  ],
  [
    "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
    "SELECT `ViewCount` FROM posts WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write the contents of comments with a score of 17.",
    "SELECT `Text` FROM comments WHERE `Score` = 17\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user has the website URL listed at 'http://stackoverflow.com'",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`WebsiteUrl` = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the badge name that user 'SilentGhost' obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'SilentGhost'\t----- bird -----\tcodebase_community"
  ],
  [
    "Name the user that commented 'thank you user93!'",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `UserId` FROM comments WHERE `Text` = 'thank you user93!' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made by user 'A Lion.'",
    "SELECT `Text` FROM comments WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'A Lion' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?",
    "SELECT `DisplayName`, `Reputation` FROM users WHERE `Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Title` = 'Understanding what Dassault iSight is doing?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?'",
    "SELECT `Text` FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'How does gentle boosting differ from AdaBoost?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Name 10 users with the badge name 'Necromancer.'",
    "SELECT T2.`DisplayName` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
    "SELECT u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community"
  ],
  [
    "List the title of posts which were edited by Vebjorn Ljosa.",
    "SELECT T1.`Title` FROM posts AS T1 WHERE T1.`LastEditorUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Vebjorn Ljosa' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total score of the posts edited by Yevgeny and include the user's website URL.",
    "SELECT SUM(T1.`Score`) AS total_score, T2.`WebsiteUrl` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`LastEditorUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Yevgeny'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "SELECT T1.`Text` FROM comments AS T1 WHERE T1.`PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How much is the total bounty amount of the post titled about 'data'",
    "SELECT SUM(`BountyAmount`) FROM votes WHERE `PostId` IN ( SELECT `Id` FROM posts WHERE `Title` LIKE '%data%' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user added a bounty amount of 50 to the post title mentioning variance?",
    "SELECT T3.`DisplayName` FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` INNER JOIN users AS T3 ON T1.`UserId` = T3.`Id` WHERE T1.`BountyAmount` = 50 AND T2.`Title` LIKE '%variance%'\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable.",
    "-- SQL Script Type: SELECT SELECT P.Title, C.Text, C.Score, AVG(P.ViewCount) OVER() AS AverageViewCount FROM posts AS P JOIN tags AS T ON P.Id = T.ExcerptPostId LEFT JOIN comments AS C ON P.Id = C.PostId WHERE T.TagName = 'humor'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the total number of comments posted by user ID 13.",
    "SELECT COUNT(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the highest reputation?",
    "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the lowest view?",
    "SELECT `Id` FROM users WHERE `Views` = ( SELECT MIN(`Views`) FROM users WHERE `Views` IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with supporter badge during year 2011?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 WHERE T1.`Name` = 'Supporter' AND strftime('%Y', T1.`Date`) = '2011'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with more than 5 badges?",
    "SELECT COUNT(UserId) AS user_count FROM ( SELECT UserId, COUNT(Name) AS badge_count FROM badges GROUP BY UserId ) AS badge_counts WHERE badge_count > 5\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from New York have a teacher and supporter badge?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 WHERE T1.`UserId` IN ( SELECT `Id` FROM users WHERE `Location` = 'New York' ) AND T1.`UserId` IN ( SELECT `UserId` FROM badges WHERE `Name` = 'Teacher' ) AND T1.`UserId` IN ( SELECT `UserId` FROM badges WHERE `Name` = 'Supporter' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user created post ID 1 and what is the reputation of this user?",
    "SELECT U.`DisplayName`, U.`Reputation` FROM posts AS P INNER JOIN users AS U ON P.`OwnerUserId` = U.`Id` WHERE P.`Id` = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user have only one post history per post and having at least 1000 views?",
    "SELECT T1.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 GROUP BY T1.UserId HAVING COUNT(T1.PostId) = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have posted the most comments. List out the user's badge?",
    "SELECT T2.`Name` FROM badges AS T2 WHERE T2.`UserId` IN ( SELECT T1.`UserId` FROM comments AS T1 GROUP BY T1.`UserId` HAVING COUNT(T1.`Id`) = ( SELECT MAX(CommentCount) FROM ( SELECT COUNT(`Id`) AS CommentCount FROM comments GROUP BY `UserId` ) ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from India have the teacher badges?",
    "SELECT COUNT(DISTINCT T1.`Id`) FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`Location` = 'India' AND T2.`Name` = 'Teacher'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage difference of student badges given during 2010 and 2011?",
    "SELECT (CAST(SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) - (CAST(SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) AS percentage_difference FROM badges WHERE Name = 'Student' AND (strftime('%Y', Date) = '2010' OR strftime('%Y', Date) = '2011')\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?",
    "SELECT COUNT(DISTINCT `UserId`) AS unique_user_count FROM comments WHERE `PostId` = 3720\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post that are related to post ID 61217 and what is the popularity of this post?",
    "SELECT T2.Id, T2.Title, T2.ViewCount, (SELECT T1.ViewCount FROM posts AS T1 WHERE T1.Id = 61217) AS Popularity FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217 AND T2.Id IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score and the link type ID for post ID 395?",
    "SELECT T1.`Score`, T2.`LinkTypeId` FROM posts AS T1 LEFT JOIN postLinks AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`Id` = 395\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post ID with score more than 60 and list out all the user ID that created these post.",
    "SELECT `OwnerUserId` FROM posts WHERE `Score` > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the sum of favourite count gained by user ID 686 in 2011?",
    "SELECT SUM(p.FavoriteCount) AS TotalFavoriteCount FROM posts p WHERE p.OwnerUserId = 686 AND strftime('%Y', p.CreationDate) = '2011' AND p.FavoriteCount IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average of the up votes and the average user age for users creating more than 10 posts?",
    "WITH UserStats AS ( SELECT AVG(T1.UpVotes) AS AvgUpVotes, AVG(T1.Age) AS AvgAge FROM users AS T1 WHERE T1.Id IN ( SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10 ) ) SELECT AvgUpVotes, AvgAge FROM UserStats\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users obtained the \"Announcer\" badge?",
    "SELECT COUNT(DISTINCT T1.`UserId`) AS UserCount FROM badges AS T1 WHERE T1.`Name` = 'Announcer'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.",
    "-- SQL Script Type: SELECT SELECT `Name` FROM badges WHERE `Date` >= '2010-07-19 00:00:00' AND `Date` < '2010-07-20 00:00:00'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many positive comments are there on the list?",
    "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
    "SELECT `Text` FROM comments WHERE `CreationDate` = '2010-07-19 19:25:47.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score of 10 on the list?",
    "SELECT COUNT(*) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the names of badges that users who have the highest reputation obtained?",
    "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T1.`Reputation` FROM users AS T1 WHERE T1.`Id` IN ( SELECT `UserId` FROM badges WHERE `Date` = '2010-07-19 19:39:08.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of badge that the user whose display name is \"Pierre\" obtained?",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Pierre' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the dates that users who are located in Rochester, NY obtained their badges?",
    "SELECT T1.`Date` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Location` = 'Rochester, NY'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Teacher\" badge, calculate their percentage of users",
    "SELECT (CAST(TeacherCount AS REAL) / TotalUsers) * 100 AS TeacherPercentage FROM ( SELECT COUNT(DISTINCT T1.`UserId`) AS TeacherCount FROM badges AS T1 WHERE T1.`Name` = 'Teacher' ) AS TeacherCountTable, ( SELECT COUNT(DISTINCT T2.`Id`) AS TotalUsers FROM users AS T2 ) AS TotalUsersTable\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
    "SELECT (COUNT(DISTINCT T1.UserId) * 100.0 / (SELECT COUNT(UserId) FROM badges WHERE Name = 'Organizer')) AS TeenPercentage FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer' AND T2.Age BETWEEN 13 AND 18\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
    "SELECT c.Score -- SQL Type: SELECT FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE p.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?",
    "-- SQL Type: SELECT SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN postHistory ph ON p.Id = ph.PostId WHERE ph.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the age of users who located in Vienna, Austria obtained the badge?",
    "SELECT T1.`Age` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`Location` = 'Vienna, Austria' AND T1.`Age` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "How many adults who obtained the badge Supporter?",
    "SELECT COUNT(*) FROM users AS T2 WHERE T2.`Id` IN ( SELECT DISTINCT T1.`UserId` FROM badges AS T1 WHERE T1.`Name` = 'Supporter' ) AND T2.`Age` BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT SUM(`Views`) AS total_views FROM users WHERE `Id` IN ( SELECT `UserId` FROM badges WHERE `Date` = '2010-07-19 19:39:08.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the name of badges that users who have the lowest reputation obtained?",
    "SELECT T1.`Name` FROM badges AS T1 WHERE T1.`UserId` IN ( SELECT `Id` FROM users WHERE `Reputation` = ( SELECT MIN(`Reputation`) FROM users ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "State the name of badge that the user whose display name is \"Sharpie\" obtained.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'Sharpie'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many elders obtained the \"Supporter\" badge?",
    "SELECT COUNT(*) FROM users AS T2 WHERE T2.`Age` > 65 AND T2.`Id` IN ( SELECT T1.`UserId` FROM badges AS T1 WHERE T1.`Name` = 'Supporter' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of user with the ID of 30?",
    "SELECT `DisplayName` FROM `users` WHERE `Id` = 30\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were from New York?",
    "SELECT COUNT(*) FROM users WHERE `Location` = 'New York'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made in 2010?",
    "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were adult?",
    "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have the highest number of views?",
    "SELECT DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users WHERE Views IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the ratio of votes in 2010 and 2011.",
    "SELECT (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010') * 1.0 / (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS ratio\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of tags used by John Stauffer's?",
    "SELECT DISTINCT t.TagName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN tags t ON p.Id = t.ExcerptPostId WHERE u.DisplayName = 'John Stauffer';\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created by Daniel Vassallo?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Daniel Vassallo' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made by Harlan?",
    "SELECT COUNT(*) FROM votes WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Harlan' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by slashnick has the most answers count? State the post ID.",
    "SELECT `Id` FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'slashnick' ) ORDER BY `AnswerCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
    "SELECT u.DisplayName, SUM(p.ViewCount) AS TotalViewCount FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY u.DisplayName ORDER BY TotalViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts by Matt Parker have more than 4 votes?",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Matt Parker' ) GROUP BY T1.`Id` HAVING COUNT(T2.`Id`) > 4\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments did Neil McGuigan get in his posts?",
    "SELECT COUNT(*) FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan' ) ) AND Score < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State all the tags used by Mark Meckes in his posts that doesn't have comments.",
    "-- SQL Script Type: SELECT SELECT DISTINCT T.TagName FROM tags AS T INNER JOIN posts AS P ON T.ExcerptPostId = P.Id WHERE P.OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'Mark Meckes' ) AND P.CommentCount = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "List all the name of users that obtained the Organizer Badges.",
    "SELECT `DisplayName` FROM users WHERE `Id` IN ( SELECT `UserId` FROM badges WHERE `Name` = 'Organizer' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
    "SELECT (SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community') AS total_posts, (SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN postLinks AS T3 ON T1.Id = T3.PostId INNER JOIN tags AS T4 ON T3.RelatedPostId = T4.Id WHERE T2.DisplayName = 'Community' AND T4.TagName = 'r') AS r_posts, (SELECT COUNT(DISTINCT T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN postLinks AS T3 ON T1.Id = T3.PostId INNER JOIN tags AS T4 ON T3.RelatedPostId = T4.Id WHERE T2.DisplayName = 'Community' AND T4.TagName = 'r') * 100.0 / (SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community') AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos.",
    "SELECT SUM(CASE WHEN U.DisplayName = 'Mornington' THEN P.ViewCount ELSE 0 END) - SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount ELSE 0 END) AS ViewCountDifference FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.ViewCount IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users received commentator badges in 2014?",
    "SELECT COUNT(DISTINCT T1.`UserId`) AS `UserCount` FROM badges AS T1 WHERE T1.`Name` = 'commentator' AND strftime('%Y', T1.`Date`) = '2014'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created on 21st July, 2010?",
    "-- SQL Type: SELECT SELECT COUNT(*) AS post_count FROM postHistory ph JOIN posts p ON ph.PostId = p.Id WHERE ph.CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the display names and ages of user who got the highest in views?",
    "SELECT U.DisplayName, U.Age FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE P.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
    "SELECT `LastEditDate`, `LastEditorUserId` FROM posts WHERE `Id` = ( SELECT `Id` FROM posts WHERE `Title` = 'Detecting a given face in a database of facial images' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments were given by user ID 13?",
    "SELECT COUNT(*) FROM comments WHERE `UserId` = 13 AND `Score` < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post title which got positive comments and display names of the users who posted those comments.",
    "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the badge names received in 2011 for the user whose location is in the North Pole.",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `Location` = 'North Pole' ) AND strftime('%Y', `Date`) = '2011'\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the users' display names and available website URLs of the post with favorite count of more than 150.",
    "SELECT U.DisplayName, U.WebsiteUrl FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.FavoriteCount > 150 AND U.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post history counts and last edit date of the post title \"What is the best introductory Bayesian statistics textbook?\"",
    "-- SQL script type: SELECT WITH PostInfo AS ( SELECT `Id`, `LastEditDate` FROM posts WHERE `Title` = 'What is the best introductory Bayesian statistics textbook?' ) SELECT (SELECT COUNT(*) FROM postHistory WHERE `PostId` = PostInfo.`Id`) AS PostHistoryCount, PostInfo.`LastEditDate` FROM PostInfo WHERE PostInfo.`Id` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the last accessed date and location of the users who received the outliers badge.",
    "SELECT * FROM badges WHERE Name = 'Outliers'\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the related post title of \"How to tell if something happened in a data set which monitors a value over time\".",
    "SELECT `Title` FROM posts WHERE `Id` IN ( SELECT `RelatedPostId` FROM postLinks WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'How to tell if something happened in a data set which monitors a value over time' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the post IDs and badge names of the user Samuel in 2013.",
    "SELECT P.Id AS PostID, B.Name AS BadgeName FROM postHistory AS PH INNER JOIN posts AS P ON PH.PostId = P.Id INNER JOIN badges AS B ON B.UserId = ( SELECT Id FROM users WHERE DisplayName = 'Samuel' ) WHERE PH.UserDisplayName = 'Samuel' AND strftime('%Y', PH.CreationDate) = '2013' AND strftime('%Y', B.Date) = '2013'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner's display name of the most popular post?",
    "SELECT p.OwnerDisplayName FROM posts p WHERE p.ViewCount IS NOT NULL AND p.ViewCount = (SELECT MAX(ViewCount) FROM posts WHERE ViewCount IS NOT NULL)\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag.",
    "SELECT `DisplayName`, `Location` FROM users WHERE `Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Id` = ( SELECT `ExcerptPostId` FROM tags WHERE `TagName` = 'hypothesis-testing' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".",
    "SELECT T1.`Title`, T2.`LinkTypeId` FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.`Id` = T2.`RelatedPostId` WHERE T2.`PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'What are principal component scores?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the display name of the parent ID for child post with the highest score.",
    "SELECT U.`DisplayName` FROM posts AS P INNER JOIN users AS U ON P.`OwnerUserId` = U.`Id` WHERE P.`Id` = ( SELECT `ParentId` FROM posts WHERE `Id` = ( SELECT `Id` FROM posts WHERE `ParentId` IS NOT NULL ORDER BY `Score` DESC LIMIT 1 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
    "SELECT U.DisplayName, U.WebsiteUrl FROM votes AS V INNER JOIN users AS U ON V.UserId = U.Id WHERE V.VoteTypeId = 8 AND V.BountyAmount IS NOT NULL AND V.BountyAmount = ( SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8 AND BountyAmount IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the titles of the top 5 posts with the highest popularity?",
    "SELECT T1.`Title` FROM posts AS T1 ORDER BY T1.`ViewCount` DESC LIMIT 5\t----- bird -----\tcodebase_community"
  ],
  [
    "How many tags have post count between 5,000 to 7,000?",
    "SELECT COUNT(*) FROM tags WHERE `Count` BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner user id of the most valuable post?",
    "SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "How old is the most influential user?",
    "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts with votes that were created in 2011 have a bounty of 50?",
    "-- SQL Script Type: SELECT SELECT COUNT(*) FROM votes AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE strftime('%Y', T2.CreationDate) = '2011' AND T2.BountyAmount = 50 AND T2.BountyAmount IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the id of the youngest user?",
    "SELECT Id FROM users WHERE Age = ( SELECT MIN(Age) FROM users WHERE Age IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score of the post with the most popular tag?",
    "SELECT p.Score FROM posts p JOIN tags t ON t.ExcerptPostId = p.Id WHERE t.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?",
    "SELECT CAST(COUNT(Id) AS REAL) / 12 AS average_monthly_links FROM postLinks WHERE strftime('%Y', CreationDate) = '2010' AND PostId IN ( SELECT Id FROM posts WHERE AnswerCount <= 2 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts that were voted by user 1465, what is the id of the most valuable post?",
    "SELECT T2.`Id` FROM posts AS T2 WHERE T2.`FavoriteCount` = ( SELECT MAX(T3.`FavoriteCount`) FROM posts AS T3 WHERE T3.`Id` IN ( SELECT DISTINCT T1.`PostId` FROM votes AS T1 WHERE T1.`UserId` = 1465 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post with the oldest post link?",
    "SELECT `Title` FROM posts WHERE `Id` = ( SELECT `PostId` FROM postLinks WHERE `CreationDate` = ( SELECT MIN(`CreationDate`) FROM postLinks ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the highest amount of badges?",
    "SELECT u.DisplayName FROM users AS u WHERE u.Id IN ( SELECT UserId FROM ( SELECT UserId, COUNT(Name) AS badge_count FROM badges GROUP BY UserId ) AS badge_counts WHERE badge_count = ( SELECT MAX(badge_count) FROM ( SELECT UserId, COUNT(Name) AS badge_count FROM badges GROUP BY UserId ) AS inner_badge_counts ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "When did \"chl\" cast its first vote in a post?",
    "SELECT MIN(CreationDate) AS FirstVoteDate FROM votes WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'chl' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the date when the youngest user made his or her first post?",
    "SELECT MIN(CreaionDate) AS FirstPostDate FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the first Autobiographer badge?",
    "SELECT DisplayName FROM users WHERE Id = ( SELECT UserId FROM badges WHERE Name = 'Autobiographer' AND Date = ( SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?",
    "SELECT COUNT(DISTINCT T1.`OwnerUserId`) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`Location` = 'United Kingdom' AND T1.`FavoriteCount` >= 4\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of posts voted by the oldest users?",
    "SELECT AVG(vote_count) AS average_votes FROM ( SELECT COUNT(PostId) AS vote_count FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users)) GROUP BY UserId ) AS user_votes\t----- bird -----\tcodebase_community"
  ],
  [
    "Who has the highest reputation? Please give the display name.",
    "SELECT DisplayName FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users whose reputations are higher than 2000 and the number of views is higher than 1000?",
    "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all display names of users who are adults.",
    "SELECT `DisplayName` FROM users WHERE `Age` BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts did Jay Stevens have in 2010?",
    "SELECT COUNT(*) FROM postHistory ph JOIN posts p ON ph.PostId = p.Id JOIN users u ON ph.UserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND strftime('%Y', ph.CreationDate) = '2010'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by Harvey Motulsky has the most views? Please give the id and title of this post.",
    "SELECT `Id`, `Title` FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Harvey Motulsky' ) ORDER BY `ViewCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post has the highest score? Please give its id and title's name.",
    "SELECT Id, Title FROM posts WHERE Score = ( SELECT MAX(Score) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of Stephen Turner's posts?",
    "SELECT AVG(`Score`) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Stephen Turner' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the users' display names whose posts had over 20000 views in 2011.",
    "SELECT DISTINCT u.DisplayName FROM users AS u INNER JOIN posts AS p ON u.Id = p.OwnerUserId INNER JOIN postHistory AS ph ON p.Id = ph.PostId WHERE p.ViewCount > 20000 AND strftime('%Y', ph.CreationDate) = '2011'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which is the most valuable post in 2010? Please give its id and the owner's display name.",
    "SELECT p.Id, u.DisplayName AS OwnerDisplayName FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN users u ON p.OwnerUserId = u.Id WHERE ph.CreationDate IS NOT NULL AND strftime('%Y', ph.CreationDate) = '2010' AND p.FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts p2 JOIN postHistory ph2 ON p2.Id = ph2.PostId WHERE strftime('%Y', ph2.CreationDate) = '2010' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the percentage of teenage users.",
    "SELECT (CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) / COUNT(Id)) * 100 AS percentage FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.",
    "-- SQL script to get total views and last editor's name for the post 'Computer Game Datasets' SELECT p.ViewCount, u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Computer Game Datasets' AND p.ViewCount IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total number of posts with views above average.",
    "SELECT COUNT(*) AS total_posts_above_average FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments were added to the post with the highest score?",
    "SELECT COUNT(*) AS comment_count FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
    "SELECT COUNT(*) FROM posts WHERE `ViewCount` > 35000 AND `CommentCount` = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the display name and location of the user, who was the last to edit the post with ID 183.",
    "-- SQL Type: SELECT SELECT u.DisplayName, u.Location FROM posts AS p JOIN users AS u ON p.LastEditorUserId = u.Id WHERE p.Id = 183 AND p.LastEditDate IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the latest badge awarded to the user with the display name Emmett.",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Emmett' ) ORDER BY `Date` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of adult users who have cast over 5000 upvotes.",
    "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000\t----- bird -----\tcodebase_community"
  ],
  [
    "How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.",
    "SELECT julianday(badge.Date) - julianday(user.CreationDate) AS DaysToEarnBadge FROM badges AS badge INNER JOIN users AS user ON badge.UserId = user.Id WHERE user.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts and comments left by the user, who has the latest created user account.",
    "SELECT (SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `CreationDate` = ( SELECT MAX(`CreationDate`) FROM users ) )) AS PostCount, (SELECT COUNT(*) FROM comments WHERE `UserId` = ( SELECT `Id` FROM users WHERE `CreationDate` = ( SELECT MAX(`CreationDate`) FROM users ) )) AS CommentCount\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the text of the latest comment to the post with the title 'Analysing wind data with R' and the display name of the user who left it.",
    "SELECT U.`DisplayName`, C.`Text` FROM comments AS C INNER JOIN users AS U ON C.`UserId` = U.`Id` WHERE C.`PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Analysing wind data with R' ) ORDER BY C.`CreationDate` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were awarded with 'Citizen Patrol' badge?",
    "SELECT COUNT(DISTINCT T1.`UserId`) AS UserCount FROM badges AS T1 WHERE T1.`Name` = 'Citizen Patrol'\t----- bird -----\tcodebase_community"
  ],
  [
    "Count the number of posts with a tag specified as 'careers'.",
    "SELECT COUNT(T1.`Id`) AS post_count FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`TagName` = 'careers'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?",
    "SELECT `Reputation`, `Views` FROM users WHERE `DisplayName` = 'Jarrod Dixon'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
    "SELECT (SELECT COUNT(*) FROM comments WHERE `PostId` = (SELECT `Id` FROM posts WHERE `Title` = 'Clustering 1D data')) AS comment_count, (SELECT COUNT(*) FROM posts WHERE `ParentId` = (SELECT `Id` FROM posts WHERE `Title` = 'Clustering 1D data')) AS answer_count\t----- bird -----\tcodebase_community"
  ],
  [
    "When did the user known as 'IrishStat' create his or her account?",
    "SELECT `CreationDate` FROM users WHERE `DisplayName` = 'IrishStat'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that offer a bounty amount over 30.",
    "SELECT COUNT(*) FROM votes WHERE `BountyAmount` > 30\t----- bird -----\tcodebase_community"
  ],
  [
    "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
    "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)) AND Score > 50) * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users))) AS PercentageAbove50\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score less than 20?",
    "SELECT COUNT(*) AS post_count FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the tags with tag ID below 15, how many of them have 20 count of posts and below?",
    "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the excerpt post ID and wiki post ID of the tag named sample?",
    "SELECT `ExcerptPostId`, `WikiPostId` FROM tags WHERE `TagName` = 'sample'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".",
    "SELECT `Reputation`, `UpVotes` FROM users WHERE `Id` = ( SELECT `UserId` FROM comments WHERE `Text` = 'fine, you win :)' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the texts commented on the post about linear regression.",
    "SELECT Text -- SQL Script Type: SELECT FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'How can I adapt ANOVA for binary data?')\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
    "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "List the creation date and age of the user that commented with webiste.",
    "SELECT DISTINCT u.CreationDate, u.Age FROM users AS u JOIN comments AS c ON u.Id = c.UserId WHERE c.Text LIKE '%http://%' AND u.CreationDate IS NOT NULL AND u.Age IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with 0 score, how many of the posts have view count lower than 5?",
    "SELECT COUNT(DISTINCT T1.`PostId`) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`Score` = 0 AND T2.`ViewCount` < 5\t----- bird -----\tcodebase_community"
  ],
  [
    "In posts with 1 comment, how many of the comments have 0 score?",
    "SELECT COUNT(*) FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE CommentCount = 1 ) AND Score = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Among products comments with 0 score, what is the total number of users ages 40 years old?",
    "SELECT COUNT(DISTINCT U.`Id`) AS TotalUsers FROM users AS U WHERE U.`Age` = 40 AND U.`Id` IN ( SELECT DISTINCT C.`UserId` FROM comments AS C INNER JOIN posts AS P ON C.`PostId` = P.`Id` WHERE C.`Score` = 0 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?",
    "SELECT `Id` AS PostId, `Text` AS Comment FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Group differences on a five point Likert item' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the up vote number of the user that commented \"R is also lazy evaluated.\"?",
    "SELECT UpVotes FROM users WHERE Id = ( SELECT UserId FROM comments WHERE Text = 'R is also lazy evaluated.' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the comments commented by the user with a username of Harvey Motulsky.",
    "SELECT T1.`Text` FROM comments AS T1 WHERE T1.`UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Harvey Motulsky' )\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
    "SELECT DISTINCT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0 AND T2.DisplayName IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
    "SELECT (COUNT(DISTINCT CASE WHEN u.UpVotes = 0 THEN c.UserId END) * 100.0 / NULLIF(COUNT(*), 0)) AS percentage FROM comments AS c INNER JOIN users AS u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all the superpowers of 3-D Man.",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = '3-D Man' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have the super power of \"Super Strength\"?",
    "SELECT COUNT(DISTINCT T1.`hero_id`) AS superhero_count FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'Super Strength'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Super Strength' AND T1.`height_cm` > 200\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the full names of all the superheroes with over 15 super powers.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN ( SELECT hero_id FROM ( SELECT hero_id, COUNT(power_id) AS superpower_count FROM hero_power GROUP BY hero_id ) AS superpower_counts WHERE superpower_count > 15 ) AS T2 ON T1.id = T2.hero_id WHERE T1.full_name IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have blue eyes?",
    "SELECT COUNT(*) FROM superhero WHERE `eye_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Blue' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the colour of Apocalypse's skin?",
    "SELECT T1.`colour` FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.`id` = T2.`skin_colour_id` WHERE T2.`superhero_name` = 'Apocalypse'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?",
    "SELECT COUNT(DISTINCT T1.`id`) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN hero_power AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN superpower AS T4 ON T3.`power_id` = T4.`id` WHERE T2.`colour` = 'Blue' AND T4.`power_name` = 'Agility'\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
    "SELECT `superhero_name` FROM `superhero` WHERE `eye_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Blue') AND `hair_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Blond')\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes are published by Marvel Comics?",
    "SELECT COUNT(*) FROM superhero WHERE `publisher_id` = ( SELECT `id` FROM publisher WHERE `publisher_name` = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Please give the full name of the tallest hero published by Marvel Comics.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`height_cm` = ( SELECT MAX(T3.`height_cm`) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.`publisher_id` = T4.`id` WHERE T4.`publisher_name` = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the publisher of Sauron?",
    "SELECT `publisher_name` FROM publisher WHERE `id` = ( SELECT `publisher_id` FROM superhero WHERE `superhero_name` = 'Sauron' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, how many of them have blue eyes?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`eye_colour_id` = T3.`id` WHERE T2.`publisher_name` = 'Marvel Comics' AND T3.`colour` = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of the superheroes from Marvel Comics?",
    "SELECT AVG(`height_cm`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"?",
    "SELECT (CAST(SUM(CASE WHEN T4.`power_name` = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.`id`)) * 100 AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` LEFT JOIN hero_power AS T3 ON T1.`id` = T3.`hero_id` LEFT JOIN superpower AS T4 ON T3.`power_id` = T4.`id` WHERE T2.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes did DC Comics publish?",
    "SELECT COUNT(*) FROM superhero WHERE `publisher_id` = ( SELECT `id` FROM publisher WHERE `publisher_name` = 'DC Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher published the slowest superhero?",
    "SELECT T3.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T1.`id` = ( SELECT T1.`hero_id` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T2.`attribute_name` = 'Speed' ORDER BY T1.`attribute_value` ASC LIMIT 1 )\t----- bird -----\tsuperhero"
  ],
  [
    "How many gold-eyed superheroes did Marvel Comics publish?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`colour` = 'Gold' AND T3.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher's name of Blue Beetle II?",
    "SELECT `publisher_name` FROM publisher WHERE `id` = ( SELECT `publisher_id` FROM superhero WHERE `superhero_name` = 'Blue Beetle II' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes with blonde hair are there?",
    "SELECT COUNT(*) FROM superhero WHERE `hair_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Blond' )\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the dumbest superhero?",
    "SELECT T3.`superhero_name` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` INNER JOIN superhero AS T3 ON T1.`hero_id` = T3.`id` WHERE T2.`attribute_name` = 'Intelligence' AND T1.`attribute_value` = ( SELECT MIN(T1.`attribute_value`) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T2.`attribute_name` = 'Intelligence' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is Copycat's race?",
    "SELECT T3.`race` FROM superhero AS T1 INNER JOIN race AS T3 ON T1.`race_id` = T3.`id` WHERE T1.`superhero_name` = 'Copycat'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have durability of less than 50?",
    "SELECT COUNT(DISTINCT T1.`hero_id`) FROM hero_attribute AS T1 WHERE T1.`attribute_id` = ( SELECT `id` FROM attribute WHERE `attribute_name` = 'Durability' ) AND T1.`attribute_value` < 50\t----- bird -----\tsuperhero"
  ],
  [
    "What are the names of the superheroes with the power of death touch?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`power_id` = ( SELECT `id` FROM superpower WHERE `power_name` = 'Death Touch' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes have a strength value of 100?",
    "SELECT COUNT(DISTINCT T1.`hero_id`) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` INNER JOIN gender AS T3 ON T2.`gender_id` = T3.`id` INNER JOIN attribute AS T4 ON T1.`attribute_id` = T4.`id` WHERE T3.`gender` = 'Female' AND T4.`attribute_name` = 'Strength' AND T1.`attribute_value` = 100\t----- bird -----\tsuperhero"
  ],
  [
    "What is the name of the superhero that has the most powers?",
    "SELECT S.superhero_name FROM superhero AS S INNER JOIN ( SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id ) AS power_counts ON S.id = power_counts.hero_id WHERE power_counts.power_count = ( SELECT MAX(power_count) FROM ( SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id ) AS inner_power_counts )\t----- bird -----\tsuperhero"
  ],
  [
    "How many vampire superheroes are there?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Vampire'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
    "SELECT (CAST((SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) AS REAL) / (SELECT COUNT(*) FROM superhero)) * 100 AS percentage_bad_superheroes, (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE S.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND P.publisher_name = 'Marvel Comics') AS bad_marvel_superheroes\t----- bird -----\tsuperhero"
  ],
  [
    "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
    "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') AS dc_count, (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') AS marvel_count, ((SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "Give the publisher ID of Star Trek.",
    "SELECT `id` FROM publisher WHERE `publisher_name` = 'Star Trek'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all superheroes.",
    "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes without full name?",
    "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye colour of superhero with superhero ID 75?",
    "SELECT T2.`colour` FROM colour AS T2 INNER JOIN superhero AS T1 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`id` = 75\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the superpowers of the superhero called Deathlok.",
    "SELECT SP.`power_name` FROM hero_power AS HP INNER JOIN superpower AS SP ON HP.`power_id` = SP.`id` WHERE HP.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Deathlok' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average weight of all female superheroes?",
    "SELECT AVG(`weight_kg`) FROM superhero WHERE `gender_id` = ( SELECT `id` FROM gender WHERE `gender` = 'Female' )\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five superpowers of male superheroes.",
    "SELECT DISTINCT T3.`power_name` FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` INNER JOIN superpower AS T3 ON T1.`power_id` = T3.`id` WHERE T2.`gender_id` = (SELECT `id` FROM gender WHERE `gender` = 'Male') LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "Give the name of the alien superheroes.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color.",
    "SELECT `superhero_name` FROM superhero WHERE `height_cm` BETWEEN 170 AND 190 AND `eye_colour_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpower of hero ID 56?",
    "SELECT T1.`power_name` FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` WHERE T2.`hero_id` = 56\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full name of Demi-God superheroes.",
    "SELECT `full_name` FROM superhero WHERE `race_id` = (SELECT `id` FROM race WHERE `race` = 'Demi-God') LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "How many bad superheroes are there?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Bad'\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the race of the superhero who weighed 169 kg.",
    "SELECT T3.`race` FROM superhero AS T1 INNER JOIN race AS T3 ON T1.`race_id` = T3.`id` WHERE T1.`weight_kg` = 169\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hair colour of the human superhero who is 185 cm tall.",
    "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.hair_colour_id = C.id INNER JOIN race AS R ON S.race_id = R.id WHERE S.height_cm = 185 AND R.race = 'human' AND S.hair_colour_id IS NOT NULL; -- Ensuring we only get superheroes with a defined hair colour\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye clolour of the heaviest superhero?",
    "SELECT c.colour FROM superhero AS s INNER JOIN colour AS c ON s.eye_colour_id = c.id WHERE s.id = ( SELECT id FROM superhero WHERE weight_kg = ( SELECT MAX(weight_kg) FROM superhero ) )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",
    "SELECT (CAST(SUM(CASE WHEN publisher_id = 13 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_marvel FROM superhero WHERE height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero"
  ],
  [
    "Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes.",
    "SELECT full_name FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Which power do superheroes have the most of?",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` GROUP BY T2.`power_name` HAVING COUNT(T1.`hero_id`) = ( SELECT MAX(power_count) FROM ( SELECT COUNT(T1.`hero_id`) AS power_count FROM hero_power AS T1 GROUP BY T1.`power_id` ) AS power_counts )\t----- bird -----\tsuperhero"
  ],
  [
    "Indicate the attribute value of superhero Abomination.",
    "SELECT T1.`attribute_value` FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`superhero_name` = 'Abomination'\t----- bird -----\tsuperhero"
  ],
  [
    "What are the superpowers of heroes with ID 1?",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have stealth power?",
    "SELECT COUNT(DISTINCT T1.`hero_id`) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'stealth'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the hero's full name with the highest attribute in strength?",
    "SELECT T3.`full_name` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` INNER JOIN superhero AS T3 ON T1.`hero_id` = T3.`id` WHERE T2.`attribute_name` = 'Strength' AND T1.`attribute_value` = ( SELECT MAX(T1_sub.`attribute_value`) FROM hero_attribute AS T1_sub INNER JOIN attribute AS T2_sub ON T1_sub.`attribute_id` = T2_sub.`id` WHERE T2_sub.`attribute_name` = 'Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average of superheroes with no skin colour?",
    "SELECT CAST((SELECT COUNT(*) FROM superhero WHERE skin_colour_id = 1) AS REAL) / (SELECT COUNT(*) FROM superhero) AS average_no_skin_colour\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes were published by Dark Horse Comics?",
    "SELECT COUNT(*) FROM superhero WHERE `publisher_id` = ( SELECT `id` FROM publisher WHERE `publisher_name` = 'Dark Horse Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the most durability published by Dark Horse Comics?",
    "-- SQL script type: SELECT SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') AND T3.attribute_value = ( SELECT MAX(T6.attribute_value) FROM hero_attribute AS T6 INNER JOIN superhero AS T4 ON T6.hero_id = T4.id INNER JOIN publisher AS T5 ON T4.publisher_id = T5.id WHERE T5.publisher_name = 'Dark Horse Comics' AND T6.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eyes colour of Abraham Sapien?",
    "SELECT `colour` FROM colour WHERE `id` = ( SELECT `eye_colour_id` FROM superhero WHERE `full_name` = 'Abraham Sapien' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the name of superheroes with flight power.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`power_id` = ( SELECT `id` FROM superpower WHERE `power_name` = 'Flight' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
    "SELECT T1.`eye_colour_id`, T1.`hair_colour_id`, T1.`skin_colour_id` FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Dark Horse Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
    "SELECT T1.`superhero_name`, T2.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`hair_colour_id` = T1.`skin_colour_id` AND T1.`hair_colour_id` = T1.`eye_colour_id`\t----- bird -----\tsuperhero"
  ],
  [
    "Which group does superhero A-Bomb belong to?",
    "SELECT T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`superhero_name` = 'A-Bomb'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of blue female superheroes among all female superheroes?",
    "SELECT (CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_blue_female FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hero name and race of Charles Chandler.",
    "SELECT T1.`superhero_name`, T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`full_name` = 'Charles Chandler'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the gender of Agent 13 hero?",
    "SELECT g.`gender` FROM superhero AS s INNER JOIN gender AS g ON s.`gender_id` = g.`id` WHERE s.`superhero_name` = 'Agent 13'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide superheroes' names who have the adaptation power.",
    "SELECT `superhero_name` FROM superhero WHERE `id` IN ( SELECT `hero_id` FROM hero_power WHERE `power_id` = ( SELECT `id` FROM superpower WHERE `power_name` = 'Adaptation' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "How many powers does Amazo hero have?",
    "SELECT COUNT(*) FROM hero_power WHERE hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Amazo' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the powers of Hunter Zolomon.",
    "SELECT T3.`power_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T1.`full_name` = 'Hunter Zolomon'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the heights of the heroes whose eye colours are amber.",
    "SELECT `height_cm` FROM superhero WHERE `eye_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Amber' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the heroes' names whose eyes and hair colours are both black.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`hair_colour_id` = T3.`id` WHERE T2.`colour` = 'Black' AND T3.`colour` = 'Black'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colours of the heroes whose skin colours are gold.",
    "SELECT T3.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`skin_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`eye_colour_id` = T3.`id` WHERE T2.`colour` = 'Gold'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full names of vampire heroes.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Vampire'\t----- bird -----\tsuperhero"
  ],
  [
    "Describe the names of neutral alignment superheroes.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have the highest attribute value in strength?",
    "SELECT COUNT(T1.`hero_id`) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T2.`attribute_name` = 'Strength' AND T1.`attribute_value` = ( SELECT MAX(T3.`attribute_value`) FROM hero_attribute AS T3 INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` WHERE T4.`attribute_name` = 'Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the race and alignment of Cameron Hicks?",
    "SELECT T3.`race`, T4.`alignment` FROM superhero AS T1 INNER JOIN race AS T3 ON T1.`race_id` = T3.`id` INNER JOIN alignment AS T4 ON T1.`alignment_id` = T4.`id` WHERE T1.`superhero_name` = 'Cameron Hicks'\t----- bird -----\tsuperhero"
  ],
  [
    "How many percent of female heroes were published by Marvel Comics?",
    "SELECT (CAST(SUM(CASE WHEN T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS female_percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Find the average weight of the heroes who are aliens.",
    "SELECT AVG(`weight_kg`) FROM superhero WHERE `race_id` = ( SELECT `id` FROM race WHERE `race` = 'Alien' )\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.",
    "SELECT (SELECT SUM(T1.`weight_kg`) FROM superhero AS T1 WHERE T1.`full_name` = 'Emil Blonsky') - (SELECT SUM(T2.`weight_kg`) FROM superhero AS T2 WHERE T2.`full_name` = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height for each superhero.",
    "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_name\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's superpower?",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Abomination' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the race of god/eternal, how many of them are male",
    "SELECT COUNT(*) FROM superhero AS T1 WHERE T1.`race_id` = (SELECT `id` FROM race WHERE `race` = 'god/eternal') AND T1.`gender_id` = (SELECT `id` FROM gender WHERE `gender` = 'Male')\t----- bird -----\tsuperhero"
  ],
  [
    "Which hero was the fastest?",
    "SELECT T3.`superhero_name` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` INNER JOIN superhero AS T3 ON T1.`hero_id` = T3.`id` WHERE T2.`attribute_name` = 'Speed' AND T1.`attribute_value` = ( SELECT MAX(T1.`attribute_value`) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T2.`attribute_name` = 'Speed' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have a neutral alignment?",
    "SELECT COUNT(*) FROM superhero WHERE `alignment_id` = ( SELECT `id` FROM alignment WHERE `alignment` = 'Neutral' )\t----- bird -----\tsuperhero"
  ],
  [
    "State all of 3-D Man's attributes along with their values.",
    "SELECT T2.`attribute_name`, T1.`attribute_value` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = '3-D Man' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which superheroes have blue eyes with brown hair?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 WHERE T1.`eye_colour_id` = (SELECT `id` FROM colour WHERE `colour` = 'Blue') AND T1.`hair_colour_id` = (SELECT `id` FROM colour WHERE `colour` = 'Brown')\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher for Hawkman, Karate Kid and Speedy?",
    "SELECT T2.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`superhero_name` = 'Hawkman' UNION SELECT T2.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`superhero_name` = 'Karate Kid' UNION SELECT T2.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`superhero_name` = 'Speedy'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes didn't have any publisher?",
    "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the percentage of superheroes with blue eyes.",
    "SELECT (CAST(SUM(CASE WHEN `eye_colour_id` = 7 THEN 1 ELSE 0 END) AS REAL) / COUNT(`superhero_name`)) * 100.0 AS percentage_blue_eyes FROM superhero\t----- bird -----\tsuperhero"
  ],
  [
    "Find the ratio between male superheroes and female superheroes.",
    "SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) * 1.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS gender_ratio\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the tallest superhero?",
    "SELECT superhero_name FROM superhero WHERE height_cm = ( SELECT MAX(height_cm) FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the power ID of cryokinesis?",
    "-- SQL Script Type: SELECT SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the name of superhero with superhero ID 294.",
    "SELECT `superhero_name` FROM superhero WHERE `id` = 294\t----- bird -----\tsuperhero"
  ],
  [
    "List the full names of superheroes with missing weight.",
    "SELECT T1.`full_name` FROM superhero AS T1 WHERE (T1.`weight_kg` = 0 OR T1.`weight_kg` IS NULL) AND T1.`full_name` IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name.",
    "SELECT C.`colour` FROM superhero AS S INNER JOIN colour AS C ON S.`eye_colour_id` = C.`id` WHERE S.`full_name` = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpowers of the superhero has Helen Parr as their full name?",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `full_name` = 'Helen Parr' )\t----- bird -----\tsuperhero"
  ],
  [
    "Find the race of the superhero who weighs 108kg and is 188cm tall.",
    "SELECT T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`weight_kg` = 108 AND T1.`height_cm` = 188\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher name of the superhero ID 38?",
    "SELECT T2.`publisher_name` FROM publisher AS T2 INNER JOIN superhero AS T1 ON T1.`publisher_id` = T2.`id` WHERE T1.`id` = 38\t----- bird -----\tsuperhero"
  ],
  [
    "What is the race of the superhero with maximum attribute value?",
    "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute )\t----- bird -----\tsuperhero"
  ],
  [
    "Give the alignment and superpowers of the superhero named Atom IV.",
    "SELECT T2.`alignment`, GROUP_CONCAT(T3.`power_name`) AS superpowers FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` LEFT JOIN hero_power AS T4 ON T1.`id` = T4.`hero_id` LEFT JOIN superpower AS T3 ON T4.`power_id` = T3.`id` WHERE T1.`superhero_name` = 'Atom IV' GROUP BY T2.`alignment`\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full names of superheroes with blue eyes.",
    "SELECT DISTINCT T1.`full_name` FROM superhero AS T1 JOIN colour AS C ON T1.`eye_colour_id` = C.`id` WHERE C.`colour` = 'Blue' AND T1.`full_name` IS NOT NULL LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all neutral superheroes.",
    "SELECT AVG(T3.`attribute_value`) FROM hero_attribute AS T3 WHERE T3.`hero_id` IN ( SELECT T1.`id` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Neutral' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the skin colour of the superheroes with 100 attribute value.",
    "SELECT T3.`colour` FROM superhero AS T2 INNER JOIN colour AS T3 ON T2.`skin_colour_id` = T3.`id` WHERE T2.`id` IN ( SELECT T1.`hero_id` FROM hero_attribute AS T1 WHERE T1.`attribute_value` = 100 )\t----- bird -----\tsuperhero"
  ],
  [
    "Count the good female superheroes.",
    "SELECT COUNT(*) FROM superhero WHERE `alignment_id` = 1 AND `gender_id` = 2\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the names of superheroes with attribute value between 75 to 80.",
    "SELECT T2.`superhero_name` FROM superhero AS T2 WHERE T2.`id` IN ( SELECT T1.`hero_id` FROM hero_attribute AS T1 WHERE T1.`attribute_value` BETWEEN 75 AND 80 )\t----- bird -----\tsuperhero"
  ],
  [
    "Give the race of the blue-haired male superhero.",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.`hair_colour_id` = T3.`id` INNER JOIN gender AS T4 ON T1.`gender_id` = T4.`id` WHERE T3.`colour` = 'blue' AND T4.`gender` = 'Male'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the bad superheroes, what is the percentage of female superheroes?",
    "SELECT (CAST((SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad' AND T3.gender = 'Female') AS REAL) / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad')) * 100.0 AS female_percentage\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
    "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE (T1.weight_kg = 0 OR T1.weight_kg IS NULL) AND T2.id = 7) - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE (T1.weight_kg = 0 OR T1.weight_kg IS NULL) AND T2.id = 1) AS eye_color_difference\t----- bird -----\tsuperhero"
  ],
  [
    "How strong is the Hulk?",
    "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Hulk' ) AND T2.attribute_name = 'Strength'\t----- bird -----\tsuperhero"
  ],
  [
    "List down Ajax's superpowers.",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Ajax' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many green-skinned villains are there in the superhero universe?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`skin_colour_id` = T2.`id` INNER JOIN alignment AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`colour` = 'Green' AND T3.`alignment` = 'Bad'\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes are in Marvel Comics?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Identify superheroes who can control wind and list their names in alphabetical order.",
    "SELECT T3.`superhero_name` FROM superhero AS T3 WHERE T3.`id` IN ( SELECT T1.`hero_id` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'Wind Control' ) ORDER BY T3.`superhero_name` ASC\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the gender of the superhero who has the ability of Phoenix Force.",
    "SELECT G.gender FROM superhero AS S INNER JOIN hero_power AS HP ON S.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id INNER JOIN gender AS G ON S.gender_id = G.id WHERE SP.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the heaviest superhero in DC Comics.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'DC Comics' AND T1.`weight_kg` = ( SELECT MAX(T3.`weight_kg`) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.`publisher_id` = T4.`id` WHERE T4.`publisher_name` = 'DC Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of a non-human superhero in Dark Horse Comics?",
    "SELECT AVG(`height_cm`) FROM superhero WHERE `race_id` <> ( SELECT `id` FROM race WHERE `race` = 'Human' ) AND `publisher_id` = ( SELECT `id` FROM publisher WHERE `publisher_name` = 'Dark Horse Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Count the fastest superheroes.",
    "SELECT COUNT(DISTINCT T1.`hero_id`) FROM hero_attribute AS T1 WHERE T1.`attribute_id` = ( SELECT `id` FROM attribute WHERE `attribute_name` = 'Speed' ) AND T1.`attribute_value` = 100\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
    "SELECT (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'DC Comics') AS dc_count, (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics') AS marvel_count, ((SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the weakest attribute of the Black Panther.",
    "SELECT T1.`attribute_name` FROM hero_attribute AS T2 INNER JOIN attribute AS T1 ON T2.`attribute_id` = T1.`id` WHERE T2.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Black Panther' ) ORDER BY T2.`attribute_value` ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's eye colour?",
    "SELECT T2.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`superhero_name` = 'Abomination'\t----- bird -----\tsuperhero"
  ],
  [
    "Name the tallest superhero.",
    "SELECT superhero_name FROM superhero WHERE height_cm = ( SELECT MAX(height_cm) FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Name the superhero, otherwise known as Charles Chandler.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 WHERE T1.`full_name` = 'Charles Chandler'\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
    "SELECT (CAST(SUM(CASE WHEN T1.`gender_id` = (SELECT `id` FROM gender WHERE `gender` = 'Female') THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS female_percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'George Lucas'\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
    "SELECT (CAST(SUM(CASE WHEN T1.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Good') THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100.0 AS percentage_good_superheroes FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes that have John as their first name?",
    "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the hero ID of superhero with the lowest attribute value.",
    "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full name of the superhero named Alien.",
    "SELECT `full_name` FROM superhero WHERE `superhero_name` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`weight_kg` < 100 AND T2.`colour` = 'Brown' AND T1.`full_name` IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "List the attribute value of the superhero named Aquababy.",
    "SELECT T1.`attribute_value` FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`superhero_name` = 'Aquababy'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the weight and race of the superhero with superhero ID 40.",
    "SELECT T1.`weight_kg`, T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`id` = 40\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height of all neutral superheroes.",
    "SELECT AVG(height_cm) AS average_height FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment = 'Neutral' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the hero ID of superheroes have intellegence as their power.",
    "SELECT T1.`hero_id` FROM hero_attribute AS T1 WHERE T1.`attribute_id` = ( SELECT `id` FROM attribute WHERE `attribute_name` = 'Intelligence' )\t----- bird -----\tsuperhero"
  ],
  [
    "Give the eye colour of Blackwulf.",
    "SELECT T2.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`superhero_name` = 'Blackwulf'\t----- bird -----\tsuperhero"
  ],
  [
    "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
    "SELECT SP.power_name FROM superhero AS SH INNER JOIN hero_power AS HP ON SH.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id WHERE SH.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the reference names of the drivers who are eliminated in the first period in race number 18.",
    "SELECT T3.`driverRef` FROM drivers AS T3 WHERE T3.`driverId` IN ( SELECT T1.`driverId` FROM qualifying AS T1 WHERE T1.`raceId` = 18 AND T1.`q1` IS NOT NULL AND T1.`q1` = ( SELECT MAX(T2.`q1`) FROM qualifying AS T2 WHERE T2.`raceId` = 18 ) )\t----- bird -----\tformula_1"
  ],
  [
    "What is the surname of the driver with the best lap time in race number 19 in the second period?",
    "SELECT T1.surname FROM drivers AS T1 WHERE T1.driverId = ( SELECT driverId FROM qualifying WHERE raceId = 19 AND q2 = ( SELECT MIN(q2) FROM qualifying WHERE raceId = 19 ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the year during which the race is held on circuits in Shanghai.",
    "SELECT DISTINCT `year` FROM races WHERE `circuitId` IN ( SELECT `circuitId` FROM circuits WHERE `location` = 'Shanghai' )\t----- bird -----\tformula_1"
  ],
  [
    "Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found?",
    "SELECT `url` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `name` = 'Circuit de Barcelona-Catalunya' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the name of the race held on the circuits in Germany.",
    "SELECT T2.`name` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`country` = 'Germany'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the positions of the circuits built by the constructor Renault.",
    "SELECT DISTINCT r.position FROM results AS r WHERE r.raceId IN ( SELECT raceId FROM constructorResults WHERE constructorId = ( SELECT constructorId FROM constructors WHERE name = 'Renault' ) )\t----- bird -----\tformula_1"
  ],
  [
    "How many races in the year 2010 are held on grand prixs outside Asia and Europe?",
    "SELECT COUNT(*) FROM races AS T1 WHERE T1.`year` = 2010 AND T1.`circuitId` IN ( SELECT DISTINCT T1.`circuitId` FROM circuits AS T1 WHERE T1.`country` NOT IN ('Japan', 'China', 'Malaysia', 'Singapore', 'India', 'South Korea', 'France', 'Germany', 'Italy', 'Spain', 'UK', 'Belgium', 'Netherlands', 'Austria', 'Switzerland', 'Portugal', 'Monaco') )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the names of the races held on the circuits in Spain.",
    "SELECT T1.`name` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`country` = 'Spain'\t----- bird -----\tformula_1"
  ],
  [
    "What is the location coordinates of the circuits for Australian grand prix?",
    "-- SQL Script Type: SELECT SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Australian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Where can I find the information about the races held on Sepang International Circuit?",
    "SELECT `url` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'sepang' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time of the races held on Sepang International Circuit.",
    "SELECT T1.`date` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`circuitRef` = 'sepang'\t----- bird -----\tformula_1"
  ],
  [
    "Give the coordinate position for Abu Dhabi Grand Prix.",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitRef` = 'yas_marina'\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the constructor which got 1 point in the race No. 24 from?",
    "SELECT T2.nationality FROM constructors AS T2 WHERE T2.constructorId = ( SELECT constructorId FROM results WHERE raceId = 24 AND points = 1 )\t----- bird -----\tformula_1"
  ],
  [
    "What's Bruno Senna's Q1 result in the qualifying race No. 354?",
    "SELECT q1 FROM qualifying WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' ) AND raceId = 354\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?",
    "SELECT T2.nationality FROM drivers AS T2 JOIN qualifying AS T1 ON T2.driverId = T1.driverId WHERE T1.raceId = 355 AND T1.q2 = '1:40.000'\t----- bird -----\tformula_1"
  ],
  [
    "What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903?",
    "SELECT number FROM drivers WHERE driverId = ( SELECT driverId FROM qualifying WHERE raceId = 903 AND position = 3 )\t----- bird -----\tformula_1"
  ],
  [
    "For the Bahrain Grand Prix in 2007, how many drivers not finished the game?",
    "SELECT COUNT(*) FROM results AS R INNER JOIN status AS S ON R.`statusId` = S.`statusId` WHERE R.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2007 AND `name` = 'Bahrain Grand Prix' ) AND S.`status` = 'Withdrew' -- Assuming 'Withdrew' indicates not finishing\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT * FROM seasons WHERE `year` = ( SELECT `year` FROM races WHERE `raceId` = 901 )\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened on 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(DISTINCT `driverId`) AS finished_drivers FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `date` = '2015-11-29' ) AND `time` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 592, who is the oldest?",
    "SELECT T2.`forename`, T2.`surname`, T2.`dob` FROM drivers AS T2 WHERE T2.`driverId` = ( SELECT T2.`driverId` FROM drivers AS T2 WHERE T2.`driverId` IN ( SELECT T1.`driverId` FROM results AS T1 WHERE T1.`raceId` = 592 AND T1.`time` IS NOT NULL ) ORDER BY T2.`dob` ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.",
    "SELECT d.url FROM drivers AS d JOIN lapTimes AS lt ON d.driverId = lt.driverId WHERE lt.raceId = 161 AND lt.time = '0:01:27'\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed in race No.933, where does he come from?",
    "SELECT T1.nationality FROM drivers AS T1 WHERE T1.driverId = ( SELECT driverId FROM results WHERE raceId = 933 AND fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933 ) )\t----- bird -----\tformula_1"
  ],
  [
    "Where is Malaysian Grand Prix held? Give the location coordinates.",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM races WHERE `name` = 'Malaysian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "For the constructor which got the highest point in the race No. 9 , what is its introduction website?",
    "SELECT T2.`url` FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`raceId` = 9 ORDER BY T1.`points` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What's Lucas di Grassi's Q1 result in the race No. 345?",
    "SELECT q1 FROM qualifying WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi' ) AND raceId = 345\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?",
    "SELECT D.nationality FROM drivers AS D JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.raceId = 347 AND Q.q2 = '0:01:15'\t----- bird -----\tformula_1"
  ],
  [
    "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?",
    "SELECT T2.`code` FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`raceId` = 45 AND T1.`q3` = '1:33.000'\t----- bird -----\tformula_1"
  ],
  [
    "What is the actual finish time for Bruce McLaren in the race No.743?",
    "SELECT time FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren' ) AND raceId = 743\t----- bird -----\tformula_1"
  ],
  [
    "Who finished second in the San Marino Grand Prix in 2006?",
    "SELECT CONCAT(T1.`forename`, ' ', T1.`surname`) AS driver_name FROM drivers AS T1 WHERE T1.`driverId` = ( SELECT `driverId` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `name` = 'San Marino Grand Prix' AND `year` = 2006 ) AND `position` = 2 )\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT * FROM seasons WHERE `year` = ( SELECT `year` FROM races WHERE `raceId` = 901 )\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened in 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(*) FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `date` = '2015-11-29' ) AND `position` != 'R'\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 872, who is the youngest?",
    "SELECT T2.driverId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL ORDER BY T2.dob DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Who was the driver that got the best lap time in the race No. 348? Give his full name.",
    "SELECT CONCAT(`forename`, ' ', `surname`) AS full_name FROM drivers WHERE `driverId` = ( SELECT `driverId` FROM lapTimes WHERE `raceId` = 348 AND `time` = ( SELECT MIN(`time`) FROM lapTimes WHERE `raceId` = 348 ) )\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed, what is his nationality?",
    "SELECT nationality FROM drivers WHERE driverId = ( SELECT driverId FROM results WHERE fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
    "SELECT (SELECT `fastestLapSpeed` FROM results WHERE `raceId` = 853 AND `driverId` = (SELECT `driverId` FROM drivers WHERE `forename` = 'Paul' AND `surname` = 'di Resta')) AS `lapSpeed853`, (SELECT `fastestLapSpeed` FROM results WHERE `raceId` = 854 AND `driverId` = (SELECT `driverId` FROM drivers WHERE `forename` = 'Paul' AND `surname` = 'di Resta')) AS `lapSpeed854`, ((SELECT `fastestLapSpeed` FROM results WHERE `raceId` = 853 AND `driverId` = (SELECT `driverId` FROM drivers WHERE `forename` = 'Paul' AND `surname` = 'di Resta')) - (SELECT `fastestLapSpeed` FROM results WHERE `raceId` = 854 AND `driverId` = (SELECT `driverId` FROM drivers WHERE `forename` = 'Paul' AND `surname` = 'di Resta'))) / (SELECT `fastestLapSpeed` FROM results WHERE `raceId` = 854 AND `driverId` = (SELECT `driverId` FROM drivers WHERE `forename` = 'Paul' AND `surname` = 'di Resta')) * 100 AS `percentageFaster`\t----- bird -----\tformula_1"
  ],
  [
    "For the drivers who took part in the race in 1983/7/16, what's their race completion rate?",
    "SELECT (COUNT(CASE WHEN `time` IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS completion_rate FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `date` = '1983-07-16' )\t----- bird -----\tformula_1"
  ],
  [
    "Which year was the first Singapore Grand Prix?",
    "-- SQL Type: SELECT SELECT MIN(r.year) AS first_year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.circuitRef = 'singapore' AND r.year IS NOT NULL GROUP BY c.circuitRef\t----- bird -----\tformula_1"
  ],
  [
    "How many races were there in 2005? Name all the races in descending order.",
    "SELECT name FROM races WHERE year = 2005 ORDER BY raceId DESC\t----- bird -----\tformula_1"
  ],
  [
    "Name the first race recorded. What are the other races that happened within the same month and year of that race.",
    "WITH FirstRace AS ( SELECT MIN(`date`) AS first_race_date FROM races WHERE `date` IS NOT NULL ) SELECT `name`, `date` FROM races WHERE `date` IS NOT NULL AND strftime('%Y', `date`) = (SELECT strftime('%Y', first_race_date) FROM FirstRace) AND strftime('%m', `date`) = (SELECT strftime('%m', first_race_date) FROM FirstRace) AND `date` != (SELECT first_race_date FROM FirstRace)\t----- bird -----\tformula_1"
  ],
  [
    "State the name and date of the last round of race in year 1999.",
    "SELECT name, date FROM races WHERE year = 1999 AND round = ( SELECT MAX(round) FROM races WHERE year = 1999 )\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the most number of races?",
    "SELECT year FROM ( SELECT year, COUNT(raceId) AS race_count FROM races GROUP BY year ) AS race_counts ORDER BY race_count DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Name the races in year 2017 that are not hosted in year 2000.",
    "SELECT `name` FROM races WHERE `year` = 2017 AND `raceId` NOT IN ( SELECT `raceId` FROM races WHERE `year` = 2000 )\t----- bird -----\tformula_1"
  ],
  [
    "In which country was the first European Grand Prix hosted? Name the circuit and location.",
    "SELECT T1.circuitRef, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = ( SELECT MIN(year) FROM races WHERE name LIKE '%European Grand Prix%' )\t----- bird -----\tformula_1"
  ],
  [
    "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?",
    "SELECT MAX(T1.`year`) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`name` = 'British Grand Prix' AND T2.`circuitRef` = 'brands_hatch'\t----- bird -----\tformula_1"
  ],
  [
    "How many seasons has Silverstone Circuit hosted the United Kindom grand prix?",
    "SELECT COUNT(DISTINCT T1.`year`) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`circuitRef` = 'silverstone' AND T1.`name` = 'British Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.",
    "SELECT T2.`forename`, T2.`surname` FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2010 AND `name` = 'Singapore Grand Prix' ) ORDER BY T1.`position`\t----- bird -----\tformula_1"
  ],
  [
    "State the driver with the most points scored. Find his full name with that points.",
    "SELECT CONCAT(T1.forename, ' ', T1.surname) AS full_name FROM drivers AS T1 WHERE T1.driverId IN ( SELECT driverId FROM driverStandings WHERE points = ( SELECT MAX(points) FROM driverStandings ) )\t----- bird -----\tformula_1"
  ],
  [
    "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.",
    "SELECT T3.`forename`, T3.`surname`, T2.`points` FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN drivers AS T3 ON T1.`driverId` = T3.`driverId` WHERE T2.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2017 AND `name` = 'Chinese Grand Prix' ) ORDER BY T1.`position` ASC LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "What is the best lap time recorded? List the driver and race with such recorded lap time.",
    "SELECT D.forename, D.surname, R.name AS race_name, MIN(LT.time) AS best_lap_time FROM lapTimes AS LT INNER JOIN drivers AS D ON LT.driverId = D.driverId INNER JOIN races AS R ON LT.raceId = R.raceId WHERE LT.time IS NOT NULL GROUP BY D.driverId, R.raceId ORDER BY best_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix?",
    "SELECT AVG(`time`) FROM lapTimes WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 AND `name` = 'Chinese Grand Prix' ) AND `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Sebastian' AND `surname` = 'Vettel' )\t----- bird -----\tformula_1"
  ],
  [
    "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
    "SELECT (CAST(COUNT(T1.`raceId`) AS REAL) / (SELECT COUNT(T2.`raceId`) FROM results AS T2 INNER JOIN drivers AS T3 ON T2.`driverId` = T3.`driverId` INNER JOIN races AS T4 ON T2.`raceId` = T4.`raceId` WHERE T3.`surname` = 'Hamilton' AND T4.`year` >= 2010)) * 100 AS percentage FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`surname` = 'Hamilton' AND T3.`year` >= 2010 AND T1.`position` > 1\t----- bird -----\tformula_1"
  ],
  [
    "Name the driver with the most winning. Mention his nationality and what is his average point scores.",
    "WITH MostWinningDriver AS ( SELECT T1.`driverId`, COUNT(T1.`wins`) AS win_count FROM driverStandings AS T1 GROUP BY T1.`driverId` ORDER BY win_count DESC LIMIT 1 ) SELECT T3.`forename`, T3.`surname`, T3.`nationality`, AVG(T2.`points`) AS average_points FROM MostWinningDriver AS T1 JOIN drivers AS T3 ON T1.`driverId` = T3.`driverId` JOIN driverStandings AS T2 ON T1.`driverId` = T2.`driverId` GROUP BY T3.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "How old is the youngest Japanese driver? What is his name?",
    "SELECT T1.`forename`, T1.`surname`, (2022 - strftime('%Y', T1.`dob`) + 1) AS age FROM drivers AS T1 WHERE T1.`dob` = ( SELECT MAX(T2.`dob`) FROM drivers AS T2 WHERE T2.`nationality` = 'Japanese' )\t----- bird -----\tformula_1"
  ],
  [
    "List circuits which host 4 f1 races from year 1990 to 2000.",
    "SELECT T1.`circuitRef`, T1.`name` FROM circuits AS T1 INNER JOIN ( SELECT `circuitId` FROM ( SELECT `circuitId`, COUNT(*) AS race_count FROM races WHERE `year` BETWEEN 1990 AND 2000 GROUP BY `circuitId` ) AS race_counts WHERE race_count = 4 ) AS T2 ON T1.`circuitId` = T2.`circuitId`\t----- bird -----\tformula_1"
  ],
  [
    "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.",
    "SELECT T1.`name`, T1.`location`, T2.`name` AS race_name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`country` = 'USA' AND T2.`year` = 2006\t----- bird -----\tformula_1"
  ],
  [
    "Name the races along with its circuit name and location for f1 races hosted in September 2005.",
    "SELECT T1.`name` AS race_name, T2.`circuitRef`, T2.`location` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE strftime('%Y', T1.`date`) = '2005' AND strftime('%m', T1.`date`) = '09'\t----- bird -----\tformula_1"
  ],
  [
    "Which race was Alex Yoong in when he was in track number less than 10?",
    "SELECT T3.`name`, T3.`year`, T3.`round` FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`forename` = 'Alex' AND T2.`surname` = 'Yoong' AND T1.`position` < 10\t----- bird -----\tformula_1"
  ],
  [
    "How many times did Michael Schumacher won from races hosted in Sepang International Circuit?",
    "SELECT COUNT(*) FROM results WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Michael' AND `surname` = 'Schumacher' ) AND `raceId` IN ( SELECT `raceId` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'sepang' ) ) AND `points` = ( SELECT MAX(`points`) FROM results WHERE `raceId` IN ( SELECT `raceId` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'sepang' ) ) )\t----- bird -----\tformula_1"
  ],
  [
    "State the race and year of race in which Michael Schumacher had his fastest lap.",
    "SELECT T2.name, T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.raceId = ( SELECT T1.raceId FROM results AS T1 WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher' ) AND T1.fastestLap IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "What is Eddie Irvine's average points scored in year 2000?",
    "SELECT AVG(`points`) FROM driverStandings WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Eddie' AND `surname` = 'Irvine' ) AND `raceId` IN ( SELECT `raceId` FROM races WHERE `year` = 2000 )\t----- bird -----\tformula_1"
  ],
  [
    "Which was Lewis Hamilton first race? What was his points recorded for his first race event?",
    "SELECT T2.`points` FROM driverStandings AS T2 INNER JOIN races AS T1 ON T2.`raceId` = T1.`raceId` INNER JOIN drivers AS T3 ON T2.`driverId` = T3.`driverId` WHERE T3.`forename` = 'Lewis' AND T3.`surname` = 'Hamilton' AND T1.`raceId` = ( SELECT T4.`raceId` FROM races AS T4 INNER JOIN driverStandings AS T5 ON T4.`raceId` = T5.`raceId` INNER JOIN drivers AS T6 ON T5.`driverId` = T6.`driverId` WHERE T6.`forename` = 'Lewis' AND T6.`surname` = 'Hamilton' AND T4.`year` = ( SELECT MIN(T7.`year`) FROM races AS T7 INNER JOIN driverStandings AS T8 ON T7.`raceId` = T8.`raceId` INNER JOIN drivers AS T9 ON T8.`driverId` = T9.`driverId` WHERE T9.`forename` = 'Lewis' AND T9.`surname` = 'Hamilton' ) )\t----- bird -----\tformula_1"
  ],
  [
    "List all races in 2017 and the hosting country order by date of the event.",
    "SELECT T1.`date`, T2.`country` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`year` = 2017 ORDER BY T1.`date`\t----- bird -----\tformula_1"
  ],
  [
    "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.",
    "SELECT r.name, r.year, c.location FROM results AS res INNER JOIN races AS r ON res.raceId = r.raceId INNER JOIN circuits AS c ON r.circuitId = c.circuitId WHERE res.laps = ( SELECT MAX(laps) FROM results )\t----- bird -----\tformula_1"
  ],
  [
    "Among all European Grand Prix races, what is the percentage of the races were hosted in Germany?",
    "SELECT (CAST(COUNT(CASE WHEN circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Germany' ) THEN 1 END) AS REAL) / COUNT(*)) * 100 AS percentage FROM races WHERE name = 'European Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What's the location coordinates of Silverstone Circuit?",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitRef` = 'silverstone'\t----- bird -----\tformula_1"
  ],
  [
    "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?",
    "SELECT `name` FROM circuits WHERE `lat` = ( SELECT MAX(lat) AS max_latitude FROM ( SELECT `lat` FROM circuits WHERE `name` = 'Silverstone Circuit' UNION ALL SELECT `lat` FROM circuits WHERE `name` = 'Hockenheimring' UNION ALL SELECT `lat` FROM circuits WHERE `name` = 'Hungaroring' ) AS latitudes )\t----- bird -----\tformula_1"
  ],
  [
    "What's the reference name of Marina Bay Street Circuit?",
    "SELECT `circuitRef` FROM circuits WHERE `name` = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "In which country can I find the circuit with the highest altitude?",
    "SELECT country FROM circuits WHERE alt = ( SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers don't have a code?",
    "SELECT COUNT(*) FROM drivers WHERE `driverRef` IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the oldest driver from?",
    "SELECT T1.`nationality` FROM drivers AS T1 WHERE T1.`driverId` = ( SELECT T2.`driverId` FROM drivers AS T2 WHERE T2.`dob` = ( SELECT MIN(T3.`dob`) FROM drivers AS T3 WHERE T3.`dob` IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the surnames of all the Italian drivers.",
    "SELECT `surname` FROM drivers WHERE `nationality` = 'Italian'\t----- bird -----\tformula_1"
  ],
  [
    "Which website should I go to if I want to know more about Anthony Davidson?",
    "SELECT `url` FROM drivers WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'\t----- bird -----\tformula_1"
  ],
  [
    "What's Lewis Hamilton's reference name?",
    "SELECT `driverRef` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "Which circuit did the 2009 Spanish Grand Prix use?",
    "SELECT T1.`circuitRef`, T1.`location` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`year` = 2009 AND T2.`name` = 'Spanish Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Please list all the years that Silverstone Circuit was used in a Formula_1 race.",
    "SELECT DISTINCT `year` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'silverstone' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give more information about the Formula_1 races that used the Silverstone Circuit.",
    "SELECT * FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'silverstone' )\t----- bird -----\tformula_1"
  ],
  [
    "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?",
    "SELECT `date` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'yas_marina' ) AND `year` BETWEEN 2010 AND 2019\t----- bird -----\tformula_1"
  ],
  [
    "How many Formula_1 races took place on the circuits in Italy?",
    "SELECT COUNT(*) FROM races WHERE `circuitId` IN ( SELECT `circuitId` FROM circuits WHERE `country` = 'Italy' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.",
    "-- SQL Type: SELECT SELECT r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.circuitRef = 'barcelona-catalunya';\t----- bird -----\tformula_1"
  ],
  [
    "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.",
    "SELECT `url` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM races WHERE `year` = 2009 AND `name` = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "What's the fastest lap time ever in a race for Lewis Hamilton?",
    "SELECT MIN(`fastestLapTime`) FROM results WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 WHERE T1.driverId IN ( SELECT driverId FROM results WHERE fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "Which driver ranked the first in the Australian Grand Prix in 2008? Please give his reference name.",
    "SELECT `driverRef` FROM drivers WHERE `driverId` = ( SELECT `driverId` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `position` = 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the Formula_1 races that Lewis Hamilton participated.",
    "SELECT T3.name, T2.date FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race did Lewis Hamilton rank the highest?",
    "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T1.rank = ( SELECT MIN(rank) FROM results WHERE driverId = T3.driverId )\t----- bird -----\tformula_1"
  ],
  [
    "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
    "SELECT MAX(`fastestLapSpeed`) FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 AND `name` = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "In which years did Lewis Hamilton participate in a Formula_1 race?",
    "SELECT DISTINCT T2.year FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.year ASC\t----- bird -----\tformula_1"
  ],
  [
    "What was Lewis Hamilton's final rank in the 2008 Australian Grand Prix?",
    "SELECT `positionOrder` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Which driver was in the no. 4 grid formation when starting the race in 2008's Australian Grand Prix? Please give his forename and surname.",
    "SELECT `forename`, `surname` FROM drivers WHERE `driverId` = ( SELECT `driverId` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `grid` = 4 )\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
    "SELECT COUNT(*) FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `time` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?",
    "SELECT MIN(T1.`fastestLapTime`) AS `fastestLap` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN drivers AS T3 ON T1.`driverId` = T3.`driverId` WHERE T2.`year` = 2008 AND T2.`name` = 'Australian Grand Prix' AND T3.`forename` = 'Lewis' AND T3.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What's the finish time for the driver who ranked second in 2008's Australian Grand Prix?",
    "SELECT `time` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `driverId` = ( SELECT `driverId` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `position` = 2 )\t----- bird -----\tformula_1"
  ],
  [
    "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?",
    "-- SQL Type: SELECT SELECT D.forename, D.surname, D.url FROM results AS R JOIN drivers AS D ON R.driverId = D.driverId WHERE R.raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND R.position = 1\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers from the USA participated in the 2008 Australian Grand Prix?",
    "SELECT COUNT(DISTINCT T1.`driverId`) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND T2.`nationality` = 'American'\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers that finished the race in the 2008 Australian Grand Prix, how many of them have participated in Formula_1 races?",
    "SELECT COUNT(DISTINCT `driverId`) FROM results WHERE `driverId` IN ( SELECT `driverId` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND `time` IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?",
    "SELECT SUM(points) AS total_points FROM driverStandings WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
    "SELECT AVG( CAST(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS REAL) * 60 + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1) AS REAL) ) AS average_fastest_lap_time_seconds FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND fastestLapTime IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix?",
    "SELECT CAST(COUNT(DISTINCT T1.driverId) AS REAL) / (SELECT COUNT(DISTINCT T2.driverId) FROM results AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix') AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
    "SELECT (CAST((SELECT T1.`time` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2008 AND T2.`name` = 'Australian Grand Prix' AND T1.`position` = 1 AND T1.`time` IS NOT NULL) AS REAL) - CAST((SELECT T1.`time` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2008 AND T2.`name` = 'Australian Grand Prix' AND T1.`time` IS NOT NULL ORDER BY T1.`position` DESC LIMIT 1) AS REAL)) / CAST((SELECT T1.`time` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2008 AND T2.`name` = 'Australian Grand Prix' AND T1.`time` IS NOT NULL ORDER BY T1.`position` DESC LIMIT 1) AS REAL) * 100 AS percentage_difference\t----- bird -----\tformula_1"
  ],
  [
    "How many circuits are there in Melbourne, Australia?",
    "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the US circuits.",
    "SELECT `lat`, `lng` FROM circuits WHERE `country` = 'USA'\t----- bird -----\tformula_1"
  ],
  [
    "How many British drivers were born after 1980?",
    "SELECT COUNT(*) FROM drivers WHERE `nationality` = 'British' AND `dob` > '1980-01-01'\t----- bird -----\tformula_1"
  ],
  [
    "What are the average points of British constructors?",
    "SELECT AVG(T2.points) AS average_points FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor has the highest point?",
    "SELECT T1.constructorId, T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = ( SELECT MAX(points) FROM constructorStandings )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the constructor names with 0 points at race 291.",
    "SELECT T2.`name` FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`raceId` = 291 AND T1.`points` = 0\t----- bird -----\tformula_1"
  ],
  [
    "How many Japanese constructors have 0 points in 2 races?",
    "SELECT COUNT(*) FROM ( SELECT T1.constructorId FROM constructors AS T1 LEFT JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId AND T2.points = 0 WHERE T1.nationality = 'Japanese' GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2 ) AS subquery\t----- bird -----\tformula_1"
  ],
  [
    "Which constructors have been ranked 1?",
    "SELECT DISTINCT T2.`name` FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`position` = 1\t----- bird -----\tformula_1"
  ],
  [
    "How many French constructors have a lap number of over 50?",
    "SELECT COUNT(DISTINCT T2.constructorId) FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'French' AND T1.laps > 50\t----- bird -----\tformula_1"
  ],
  [
    "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
    "SELECT (SELECT COUNT(DISTINCT T1.`driverId`) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`nationality` = 'Japanese' AND T3.`year` BETWEEN 2007 AND 2009 AND T1.`time` IS NOT NULL) * 100.0 / (SELECT COUNT(DISTINCT T1.`driverId`) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`nationality` = 'Japanese' AND T3.`year` BETWEEN 2007 AND 2009) AS completion_percentage\t----- bird -----\tformula_1"
  ],
  [
    "What is the average time in seconds of champion for each year?",
    "SELECT -- SQL Type: SELECT T1.year, AVG( CAST(SUBSTR(T2.time, 1, INSTR(T2.time, ':') - 1) AS INTEGER) * 3600 + CAST(SUBSTR(T2.time, INSTR(T2.time, ':') + 1, INSTR(T2.time, ':', INSTR(T2.time, ':') + 1) - INSTR(T2.time, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.time, INSTR(T2.time, ':', INSTR(T2.time, ':') + 1) + 1, 3) AS INTEGER) -- Extract milliseconds correctly ) AS average_time_seconds FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.position = 1 AND T2.time IS NOT NULL GROUP BY T1.year\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN ( SELECT driverId FROM driverStandings WHERE position = 2 ) AS T2 ON T1.driverId = T2.driverId WHERE T1.dob > '1975-01-01'\t----- bird -----\tformula_1"
  ],
  [
    "How many Italian drivers haven't finished the race?",
    "SELECT COUNT(DISTINCT T1.driverId) AS ItalianDriversNotFinished FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'Italian' AND T1.time IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which driver has the fastest lap time? Please give their forenames and surnames.",
    "SELECT T2.forename, T2.surname FROM drivers AS T2 WHERE T2.driverId = ( SELECT T1.driverId FROM lapTimes AS T1 WHERE T1.milliseconds = ( SELECT MIN(milliseconds) FROM lapTimes WHERE milliseconds IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "What is the fastest lap number of the champion in 2009?",
    "SELECT T2.lap FROM lapTimes AS T2 INNER JOIN ( SELECT T3.driverId FROM driverStandings AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T4.year = 2009 AND T3.position = 1 ) AS T1 ON T2.driverId = T1.driverId WHERE T2.time IS NOT NULL ORDER BY T2.time ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average of fastest lap speed in the 2009 Spanish Grand Prix race?",
    "SELECT AVG(`fastestLapSpeed`) FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 AND `name` = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Which race has the shortest actual finishing time? Please give the name and year.",
    "SELECT T2.`name`, T2.`year` FROM races AS T2 WHERE T2.`raceId` = ( SELECT T1.`raceId` FROM results AS T1 WHERE T1.`milliseconds` = ( SELECT MIN(milliseconds) FROM results WHERE milliseconds IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
    "SELECT (SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.dob < '1985-01-01' AND T3.year BETWEEN 2000 AND 2005 AND T2.lap > 50) * 100.0 / (SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005) AS percentage\t----- bird -----\tformula_1"
  ],
  [
    "How many French drivers who obtain the laptime less than 02:00.00?",
    "SELECT COUNT(DISTINCT T1.`driverId`) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`nationality` = 'French' AND CAST(SUBSTR(T1.`time`, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T1.`time`, 4, 2) AS INTEGER) < 120\t----- bird -----\tformula_1"
  ],
  [
    "List out the code for drivers who have nationality in America.",
    "-- SQL Type: SELECT SELECT `code` FROM `drivers` WHERE `nationality` = 'American' AND `nationality` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "List out the Id number of races which were hold in 2009.",
    "SELECT `raceId` FROM races WHERE `year` = 2009\t----- bird -----\tformula_1"
  ],
  [
    "How many driver participated in race ID number 18?",
    "SELECT COUNT(DISTINCT driverId) AS driver_count FROM results WHERE raceId = 18\t----- bird -----\tformula_1"
  ],
  [
    "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?",
    "SELECT COUNT(*) FROM ( SELECT T1.`driverId` FROM drivers AS T1 WHERE T1.`dob` IS NOT NULL ORDER BY T1.`dob` DESC LIMIT 3 ) AS YoungestDrivers WHERE YoungestDrivers.`driverId` IN ( SELECT T2.`driverId` FROM drivers AS T2 WHERE T2.`nationality` = 'Dutch' )\t----- bird -----\tformula_1"
  ],
  [
    "What is reference name of Robert Kubica?",
    "SELECT `driverRef` FROM drivers WHERE `forename` = 'Robert' AND `surname` = 'Kubica'\t----- bird -----\tformula_1"
  ],
  [
    "How many Australian drivers who were born in 1980?",
    "SELECT COUNT(*) FROM drivers WHERE `nationality` = 'Australian' AND strftime('%Y', `dob`) = '1980'\t----- bird -----\tformula_1"
  ],
  [
    "List out top 3 German drivers who were born from 1980-1990 and have the earliest lap time.",
    "SELECT T2.driverId, T2.forename, T2.surname, MIN(T1.milliseconds) AS earliest_lap_time FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND T2.dob BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T2.driverId, T2.forename, T2.surname ORDER BY earliest_lap_time ASC LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "Please state the reference name of the oldest German driver.",
    "SELECT T1.`driverRef` FROM drivers AS T1 WHERE T1.`driverId` = ( SELECT T2.`driverId` FROM drivers AS T2 WHERE T2.`dob` = ( SELECT MIN(T3.`dob`) FROM drivers AS T3 WHERE T3.`nationality` = 'German' ) AND T2.`nationality` = 'German' )\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.",
    "-- SQL Type: SELECT SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob IS NOT NULL AND strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL AND T2.fastestLapTime = ( SELECT MAX(T3.fastestLapTime) FROM results AS T3 WHERE T3.fastestLapTime IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "List out top 10 Spanish drivers who were born before 1982 and have the latest lap time.",
    "SELECT T1.`forename`, T1.`surname`, T2.`time` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'Spanish' AND strftime('%Y', T1.`dob`) < '1982' AND T2.`time` = ( SELECT MAX(T3.`time`) FROM lapTimes AS T3 WHERE T3.`driverId` IN ( SELECT T1.`driverId` FROM drivers AS T1 WHERE T1.`nationality` = 'Spanish' AND strftime('%Y', T1.`dob`) < '1982' ) ) LIMIT 10\t----- bird -----\tformula_1"
  ],
  [
    "State the racing year which has the fastest lap time?",
    "SELECT T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapTime = ( SELECT MAX(fastestLapTime) FROM results WHERE fastestLapTime IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the lowest speed of lap time?",
    "-- SQL Type: SELECT SELECT T3.year FROM races AS T3 INNER JOIN results AS T2 ON T3.raceId = T2.raceId INNER JOIN lapTimes AS T1 ON T1.raceId = T3.raceId WHERE T1.milliseconds IS NOT NULL GROUP BY T3.year ORDER BY MAX(T1.milliseconds) ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
    "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5\t----- bird -----\tformula_1"
  ],
  [
    "From race no. 50 to 100, how many finishers have been disqualified?",
    "SELECT COUNT(*) FROM results AS R WHERE R.`raceId` IN ( SELECT `raceId` FROM races WHERE `raceId` > 50 AND `raceId` < 100 ) AND R.`statusId` = 2 AND R.`time` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How many times the circuits were held in Austria? Please give their location and coordinates.",
    "WITH AustriaRaces AS ( SELECT COUNT(*) AS race_count FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.country = 'Austria' ), AustriaCircuits AS ( SELECT C.location, C.lat, C.lng FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.country = 'Austria' ) SELECT (SELECT race_count FROM AustriaRaces) AS total_races, location, lat, lng FROM AustriaCircuits\t----- bird -----\tformula_1"
  ],
  [
    "What race number has the most finishers?",
    "SELECT `raceId` FROM ( SELECT `raceId`, COUNT(*) AS finisher_count FROM results WHERE `time` IS NOT NULL GROUP BY `raceId` ) AS finisher_counts ORDER BY finisher_count DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.",
    "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 WHERE T1.driverId IN ( SELECT driverId FROM qualifying WHERE raceId = 23 AND q2 IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "On what year did the youngest driver had his first qualifying race? State the name, date and time of the race.",
    "SELECT T2.`number`, T3.`name`, T3.`date`, T3.`time` FROM qualifying AS T2 INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` WHERE T2.`driverId` = ( SELECT T1.`driverId` FROM drivers AS T1 ORDER BY T1.`dob` DESC LIMIT 1 ) ORDER BY T3.`date` ASC, T3.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many American drivers have been disqualified from the race.",
    "SELECT COUNT(DISTINCT T1.driverId) AS disqualified_count FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.statusId = 2 AND T2.nationality = 'American'\t----- bird -----\tformula_1"
  ],
  [
    "Which of the Italian constructor got the highest point to date? Give its introduction website?",
    "SELECT T1.`url` FROM constructors AS T1 INNER JOIN ( SELECT T1.`constructorId` FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'Italian' GROUP BY T1.`constructorId` ORDER BY SUM(T2.`points`) DESC LIMIT 1 ) AS T3 ON T1.`constructorId` = T3.`constructorId`\t----- bird -----\tformula_1"
  ],
  [
    "What is the website of the constructor who tallied the most total wins.",
    "SELECT url FROM constructors WHERE constructorId = ( SELECT constructorId FROM ( SELECT constructorId, SUM(wins) AS total_wins FROM constructorStandings GROUP BY constructorId ) AS total_wins_table ORDER BY total_wins DESC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers who participated in the French Grand Prix, who has the slowest time in the 3rd lap.",
    "SELECT T2.`forename`, T2.`surname` FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`raceId` = ( SELECT `raceId` FROM races WHERE `name` = 'French Grand Prix' ) AND T1.`lap` = 3 AND T1.`time` = ( SELECT MAX(`time`) FROM lapTimes WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `name` = 'French Grand Prix' ) AND `lap` = 3 )\t----- bird -----\tformula_1"
  ],
  [
    "In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds.",
    "SELECT T2.`raceId`, MIN(CAST(T1.`milliseconds` AS INTEGER)) AS fastest_lap_time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`lap` = 1 GROUP BY T2.`raceId` HAVING MIN(CAST(T1.`milliseconds` AS INTEGER)) = ( SELECT MIN(CAST(T3.`milliseconds` AS INTEGER)) FROM lapTimes AS T3 WHERE T3.`lap` = 1 )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
    "SELECT AVG(`fastestLapTime`) FROM `results` WHERE `raceId` = ( SELECT `raceId` FROM `races` WHERE `year` = 2006 AND `name` = 'United States Grand Prix' ) AND `position` < 11\t----- bird -----\tformula_1"
  ],
  [
    "List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
    "-- SQL Type: SELECT SELECT d.forename, d.surname, avg_durations.avg_duration FROM ( SELECT T1.driverId, AVG(CAST(T2.duration AS REAL)) AS avg_duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.dob BETWEEN '1980-01-01' AND '1985-12-31' AND T1.nationality = 'German' GROUP BY T1.driverId ) AS avg_durations INNER JOIN drivers AS d ON avg_durations.driverId = d.driverId WHERE avg_durations.avg_duration = ( SELECT MIN(avg_duration) FROM ( SELECT AVG(CAST(T2.duration AS REAL)) AS avg_duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.dob BETWEEN '1980-01-01' AND '1985-12-31' AND T1.nationality = 'German' GROUP BY T1.driverId ) AS durations ) ORDER BY avg_durations.avg_duration LIMIT 5;\t----- bird -----\tformula_1"
  ],
  [
    "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.",
    "SELECT `driverId`, `time` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Canadian Grand Prix' ) AND `position` = 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
    "SELECT T3.`constructorRef`, T3.`url` FROM results AS T1 INNER JOIN constructors AS T3 ON T1.`constructorId` = T3.`constructorId` WHERE T1.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 AND `name` = 'Singapore Grand Prix' ) AND T1.`time` = ( SELECT MAX(`time`) FROM results AS T2 WHERE T2.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 AND `name` = 'Singapore Grand Prix' ) )\t----- bird -----\tformula_1"
  ],
  [
    "What is the full name and date of birth of Austrian drivers born between 1981 and 1991?",
    "SELECT T1.`forename`, T1.`surname`, T1.`dob` FROM drivers AS T1 WHERE T1.`nationality` = 'Austrian' AND strftime('%Y', T1.`dob`) BETWEEN '1981' AND '1991'\t----- bird -----\tformula_1"
  ],
  [
    "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.",
    "SELECT T1.`forename` || ' ' || T1.`surname` AS full_name, T1.`url` AS wiki_page, T1.`dob` FROM drivers AS T1 WHERE T1.`nationality` = 'German' AND strftime('%Y', T1.`dob`) BETWEEN '1971' AND '1985' ORDER BY T1.`dob` DESC\t----- bird -----\tformula_1"
  ],
  [
    "In which location does the Hungaroring circuit located? Also, find the country and coordinates of this circuit?",
    "SELECT `location`, `country`, `lat`, `lng` FROM circuits WHERE `circuitRef` = 'hungaroring'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
    "SELECT T2.`name`, T2.`nationality`, T1.max_points FROM ( SELECT T1.`constructorId`, MAX(total_points) AS max_points FROM ( SELECT T1.`constructorId`, SUM(T2.`points`) AS total_points FROM `results` AS T1 INNER JOIN `constructorResults` AS T2 ON T1.`raceId` = T2.`raceId` AND T1.`constructorId` = T2.`constructorId` WHERE T1.`raceId` IN ( SELECT `raceId` FROM `races` WHERE `name` = 'Monaco Grand Prix' AND `year` BETWEEN 1980 AND 2010 ) GROUP BY T1.`constructorId` ) AS T1 ) AS T1 INNER JOIN `constructors` AS T2 ON T1.`constructorId` = T2.`constructorId`\t----- bird -----\tformula_1"
  ],
  [
    "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?",
    "SELECT AVG(`points`) FROM results WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' ) AND `raceId` IN ( SELECT `raceId` FROM races WHERE `name` LIKE '%Turkish Grand Prix%' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the annual average number of races held during the first 10 years of the 21st century?",
    "SELECT COUNT(*) * 1.0 / (strftime('%Y', '2010-12-31') - strftime('%Y', '2000-01-01') + 1) AS annual_average_races FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'\t----- bird -----\tformula_1"
  ],
  [
    "Which citizenship do the vast majority of the drivers hold?",
    "SELECT T1.`nationality` FROM drivers AS T1 GROUP BY T1.`nationality` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
    "SELECT wins FROM driverStandings WHERE driverId = ( SELECT driverId FROM driverStandings ORDER BY points DESC LIMIT 1 OFFSET 90 )\t----- bird -----\tformula_1"
  ],
  [
    "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?",
    "SELECT name FROM races WHERE raceId = ( SELECT raceId FROM results WHERE fastestLapSpeed = ( SELECT MIN(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "Which racetrack hosted the most recent race? Indicate the full location.",
    "SELECT CONCAT(T1.location, ', ', T1.country) AS full_location FROM circuits AS T1 WHERE T1.circuitId = ( SELECT circuitId FROM races WHERE date = (SELECT MAX(date) FROM races) )\t----- bird -----\tformula_1"
  ],
  [
    "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?",
    "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.year = 2008 AND r.circuitId = ( SELECT circuitId FROM circuits WHERE circuitRef = 'marina_bay' ) AND q.position = 1 AND r.round = ( SELECT MIN(round) FROM races WHERE year = 2008 AND circuitId = ( SELECT circuitId FROM circuits WHERE circuitRef = 'marina_bay' ) )\t----- bird -----\tformula_1"
  ],
  [
    "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.",
    "WITH YoungestRacer AS ( SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, T1.driverId FROM drivers AS T1 WHERE T1.dob = ( SELECT MAX(dob) FROM drivers WHERE dob IS NOT NULL ) ), FirstRace AS ( SELECT T2.name AS race_name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = (SELECT driverId FROM YoungestRacer) ORDER BY T2.year, T2.round LIMIT 1 ) SELECT YR.full_name, YR.nationality, FR.race_name FROM YoungestRacer AS YR CROSS JOIN FirstRace AS FR\t----- bird -----\tformula_1"
  ],
  [
    "How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have?",
    "SELECT COUNT(*) AS total_accidents FROM results AS R INNER JOIN status AS S ON R.`statusId` = S.`statusId` WHERE R.`driverId` = ( SELECT `driverId` FROM ( SELECT `driverId`, COUNT(*) AS accident_count FROM results AS R INNER JOIN status AS S ON R.`statusId` = S.`statusId` WHERE R.`raceId` = ( SELECT `raceId` FROM races WHERE `name` = 'Canadian Grand Prix' ) AND S.`status` = 'Wheel' -- Assuming statusId = 3 corresponds to 'Wheel' accidents GROUP BY R.`driverId` ORDER BY accident_count DESC LIMIT 1 ) )\t----- bird -----\tformula_1"
  ],
  [
    "How many wins was achieved by the oldest racer? Indicate his/her full name.",
    "SELECT T2.forename || ' ' || T2.surname AS full_name, COUNT(DISTINCT T1.wins) AS total_wins FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.dob = ( SELECT MIN(dob) FROM drivers WHERE dob IS NOT NULL ) GROUP BY T2.driverId\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time a driver had ever spent at a pit stop?",
    "SELECT raceId, driverId, MAX(duration) AS longest_pit_stop FROM pitStops GROUP BY raceId, driverId HAVING MAX(duration) = ( SELECT MAX(duration) FROM pitStops )\t----- bird -----\tformula_1"
  ],
  [
    "Among all the lap records set on various circuits, what is the time for the fastest one?",
    "SELECT MIN(T1.`time`) AS fastest_lap_time FROM lapTimes AS T1 WHERE T1.`time` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time that Lewis Hamilton had spent at a pit stop?",
    "SELECT MAX(`duration`) FROM pitStops WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?",
    "SELECT `lap` FROM pitStops WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2011 AND `name` = 'Australian Grand Prix' ) AND `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time each driver spent at the pit stop during the 2011 Australian Grand Prix.",
    "SELECT P.driverId, P.duration FROM pitStops AS P JOIN races AS R ON P.raceId = R.raceId WHERE R.year = 2011 AND R.name = 'Australian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
    "SELECT MIN(lapTimes.time) AS lapRecord FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name.",
    "SELECT CONCAT(T2.`forename`, ' ', T2.`surname`) AS full_name FROM drivers AS T2 WHERE T2.`driverId` = ( SELECT T1.`driverId` FROM lapTimes AS T1 WHERE T1.`milliseconds` = ( SELECT MIN(`milliseconds`) FROM lapTimes WHERE `milliseconds` IS NOT NULL ) )\t----- bird -----\tformula_1"
  ],
  [
    "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?",
    "SELECT T1.position FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND T1.milliseconds = ( SELECT MIN(milliseconds) FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) )\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record for the Austrian Grand Prix Circuit?",
    "SELECT MIN(r.fastestLapTime) AS lap_record FROM results r JOIN races ra ON r.raceId = ra.raceId JOIN circuits c ON ra.circuitId = c.circuitId WHERE c.circuitRef = 'austrian' AND r.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Please list the lap records for the circuits in Italy.",
    "SELECT C.`circuitRef`, C.`name`, R.`fastestLapTime` FROM ( SELECT T1.`raceId`, MIN(T2.`time`) AS `fastestLapTime` FROM lapTimes AS T2 INNER JOIN races AS T1 ON T2.`raceId` = T1.`raceId` WHERE T1.`circuitId` IN ( SELECT `circuitId` FROM circuits WHERE `country` = 'Italy' ) GROUP BY T1.`raceId` ) AS R INNER JOIN races AS R2 ON R.`raceId` = R2.`raceId` INNER JOIN circuits AS C ON R2.`circuitId` = C.`circuitId` WHERE C.`country` = 'Italy'\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?",
    "SELECT T1.`name`, T1.`year`, T1.`round` FROM races AS T1 INNER JOIN ( SELECT `raceId`, MIN(`milliseconds`) AS `fastestLapTime` FROM lapTimes WHERE `raceId` IN ( SELECT `raceId` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'red_bull_ring' -- Assuming 'red_bull_ring' is the correct reference for the Austrian GP ) ) GROUP BY `raceId` ) AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`fastestLapTime` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
    "SELECT p.duration FROM pitStops AS p JOIN races AS r ON p.raceId = r.raceId JOIN lapTimes AS lt ON lt.raceId = r.raceId AND lt.driverId = p.driverId WHERE r.circuitId = ( SELECT circuitId FROM circuits WHERE circuitRef = 'austria' ) AND lt.time = ( SELECT MIN(lt2.time) FROM lapTimes AS lt2 WHERE lt2.raceId = r.raceId )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the circuits whose lap record is 1:29.488.",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitId` IN ( SELECT DISTINCT `circuitId` FROM races WHERE `raceId` IN ( SELECT DISTINCT `raceId` FROM lapTimes WHERE `time` = '1:29.488' ) )\t----- bird -----\tformula_1"
  ],
  [
    "What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races?",
    "SELECT AVG(milliseconds) AS average_pit_stop_time FROM pitStops WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?",
    "SELECT AVG(`milliseconds`) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`circuitId` IN ( SELECT `circuitId` FROM circuits WHERE `country` = 'Italy' )\t----- bird -----\tformula_1"
  ],
  [
    "Which player has the highest overall rating? Indicate the player's api id.",
    "SELECT `player_api_id` FROM Player_Attributes WHERE `overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the height of the tallest player? Indicate his name.",
    "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the player with the lowest potential?",
    "SELECT preferred_foot FROM Player_Attributes WHERE potential = ( SELECT MIN(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T1.`player_api_id` = T2.`player_api_id` ORDER BY T2.`crossing` DESC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most goals in the 2016 season?",
    "SELECT T1.`name` FROM League AS T1 INNER JOIN ( SELECT T2.`league_id`, SUM(T2.`home_team_goal` + T2.`away_team_goal`) AS total_goals FROM Match AS T2 WHERE T2.`season` = '2015/2016' GROUP BY T2.`league_id` ) AS T3 ON T1.`id` = T3.`league_id` ORDER BY T3.total_goals DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which home team had lost the fewest matches in the 2016 season?",
    "SELECT T.team_long_name FROM ( SELECT home_team_api_id FROM ( SELECT home_team_api_id, COUNT(*) AS loss_count FROM Match WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY home_team_api_id ) ORDER BY loss_count ASC LIMIT 1 ) AS T1 INNER JOIN Team AS T ON T1.home_team_api_id = T.team_api_id\t----- bird -----\teuropean_football_2"
  ],
  [
    "Indicate the full names of the top 10 players with the highest number of penalties.",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` ORDER BY T2.`penalties` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "In Scotland Premier League, which away team won the most during the 2010 season?",
    "SELECT T2.`team_long_name` FROM ( SELECT `away_team_api_id` FROM ( SELECT `away_team_api_id`, COUNT(*) AS `wins` FROM Match WHERE `season` = '2009/2010' AND `away_team_goal` > `home_team_goal` GROUP BY `away_team_api_id` ) AS T ORDER BY `wins` DESC LIMIT 1 ) AS T1 INNER JOIN Team AS T2 ON T1.`away_team_api_id` = T2.`team_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed?",
    "SELECT T1.`buildUpPlaySpeed` FROM Team_Attributes AS T1 ORDER BY T1.`buildUpPlaySpeed` DESC LIMIT 4\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which League had the most matches end as draw in the 2016 season?",
    "SELECT T2.`name` FROM League AS T2 INNER JOIN ( SELECT T1.`league_id`, COUNT(*) AS draw_count FROM Match AS T1 WHERE T1.`season` = '2015/2016' AND T1.`home_team_goal` = T1.`away_team_goal` GROUP BY T1.`league_id` ) AS T3 ON T2.`id` = T3.`league_id` ORDER BY T3.`draw_count` DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
    "SELECT T1.player_api_id, (strftime('%Y', 'now') - strftime('%Y', T2.birthday)) - (strftime('%m', 'now') < strftime('%m', T2.birthday) OR (strftime('%m', 'now') = strftime('%m', T2.birthday) AND strftime('%d', 'now') < strftime('%d', T2.birthday))) AS age FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.sprint_speed >= 97 AND T1.date >= '2013-01-01 00:00:00' AND T1.date <= '2015-12-31 00:00:00';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the name of the league with the highest matches of all time and how many matches were played in the said league.",
    "SELECT L.name, M.match_count FROM ( SELECT league_id, COUNT(*) AS match_count FROM Match GROUP BY league_id ) AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.league_id = ( SELECT league_id FROM ( SELECT league_id, COUNT(*) AS match_count FROM Match GROUP BY league_id ) AS league_counts ORDER BY match_count DESC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average height of players born between 1990 and 1995?",
    "SELECT AVG(height) AS average_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the players' api id who had the highest above average overall ratings in 2010.",
    "SELECT `player_api_id` FROM Player_Attributes WHERE `overall_rating` > ( SELECT AVG(`overall_rating`) FROM Player_Attributes WHERE substr(`date`, 1, 4) = '2010' ) AND substr(`date`, 1, 4) = '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.",
    "SELECT T1.`team_fifa_api_id` FROM Team_Attributes AS T1 WHERE T1.`buildUpPlaySpeed` BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the long name of teams with above-average build-up play passing in 2012.",
    "SELECT T2.`team_long_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE strftime('%Y', T1.`date`) = '2012' AND T1.`buildUpPlayPassing` IS NOT NULL AND T1.`buildUpPlayPassing` > ( SELECT AVG(T3.`buildUpPlayPassing`) FROM Team_Attributes AS T3 WHERE strftime('%Y', T3.`date`) = '2012' AND T3.`buildUpPlayPassing` IS NOT NULL )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",
    "SELECT (CAST(SUM(CASE WHEN pa.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) / COUNT(p.player_fifa_api_id)) * 100 AS percentage_left_foot FROM Player p JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE p.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 5 leagues in ascending order of the number of goals made in all seasons combined.",
    "SELECT L.`name`, LeagueGoals.total_goals FROM ( SELECT M.`league_id`, SUM(M.`home_team_goal` + M.`away_team_goal`) AS total_goals FROM Match AS M GROUP BY M.`league_id` ) AS LeagueGoals INNER JOIN League AS L ON LeagueGoals.`league_id` = L.`id` ORDER BY LeagueGoals.total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Find the average number of long-shot done by Ahmed Samir Farag.",
    "SELECT AVG(`long_shots`) FROM Player_Attributes WHERE `player_fifa_api_id` = ( SELECT `player_fifa_api_id` FROM Player WHERE `player_name` = 'Ahmed Samir Farag' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`height` > 180 ORDER BY T1.`heading_accuracy` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
    "SELECT T3.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T3 ON T1.team_api_id = T3.team_api_id WHERE T1.chanceCreationPassing < ( SELECT AVG(T2.chanceCreationPassing) FROM Team_Attributes AS T2 WHERE T2.team_api_id IN ( SELECT T4.team_api_id FROM Team_Attributes AS T4 WHERE T4.buildUpPlayDribblingClass = 'Normal' AND T4.date >= '2014-01-01 00:00:00' AND T4.date <= '2014-12-31 23:59:59' ) ) AND T1.date >= '2014-01-01 00:00:00' AND T1.date <= '2014-12-31 23:59:59' ORDER BY T1.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
    "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.id HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the short name of the football team Queens Park Rangers?",
    "SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "SELECT player_name, birthday FROM Player WHERE substr(birthday, 1, 4) = '1970' AND substr(birthday, 6, 2) = '10'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the attacking work rate of the football playerr Franco Zennaro?",
    "SELECT `attacking_work_rate` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Franco Zennaro' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch?",
    "SELECT `buildUpPlayPositioningClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'ADO Den Haag' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
    "SELECT `heading_accuracy` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Francois Affolter' ) AND `date` = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the overall rating of the football player Gabriel Tamas in year 2011?",
    "SELECT `overall_rating` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Gabriel Tamas' ) AND strftime('%Y', `date`) = '2011'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
    "SELECT COUNT(*) FROM Match WHERE `season` = '2015/2016' AND `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Scotland Premier League' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the youngest football player?",
    "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = ( SELECT MAX(birthday) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest potential score.",
    "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among all the players whose weight is under 130, how many of them preferred foot in attacking is left?",
    "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.",
    "SELECT T.team_short_name FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_api_id = T.team_api_id WHERE TA.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the defensive work rate of the football player David Wilson\n?",
    "SELECT `defensive_work_rate` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'David Wilson' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "When is the birthday of the football player who has the highest overall rating?",
    "SELECT T2.`birthday` FROM Player AS T2 WHERE T2.`player_api_id` = ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of the football league in the country of Netherlands?",
    "SELECT `name` FROM League WHERE `country_id` = ( SELECT `id` FROM Country WHERE `name` = 'Netherlands' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
    "SELECT AVG(M.`home_team_goal`) FROM Match AS M INNER JOIN League AS L ON M.`league_id` = L.`id` WHERE L.`country_id` = ( SELECT `id` FROM Country WHERE `name` = 'Poland' ) AND M.`season` = '2010/2011'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who has the highest average finishing rate between the highest and shortest football player?",
    "SELECT P.player_name, PA.finishing FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height IN ( (SELECT MAX(height) FROM Player), (SELECT MIN(height) FROM Player) ) AND PA.finishing = ( SELECT MAX(PA2.finishing) FROM Player AS P2 INNER JOIN Player_Attributes AS PA2 ON P2.player_api_id = PA2.player_api_id WHERE P2.height IN ( (SELECT MAX(height) FROM Player), (SELECT MIN(height) FROM Player) ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list player names which are higher than 180.",
    "SELECT T1.`player_name` FROM Player AS T1 WHERE T1.`height` > 180\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players were born after 1990?",
    "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players whose first names are Adam and weigh more than 170?",
    "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which players had an overall rating of over 80 from 2008 to 2010? Please list player names.",
    "SELECT T2.`player_name` FROM Player AS T2 WHERE T2.`player_api_id` IN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`overall_rating` > 80 AND strftime('%Y', T1.`date`) BETWEEN '2008' AND '2010' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Doran's potential score?",
    "SELECT `potential` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Doran' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List out of players whose preferred foot is left.",
    "SELECT P.player_name FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.preferred_foot = 'left';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list all team names which the speed class is fast.",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`buildUpPlaySpeedClass` = 'Fast'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the passing class of CLB team?",
    "SELECT `buildUpPlayPassingClass` FROM Team_Attributes WHERE `team_fifa_api_id` = ( SELECT `team_fifa_api_id` FROM Team WHERE `team_short_name` = 'CLB' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which teams have build up play passing more than 70? Please list their short names.",
    "SELECT T2.`team_short_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlayPassing` > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "From 2010 to 2015, what was the average overall rating of players who are higher than 170?",
    "SELECT AVG(T2.`overall_rating`) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE strftime('%Y', T2.`date`) BETWEEN '2010' AND '2015' AND T1.`height` > 170\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which football player has the shortest height?",
    "SELECT player_name FROM Player WHERE height = ( SELECT MIN(height) FROM Player WHERE height IS NOT NULL )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the league Italy Serie A from?",
    "SELECT name FROM Country WHERE id = ( SELECT country_id FROM League WHERE name = 'Italy Serie A' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
    "SELECT T2.team_short_name FROM Team AS T2 WHERE T2.team_api_id IN ( SELECT T1.team_api_id FROM Team_Attributes AS T1 WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the football player Aaron Doran?",
    "SELECT AVG(`overall_rating`) FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Doran' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?",
    "SELECT COUNT(*) FROM Match WHERE league_id = ( SELECT id FROM League WHERE name = 'Germany 1. Bundesliga' ) AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the short name of the football team that had a home team goal of 10?",
    "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T2.home_team_goal = 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest balance score and potential score of 61.",
    "SELECT P.player_name FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.balance = ( SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61 ) AND PA.potential = 61\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
    "SELECT (SELECT AVG(T1.`ball_control`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Abdou Diallo') - (SELECT AVG(T1.`ball_control`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Appindangoye') AS ball_control_difference\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the long name for the team GEN?",
    "SELECT `team_long_name` FROM Team WHERE `team_short_name` = 'GEN'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is older, Aaron Lennon or Abdelaziz Barrada?",
    "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is the tallest?",
    "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the Belgium Jupiler League from?",
    "SELECT C.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the leagues from Germany.",
    "SELECT name FROM League WHERE country_id = ( SELECT id FROM Country WHERE name = 'Germany' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player has the strongest overall strength?",
    "SELECT P.`player_name` FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.`player_api_id` = P.`player_api_id` WHERE PA.`overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",
    "SELECT COUNT(DISTINCT T1.`player_api_id`) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE strftime('%Y', T1.`birthday`) < '1986' AND T2.`defensive_work_rate` = 'high'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone?",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY T2.`crossing` DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the heading accuracy of Ariel Borysiuk?",
    "SELECT `heading_accuracy` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Ariel Borysiuk' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose height is over 180, how many of them have a volley score of over 70?",
    "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`height` > 180 AND T2.`volleys` > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the names of the players whose volley score and dribbling score are over 70.",
    "SELECT T2.`player_name` FROM Player AS T2 WHERE T2.`player_api_id` IN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`volleys` > 70 AND T1.`dribbling` > 70 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2008/2009 season were held in Belgium?",
    "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.`league_id` = L.`id` WHERE M.`season` = '2008/2009' AND L.`country_id` = ( SELECT `id` FROM Country WHERE `name` = 'Belgium' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the long passing score of the oldest player?",
    "SELECT T2.`long_passing` FROM Player_Attributes AS T2 WHERE T2.`player_api_id` = ( SELECT T1.`player_api_id` FROM Player AS T1 ORDER BY T1.`birthday` ASC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the Belgium Jupiler League in April, 2009?",
    "SELECT COUNT(*) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Belgium Jupiler League' ) AND strftime('%Y', `date`) = '2009' AND strftime('%m', `date`) = '04'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most matches in the 2008/2009 season?",
    "SELECT name FROM League WHERE id = ( SELECT league_id FROM ( SELECT league_id, COUNT(*) AS match_count FROM Match WHERE season = '2008/2009' GROUP BY league_id ) AS league_match_counts ORDER BY match_count DESC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the players born before the year 1986?",
    "SELECT AVG(PA.overall_rating) AS average_overall_rating FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE strftime('%Y', P.birthday) < '1986'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
    "SELECT (CAST(A.overall_rating AS REAL) - CAST(P.overall_rating AS REAL)) / CAST(P.overall_rating AS REAL) * 100 AS percentage_difference FROM Player_Attributes AS A INNER JOIN Player AS PA ON A.player_api_id = PA.player_api_id INNER JOIN Player_Attributes AS P ON P.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel') WHERE PA.player_name = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much is the average build up play speed of the Heart of Midlothian team?",
    "SELECT AVG(`buildUpPlaySpeed`) FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'Heart of Midlothian' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average overall rating of Pietro Marino.",
    "SELECT AVG(T1.`overall_rating`) FROM Player_Attributes AS T1 WHERE T1.`player_api_id` = ( SELECT T2.`player_api_id` FROM Player AS T2 WHERE T2.`player_name` = 'Pietro Marino' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Lennox's total crossing score?",
    "SELECT SUM(T2.`crossing`) FROM Player_Attributes AS T2 WHERE T2.`player_api_id` = ( SELECT T1.`player_api_id` FROM Player AS T1 WHERE T1.`player_name` = 'Aaron Lennox' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Ajax's highest chance creation passing score and what is it classified as?",
    "SELECT MAX(T1.`chanceCreationPassing`) AS highest_score, T1.`chanceCreationPassingClass` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'Ajax' GROUP BY T1.`chanceCreationPassingClass` HAVING T1.`chanceCreationPassing` = ( SELECT MAX(T3.`chanceCreationPassing`) FROM Team_Attributes AS T3 INNER JOIN Team AS T4 ON T3.`team_api_id` = T4.`team_api_id` WHERE T4.`team_long_name` = 'Ajax' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which foot is preferred by Abdou Diallo?",
    "SELECT `preferred_foot` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Abdou Diallo' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the highest overall rating received by Dorlan Pabon?",
    "SELECT MAX(T2.`overall_rating`) FROM Player_Attributes AS T2 WHERE T2.`player_api_id` = ( SELECT T1.`player_api_id` FROM Player AS T1 WHERE T1.`player_name` = 'Dorlan Pabon' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average number of goals made by Parma as the away team while playing in Italy?",
    "SELECT AVG(M.away_team_goal) AS average_goals FROM Match AS M INNER JOIN Team AS T ON M.away_team_api_id = T.team_api_id INNER JOIN League AS L ON L.id = (SELECT country_id FROM League WHERE name LIKE '%Italy%') WHERE T.team_long_name = 'Parma' AND M.away_team_goal IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
    "SELECT P.player_name FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = 77 AND PA.date = '2016-06-23' AND P.birthday IS NOT NULL GROUP BY P.player_name, P.birthday HAVING P.birthday = (SELECT MIN(birthday) FROM Player AS P2 JOIN Player_Attributes AS PA2 ON P2.player_api_id = PA2.player_api_id WHERE PA2.overall_rating = 77 AND PA2.date = '2016-06-23' AND P2.birthday IS NOT NULL);\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the overall rating for Aaron Mooy on 2016/2/4?",
    "SELECT `overall_rating` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Mooy' ) AND `date` = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the potiential for Francesco Parravicini on 2010/8/30?",
    "SELECT `potential` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Francesco Parravicini' ) AND `date` = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was Francesco Migliore's attacking work rate on 2015/5/1?",
    "SELECT T2.`attacking_work_rate` FROM Player_Attributes AS T2 WHERE T2.`player_api_id` = ( SELECT T1.`player_api_id` FROM Player AS T1 WHERE T1.`player_name` = 'Francesco Migliore' ) AND T2.`date` = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the defensive work rate for Kevin Berigaud on 2013/2/22.",
    "SELECT `defensive_work_rate` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Kevin Berigaud' ) AND `date` = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
    "SELECT T2.`date` FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` = 'Kevin Constant' AND T2.`crossing` = ( SELECT MAX(T4.`crossing`) FROM Player_Attributes AS T4 INNER JOIN Player AS T3 ON T3.`player_api_id` = T4.`player_api_id` WHERE T3.`player_name` = 'Kevin Constant' ) ORDER BY T2.`date` ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the build up play speed class for \"Willem II\" on 2011/2/22?",
    "SELECT DISTINCT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T2 JOIN Team AS T1 ON T2.team_api_id = T1.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date <= '2012-02-22 00:00:00' ORDER BY T2.date DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
    "SELECT `buildUpPlayDribblingClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_short_name` = 'LEI' ) AND `date` = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.",
    "SELECT `buildUpPlayPassingClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'FC Lorient' ) AND `date` = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
    "SELECT T2.`chanceCreationPassingClass` FROM Team_Attributes AS T2 INNER JOIN Team AS T1 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'PEC Zwolle' AND T2.`date` = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
    "SELECT `chanceCreationCrossingClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'Hull City' ) AND `date` = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
    "SELECT `defenceAggressionClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'Hannover 96' ) AND `date` = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
    "SELECT AVG(`overall_rating`) FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Marko Arnautovic' ) AND `date` BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
    "SELECT (MAX(CASE WHEN P.player_name = 'Landon Donovan' THEN PA.overall_rating END) - MAX(CASE WHEN P.player_name = 'Jordan Bowery' THEN PA.overall_rating END)) / MAX(CASE WHEN P.player_name = 'Landon Donovan' THEN PA.overall_rating END) * 100 AS percentage_difference FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.date = '2013-07-12' AND P.player_name IN ('Landon Donovan', 'Jordan Bowery') GROUP BY PA.date;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down 5 tallest players' name.",
    "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the player api id of 10 heaviest players?",
    "SELECT `player_api_id` FROM Player ORDER BY `weight` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the name of players who are 35 years old and above.",
    "SELECT T1.player_name FROM Player AS T1 WHERE (strftime('%Y', 'now', 'localtime') - strftime('%Y', T1.birthday)) >= 35\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many home team goal have been scored by Aaron Lennon?",
    "SELECT SUM(T1.`home_team_goal`) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.`home_player_1` = T2.`player_api_id` OR T1.`home_player_2` = T2.`player_api_id` OR T1.`home_player_3` = T2.`player_api_id` OR T1.`home_player_4` = T2.`player_api_id` OR T1.`home_player_5` = T2.`player_api_id` OR T1.`home_player_6` = T2.`player_api_id` OR T1.`home_player_7` = T2.`player_api_id` OR T1.`home_player_8` = T2.`player_api_id` OR T1.`home_player_9` = T2.`player_api_id` OR T1.`home_player_10` = T2.`player_api_id` OR T1.`home_player_11` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Lennon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Sum up the away team goal scored by both Daan Smith and Filipe Ferreira.",
    "SELECT SUM(`away_team_goal`) AS total_away_goals FROM Match WHERE `away_player_1` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_2` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_3` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_4` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_5` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_6` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_7` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_8` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_9` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_10` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' ) OR `away_player_11` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' UNION SELECT `player_api_id` FROM Player WHERE `player_name` = 'Filipe Ferreira' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the total home team goal scored by players whose age are 30 years old and below.",
    "SELECT SUM(T1.`home_team_goal`) AS total_home_goals FROM Match AS T1 WHERE T1.`home_player_1` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_2` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_3` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_4` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_5` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_6` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_7` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_8` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_9` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_10` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`))) OR T1.`home_player_11` IN (SELECT T2.`player_api_id` FROM Player AS T2 WHERE (strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) < 30 OR ((strftime('%Y', 'now') - strftime('%Y', T2.`birthday`)) = 30 AND strftime('%m-%d', 'now') < strftime('%m-%d', T2.`birthday`)))\t----- bird -----\teuropean_football_2"
  ],
  [
    "State 10 names of the strongest players.",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes ) LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of players with the highest potential?",
    "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
    "SELECT T2.`player_name` FROM Player AS T2 WHERE T2.`player_api_id` IN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`attacking_work_rate` = 'high' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with finishing rate of 1, pick the eldest player and state the player's name.",
    "SELECT P.player_name FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.finishing = 1 ORDER BY P.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the name of players who came from Belgium.",
    "SELECT DISTINCT P.player_name FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN (M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11) INNER JOIN Team AS T ON M.home_team_api_id = T.team_api_id OR M.away_team_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Belgium';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Locate players with vision scores of 90 and above, state the country of these players.",
    "SELECT DISTINCT C.name AS country FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id INNER JOIN Team AS T ON P.player_fifa_api_id = T.team_fifa_api_id INNER JOIN Match AS M ON T.team_api_id = M.home_team_api_id OR T.team_api_id = M.away_team_api_id INNER JOIN League AS L ON M.league_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE PA.vision > 89\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country's players have the heaviest average weights?",
    "-- SQL Type: SELECT SELECT C.name AS country_name FROM ( SELECT L.country_id, AVG(P.weight) AS avg_weight FROM Player AS P INNER JOIN Team AS T ON P.player_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id GROUP BY L.country_id ) AS avg_weights INNER JOIN Country AS C ON avg_weights.country_id = C.id WHERE avg_weights.avg_weight = ( SELECT MAX(avg_weight) FROM ( SELECT AVG(P.weight) AS avg_weight FROM Player AS P INNER JOIN Team AS T ON P.player_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id GROUP BY L.country_id ) AS subquery )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the long name for slow speed class team.",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`buildUpPlaySpeedClass` = 'Slow'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the short name of team who played safe while creating chance of passing?",
    "SELECT T2.team_short_name FROM Team AS T2 INNER JOIN ( SELECT DISTINCT T1.team_api_id FROM Team_Attributes AS T1 WHERE T1.chanceCreationPassingClass = 'Safe' ) AS T3 ON T2.team_api_id = T3.team_api_id\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average heights of Italy players?",
    "SELECT AVG(P.height) AS average_height FROM Player AS P INNER JOIN Match AS M ON P.player_api_id IN ( M.home_player_1, M.home_player_2, M.home_player_3, M.home_player_4, M.home_player_5, M.home_player_6, M.home_player_7, M.home_player_8, M.home_player_9, M.home_player_10, M.home_player_11, M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11 ) INNER JOIN Team AS T ON M.home_team_api_id = T.team_api_id OR M.away_team_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Italy' AND P.height IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the names of top three football players who are over 180 cm tall in alphabetical order.",
    "SELECT T1.`player_name` FROM Player AS T1 WHERE T1.`height` > 180 ORDER BY T1.`player_name` ASC LIMIT 3\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many football players born after the 1990s have the first name \"Aaron\"?",
    "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference between players 6 and 23's jumping scores?",
    "-- SQL Type: SELECT SELECT (p6.jumping - p23.jumping) AS jumping_difference FROM Player_Attributes p6 JOIN Player_Attributes p23 ON p6.date = p23.date WHERE p6.player_api_id = 6 AND p23.player_api_id = 23 AND p6.jumping IS NOT NULL AND p23.jumping IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
    "SELECT `player_api_id` FROM Player_Attributes WHERE `potential` = (SELECT MIN(`potential`) FROM Player_Attributes) AND `preferred_foot` = 'right' LIMIT 3\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
    "SELECT COUNT(*) AS player_count FROM Player_Attributes WHERE crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage of players have a strength and stamina score of more than 80?",
    "SELECT (SELECT COUNT(*) FROM Player_Attributes WHERE strength > 80 AND stamina > 80) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage_high_scores\t----- bird -----\teuropean_football_2"
  ],
  [
    "In what country did the Poland Ekstraklasa take place?",
    "SELECT C.`name` FROM League AS L INNER JOIN Country AS C ON L.`country_id` = C.`id` WHERE L.`name` = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
    "SELECT m.home_team_goal, m.away_team_goal FROM Match m JOIN League l ON m.league_id = l.id WHERE m.date LIKE '2008-09-24%' AND l.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
    "SELECT `sprint_speed`, `agility`, `acceleration` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Alexis Blin' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Does the KSV Cercle Brugge team have a slow, balanced or fast speed class?",
    "SELECT `buildUpPlaySpeedClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'KSV Cercle Brugge' ) AND `buildUpPlaySpeedClass` IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2"
  ],
  [
    "In the 2015–2016 season, how many games were played in the Italian Serie A league?",
    "SELECT COUNT(*) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Italy Serie A' ) AND `season` = '2015/2016'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the highest score of the home team in the Netherlands Eredivisie league?",
    "SELECT MAX(home_team_goal) FROM Match WHERE league_id = ( SELECT id FROM League WHERE name = 'Netherlands Eredivisie' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please state the finishing rate and curve score of the player who has the heaviest weight.",
    "SELECT T1.finishing AS finishing_rate, T1.curve AS curve_score FROM Player_Attributes AS T1 WHERE T1.player_api_id = ( SELECT T2.player_api_id FROM Player AS T2 WHERE T2.weight = (SELECT MAX(weight) FROM Player) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most games in the 2015–2016 season?",
    "SELECT T2.`name` FROM Match AS T1 INNER JOIN League AS T2 ON T1.`league_id` = T2.`id` WHERE T1.`season` = '2015/2016' GROUP BY T2.`id` ORDER BY COUNT(T1.`id`) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the full name of the away team that scored the most goals.",
    "SELECT T.team_long_name FROM Team AS T WHERE T.team_api_id = ( SELECT away_team_api_id FROM Match WHERE away_team_goal = ( SELECT MAX(away_team_goal) FROM Match ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please name one player whose overall strength is the greatest.",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes ) LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
    "SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM Player)) * 100 AS percentage FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height < 180 AND Player_Attributes.overall_rating > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
    "SELECT (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS male_inpatients, (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS male_outpatients, (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') - (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS difference, CASE WHEN (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') = 0 THEN NULL ELSE ((SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') - (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-')) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') END AS deviation_percentage\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient were born after 1930?",
    "SELECT (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Birthday > '1930-01-01') * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') AS percentage_female_born_after_1930\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between Year 1930 to 1940, how many percent of them were inpatient?",
    "SELECT (SELECT COUNT(*) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND Admission = '+') * 100.0 / (SELECT COUNT(*) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31') AS inpatient_percentage\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?",
    "SELECT (SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '+') * 1.0 / (SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '-') AS ratio\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.",
    "SELECT `Date` FROM Laboratory WHERE `ID` = 30609\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.",
    "SELECT T1.`SEX`, T1.`Birthday`, T2.`Examination Date`, T2.`Symptoms` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = '163109'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday of patient with LDH beyond normal range.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN ( SELECT `ID` FROM Laboratory WHERE `LDH` > 500 ) AS T2 ON T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the ID and age of patient with positive degree of coagulation.",
    "SELECT P.`ID`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.`Birthday`)) AS age FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`RVVT` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with.",
    "SELECT T1.`ID`, T2.`SEX`, T2.`Diagnosis` FROM Patient AS T2 INNER JOIN Examination AS T1 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` = 2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were born in 1937 whose total cholesterol was beyond the normal range.",
    "-- SQL Script Type: SELECT SELECT T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday IS NOT NULL AND T2.\"T-CHO\" IS NOT NULL AND strftime('%Y', T1.Birthday) = '1937' AND T2.\"T-CHO\" >= 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient with albumin level lower than 3.5, list their ID, sex and diagnosis.",
    "SELECT T2.`ID`, T2.`SEX`, T2.`Diagnosis` FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`ALB` < 3.5 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient had total protein not within the normal range?",
    "SELECT (SELECT COUNT(P.`ID`) FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`SEX` = 'F' AND (L.`TP` < 6.0 OR L.`TP` > 8.5)) * 100.0 / (SELECT COUNT(P.`ID`) FROM Patient AS P WHERE P.`SEX` = 'F') AS percentage_female_out_of_range\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",
    "SELECT AVG(`aCL IgG`) AS average_aCL_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) >= 50 AND Patient.Birthday IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?",
    "SELECT COUNT(*) FROM Patient AS T1 WHERE T1.`SEX` = 'F' AND T1.`Description` LIKE '1997%' AND T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the age of the youngest patient when they initially arrived at the hospital?",
    "SELECT strftime('%Y', `First Date`) - strftime('%Y', `Birthday`) AS age FROM Patient WHERE `Birthday` IS NOT NULL ORDER BY `Birthday` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many of the patients with the most serious thrombosis cases examined in 1997 are women?",
    "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` = 1 AND strftime('%Y', T1.`Examination Date`) = '1997' AND T2.`SEX` = 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the age gap between the youngest and oldest patient with a normal triglyceride recorded?",
    "SELECT MAX(strftime('%Y', `Birthday`)) - MIN(strftime('%Y', `Birthday`)) AS age_gap FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG >= 200 AND Patient.Birthday IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.",
    "SELECT E.Symptoms, P.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.Birthday = ( SELECT MIN(P2.Birthday) FROM Patient AS P2 WHERE P2.Birthday IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
    "SELECT (COUNT(DISTINCT T1.`ID`) / 12.0) AS average_male_patients_per_month FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`Date` BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
    "SELECT lab.Date AS lab_work_date, (strftime('%Y', p.`First Date`) - strftime('%Y', p.Birthday)) AS age_at_admission FROM Patient p JOIN Laboratory lab ON p.ID = lab.ID WHERE p.Birthday IS NOT NULL AND p.`First Date` IS NOT NULL AND p.Birthday = ( SELECT MAX(Birthday) FROM Patient WHERE Diagnosis LIKE 'SJS' AND Birthday IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
    "SELECT (SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.UA <= 8.0) * 1.0 / (SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA <= 6.5) AS male_to_female_ratio\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit?",
    "SELECT COUNT(DISTINCT T1.`ID`) AS `PatientCount` FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`First Date` IS NOT NULL AND (T2.`Examination Date` IS NULL OR (strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`First Date`)) < 1)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many underage patients were examined during the course of the three-year period from 1990 to 1993?",
    "SELECT COUNT(DISTINCT T1.ID) AS UnderageCount FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday IS NOT NULL AND DATE('now') - DATE(T1.Birthday) < 18 * 365.25 AND T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have elevated total bilirubin count?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`T-BIL` > 2.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
    "SELECT T1.`Diagnosis` FROM ( SELECT T1.`Diagnosis`, COUNT(*) AS `DiagnosisCount` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.`Diagnosis` ) AS T1 ORDER BY T1.`DiagnosisCount` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of patients examined in the laboratory for the October of the year 1991?",
    "SELECT AVG(2023 - CAST(strftime('%Y', P.Birthday) AS INTEGER)) AS Average_Age FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.Birthday IS NOT NULL AND E.`Examination Date` BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis?",
    "SELECT (strftime('%Y', E.`Examination Date`) - strftime('%Y', P.`Birthday`)) AS age, P.`Diagnosis` FROM Examination AS E INNER JOIN Patient AS P ON E.`ID` = P.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`HGB` = ( SELECT MAX(L2.`HGB`) FROM Laboratory AS L2 INNER JOIN Patient AS P2 ON L2.`ID` = P2.`ID` WHERE P2.`Birthday` IS NOT NULL ) AND E.`Examination Date` IS NOT NULL AND P.`Birthday` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2?",
    "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?",
    "SELECT CASE WHEN T3.`T-CHO` < 250 THEN 'Normal' ELSE 'Abnormal' END AS Cholesterol_Status FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`ID` = 2927464 AND T2.`Examination Date` = '1995-09-04' AND T3.`T-CHO` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the gender of the first AORTITIS diagnosed patient?",
    "SELECT T1.`SEX` FROM Patient AS T1 WHERE T1.`ID` = ( SELECT T2.`ID` FROM Patient AS T2 WHERE T2.`Diagnosis` = 'AORTITIS' ORDER BY T2.`First Date` ASC LIMIT 1 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12?",
    "SELECT `aCL IgM` FROM Examination WHERE `ID` = ( SELECT `ID` FROM Patient WHERE `Diagnosis` = 'SLE' AND `Description` = '1994-02-19' ) AND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GPT` = '9' AND T2.`Date` = '1992-06-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?",
    "SELECT SUBSTR('1991-10-21', 1, 4) - CAST(strftime('%Y', T2.`Birthday`) AS INTEGER) AS age FROM Patient AS T2 WHERE T2.`ID` = ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`UA` = '8.4' AND T1.`Date` = '1991-10-21' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995?",
    "SELECT COUNT(L.`ID`) FROM Laboratory AS L INNER JOIN Patient AS P ON L.`ID` = P.`ID` WHERE P.`ID` = ( SELECT `ID` FROM Patient WHERE `First Date` = '1991-06-13' AND `Description` = 'SJS' ) AND strftime('%Y', L.`Date`) = '1995'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
    "SELECT T2.`Diagnosis` FROM Patient AS T2 WHERE T2.`ID` = ( SELECT T1.`ID` FROM Examination AS T1 WHERE T1.`Examination Date` = '1997-01-27' AND T1.`Diagnosis` = 'SLE' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?",
    "SELECT `Symptoms` FROM Examination WHERE `ID` = ( SELECT `ID` FROM Patient WHERE `Birthday` = '1959-03-01' ) AND `Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
    "SELECT (SUM(CASE WHEN T2.`Date` LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.`Date` LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) * 1.0 / NULLIF(SUM(CASE WHEN T2.`Date` LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END), 0) * 100 AS decrease_rate FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = '1959-02-18'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997.",
    "SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'BEHCET' AND T2.`Examination Date` >= '1997-01-01' AND T2.`Examination Date` <= '1997-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
    "SELECT COUNT(T1.`ID`) AS patient_count, GROUP_CONCAT(T1.`ID`) AS patient_ids FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T2.`GPT` > 30 AND T2.`ALB` < 4\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients born in 1964 were admitted to the hospital? List them by ID.",
    "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Thrombosis` = 2 AND T2.`ANA` = 'S' AND T2.`aCL IgM` > ( SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE `aCL IgM` IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?",
    "SELECT (CAST(SUM(CASE WHEN L.`UA` <= 6.5 THEN 1 ELSE 0 END) AS REAL) / NULLIF(COUNT(*), 0)) * 100 AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.`ID` = P.`ID` WHERE L.`U-PRO` IS NOT NULL AND L.`U-PRO` > 0 AND L.`U-PRO` < 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
    "SELECT (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981' AND Diagnosis = 'BEHCET') * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981') AS percentage\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
    "SELECT DISTINCT P.`ID` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`Admission` = '-' AND L.`Date` LIKE '1991-10%' AND L.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ANA Pattern` != 'p' AND T1.`SEX` = 'F' AND T1.`Birthday` IS NOT NULL AND T1.`Birthday` BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'PSS' AND T2.`CRP` = '2+' AND T2.`CRE` = 1 AND T2.`LDH` = 123\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
    "SELECT AVG(T3.`ALB`) FROM Laboratory AS T3 WHERE T3.`ID` IN ( SELECT T2.`ID` FROM Laboratory AS T2 WHERE T2.`PLT` > 400 AND T2.`ID` IN ( SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`SEX` = 'F' AND T1.`Diagnosis` = 'SLE' ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common sign of patients with SLE disease?",
    "SELECT T1.`Symptoms` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T1.`Symptoms` IS NOT NULL GROUP BY T1.`Symptoms` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When was the medical information on patient number 48473 first documented, and what disease did she have?",
    "-- SQL Type: SELECT SELECT Description, Diagnosis FROM Patient WHERE ID = 48473 AND Description IS NOT NULL AND Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients were given an APS diagnosis?",
    "SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'APS' AND SEX = 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who underwent testing in 1997 had protein levels outside the normal range?",
    "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE strftime('%Y', L.Date) = '1997' AND (L.TP <= 6 OR L.TP >= 8.5)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What proportion of patients who had signs of thrombocytopenia had SLE diagnosed?",
    "SELECT (SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Symptoms LIKE '%thrombocytopenia%' AND P.Diagnosis LIKE '%SLE%') * 1.0 / (SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Symptoms LIKE '%thrombocytopenia%') * 100 AS sle_proportion\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
    "SELECT (CAST(COUNT(CASE WHEN SEX = 'F' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS female_percentage FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T1.`Diagnosis` = 'BEHCET' AND T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were female got white blood cells that were below 3.5?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`WBC` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
    "SELECT (julianday(Examination.`Examination Date`) - julianday(Patient.`First Date`)) AS days_difference FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` WHERE Patient.`ID` = 821298 AND Examination.`Examination Date` IS NOT NULL AND Patient.`First Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient with the number 57266's uric acid within a normal range?",
    "SELECT CASE WHEN T1.`SEX` = 'M' AND T2.`UA` <= 8.0 THEN 'Not within normal range' WHEN T1.`SEX` = 'F' AND T2.`UA` <= 6.5 THEN 'Not within normal range' ELSE 'Within normal range' END AS `Uric Acid Status` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = 57266\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range.",
    "SELECT `Date` FROM Laboratory WHERE `ID` = '48473' AND `GOT` >= 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994.",
    "SELECT T2.SEX, T2.Birthday FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T1.Date IS NOT NULL AND strftime('%Y', T1.Date) = '1994' AND T1.GOT < 60 AND T2.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`GPT` >= 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth.",
    "SELECT T2.`Diagnosis` FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`GPT` > 60 ) ORDER BY T2.`Birthday` ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
    "SELECT AVG(LD.LDH) FROM Laboratory AS LD INNER JOIN Patient AS P ON LD.`ID` = P.`ID` WHERE LD.`LDH` < 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
    "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800 AND T1.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient?",
    "SELECT T2.`Admission` FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`ALP` < 300 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range?",
    "SELECT P.`ID`, CASE WHEN L.`ALP` < 300 THEN 'Within normal range' ELSE 'Not within normal range' END AS `ALP_Status` FROM Patient AS P LEFT JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`Birthday` = '1982-04-01'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index.",
    "SELECT T2.`ID`, T2.`SEX`, T2.`Birthday` FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`TP` < 6.0 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.",
    "SELECT T1.`ID`, (T2.`TP` - 8.5) AS `Deviation` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`TP` > 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Sort in descending order all patients by birthday for male patient with albumin not within range.",
    "SELECT T1.`ID`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND (T2.`ALB` <= 3.5 OR T2.`ALB` >= 5.5) ORDER BY T1.`Birthday` DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patient born in 1982, state if their albumin is within normal range.",
    "SELECT T1.`ID`, CASE WHEN T2.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Outside Normal Range' END AS `Albumin Status` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE strftime('%Y', T1.`Birthday`) = '1982'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?",
    "SELECT (SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA > 6.5) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS percentage_female_patients_with_high_UA\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result?",
    "SELECT AVG(L.UA) AS AverageUA FROM Laboratory AS L INNER JOIN ( SELECT L.ID, L.UA FROM Laboratory AS L INNER JOIN ( SELECT ID, MAX(Date) AS LatestDate FROM Laboratory GROUP BY ID ) AS LatestLab ON L.ID = LatestLab.ID AND L.Date = LatestLab.LatestDate INNER JOIN Patient AS P ON L.ID = P.ID WHERE (P.SEX = 'M' AND L.UA < 8.0) OR (P.SEX = 'F' AND L.UA < 6.5) ) AS NormalUA ON L.ID = NormalUA.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 WHERE T1.`ID` IN ( SELECT `ID` FROM Laboratory WHERE `UN` = 29 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index.",
    "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'RA' AND L.UN < 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients are are with creatinine index out of the normal range?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`CRE` >= 1.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Are there more male patients with creatinine not within the normal range than female? True or False?",
    "SELECT (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`CRE` >= 1.5) > (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`CRE` >= 1.5) AS result\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.",
    "SELECT P.`ID`, P.`SEX`, P.`Birthday` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`T-BIL` = ( SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range.",
    "SELECT T1.`SEX`, COUNT(*) AS `Total Patients` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.`SEX`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.",
    "SELECT T1.ID, MAX(T2.\"T-CHO\") AS \"T-CHO\" FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday IS NOT NULL GROUP BY T1.ID HAVING MAX(T2.\"T-CHO\") = ( SELECT MAX(\"T-CHO\") FROM Laboratory ) ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of the male patient with high cholesterol?",
    "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.`Birthday`)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`T-CHO` >= 250 AND T1.`Birthday` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?",
    "SELECT T2.`ID`, T2.`Diagnosis` FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`TG` > 300 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?",
    "SELECT COUNT(*) FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`TG` >= 200 ) AND (strftime('%Y', 'now') - strftime('%Y', T2.`Birthday`)) > 50\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids.",
    "SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
    "SELECT T3.`ID`, T3.`SEX`, (strftime('%Y', 'now') - strftime('%Y', T3.`Birthday`)) AS age FROM Patient AS T3 WHERE T3.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`GLU` >= 180 AND T2.`T-CHO` < 250 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991.",
    "SELECT T1.`ID`, T2.`GLU` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` IN ( SELECT `ID` FROM Patient WHERE strftime('%Y', `Description`) = '1991' ) AND T2.`GLU` < 180\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order.",
    "SELECT T2.`ID`, T2.`SEX`, T2.`Birthday` FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`WBC` <= 3.5 OR T1.`WBC` >= 9.0 ) ORDER BY T2.`Birthday` ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.",
    "SELECT T1.`ID`, T2.`Diagnosis`, (strftime('%Y', 'now') - strftime('%Y', T2.`Birthday`)) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`RBC` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
    "SELECT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.",
    "SELECT T1.`ID`, T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`HGB` < 10\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.",
    "SELECT T1.`ID`, T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'SLE' AND T2.`HGB` > 10 AND T2.`HGB` < 17 AND T1.`Birthday` = ( SELECT MIN(T3.`Birthday`) FROM Patient AS T3 INNER JOIN Laboratory AS T4 ON T3.`ID` = T4.`ID` WHERE T3.`Diagnosis` = 'SLE' AND T4.`HGB` > 10 AND T4.`HGB` < 17 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "SELECT T2.`ID`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.`Birthday`)) AS age FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`HCT` >= 52 AND T1.`ID` IN ( SELECT `ID` FROM Laboratory GROUP BY `ID` HAVING COUNT(`ID`) > 2 ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range.",
    "SELECT AVG(`HCT`) FROM Laboratory WHERE `Date` LIKE '1991%' AND `HCT` < 29\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
    "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal FROM Laboratory WHERE PLT < 100 OR PLT > 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
    "SELECT T2.`ID` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Date` LIKE '1984%' AND SUBSTR(strftime('%Y-%m-%d', 'now'), 1, 4) - CAST(strftime('%Y', T2.`Birthday`) AS INTEGER) < 50 AND T1.`PLT` BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "SELECT (CAST(SUM(CASE WHEN L.PT >= 14 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_female_abnormal_PT FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', 'now') - strftime('%Y', P.Birthday) > 55 AND P.SEX = 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.",
    "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.`First Date`) > '1992' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?",
    "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` > '1997-01-01' AND T2.`APTT` < 45\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 WHERE T1.`Thrombosis` = 3 AND T1.`ID` IN ( SELECT DISTINCT T2.`ID` FROM Laboratory AS T2 WHERE T2.`APTT` > 45 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
    "SELECT COUNT(DISTINCT T1.`ID`) AS abnormal_fibrinogen_count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`WBC` BETWEEN 3.5 AND 9.0 AND (T2.`FG` <= 150 OR T2.`FG` >= 450)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients born after 1980/1/1 have an abnormal fibrinogen level?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` > '1980-01-01' AND (T2.`FG` < 150 OR T2.`FG` > 450)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the disease names of the patients that have a proteinuria level higher than normal.",
    "SELECT T2.`Diagnosis` FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.`ID` = T1.`ID` WHERE T1.`U-PRO` >= 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.",
    "SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'SLE' AND T2.`U-PRO` IS NOT NULL AND CAST(T2.`U-PRO` AS REAL) > 0 AND CAST(T2.`U-PRO` AS REAL) < 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with an Ig G lower than normal has the symptom of abortion?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`IGG` < 900 AND T2.`Symptoms` = 'abortion'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal Ig G level, how many of them have symptoms?",
    "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T3.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who has the highest Ig A within the normal range, what is his or her diagnosis?",
    "SELECT T2.Diagnosis FROM Patient AS T2 WHERE T2.ID = ( SELECT T1.ID FROM Laboratory AS T1 WHERE T1.IGA = ( SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN 80 AND 500 ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
    "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.`First Date`) >= '1990' AND T2.IGA BETWEEN 80 AND 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`IGM` NOT BETWEEN 40 AND 400 GROUP BY T1.`Diagnosis` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal C-reactive protein don't have their data recorded?",
    "SELECT COUNT(*) FROM Patient AS T1 WHERE T1.`ID` IN ( SELECT T2.`ID` FROM Laboratory AS T2 WHERE T2.`CRP` LIKE '+' OR T2.`CRP` LIKE '-' OR T2.`CRP` < '1.0' ) AND T1.`Description` IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet?",
    "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN ('+-', '-') AND CAST(CASE WHEN T2.CRP LIKE '%+' THEN REPLACE(T2.CRP, '+', '') ELSE T2.CRP END AS REAL) >= 1.0 AND (CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', T1.Birthday) AS INTEGER)) < 18\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`RA` IN ('-', '+') AND T2.`KCT` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor.",
    "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday IS NOT NULL AND T1.Birthday > '1995-01-01' AND T2.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the ID of the patient whose RF is normal and who is older than 60.",
    "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RF < '20' AND (strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) > 60 AND T2.Birthday IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal RF don't have thrombosis?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`RF` IS NOT NULL AND CAST(SUBSTR(T1.`RF`, 2) AS REAL) < 20 AND T2.`Thrombosis` = 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE L.`C3` > 35 AND E.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID.",
    "SELECT E.`ID` FROM Examination AS E WHERE E.`aCL IgA` = ( SELECT MAX(E2.`aCL IgA`) FROM Examination AS E2 WHERE E2.`ID` IN ( SELECT DISTINCT P.`ID` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`GOT` IS NOT NULL OR L.`GPT` IS NOT NULL OR L.`LDH` IS NOT NULL OR L.`ALP` IS NOT NULL -- Placeholder for Hematocrit condition ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Thrombosis` > 0 AND T3.`C4` > 10\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
    "SELECT COUNT(DISTINCT T1.`ID`) AS patient_count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RNP` IN ('-', '0') AND T1.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.",
    "SELECT T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RNP` NOT IN ('-', '+-') AND T1.`Birthday` = ( SELECT MAX(T3.`Birthday`) FROM Patient AS T3 INNER JOIN Laboratory AS T4 ON T3.`ID` = T4.`ID` WHERE T4.`RNP` NOT IN ('-', '+-') )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis?",
    "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Admission` IN ('-', '+-') AND T1.`Thrombosis` = 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SM` NOT IN ('-', '+-') ORDER BY T1.`Birthday` DESC LIMIT 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70.",
    "SELECT DISTINCT T1.`ID` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` >= '1997-01-01' AND T2.`SC170` IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo?",
    "SELECT COUNT(DISTINCT P.`ID`) AS MalePatientsWithVertigo FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`SC170` IN ('-', '+') AND P.`SEX` = 'M' AND (P.`Diagnosis` LIKE '%vertigo%' OR P.`Description` LIKE '%vertigo%')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal anti-SSA came to the hospital before 1990?",
    "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.`First Date`) < '1990' AND T2.SSA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.",
    "SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`ID` IN ( SELECT `ID` FROM Laboratory WHERE `SSA` NOT IN ('-', '+') ) ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-SSB and are diagnosed with SLE in the examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'SLE' AND T2.`SSB` IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 WHERE T1.`Symptoms` IS NOT NULL AND T1.`ID` IN ( SELECT DISTINCT T2.`ID` FROM Examination AS T2 WHERE T2.`Symptoms` IN ('-', '+-') )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "SELECT COUNT(*) FROM Patient AS T1 WHERE T1.`SEX` = 'M' AND T1.`ID` IN ( SELECT T2.`ID` FROM Laboratory AS T2 WHERE T2.`CENTROMEA` IN ('-', '+-') AND T2.`SSB` IN ('-', '+-') )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.",
    "SELECT T2.`Diagnosis` FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.`ID` = T1.`ID` WHERE CAST(T1.`DNA` AS REAL) >= 8\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-DNA level, yet their data are not recorded.",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE CAST(T1.`DNA` AS REAL) < 8 AND T2.`Description` IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`DNA-II` >= 8 AND T1.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE?",
    "SELECT (SELECT COUNT(Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GOT >= 60 AND Patient.Diagnosis = 'SLE') * 1.0 / (SELECT COUNT(Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GOT >= 60) AS percentage_sle_abnormal_got\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have their glutamic oxaloacetic transaminase in the normal range?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?",
    "SELECT MAX(T2.`Birthday`) AS Youngest_Birthday FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`GOT` >= 60 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range.",
    "SELECT T2.`Birthday` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`GPT` < 60 ORDER BY T1.`GPT` DESC LIMIT 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with the normal glutamic pylvic transaminase level, how many of them are male?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GOT` < 60 AND T1.`SEX` = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded?",
    "SELECT MIN(\"First Date\") FROM Patient WHERE ID = ( SELECT T1.ID FROM Laboratory AS T1 WHERE T1.LDH = ( SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500 ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.",
    "SELECT MAX(T2.`First Date`) AS LatestMedicalDataDate FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`LDH` >= 500 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital?",
    "SELECT COUNT(*) FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`ALP` >= 300 ) AND T2.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`ALP` < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diagnosis of the patients whose total protein is lower than normal.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TP` < 6.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who are diagnosed with SJS, how many of them have a normal level of total protein?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'SJS' AND T2.`TP` > 6.0 AND T2.`TP` < 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the examination date of the patient whose albumin is the highest in the normal range?",
    "SELECT E.`Examination Date` FROM Examination AS E INNER JOIN Laboratory AS L ON E.`ID` = L.`ID` WHERE L.`ALB` = ( SELECT MAX(L2.`ALB`) FROM Laboratory AS L2 WHERE L2.`ALB` > 3.5 AND L2.`ALB` < 5.5 ) AND E.`Examination Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have a normal level of both albumin and total protein?",
    "SELECT COUNT(T1.`ID`) AS `NumberOfMalePatients` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`ALB` > 3.5 AND T2.`ALB` < 5.5 AND T2.`TP` BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
    "SELECT E.\"aCL IgG\", E.\"aCL IgM\", E.\"aCL IgA\" FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA = ( SELECT MAX(L2.UA) FROM Laboratory AS L2 INNER JOIN Patient AS P2 ON L2.ID = P2.ID WHERE P2.SEX = 'F' AND L2.UA > 6.50 ) AND E.\"aCL IgG\" IS NOT NULL AND E.\"aCL IgM\" IS NOT NULL AND E.\"aCL IgA\" IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?",
    "SELECT MAX(T3.`ANA`) FROM Examination AS T3 WHERE T3.`ID` IN ( SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CRE` < 1.5 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CRE` < 1.5 AND T1.`aCL IgA` = ( SELECT MAX(`aCL IgA`) FROM Examination AS T3 INNER JOIN Laboratory AS T4 ON T3.`ID` = T4.`ID` WHERE T4.`CRE` < 1.5 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`T-BIL` >= 2.0 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range?",
    "SELECT E.`ANA` FROM Examination AS E INNER JOIN Patient AS P ON E.`ID` = P.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`T-BIL` = ( SELECT MAX(L2.`T-BIL`) FROM Laboratory AS L2 WHERE L2.`T-BIL` < 2.0 ) AND E.`ANA` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE L.`T-CHO` >= 250 AND E.`KCT` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Examination AS T2 INNER JOIN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`T-CHO` < 250 ) AS T3 ON T2.`ID` = T3.`ID` WHERE T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN ( SELECT DISTINCT `ID` FROM Laboratory WHERE `TG` < 200 ) AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Symptoms` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease name of the patient who has the highest level of triglyceride within the normal range?",
    "SELECT T2.Diagnosis FROM Patient AS T2 WHERE T2.ID = ( SELECT T1.ID FROM Laboratory AS T1 WHERE T1.TG = ( SELECT MAX(TG) FROM Laboratory WHERE TG < 200 ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` = 0 AND T2.`CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT T2.`ID`) FROM Examination AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`CPK` < 250 ) AND (T2.`KCT` = '+' OR T2.`RVVT` = '+' OR T2.`LAC` = '+')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the birthday of the oldest patient whose blood glucose is abnormal?",
    "SELECT T2.`Birthday` FROM Patient AS T2 WHERE T2.`Birthday` = ( SELECT MIN(T2.`Birthday`) FROM Patient AS T2 WHERE T2.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`GLU` > 180 ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal blood glucose, how many of them don't have thrombosis?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`GLU` < 180 AND T2.`Thrombosis` = 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients accepted to the hospital have a normal level of white blood cells?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '+' AND T2.`WBC` BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients diagnosed with SLE have a normal white blood cell level?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.",
    "SELECT DISTINCT T1.`ID` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE (T1.`RBC` <= 3.5 OR T1.`RBC` >= 6.0) AND T2.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`PLT` > 100 AND T1.`PLT` < 400 AND T2.`Diagnosis` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.",
    "SELECT T2.`PLT` FROM Laboratory AS T2 INNER JOIN Patient AS T1 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'MCTD' AND T2.`PLT` > 100 AND T2.`PLT` < 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the male patients that have a normal prothrombin time, what is their average prothrombin time?",
    "SELECT AVG(T2.`PT`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`PT` < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with severe thrombosis have a normal prothrombin time?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` IN (1, 2) AND T2.`PT` < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What's Angela Sanders's major?",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `first_name` = 'Angela' AND `last_name` = 'Sanders' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many students in the Student_Club are from the College of Engineering?",
    "SELECT COUNT(*) AS student_count FROM member AS M INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE J.college = 'College of Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the full names of the students in the Student_Club that come from the Art and Design Department.",
    "SELECT m.first_name, m.last_name FROM member m JOIN major j ON m.link_to_major = j.major_id WHERE j.department = 'Art and Design';\t----- bird -----\tstudent_club"
  ],
  [
    "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
    "SELECT COUNT(DISTINCT T1.link_to_member) AS student_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
    "SELECT T3.phone FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size?",
    "SELECT COUNT(*) FROM member AS T1 WHERE T1.member_id IN ( SELECT T2.link_to_member FROM attendance AS T2 INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = \"Women's Soccer\" ) AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the event that has the highest attendance of the students from the Student_Club?",
    "-- SQL Type: SELECT SELECT T2.event_id, T2.event_name FROM event AS T2 INNER JOIN ( SELECT T1.link_to_event, COUNT(T1.link_to_member) AS attendance_count FROM attendance AS T1 GROUP BY T1.link_to_event ) AS attendance_summary ON T2.event_id = attendance_summary.link_to_event WHERE attendance_summary.attendance_count = ( SELECT MAX(attendance_count) FROM ( SELECT COUNT(link_to_member) AS attendance_count FROM attendance GROUP BY link_to_event ) AS inner_summary )\t----- bird -----\tstudent_club"
  ],
  [
    "Which college is the vice president of the Student_Club from?",
    "SELECT `college` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `member_id` = ( SELECT `member_id` FROM member WHERE `position` = 'Vice President' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the event names of all the events attended by Maya Mclean.",
    "SELECT `event_name` FROM event WHERE `event_id` IN ( SELECT `link_to_event` FROM attendance WHERE `link_to_member` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Maya' AND `last_name` = 'Mclean' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "How many events of the Student_Club did Sacha Harrison attend in 2019?",
    "SELECT COUNT(T1.`link_to_event`) AS event_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`link_to_member` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Sacha' AND `last_name` = 'Harrison' ) AND strftime('%Y', T2.`event_date`) = '2019'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "SELECT COUNT(T2.`event_id`) FROM event AS T2 WHERE T2.`event_id` IN ( SELECT T1.`link_to_event` FROM attendance AS T1 GROUP BY T1.`link_to_event` HAVING COUNT(T1.`link_to_member`) > 10 ) AND T2.`type` = 'Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the names of all the events of the Student_Club that had an attendance of over 20 students.",
    "SELECT T1.`event_name` FROM event AS T1 WHERE T1.`event_id` IN ( SELECT T1.`event_id` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` GROUP BY T1.`event_id` HAVING COUNT(T2.`link_to_member`) > 20 )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average attendance of meetings in 2020?",
    "SELECT (SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020') * 1.0 / (SELECT COUNT(DISTINCT event_name) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020') AS average_attendance\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most expensive item that was spent in support of club events?",
    "SELECT expense_description FROM expense WHERE cost = ( SELECT MAX(cost) FROM expense )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have majored Environmental Engineering?\n",
    "SELECT COUNT(*) AS member_count FROM member WHERE `link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Environmental Engineering' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of all the members of the Student_Club who attended the \"Laugh Out Loud\" event.",
    "SELECT CONCAT(T1.`first_name`, ' ', T1.`last_name`) AS full_name FROM member AS T1 WHERE T1.`member_id` IN ( SELECT `link_to_member` FROM attendance WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'Laugh Out Loud' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of all the students who majored Law and Constitutional Studies. \n",
    "SELECT T1.`last_name` FROM member AS T1 WHERE T1.`link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Law and Constitutional Studies' )\t----- bird -----\tstudent_club"
  ],
  [
    "What county did Sherri Ramsey grew up?",
    "SELECT `county` FROM zip_code WHERE `zip_code` = ( SELECT `zip` FROM member WHERE `member_id` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Sherri' AND `last_name` = 'Ramsey' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What college offers the major that Tyler Hewitt took?",
    "SELECT T2.`college` FROM major AS T2 WHERE T2.`major_id` = ( SELECT T1.`link_to_major` FROM member AS T1 WHERE T1.`first_name` = 'Tyler' AND T1.`last_name` = 'Hewitt' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the amount of the funds that the Vice President received?",
    "SELECT SUM(`amount`) AS total_amount FROM income WHERE `link_to_member` = ( SELECT `member_id` FROM member WHERE `position` = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on food in September Meeting?",
    "SELECT SUM(b.`spent`) AS total_spent FROM budget AS b INNER JOIN event AS e ON b.`link_to_event` = e.`event_id` WHERE b.`category` = 'Food' AND e.`event_name` = 'September Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "What city and state did the President of the Student_Club grow up?",
    "SELECT Z.`city`, Z.`state` FROM member AS M INNER JOIN zip_code AS Z ON M.`zip` = Z.`zip_code` WHERE M.`position` = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the Student_Club members that grew up in Illinois state.",
    "SELECT CONCAT(T1.`first_name`, ' ', T1.`last_name`) AS full_name FROM member AS T1 WHERE T1.`zip` IN ( SELECT `zip_code` FROM zip_code WHERE `state` = 'Illinois' )\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on advertisement in September Meeting?",
    "SELECT SUM(`spent`) FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'September Meeting' ) AND `category` = 'Advertisement'\t----- bird -----\tstudent_club"
  ],
  [
    "What department offers the major that Pierce and Guidi took?",
    "SELECT major_id, major_name, department FROM major;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total budgeted amount for all category in \"October Speaker\" event?",
    "SELECT SUM(`amount`) AS total_budgeted_amount FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'October Speaker' )\t----- bird -----\tstudent_club"
  ],
  [
    "Was each expense in October Meeting on October 8, 2019 approved?",
    "SELECT COUNT(*) = 0 AS all_approved FROM expense WHERE `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'October Meeting' AND `event_date` = '2019-10-08' ) ) AND `approved` IS NOT NULL AND `approved` != 'true'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
    "SELECT SUM(cost) / COUNT(expense_id) AS average_cost FROM expense WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND strftime('%m', expense_date) IN ('09', '10')\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.",
    "SELECT (SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE strftime('%Y', T2.event_date) = '2019') - (SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE strftime('%Y', T2.event_date) = '2020') AS difference_spent\t----- bird -----\tstudent_club"
  ],
  [
    "Give the location for \"Spring Budget Review\".",
    "SELECT `location` FROM event WHERE `event_name` = 'Spring Budget Review'\t----- bird -----\tstudent_club"
  ],
  [
    "What was the cost for the \"Posters\" on 2019/9/4?",
    "SELECT `cost` FROM expense WHERE `expense_description` = 'Posters' AND `expense_date` = '2019-09-04'\t----- bird -----\tstudent_club"
  ],
  [
    "With the biggest budget for the \"Food\", what was the remaining of it?",
    "SELECT remaining FROM budget WHERE amount = ( SELECT MAX(amount) FROM budget WHERE category = 'Food' )\t----- bird -----\tstudent_club"
  ],
  [
    "What was the notes of the fundraising on 2019/9/14?",
    "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club"
  ],
  [
    "How many majors are there in \"College of Humanities and Social Sciences\"?",
    "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the phone number of \"Carlo Jacobs\".",
    "SELECT `phone` FROM member WHERE `member_id` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs' )\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the hometown county for \"Adela O'Gallagher\".",
    "SELECT `county` FROM zip_code WHERE `zip_code` = ( SELECT `zip` FROM member WHERE `first_name` = 'Adela' AND `last_name` = 'O''Gallagher' )\t----- bird -----\tstudent_club"
  ],
  [
    "For all the budgets for \"November Meeting\", how many of them had exceeded the budget?",
    "SELECT COUNT(*) FROM budget WHERE `link_to_event` IN ( SELECT `event_id` FROM event WHERE `event_name` = 'November Meeting' ) AND `remaining` < 0\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the total number of the budget amount for \"September Speaker\" event.",
    "SELECT SUM(`amount`) AS total_budget_amount FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'September Speaker' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?",
    "SELECT T3.status FROM event AS T3 WHERE T3.event_id = ( SELECT T2.link_to_event FROM budget AS T2 WHERE T2.budget_id = ( SELECT T1.link_to_budget FROM expense AS T1 WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What was Brent Thomason's major?",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `first_name` = 'Brent' AND `last_name` = 'Thomason' )\t----- bird -----\tstudent_club"
  ],
  [
    "For all the club members from \"Human Development and Family Studies\" major, how many of them wear large size t-shirt?",
    "SELECT COUNT(*) FROM member AS T1 WHERE T1.`t_shirt_size` = 'Large' AND T1.`link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Human Development and Family Studies' )\t----- bird -----\tstudent_club"
  ],
  [
    "What's Christof Nielson's zip code type?",
    "SELECT `type` FROM zip_code WHERE `zip_code` = ( SELECT `zip` FROM member WHERE `first_name` = 'Christof' AND `last_name` = 'Nielson' )\t----- bird -----\tstudent_club"
  ],
  [
    "State the major name for the Vice President of the club.",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `member_id` = ( SELECT `member_id` FROM member WHERE `position` = 'Vice President' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown state for \"Sacha Harrison\"?",
    "SELECT `state` FROM zip_code WHERE `zip_code` = ( SELECT `zip` FROM member WHERE `member_id` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Sacha' AND `last_name` = 'Harrison' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "Which department was the President of the club in?",
    "SELECT `department` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `member_id` = ( SELECT `member_id` FROM member WHERE `position` = 'President' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "State the date Connor Hilton paid his/her dues.",
    "SELECT date_received FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton' ) AND source = 'Dues'\t----- bird -----\tstudent_club"
  ],
  [
    "Who was the first one paid his/her dues? Tell the full name.",
    "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = ( SELECT MIN(date_received) FROM income WHERE source = 'Dues' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
    "SELECT (SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff' AND T1.category = 'Advertisement') / (SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting' AND T1.category = 'Advertisement') AS ratio\t----- bird -----\tstudent_club"
  ],
  [
    "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?",
    "SELECT (SELECT SUM(amount) FROM budget WHERE category = 'Parking' AND link_to_event IN ( SELECT event_id FROM event WHERE event_name = 'November Speaker' )) * 100.0 / (SELECT SUM(amount) FROM budget WHERE link_to_event IN ( SELECT event_id FROM event WHERE event_name = 'November Speaker' )) AS parking_percentage\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total cost of the pizzas for all the events?",
    "SELECT SUM(cost) AS total_cost FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club"
  ],
  [
    "How many cities are there in Orange County, Virginia?",
    "SELECT COUNT(DISTINCT `city`) FROM zip_code WHERE `county` = 'Orange County' AND `state` = 'Virginia'\t----- bird -----\tstudent_club"
  ],
  [
    "List all of the College of Humanities and Social Sciences' departments.",
    "SELECT DISTINCT T1.`department` FROM major AS T1 WHERE T1.`college` = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is Amy Firth's hometown?",
    "SELECT `city`, `county`, `state` FROM zip_code WHERE `zip_code` = ( SELECT `zip` FROM member WHERE `first_name` = 'Amy' AND `last_name` = 'Firth' )\t----- bird -----\tstudent_club"
  ],
  [
    "What are the expenses of the budget with the lowest remaining?",
    "SELECT T1.`expense_description` FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T2.`budget_id` = ( SELECT `budget_id` FROM budget ORDER BY `remaining` ASC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members who attended the event \"October Meeting\".",
    "SELECT T1.* FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'October Meeting' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which college do most of the members go to?",
    "SELECT T2.`college` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` GROUP BY T2.`college` ORDER BY COUNT(T1.`member_id`) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What does the person with the phone number \"809-555-3360\" major in?",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `phone` = '809-555-3360' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the highest budget amount?",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount = ( SELECT MAX(amount) FROM budget )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the expenses incurred by the vice president.",
    "SELECT T1.`expense_description` FROM expense AS T1 WHERE T1.`link_to_member` = ( SELECT `member_id` FROM member WHERE `position` = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members attended the \"Women's Soccer\" event?",
    "SELECT COUNT(DISTINCT T1.link_to_member) AS member_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "When did the member, Casey Mason, received the income?",
    "SELECT `date_received` FROM income WHERE `link_to_member` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Casey' AND `last_name` = 'Mason' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many of the members' hometowns are from Maryland state?",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`state` = 'Maryland'\t----- bird -----\tstudent_club"
  ],
  [
    "How many events did the member with the phone number \"954-555-6240\" attend?",
    "SELECT COUNT(T1.`link_to_event`) AS event_count FROM attendance AS T1 WHERE T1.`link_to_member` = ( SELECT `member_id` FROM member WHERE `phone` = '954-555-6240' )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members of the \"School of Applied Sciences, Technology and Education\" department.",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 WHERE T1.link_to_major IN ( SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education' )\t----- bird -----\tstudent_club"
  ],
  [
    "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "SELECT T1.`event_id`, T1.`event_name`, CAST(T1.`spent` AS REAL) / T1.`amount` AS spend_to_budget_ratio FROM ( SELECT T1.`event_id`, T1.`event_name`, T2.`spent`, T2.`amount` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T1.`status` = 'Closed' ) AS T1 WHERE T1.`amount` > 0 -- Ensure we do not divide by zero ORDER BY spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many student have the position of president?",
    "SELECT COUNT(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the highest amount of budget spend for an event?",
    "SELECT MAX(spent) AS highest_spent FROM budget WHERE spent IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "How many meeting events were held in 2020?",
    "SELECT COUNT(*) FROM event WHERE `type` = 'Meeting' AND strftime('%Y', `event_date`) = '2020'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total amount of money spent for food?",
    "SELECT SUM(spent) AS total_spent FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of students that have attended more than 7 events.",
    "SELECT T1.`first_name`, T1.`last_name` FROM attendance AS T2 INNER JOIN member AS T1 ON T2.`link_to_member` = T1.`member_id` GROUP BY T1.`first_name`, T1.`last_name` HAVING COUNT(T2.`link_to_event`) > 7\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students majored in interior design, who have attended the Community Theater event?",
    "SELECT T3.`first_name`, T3.`last_name` FROM member AS T3 WHERE T3.`member_id` IN ( SELECT T1.`link_to_member` FROM attendance AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'Community Theater' ) AND T3.`member_id` IN ( SELECT T1.`member_id` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Interior Design' )\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of students from Georgetown, South Carolina.",
    "SELECT `first_name`, `last_name` FROM member WHERE `zip` IN ( SELECT `zip_code` FROM zip_code WHERE `city` = 'Georgetown' AND `state` = 'South Carolina' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many income generated by Grant Gilmour?",
    "SELECT SUM(`amount`) FROM income WHERE `link_to_member` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Grant' AND `last_name` = 'Gilmour' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which student was able to generate income more than $40?",
    "SELECT T2.`first_name`, T2.`last_name` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`amount` > 40\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total expense for the Yearly Kickoff?",
    "SELECT SUM(T3.`cost`) AS total_expense FROM expense AS T3 INNER JOIN budget AS T2 ON T3.`link_to_budget` = T2.`budget_id` INNER JOIN event AS T1 ON T2.`link_to_event` = T1.`event_id` WHERE T1.`event_name` = 'Yearly Kickoff'\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has been entrusted to manage the budget for the Yearly Kickoff?",
    "SELECT `first_name`, `last_name` FROM member WHERE `member_id` = ( SELECT `link_to_member` FROM expense WHERE `link_to_budget` = ( SELECT `budget_id` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'Yearly Kickoff' ) ) )\t----- bird -----\tstudent_club"
  ],
  [
    "Which students manage to generate the highest income. State his/her full name along with the income source.",
    "-- SQL script type: SELECT SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount = ( SELECT MAX(amount) FROM income )\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the lowest cost?",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost = ( SELECT MIN(cost) FROM expense )\t----- bird -----\tstudent_club"
  ],
  [
    "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?",
    "SELECT (SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T3.cost ELSE 0 END) / SUM(T3.cost)) * 100 AS percentage_cost_yearly_kickoff FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "What is the ratio between students majored in finance and physics?",
    "SELECT SUM(CASE WHEN T2.major_name = 'Finance' THEN 1 ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN T2.major_name = 'Physics' THEN 1 ELSE 0 END), 0) AS finance_physics_ratio FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the top source of funds received in September 2019 based on their amount.",
    "SELECT source FROM ( SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ) AS subquery ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the full name and email address of the Student_Club's Secretary.",
    "SELECT `first_name`, `last_name`, `email` FROM member WHERE `position` = 'Secretary'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have major in 'Physics Teaching'?",
    "SELECT COUNT(*) FROM member AS T1 WHERE T1.`link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Physics Teaching' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members did attend the event 'Community Theater' in 2019?",
    "SELECT COUNT(DISTINCT T1.`link_to_member`) AS member_count FROM attendance AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'Community Theater' AND strftime('%Y', T2.`event_date`) = '2019'\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the number of events attended by Luisa Guidi. What is her major?",
    "SELECT (SELECT COUNT(T2.`link_to_event`) FROM attendance AS T2 WHERE T2.`link_to_member` = T1.`member_id`) AS event_count, T1.`link_to_major` FROM member AS T1 WHERE T1.`first_name` = 'Luisa' AND T1.`last_name` = 'Guidi'\t----- bird -----\tstudent_club"
  ],
  [
    "On average, how much did the Student_Club spend on food for the typical event in the past?",
    "SELECT (SELECT SUM(T1.`spent`) FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`category` = 'Food' AND T2.`status` = 'Closed') / (SELECT COUNT(T2.`event_id`) FROM event AS T2 WHERE T2.`status` = 'Closed') AS average_spent\t----- bird -----\tstudent_club"
  ],
  [
    "Name the event with the highest amount spent on advertisement.",
    "SELECT T2.event_name FROM event AS T2 WHERE T2.event_id = ( SELECT T1.link_to_event FROM budget AS T1 WHERE T1.category = 'Advertisement' AND T1.spent = ( SELECT MAX(T2.spent) FROM budget AS T2 WHERE T2.category = 'Advertisement' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "Did Maya Mclean attend the 'Women's Soccer' event?",
    "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS attended FROM attendance WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean' ) AND link_to_event = ( SELECT event_id FROM event WHERE event_name = 'Women''s Soccer' )\t----- bird -----\tstudent_club"
  ],
  [
    "Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service'",
    "SELECT (CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) / COUNT(event_id)) * 100 AS percentage_share FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the cost of posters for 'September Speaker' event.",
    "SELECT `cost` FROM expense WHERE `expense_description` = 'Posters' AND `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'September Speaker' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most popular size of t-shirt ordered by the club members?",
    "SELECT t_shirt_size FROM ( SELECT t_shirt_size, COUNT(*) AS size_count FROM member GROUP BY t_shirt_size ) AS size_counts WHERE size_count = ( SELECT MAX(size_count) FROM ( SELECT COUNT(*) AS size_count FROM member GROUP BY t_shirt_size ) AS inner_counts );\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the name of the closed event whose cost has exceeded the budget the most.",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T1.`status` = 'Closed' AND T2.`remaining` < 0 ORDER BY T2.`remaining` ASC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Identify the type of expenses and their total value approved for 'October Meeting' event.",
    "SELECT T4.expense_description, SUM(T4.cost) AS total_value FROM expense AS T4 INNER JOIN budget AS T3 ON T4.link_to_budget = T3.budget_id WHERE T3.link_to_event = ( SELECT event_id FROM event WHERE event_name = 'October Meeting' ) AND T4.approved = 'true' GROUP BY T4.expense_description\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount.",
    "SELECT `category`, `amount` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'April Speaker' ) ORDER BY `amount` ASC\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Food, which one has the highest budgeted amount?",
    "SELECT * FROM budget WHERE category = 'Food' AND amount = ( SELECT MAX(amount) FROM budget WHERE category = 'Food' )\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Advertising, list out top three which have the most budgeted amount?",
    "SELECT * FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total cost spent for Parking in the list.",
    "SELECT SUM(cost) AS total_cost FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the total expense used on 8/20/2019.",
    "SELECT SUM(`cost`) AS total_expense FROM expense WHERE `expense_date` = '2019-08-20'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?",
    "SELECT T1.`first_name`, T1.`last_name`, COALESCE(SUM(T2.`cost`), 0) AS total_cost FROM member AS T1 LEFT JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T1.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY T1.`first_name`, T1.`last_name`\t----- bird -----\tstudent_club"
  ],
  [
    "State what kind of expenses that Sacha Harrison incurred?",
    "SELECT `expense_description` FROM expense WHERE `link_to_member` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Sacha' AND `last_name` = 'Harrison' )\t----- bird -----\tstudent_club"
  ],
  [
    "What kind of expenses incurred by members who have X-Large in size of tee shirt?",
    "SELECT T2.`expense_description` FROM expense AS T2 WHERE T2.`link_to_member` IN ( SELECT `member_id` FROM member WHERE `t_shirt_size` = 'X-Large' )\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the zip code of member who incurred less than 50USD.",
    "SELECT T2.`zip` FROM member AS T2 WHERE T2.`member_id` IN ( SELECT DISTINCT T1.`link_to_member` FROM expense AS T1 WHERE T1.`cost` < 50 )\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Phillip Cullen has joined.",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `first_name` = 'Phillip' AND `last_name` = 'Cullen' )\t----- bird -----\tstudent_club"
  ],
  [
    "List out the position of members who joined major of Business.",
    "SELECT T1.`position` FROM member AS T1 WHERE T1.`link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Business' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of Business have the Medium size of tee shirt?",
    "SELECT COUNT(*) FROM member WHERE `t_shirt_size` = 'Medium' AND `link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Business' )\t----- bird -----\tstudent_club"
  ],
  [
    "List out the type of events which have remaining budget more than 30 USD.",
    "SELECT DISTINCT T2.`type` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`remaining` > 30\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the category of events which were held at MU 215.",
    "SELECT DISTINCT `type` FROM event WHERE `location` = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the category of event which was taken place in 2020-03-24T12:00:00?",
    "SELECT T1.`category` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_date` = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Vice President has joined.",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `link_to_major` FROM member WHERE `position` = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of members who are major Mathematics in the list?",
    "SELECT (CAST(COUNT(T1.member_id) AS REAL) / (SELECT COUNT(member_id) FROM member)) * 100 AS percentage_math_major FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Mathematics'\t----- bird -----\tstudent_club"
  ],
  [
    "State the category of events were held at MU 215.",
    "SELECT DISTINCT `type` FROM event WHERE `location` = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "How many income are received with an amount of 50?",
    "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members, how many of them have an extra large t-shirt size?",
    "SELECT COUNT(*) FROM member WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
    "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of members with a major in environmental engineering and include its department and college name.",
    "SELECT T1.`last_name`, T2.`department`, T2.`college` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_id` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Environmental Engineering' )\t----- bird -----\tstudent_club"
  ],
  [
    "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?",
    "SELECT T2.`category` FROM budget AS T2 INNER JOIN event AS T1 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`spent` = 0 AND T1.`location` = 'MU 215' AND T1.`type` = 'Guest Speaker'\t----- bird -----\tstudent_club"
  ],
  [
    "List the city and state of members enrolled under electrical and computer engineering department.",
    "SELECT DISTINCT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` INNER JOIN member AS T3 ON T2.`link_to_member` = T3.`member_id` INNER JOIN zip_code AS T4 ON T3.`zip` = T4.`zip_code` WHERE T3.`position` = 'Vice President' AND T1.`type` = 'Social' AND T1.`location` = '900 E. Washington St.'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the last name and position of the student that bought pizza on 09/10/2019?",
    "SELECT T1.`last_name`, T1.`position` FROM member AS T1 WHERE T1.`member_id` = ( SELECT `link_to_member` FROM expense WHERE `expense_description` = 'Pizza' AND `expense_date` = '2019-09-10' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of the members of the club that attended the women's soccer event.",
    "SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?",
    "SELECT (COUNT(CASE WHEN T2.amount = 50 THEN 1 END) * 100.0 / COUNT(T1.member_id)) AS percentage FROM member AS T1 LEFT JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "Which countries have zip codes with post office boxes?",
    "SELECT DISTINCT `state` FROM zip_code WHERE `type` = 'PO Box'\t----- bird -----\tstudent_club"
  ],
  [
    "What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico?",
    "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club"
  ],
  [
    "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
    "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club"
  ],
  [
    "Please provide links to events for members who have paid more than 50 dollar.",
    "SELECT DISTINCT T1.link_to_event FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.member_id IN ( SELECT DISTINCT T3.link_to_member FROM expense AS T3 WHERE T3.cost > 50 )\t----- bird -----\tstudent_club"
  ],
  [
    "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
    "SELECT T1.`member_id`, T1.`first_name`, T1.`last_name`, T2.`link_to_event` FROM member AS T1 INNER JOIN expense AS T3 ON T1.`member_id` = T3.`link_to_member` INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T3.`approved` = 'true' AND T3.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club"
  ],
  [
    "Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".",
    "SELECT T2.`college` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Katy' AND T1.`link_to_major` = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences.",
    "SELECT T1.phone FROM member AS T1 WHERE T1.link_to_major = ( SELECT major_id FROM major WHERE major_name = 'Business' AND college = 'College of Agriculture and Applied Sciences' )\t----- bird -----\tstudent_club"
  ],
  [
    "List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019.",
    "SELECT T2.`email` FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND T1.`cost` > 20\t----- bird -----\tstudent_club"
  ],
  [
    "How many members have education major in the College of Education & Human Services?",
    "SELECT COUNT(*) FROM member AS T1 WHERE T1.`link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'education' AND `college` = 'College of Education & Human Services' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the events that went over budget?",
    "SELECT (CAST(SUM(CASE WHEN b.remaining < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(e.event_id)) * 100 AS percentage_over_budget FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id\t----- bird -----\tstudent_club"
  ],
  [
    "Give the event ID, location, and status of events conducted from November 2019 to March 2020.",
    "SELECT `event_id`, `location`, `status` FROM event WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31' AND `location` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "List the expenses that spend more than fifty dollars on average.",
    "SELECT expense_description, SUM(cost) AS total_cost, COUNT(expense_id) AS expense_count FROM expense GROUP BY expense_description HAVING (SUM(cost) / COUNT(expense_id)) > 50\t----- bird -----\tstudent_club"
  ],
  [
    "Find the full name of members whose t-shirt size is extra large.",
    "SELECT `first_name`, `last_name` FROM member WHERE `t_shirt_size` = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of zip codes that are PO boxes.",
    "SELECT (CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) / COUNT(zip_code)) * 100 AS percentage_po_boxes FROM zip_code\t----- bird -----\tstudent_club"
  ],
  [
    "List the name and location of events that underspend its budget.",
    "SELECT T1.`event_name`, T1.`location` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`remaining` > 0\t----- bird -----\tstudent_club"
  ],
  [
    "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
    "SELECT E.event_name, E.event_date FROM event AS E JOIN budget AS B ON E.event_id = B.link_to_event JOIN expense AS Ex ON B.budget_id = Ex.link_to_budget WHERE Ex.expense_description = 'Pizza' AND Ex.cost > 50 AND Ex.cost < 100\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name and major of members who had to spend more than a hundred dollars on an expense?",
    "SELECT T2.`first_name`, T2.`last_name`, T3.`major_name` FROM member AS T2 INNER JOIN major AS T3 ON T2.`link_to_major` = T3.`major_id` WHERE T2.`member_id` IN ( SELECT T1.`link_to_member` FROM expense AS T1 WHERE T1.`cost` > 100 )\t----- bird -----\tstudent_club"
  ],
  [
    "In the events with more than forty incomes, list the city and country in which the event is happening.",
    "SELECT DISTINCT Z.city, Z.county FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event INNER JOIN member AS M ON A.link_to_member = M.member_id INNER JOIN zip_code AS Z ON M.zip = Z.zip_code INNER JOIN income AS I ON A.link_to_member = I.link_to_member GROUP BY E.event_id, Z.city, Z.county HAVING COUNT(I.income_id) > 40;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members who incurred expenses in more than one event, who paid the most amount?",
    "SELECT T2.`first_name`, T2.`last_name`, T1.`cost` FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`cost` = ( SELECT MAX(T1.`cost`) FROM expense AS T1 WHERE T1.`link_to_member` IN ( SELECT T1.`link_to_member` FROM expense AS T1 GROUP BY T1.`link_to_member` HAVING COUNT(DISTINCT T1.`link_to_budget`) > 1 ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average amount paid by students in a position other than a member?",
    "SELECT SUM(T4.cost) / COUNT(T4.expense_id) AS average_amount FROM member AS T1 INNER JOIN expense AS T4 ON T1.member_id = T4.link_to_member WHERE T1.position != 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of events with less than average parking cost.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost < ( SELECT AVG(T4.cost) FROM expense AS T4 INNER JOIN budget AS T5 ON T4.link_to_budget = T5.budget_id WHERE T5.category = 'Parking' AND T4.cost IS NOT NULL ) AND T3.cost IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the cost for the game events?",
    "SELECT (SUM(T3.`cost`) * 100.0 / COUNT(T1.`event_id`)) AS percentage_cost FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` INNER JOIN expense AS T3 ON T2.`link_to_member` = T3.`link_to_member` WHERE T1.`type` = 'Game'\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget allowed the most money for water, chips, and cookies?",
    "SELECT T2.`budget_id` FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T1.`expense_description` = 'Water, chips, cookies' AND T1.`cost` = ( SELECT MAX(`cost`) FROM expense WHERE `expense_description` = 'Water, chips, cookies' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the top five members who spend the most money in the descending order of spending.",
    "SELECT T3.`first_name`, T3.`last_name` FROM ( SELECT T2.`link_to_member`, SUM(T2.`cost`) AS total_spent FROM expense AS T2 GROUP BY T2.`link_to_member` ) AS T1 INNER JOIN member AS T3 ON T1.`link_to_member` = T3.`member_id` ORDER BY T1.total_spent DESC LIMIT 5\t----- bird -----\tstudent_club"
  ],
  [
    "Give the full name and contact number of members who had to spend more than average on each expense.",
    "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference in the percentage of members in Maine and Vermont.",
    "SELECT (SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM member WHERE position = 'Member')) FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maine') - (SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM member WHERE position = 'Member')) FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Vermont') AS difference_percentage\t----- bird -----\tstudent_club"
  ],
  [
    "What is the major of Garrett Gerke and which department does it belong to?",
    "SELECT T2.`major_name`, T2.`department` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Garrett' AND T1.`last_name` = 'Gerke'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
    "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last names of students under the Elementary Education major and include their phone numbers.",
    "SELECT T1.`last_name`, T1.`phone` FROM member AS T1 WHERE T1.`link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Elementary Education' )\t----- bird -----\tstudent_club"
  ],
  [
    "What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?",
    "SELECT `category`, `amount` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'January Speaker' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the event names which were budgeted for the food.",
    "SELECT T1.`event_name` FROM event AS T1 WHERE T1.`event_id` IN ( SELECT `link_to_event` FROM budget WHERE `category` = 'Food' )\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
    "SELECT T2.`first_name`, T2.`last_name`, T1.`amount` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`date_received` = '2019-09-09'\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget category does the expense 'Posters' fall to?",
    "SELECT `category` FROM budget WHERE `budget_id` = ( SELECT `link_to_budget` FROM expense WHERE `expense_description` = 'Posters' )\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to.",
    "SELECT T1.`first_name`, T1.`last_name`, T2.`college` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`position` = 'Secretary'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total amount spent on speaker gifts and list the name of the event they were spent on.",
    "SELECT T2.`event_name` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`category` = 'Speaker Gifts'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown of Garrett Girke?",
    "SELECT DISTINCT z.city FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Garrett' AND m.last_name = 'Girk' AND m.zip IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position.",
    "SELECT T1.`first_name`, T1.`last_name`, T1.`position` FROM member AS T1 WHERE T1.`member_id` IN ( SELECT T1.`member_id` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`city` = 'Lincolnton' AND T2.`state` = 'North Carolina' AND T2.`zip_code` = '28092' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many gas stations in CZE has Premium gas?",
    "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the ratio of costumers who pay in EUR against customers who pay in CZK?",
    "SELECT SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS EUR_to_CZK_Ratio FROM customers\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In 2012, who had the least consumption in LAM?",
    "SELECT `CustomerID` FROM ( SELECT `CustomerID`, SUM(`Consumption`) AS total_consumption FROM yearmonth WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Segment` = 'LAM' ) AND `Date` BETWEEN '201201' AND '201212' GROUP BY `CustomerID` ) AS consumption_data ORDER BY total_consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the average monthly consumption of customers in SME for the year 2013?",
    "SELECT AVG(y.`Consumption`) / 12 AS AverageMonthlyConsumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31' AND y.Consumption IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customers, paying in CZK, consumed the most gas in 2011?",
    "-- SQL Type: SELECT SELECT T1.CustomerID FROM ( SELECT T1.CustomerID, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '2011-01-01' AND '2011-12-31' GROUP BY T1.CustomerID ) AS T1 WHERE T1.TotalConsumption = ( SELECT MAX(TotalConsumption) FROM ( SELECT SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '2011-01-01' AND '2011-12-31' GROUP BY T1.CustomerID ) AS T2 );\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many customers in KAM had a consumption of less than 30,000 for the year 2012?",
    "SELECT COUNT(DISTINCT T1.`CustomerID`) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'KAM' AND T2.`Consumption` < 30000 AND T2.`Date` BETWEEN '2012-01-01' AND '2012-12-31'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "SELECT (SELECT SUM(Y.`Consumption`) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.`CustomerID` = C.`CustomerID` WHERE C.`Currency` = 'CZK' AND Y.`Date` BETWEEN '201201' AND '201212') - (SELECT SUM(Y.`Consumption`) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.`CustomerID` = C.`CustomerID` WHERE C.`Currency` = 'EUR' AND Y.`Date` BETWEEN '201201' AND '201212') AS Consumption_Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most gas use paid in EUR?",
    "SELECT Year FROM ( SELECT strftime('%Y', T1.`Date`) AS Year, SUM(T1.`Amount`) AS TotalGasUse FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Currency` = 'EUR' GROUP BY Year ) ORDER BY TotalGasUse DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which segment had the least consumption?",
    "SELECT C.`Segment` FROM customers AS C INNER JOIN yearmonth AS Y ON C.`CustomerID` = Y.`CustomerID` GROUP BY C.`Segment` ORDER BY SUM(Y.`Consumption`) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most consumption of gas paid in CZK?",
    "SELECT Year FROM ( SELECT SUBSTR(T1.Date, 1, 4) AS Year, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY Year ) AS YearlyConsumption ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the gas consumption peak month for SME customers in 2013?",
    "SELECT `Month` FROM ( SELECT strftime('%Y-%m', T2.`Date`) AS `Month`, SUM(T2.`Consumption`) AS `TotalConsumption` FROM yearmonth AS T2 INNER JOIN customers AS T1 ON T2.`CustomerID` = T1.`CustomerID` WHERE T1.`Segment` = 'SME' AND T2.`Date` LIKE '2013%' GROUP BY `Month` ) AS MonthlyConsumption ORDER BY `TotalConsumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "WITH SME AS ( SELECT AVG(COALESCE(T1.Consumption, 0)) AS Avg_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date BETWEEN '201301' AND '201312' GROUP BY T2.CustomerID ORDER BY AVG(COALESCE(T1.Consumption, 0)) ASC LIMIT 1 ), LAM AS ( SELECT AVG(COALESCE(T1.Consumption, 0)) AS Avg_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T1.Date BETWEEN '201301' AND '201312' GROUP BY T2.CustomerID ORDER BY AVG(COALESCE(T1.Consumption, 0)) ASC LIMIT 1 ), KAM AS ( SELECT AVG(COALESCE(T1.Consumption, 0)) AS Avg_Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date BETWEEN '201301' AND '201312' GROUP BY T2.CustomerID ORDER BY AVG(COALESCE(T1.Consumption, 0)) ASC LIMIT 1 ) SELECT (SELECT Avg_Consumption FROM SME) - (SELECT Avg_Consumption FROM LAM) AS SME_LAM_Difference, (SELECT Avg_Consumption FROM LAM) - (SELECT Avg_Consumption FROM KAM) AS LAM_KAM_Difference, (SELECT Avg_Consumption FROM KAM) - (SELECT Avg_Consumption FROM SME) AS KAM_SME_Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "-- Script Type: SQL -- Query to find the segment with the biggest and lowest percentage increase in consumption paid in EUR between 2012 and 2013 WITH ConsumptionData AS ( SELECT C.Segment, SUM(Y.Consumption) AS TotalConsumption, STRFTIME('%Y', Y.Date) AS Year FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE Y.Date BETWEEN '2012-01-01' AND '2013-12-31' AND C.Currency = 'EUR' AND Y.Consumption IS NOT NULL -- Filter out NULL consumption values GROUP BY C.Segment, Year ), PercentageData AS ( SELECT Segment, ((SUM(CASE WHEN Year = '2013' THEN TotalConsumption ELSE 0 END) - SUM(CASE WHEN Year = '2012' THEN TotalConsumption ELSE 0 END)) / NULLIF(SUM(CASE WHEN Year = '2013' THEN TotalConsumption ELSE 0 END), 0)) * 100 AS PercentageIncrease FROM ConsumptionData GROUP BY Segment ) SELECT Segment, PercentageIncrease FROM PercentageData WHERE PercentageIncrease IS NOT NULL -- Ensure no NULL values in final calculations ORDER BY PercentageIncrease DESC LIMIT 1; -- For the biggest increase -- To get the lowest percentage increase, you can run a similar query with ORDER BY PercentageIncrease ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did customer 6 consume in total between August and November 2013?",
    "SELECT SUM(`Consumption`) AS TotalConsumption FROM yearmonth WHERE `CustomerID` = 6 AND `Date` BETWEEN '2013-08-01' AND '2013-11-30' AND `Consumption` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "SELECT (SELECT COUNT(*) FROM gasstations WHERE Segment = 'Discount' AND Country = 'CZE') - (SELECT COUNT(*) FROM gasstations WHERE Segment = 'Discount' AND Country = 'SVK') AS difference_discount_stations\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much more was customer 7 consuming in April 2013 than customer 5?",
    "SELECT (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '201304') - (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304') AS ConsumptionDifference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "SELECT CASE WHEN (SELECT COUNT(DISTINCT T1.`CustomerID`) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' AND T1.`Currency` = 'CZK') > (SELECT COUNT(DISTINCT T1.`CustomerID`) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' AND T1.`Currency` = 'EUR') THEN 'True' ELSE 'False' END AS IsMoreCZK, (SELECT COUNT(DISTINCT T1.`CustomerID`) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' AND T1.`Currency` = 'CZK') - (SELECT COUNT(DISTINCT T1.`CustomerID`) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' AND T1.`Currency` = 'EUR') AS Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?",
    "SELECT T1.CustomerID FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND strftime('%Y%m', T2.Date) = '201310' AND T2.Consumption = ( SELECT MAX(T3.Consumption) FROM yearmonth AS T3 JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T4.Segment = 'LAM' AND T4.Currency = 'EUR' AND strftime('%Y%m', T3.Date) = '201310' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who among KAM's customers consumed the most? How much did it consume?",
    "SELECT T1.`CustomerID`, SUM(T2.`Consumption`) AS TotalConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'KAM' GROUP BY T1.`CustomerID` ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did the KAM customers consume in total in May 2013?",
    "SELECT SUM(`Consumption`) FROM yearmonth WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Segment` = 'KAM' ) AND `Date` = 201305\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many percent of LAM customer consumed more than 46.73?",
    "SELECT (CAST(SUM(CASE WHEN T2.`Consumption` > 46.73 THEN 1 ELSE 0 END) AS REAL) / NULLIF(COUNT(DISTINCT T1.`CustomerID`), 0)) * 100 AS percentage FROM customers AS T1 LEFT JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'LAM'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.",
    "SELECT `Country`, COUNT(*) AS `TotalValueForMoney` FROM gasstations WHERE `Segment` = 'Value for money' GROUP BY `Country` ORDER BY `TotalValueForMoney` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of KAM customers pay in euros?",
    "SELECT (CAST(COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS percentage_kam_euro FROM customers WHERE Segment = 'KAM'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In February 2012, what percentage of customers consumed more than 528.3?",
    "SELECT (CAST(COUNT(DISTINCT CASE WHEN `Consumption` > 528.3 THEN `CustomerID` END) AS REAL) / COUNT(DISTINCT `CustomerID`)) * 100 AS percentage FROM yearmonth WHERE `Date` LIKE '201202%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of Slovakian gas stations are premium?",
    "SELECT (CAST(COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS premium_percentage FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client ID consumed the most in September 2013?",
    "SELECT CustomerID FROM ( SELECT CustomerID, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Date = '201309' GROUP BY CustomerID ) ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client segment consumed the least in September 2013?",
    "SELECT C.Segment FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE Y.Date = '201309' GROUP BY C.Segment ORDER BY SUM(Y.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which SME customer consumed the least in June 2012?",
    "SELECT T1.`CustomerID` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' AND T2.`Date` = '201206' ORDER BY T2.`Consumption` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the highest monthly consumption in the year 2012?",
    "SELECT MAX(Consumption) FROM yearmonth WHERE strftime('%Y', Date) = '2012' AND Consumption IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the biggest monthly consumption of the customers who use euro as their currency?",
    "SELECT MAX(MonthlyConsumption) AS BiggestMonthlyConsumption FROM ( SELECT SUM(T2.`Consumption`) / 12 AS MonthlyConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Currency` = 'EUR' GROUP BY T1.`CustomerID` ) AS MonthlyConsumptions\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products consumed in September, 2013.",
    "SELECT DISTINCT T3.Description FROM products AS T3 JOIN transactions_1k AS T1 ON T3.ProductID = T1.ProductID WHERE T1.Date BETWEEN '2013-09-01' AND '2013-09-30'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "SELECT COUNT(*) FROM transactions_1k WHERE Date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the chains of the gas stations with transactions in euro.",
    "SELECT DISTINCT T2.`ChainID` FROM gasstations AS T2 WHERE T2.`GasStationID` IN ( SELECT DISTINCT T1.`GasStationID` FROM transactions_1k AS T1 WHERE T1.`CustomerID` IN ( SELECT DISTINCT T3.`CustomerID` FROM transactions_1k AS T3 INNER JOIN customers AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Currency` = 'EUR' ) )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products bought in transactions in euro.",
    "SELECT T3.`Description` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN products AS T3 ON T1.`ProductID` = T3.`ProductID` WHERE T2.`Currency` = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in January, 2012?",
    "SELECT AVG(Price) AS average_price FROM transactions_1k WHERE Date LIKE '2012-01%' AND Price IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "SELECT COUNT(DISTINCT T1.`CustomerID`) AS CustomerCount FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Currency` = 'EUR' AND T2.`Consumption` > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "SELECT DISTINCT T3.`Description` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN products AS T3 ON T1.`ProductID` = T3.`ProductID` WHERE T2.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "SELECT DISTINCT `Time` FROM transactions_1k WHERE `GasStationID` IN ( SELECT `GasStationID` FROM gasstations WHERE `ChainID` = 11 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?",
    "SELECT COUNT(*) FROM transactions_1k WHERE `GasStationID` IN ( SELECT `GasStationID` FROM gasstations WHERE `Country` = 'CZE' ) AND `Price` > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "SELECT COUNT(*) FROM transactions_1k WHERE `GasStationID` IN ( SELECT `GasStationID` FROM gasstations WHERE `Country` = 'CZE' ) AND `Date` > '2012-01-01'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in gas stations in the Czech Republic?",
    "SELECT AVG(T1.`Price`) AS average_price FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customers who paid in the euro, what is their average total price of the transactions?",
    "SELECT SUM(`Price`) / COUNT(*) AS average_total_price FROM transactions_1k WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Currency` = 'EUR' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customer paid the most in 2012/8/25?",
    "SELECT `CustomerID` FROM ( SELECT `CustomerID`, SUM(`Price`) AS total_payment FROM transactions_1k WHERE `Date` = '2012-08-25' GROUP BY `CustomerID` ORDER BY total_payment DESC LIMIT 1 ) AS max_payment\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country's gas station had the first paid cusomer in 2012/8/25?",
    "SELECT `Country` FROM gasstations WHERE `GasStationID` = ( SELECT `GasStationID` FROM transactions_1k WHERE `Date` = '2012-08-25' AND `TransactionID` = ( SELECT MIN(`TransactionID`) FROM transactions_1k WHERE `Date` = '2012-08-25' ) )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "SELECT T1.`Currency` FROM customers AS T1 WHERE T1.`CustomerID` = ( SELECT `CustomerID` FROM transactions_1k WHERE `Date` = '2012-08-24' AND `Time` = '16:25:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What segment did the customer have at 2012/8/23 21:20:00?",
    "SELECT T2.`Segment` FROM customers AS T2 WHERE T2.`CustomerID` = ( SELECT T1.`CustomerID` FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-23' AND T1.`Time` = '21:20:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions were paid in EUR in the morning of 2012/8/26?",
    "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` = '2012-08-26' AND T1.`Time` < '13:00:00' AND T2.`Currency` = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the earliest customer, what segment did he/she have?",
    "SELECT T2.`Segment` FROM customers AS T2 WHERE T2.`CustomerID` = ( SELECT T1.`CustomerID` FROM transactions_1k AS T1 ORDER BY T1.`Date` ASC LIMIT 1 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the deal happened at 2012/8/24 12:42:00, which country was it?",
    "SELECT T2.`Country` FROM gasstations AS T2 WHERE T2.`GasStationID` = ( SELECT T1.`GasStationID` FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-24' AND T1.`Time` = '12:42:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the product id of the transaction happened at 2012/8/23 21:20:00?",
    "SELECT T1.`ProductID` FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-23' AND T1.`Time` = '21:20:00'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",
    "-- SQL Type: SELECT SELECT T1.`Date`, SUM(T1.`Price`) AS TotalSpent FROM transactions_1k AS T1 WHERE T1.`CustomerID` = ( SELECT T2.`CustomerID` FROM transactions_1k AS T2 WHERE T2.`Price` = 124.05 AND T2.`Date` = '2012-08-24' ) AND T1.`Date` >= '2012-01-01' AND T1.`Date` < '2012-02-01' GROUP BY T1.`Date`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "SELECT COUNT(T1.`TransactionID`) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`Date` = '2012-08-26' AND T1.`Time` BETWEEN '08:00:00' AND '09:00:00' AND T2.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",
    "SELECT * FROM customers;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country was the card owner of No.667467 in?",
    "SELECT T2.`Country` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`CustomerID` = ( SELECT `CustomerID` FROM transactions_1k WHERE `CardID` = 667467 LIMIT 1 ) LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "SELECT DISTINCT CustomerID FROM transactions_1k WHERE Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of the customers who used EUR in 2012/8/25?",
    "SELECT (COUNT(DISTINCT T1.`CustomerID`) * 100.0 / NULLIF((SELECT COUNT(DISTINCT T1.`CustomerID`) FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-25'), 0)) AS percentage FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` = '2012-08-25' AND T2.`Currency` = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "-- Script Type: SQL SELECT (SUM(CASE WHEN strftime('%Y', T2.`Date`) = '2012' THEN T2.`Consumption` ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.`Date`) = '2013' THEN T2.`Consumption` ELSE 0 END)) * 1.0 / NULLIF(SUM(CASE WHEN strftime('%Y', T2.`Date`) = '2012' THEN T2.`Consumption` ELSE 0 END), 0) AS consumption_decrease_rate FROM yearmonth AS T2 WHERE T2.`CustomerID` = ( SELECT T1.`CustomerID` FROM transactions_1k AS T1 WHERE T1.`Price` = 634.8 AND T1.`Date` = '2012-08-25' ) AND T2.`Consumption` IS NOT NULL GROUP BY T2.`CustomerID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which gas station has the highest amount of revenue?",
    "SELECT GasStationID FROM ( SELECT GasStationID, SUM(Price) AS TotalRevenue FROM transactions_1k GROUP BY GasStationID ) AS RevenueTable ORDER BY TotalRevenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of \"premium\" against the overall segment in \"SVK\"?",
    "SELECT (CAST(COUNT(DISTINCT g.GasStationID) AS REAL) / NULLIF(COUNT(DISTINCT g_all.GasStationID), 0)) * 100 AS premium_percentage FROM gasstations g JOIN gasstations g_all ON g_all.Country = 'SVK' WHERE g.Country = 'SVK' AND g.Segment = 'Premium' AND g.GasStationID IS NOT NULL AND g_all.GasStationID IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "-- SQL to get total amount spent and amount spent in January 2012 by customer \"38508\" SELECT 'TotalAmountSpent' AS Description, SUM(T1.Amount) AS Amount FROM transactions_1k AS T1 WHERE T1.CustomerID = '38508' AND T1.Amount IS NOT NULL UNION ALL SELECT 'AmountSpentInJanuary2012' AS Description, SUM(T1.Amount) AS Amount FROM transactions_1k AS T1 WHERE T1.CustomerID = '38508' AND T1.Amount IS NOT NULL AND T1.Date >= '2012-01-01' AND T1.Date < '2012-02-01';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which are the top five best selling products? Please state the full name of them.",
    "SELECT T3.`Description` FROM ( SELECT T3.`ProductID`, SUM(T1.`Amount`) AS total_sales FROM transactions_1k AS T1 INNER JOIN products AS T3 ON T1.`ProductID` = T3.`ProductID` GROUP BY T3.`ProductID` ) AS sales_summary INNER JOIN products AS T3 ON sales_summary.`ProductID` = T3.`ProductID` ORDER BY total_sales DESC LIMIT 5\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "SELECT T3.`Currency` FROM customers AS T3 WHERE T3.`CustomerID` = ( SELECT T2.`CustomerID` FROM transactions_1k AS T2 GROUP BY T2.`CustomerID` ORDER BY SUM(T2.`Price`) DESC LIMIT 1 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country had the gas station that sold the most expensive product id No.2 for one unit?",
    "SELECT T2.`Country` FROM gasstations AS T2 WHERE T2.`GasStationID` = ( SELECT T1.`GasStationID` FROM transactions_1k AS T1 WHERE T1.`ProductID` = 2 AND T1.`Price` = ( SELECT MAX(`Price`) FROM transactions_1k WHERE `ProductID` = 2 ) )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "SELECT T2.`CustomerID`, T2.`Consumption` FROM yearmonth AS T2 WHERE T2.`CustomerID` IN ( SELECT DISTINCT T1.`CustomerID` FROM transactions_1k AS T1 WHERE T1.`ProductID` = 5 AND (T1.`Price` / T1.`Amount`) > 29.00 ) AND T2.`Date` LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
  ]
]