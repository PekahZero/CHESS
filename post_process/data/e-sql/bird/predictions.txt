SELECT MAX(CAST(`frpm`.`Free Meal Count (K-12)` AS REAL) / `frpm`.`Enrollment (K-12)`) AS eligible_free_rate FROM `frpm` WHERE `frpm`.`County Name` = 'Alameda' AND `frpm`.`Enrollment (K-12)` IS NOT NULL AND `frpm`.`Free Meal Count (K-12)` IS NOT NULL
SELECT CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / CAST(T1.`Enrollment (Ages 5-17)` AS REAL) AS eligible_free_rate FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Educational Option Type` = 'Continuation School' AND T1.`Enrollment (Ages 5-17)` IS NOT NULL AND T1.`Free Meal Count (Ages 5-17)` IS NOT NULL ORDER BY eligible_free_rate ASC LIMIT 3
SELECT DISTINCT `schools`.`Zip` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `frpm`.`County Name` = 'Fresno'
SELECT `schools`.`MailStreet` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT `schools`.`Phone` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `schools`.`FundingType` = 'Directly funded' AND `schools`.`OpenDate` > '2000-01-01'
SELECT COUNT(*) FROM `schools` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrMath` < 400 AND T1.`Virtual` = 'F'
SELECT `schools`.`School` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumTstTakr` > 500 AND `schools`.`Magnet` = 1
SELECT T2.Phone FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 > 0 ORDER BY T1.NumTstTakr DESC LIMIT 1
SELECT T2.`NumTstTakr` FROM `satscores` AS T2 INNER JOIN `frpm` AS T1 ON T1.`CDSCode` = T2.`cds` WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(T3.`FRPM Count (K-12)`) FROM `frpm` AS T3)
SELECT COUNT(*) FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T1.`AvgScrMath` > 560 AND T2.`FundingType` = 'Directly funded'
SELECT T1.`FRPM Count (Ages 5-17)` FROM `frpm` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` ORDER BY T2.`AvgScrRead` DESC LIMIT 1
SELECT `CDSCode` FROM `frpm` WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500
SELECT MAX((`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`)) FROM `frpm` AS `T1` INNER JOIN `satscores` AS `T2` ON `T1`.`CDSCode` = `T2`.`cds` WHERE (`T2`.`NumGE1500` * 1.0 / `T2`.`NumTstTakr`) > 0.3 AND `T1`.`Enrollment (Ages 5-17)` IS NOT NULL AND `T1`.`Enrollment (Ages 5-17)` > 0
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumTstTakr` IS NOT NULL AND `satscores`.`NumGE1500` IS NOT NULL ORDER BY (CAST(`satscores`.`NumGE1500` AS REAL) / CAST(`satscores`.`NumTstTakr` AS REAL)) DESC LIMIT 3
SELECT `schools`.`NCESSchool` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (Ages 5-17)` DESC LIMIT 5
SELECT `schools`.`District`, AVG(`satscores`.`AvgScrRead`) AS `AvgReadScore` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`StatusType` = 'Active' GROUP BY `schools`.`District` ORDER BY `AvgReadScore` DESC LIMIT 1
SELECT COUNT(*) FROM `schools` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`StatusType` = 'Merged' AND T1.`County` = 'Alameda' AND T2.`NumTstTakr` < 100
SELECT `schools`.`CharterNum` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrWrite` = 499
SELECT COUNT(*) FROM `schools` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Contra Costa' AND T1.`FundingType` = 'Directly funded' AND T2.`NumTstTakr` <= 250
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1
SELECT COUNT(*) FROM `schools` WHERE `County` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'
SELECT COUNT(*) FROM `frpm` WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)` < 700
SELECT `T2`.`School`, `T1`.`NumTstTakr` FROM `satscores` AS `T1` INNER JOIN `schools` AS `T2` ON `T1`.`cds` = `T2`.`CDSCode` WHERE `T1`.`cname` = 'Contra Costa' ORDER BY `T1`.`NumTstTakr` DESC LIMIT 1
SELECT T1.`School Name`, T2.`Street` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > 30
SELECT T2.`sname` FROM `satscores` AS T2 INNER JOIN `frpm` AS T1 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.`NumGE1500` > 0
SELECT `schools`.`School`, `schools`.`FundingType` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Riverside' GROUP BY `schools`.`School` HAVING AVG(`satscores`.`AvgScrMath`) > 400
SELECT `schools`.`School`, `schools`.`Street`, `schools`.`City`, `schools`.`Zip`, `schools`.`State` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`County Name` = 'Monterey' AND `frpm`.`High Grade` = '13' AND `frpm`.`Free Meal Count (Ages 5-17)` > 800
SELECT `schools`.`School`, AVG(`satscores`.`AvgScrWrite`) AS `Average_Writing_Score`, `schools`.`Phone` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE (`schools`.`OpenDate` > '1991-01-01' OR `schools`.`ClosedDate` < '2000-01-01') GROUP BY `schools`.`School`
SELECT `frpm`.`School Name`, `schools`.`DOCType` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM `frpm` WHERE `frpm`.`FundingType` = 'Locally funded')
SELECT `T1`.`OpenDate` FROM `schools` AS `T1` INNER JOIN `frpm` AS `T2` ON `T1`.`CDSCode` = `T2`.`CDSCode` WHERE `T2`.`School Type` = 'K-12 Schools (Public)' AND `T2`.`Enrollment (K-12)` IS NOT NULL ORDER BY `T2`.`Enrollment (K-12)` DESC LIMIT 1
SELECT `schools`.`City`, `frpm`.`Enrollment (K-12)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Enrollment (K-12)` IS NOT NULL ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 5
SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` AS `Eligible Free Rate` FROM `frpm` ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9
SELECT T1.`School Name`, (T1.`FRPM Count (K-12)` / T1.`Enrollment (K-12)`) AS `Eligible Free or Reduced Price Meal Rate` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`SOC` = 66 ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 5
SELECT T1.`School Name`, T2.`Website` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000
SELECT CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)` AS `Eligible Free Rate` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`AdmFName1` = 'Kacey' AND T2.`AdmLName1` = 'Gibson' AND T1.`Enrollment (Ages 5-17)` IS NOT NULL
SELECT `schools`.`AdmEmail1` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 1
SELECT T1.AdmFName1 || ' ' || T1.AdmLName1 AS FullName FROM `schools` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`) LIMIT 1
SELECT `Street`, `City`, `Zip`, `State` FROM `schools` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumTstTakr` IS NOT NULL ORDER BY (CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr`) ASC LIMIT 1;
SELECT `schools`.`Website` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumTstTakr` BETWEEN 2000 AND 3000 AND `schools`.`County` = 'Los Angeles'
SELECT AVG(`T2`.`NumTstTakr`) FROM `schools` AS `T1` INNER JOIN `satscores` AS `T2` ON `T1`.`CDSCode` = `T2`.`cds` WHERE `T1`.`OpenDate` BETWEEN '1980-01-01' AND '1980-12-31' AND `T1`.`County` = 'Fresno' AND `T2`.`NumTstTakr` IS NOT NULL
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`District` = 'Fresno Unified' ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT `T2`.`sname`, `T2`.`AvgScrRead` FROM `satscores` AS `T2` INNER JOIN `schools` AS `T1` ON `T1`.`CDSCode` = `T2`.`cds` WHERE `T1`.`Virtual` = 'F' ORDER BY `T2`.`AvgScrRead` DESC LIMIT 5
SELECT `T2`.`EdOpsName` FROM `satscores` AS `T1` INNER JOIN `schools` AS `T2` ON `T1`.`cds` = `T2`.`CDSCode` ORDER BY `T1`.`AvgScrMath` DESC LIMIT 1
SELECT T1.AvgScrMath, T2.cname FROM (SELECT cds, (AvgScrMath + AvgScrRead + AvgScrWrite) / 3 AS AvgScore FROM satscores) AS T1 INNER JOIN satscores AS T2 ON T1.cds = T2.cds ORDER BY T1.AvgScore ASC LIMIT 1
SELECT CAST(T1.AvgScrWrite AS REAL), T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1
SELECT `T1`.`School`, AVG(`T2`.`AvgScrWrite`) AS `Average_Writing_Score` FROM `schools` AS `T1` INNER JOIN `satscores` AS `T2` ON `T1`.`CDSCode` = `T2`.`cds` WHERE `T1`.`AdmFName1` = 'Ricci' AND `T1`.`AdmLName1` = 'Ulrich' GROUP BY `T1`.`School`
SELECT T2.`School Name`, T1.`Enrollment (K-12)` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`DOC` = 31 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1
SELECT COUNT(*) / 12.0 AS monthly_average FROM `schools` WHERE `County` = 'Alameda' AND `DOC` = '52' AND STRFTIME('%Y', `OpenDate`) = '1980'
SELECT CAST((SELECT COUNT(*) FROM `schools` WHERE `DOC` = '54' AND `StatusType` = 'Merged' AND `County` = 'Orange') AS REAL) / NULLIF((SELECT COUNT(*) FROM `schools` WHERE `DOC` = '52' AND `StatusType` = 'Merged' AND `County` = 'Orange'), 0) AS ratio
SELECT `County`, `School`, `ClosedDate` FROM `schools` WHERE `StatusType` = 'Closed' AND `County` = (SELECT `County` FROM `schools` WHERE `StatusType` = 'Closed' GROUP BY `County` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T2.School, T2.MailStreet FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1 OFFSET 5
SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead ASC LIMIT 1
SELECT COUNT(*) FROM `satscores` AS `T1` INNER JOIN `schools` AS `T2` ON `T1`.`cds` = `T2`.`CDSCode` WHERE (`T1`.`AvgScrRead` + `T1`.`AvgScrMath` + `T1`.`AvgScrWrite`) >= 1500 AND `T2`.`MailCity` = 'Lakeport'
SELECT SUM(`satscores`.`NumTstTakr`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`MailCity` = 'Fresno'
SELECT `School`, `MailZip` FROM `schools` WHERE `AdmFName1` = 'Avetik'
SELECT CAST((SELECT COUNT(*) FROM `schools` WHERE `County` = 'Colusa' AND `MailState` = 'CA') AS REAL) / NULLIF((SELECT COUNT(*) FROM `schools` WHERE `County` = 'Humboldt' AND `MailState` = 'CA'), 0) AS ratio
SELECT COUNT(*) FROM `schools` WHERE `State` = 'CA' AND `StatusType` = 'Active' AND `County` = 'San Joaquin'
SELECT `schools`.`Phone`, `schools`.`Ext` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrWrite` DESC LIMIT 1 OFFSET 332
SELECT `School`, `Phone`, `Ext` FROM `schools` WHERE `Zip` = '95203-3704'
SELECT `Website` FROM `schools` WHERE (`AdmFName1` = 'Mike' AND `AdmLName1` = 'Larson') AND (`AdmFName2` = 'Dante' AND `AdmLName2` = 'Alvarez')
SELECT `Website` FROM `schools` WHERE `Virtual` = 'P' AND `Charter` = 1 AND `County` = 'San Joaquin'
SELECT COUNT(*) FROM `schools` WHERE `Charter` = 1 AND `DOC` = 52 AND `City` = 'Hickman'
SELECT COUNT(*) FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter` = 0 AND T2.`County` = 'Los Angeles' AND (T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)`) < 0.18
SELECT `schools`.`AdmFName1`, `schools`.`AdmLName1`, `frpm`.`School Name`, `schools`.`City` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`Charter` = 1 AND `schools`.`CharterNum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4'
SELECT CAST(COUNT(CASE WHEN `FundingType` = 'Locally funded' THEN 1 END) AS REAL) * 100 / COUNT(*) AS `PercentageRatio` FROM `schools` WHERE `County` = 'Santa Clara'
SELECT COUNT(*) FROM `schools` WHERE `OpenDate` BETWEEN '2000-01-01' AND '2005-12-31' AND `FundingType` = 'Directly funded' AND `County` = 'Stanislaus'
SELECT COUNT(*) FROM `schools` WHERE `StatusType` = 'Closed' AND `City` = 'San Francisco' AND strftime('%Y', `ClosedDate`) = '1989'
SELECT `County`, COUNT(*) AS `ClosureCount` FROM `schools` WHERE `SOC` = '11' AND `ClosedDate` BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY `County` ORDER BY `ClosureCount` DESC LIMIT 1
SELECT `NCESDist` FROM `schools` WHERE `SOC` = 31
SELECT COUNT(*) FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`County` = 'Alpine' AND `schools`.`StatusType` IN ('Active', 'Closed') AND `frpm`.`School Type` = 'District Community Day Schools'
SELECT DISTINCT `frpm`.`District Code` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`Magnet` = 0 AND `schools`.`City` = 'Fresno'
SELECT SUM(`frpm`.`Enrollment (Ages 5-17)`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`EdOpsCode` = 'SSS' AND `frpm`.`District Name` = 'Fremont Unified' AND `frpm`.`Academic Year` = '2014-2015'
SELECT `frpm`.`FRPM Count (Ages 5-17)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`EdOpsName` = 'Youth Authority School' AND `schools`.`MailStreet` = 'PO Box 1040'
SELECT `frpm`.`Low Grade` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`EdOpsCode` = 'SPECON' AND `schools`.`NCESDist` = '0613360'
SELECT T2.`EILName`, T1.`School Name` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = '37'
SELECT `schools`.`City` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Low Grade` = '9' AND `frpm`.`High Grade` = '12' AND `frpm`.`NSLP Provision Status` = 'Lunch Provision 2' AND `schools`.`County` = 'Merced' AND `schools`.`EILCode` = 'HS'
SELECT `T1`.`School`, (CAST(`T2`.`Free Meal Count (Ages 5-17)` AS REAL) / `T2`.`Enrollment (Ages 5-17)` * 100) AS `PercentEligibleFRPM` FROM `schools` AS `T1` INNER JOIN `frpm` AS `T2` ON `T1`.`CDSCode` = `T2`.`CDSCode` WHERE `T1`.`GSserved` = 'K-9' AND `T1`.`County` = 'Los Angeles'
SELECT `GSserved`, COUNT(*) as `count` FROM `schools` WHERE `City` = 'Adelanto' GROUP BY `GSserved` ORDER BY `count` DESC LIMIT 1
SELECT `County`, COUNT(*) AS `SchoolCount` FROM `schools` WHERE `County` IN ('San Diego', 'Santa Barbara') AND `Virtual` = 'F' GROUP BY `County` ORDER BY `SchoolCount` DESC LIMIT 1
SELECT `frpm`.`School Name`, `schools`.`Latitude`, `frpm`.`School Type` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `schools`.`Latitude` DESC LIMIT 1
SELECT `schools`.`City`, `schools`.`School`, `frpm`.`Low Grade` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`State` = 'CA' ORDER BY `schools`.`Latitude` ASC LIMIT 1
SELECT `GSoffered` FROM `schools` ORDER BY `Longitude` DESC LIMIT 1
SELECT `schools`.`City`, COUNT(`frpm`.`CDSCode`) AS `SchoolCount` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `frpm`.`GSoffered` = 'K-8' AND `frpm`.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY `schools`.`City`
SELECT `first_name`, `District`, COUNT(`first_name`) AS `name_count` FROM (SELECT `AdmFName1` AS `first_name`, `District` FROM `schools` WHERE `AdmFName1` IS NOT NULL UNION ALL SELECT `AdmFName2`, `District` FROM `schools` WHERE `AdmFName2` IS NOT NULL UNION ALL SELECT `AdmFName3`, `District` FROM `schools` WHERE `AdmFName3` IS NOT NULL) AS `combined_names` GROUP BY `first_name`, `District` ORDER BY `name_count` DESC LIMIT 2
SELECT (CAST(T1.`Free Meal Count (K-12)` AS REAL) / T1.`Enrollment (K-12)` * 100) AS `Percent (%) Eligible Free (K-12)`, T1.`District Code` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`AdmFName1` = 'Alusine' AND T1.`Enrollment (K-12)` IS NOT NULL
SELECT `schools`.`AdmLName1`, `frpm`.`District Name`, `frpm`.`County Name`, `frpm`.`School Name` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`CharterNum` = '40' AND `schools`.`StatusType` IN ('Active', 'Pending')
SELECT `AdmEmail1` FROM `schools` WHERE `County` = 'San Bernardino' AND `District` = 'San Bernardino City Unified' AND `OpenDate` BETWEEN '2009-01-01' AND '2010-12-31' AND `SOC` = '62' AND `DOC` = '54'
SELECT T1.AdmEmail1, T2.sname FROM `schools` AS T1 INNER JOIN `satscores` AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` >= 1500 ORDER BY T2.`NumTstTakr` DESC LIMIT 1
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `district`.`A3` = 'east Bohemia'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `district`.`A3` = 'Prague'
SELECT '1995' AS year, AVG(`A12`) AS average_unemployment FROM `district` WHERE `A12` IS NOT NULL UNION SELECT '1996' AS year, AVG(`A13`) AS average_unemployment FROM `district` WHERE `A13` IS NOT NULL ORDER BY average_unemployment DESC LIMIT 1
SELECT COUNT(*) FROM `district` WHERE `A11` > 6000 AND `A11` < 10000
SELECT COUNT(*) FROM `client` AS T1 INNER JOIN `district` AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'M' AND T2.`A3` = 'north Bohemia' AND T2.`A11` > 8000
SELECT `disp`.`account_id`, (SELECT MAX(`district`.`A11`) FROM `district`) - (SELECT MIN(`district`.`A11`) FROM `district` INNER JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client` WHERE `gender` = 'F')) AS `salary_gap` FROM `disp` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client` WHERE `gender` = 'F')
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client`) AND `district`.`A11` = (SELECT MAX(`A11`) FROM `district`);
SELECT COUNT(DISTINCT `disp`.`client_id`) FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `client`.`client_id`, `client`.`gender`, `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `disp`.`type` = 'DISPONENT'
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`date` BETWEEN '1997-01-01' AND '1997-12-31' AND `account`.`frequency` = 'POPLATEK TYDNE' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`duration` > 12 AND strftime('%Y', `account`.`date`) = '1993' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT COUNT(*) FROM `client` AS T1 INNER JOIN `district` AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T1.`birth_date` < '1950-01-01' AND T2.`A2` = 'Slokolov'
SELECT `account_id` FROM `account` WHERE `date` = (SELECT MIN(`date`) FROM `account` WHERE `date` BETWEEN '1995-01-01' AND '1995-12-31')
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` < '1997-01-01' AND `trans`.`amount` > 3000
SELECT `T3`.`client_id` FROM `card` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`disp_id` = `T2`.`disp_id` INNER JOIN `client` AS `T3` ON `T2`.`client_id` = `T3`.`client_id` WHERE `T1`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `account`.`district_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` = '1994-08-25'
SELECT MAX(`trans`.`amount`) FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1996-10-21'
SELECT `T1`.`gender` FROM `client` AS `T1` INNER JOIN `account` AS `T2` ON `T1`.`district_id` = `T2`.`district_id` WHERE `T2`.`district_id` = (SELECT `T3`.`district_id` FROM `district` AS `T3` ORDER BY `T3`.`A11` DESC LIMIT 1) ORDER BY `T1`.`birth_date` ASC LIMIT 1
SELECT `T3`.`amount` FROM `trans` AS `T3` INNER JOIN `account` AS `T1` ON `T3`.`account_id` = `T1`.`account_id` INNER JOIN `loan` AS `T2` ON `T1`.`account_id` = `T2`.`account_id` WHERE `T3`.`date` > `T1`.`date` AND `T2`.`amount` = (SELECT MAX(`amount`) FROM `loan`) ORDER BY `T3`.`date` ASC LIMIT 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A2` = 'Jesenik'
SELECT `disp`.`disp_id` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `trans`.`amount` = 5100 AND `trans`.`date` = '1998-09-02'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Litomerice' AND `account`.`date` BETWEEN '1996-01-01' AND '1996-12-31'
SELECT `district`.`A2` FROM `client` INNER JOIN `account` ON `client`.`client_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = '1976-01-29'
SELECT `client`.`birth_date` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `client` ON `account`.`client_id` = `client`.`client_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03'
SELECT `client`.`client_id` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague' ORDER BY `client`.`client_id` ASC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `T1`.`gender` = 'M' THEN 1 END) AS REAL) * 100 / COUNT(`T1`.`client_id`) AS `male_percentage` FROM `client` AS `T1` INNER JOIN `district` AS `T2` ON `T1`.`district_id` = `T2`.`district_id` WHERE `T2`.`A3` = 'south Bohemia' AND `T2`.`A4` = (SELECT MAX(`A4`) FROM `district` WHERE `A3` = 'south Bohemia')
SELECT CAST((T2.balance - T1.balance) AS REAL) * 100 / T1.balance AS increase_rate FROM (SELECT `trans`.`balance` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`date` = '1993-07-05' AND `trans`.`date` = '1993-03-22') AS T1, (SELECT `trans`.`balance` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`date` = '1993-07-05' AND `trans`.`date` = '1998-12-27') AS T2
SELECT CAST(SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) AS REAL) * 100 / NULLIF(SUM(`amount`), 0) AS percentage_paid FROM `loan`
SELECT CAST(SUM(CASE WHEN `loan`.`status` = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `loan` WHERE `loan`.`amount` < 100000
SELECT `account`.`account_id`, `district`.`A2`, `district`.`A3` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993%' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `account`.`account_id`, `account`.`frequency` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'east Bohemia' AND `account`.`date` BETWEEN '1995-01-01' AND '2000-12-31'
SELECT `account`.`account_id`, `account`.`date` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Prachatice'
SELECT `district`.`A2`, `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = 4990
SELECT `loan`.`account_id`, `district`.`A2` AS `district`, `district`.`A3` AS `region` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT `loan`.`loan_id`, `district`.`A2` AS `district`, `district`.`A11` AS `average_salary` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`duration` = 60
SELECT `district`.`A2` AS `district`, ((CAST(`district`.`A13` AS REAL) - CAST(`district`.`A12` AS REAL)) / CAST(`district`.`A12` AS REAL)) * 100 AS `unemployment_increment_rate` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D' AND `district`.`A12` IS NOT NULL AND `district`.`A13` IS NOT NULL
SELECT (COUNT(CASE WHEN T2.A2 = 'Decin' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%';
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `account`.`district_id`, COUNT(`client`.`client_id`) AS `female_count` FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` WHERE `client`.`gender` = 'F' GROUP BY `account`.`district_id` ORDER BY `female_count` DESC LIMIT 10
SELECT `district`.`A2`, SUM(`trans`.`amount`) AS total_withdrawals FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`type` = 'VYDAJ' AND `trans`.`date` LIKE '1996-01%' GROUP BY `district`.`A2` ORDER BY total_withdrawals DESC LIMIT 10
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `card` ON `account`.`account_id` = `card`.`account_id` WHERE `district`.`A3` = 'south Bohemia' AND `card`.`card_id` IS NULL
SELECT `district`.`A2` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'C' GROUP BY `district`.`A2` ORDER BY COUNT(`loan`.`loan_id`) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `district`.`district_id`, `district`.`A2` FROM `district` ORDER BY `district`.`A13` DESC LIMIT 1
SELECT COUNT(`account_id`) FROM `account` WHERE `district_id` = (SELECT `district_id` FROM `district` ORDER BY `A16` DESC LIMIT 1)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`balance` < 0 AND `trans`.`operation` = 'VYBER KARTOU' AND `account`.`frequency` = 'POPLATEK MESICNE'
SELECT COUNT(*) FROM `loan` AS `T1` INNER JOIN `account` AS `T2` ON `T1`.`account_id` = `T2`.`account_id` WHERE `T1`.`amount` >= 250000 AND `T2`.`frequency` = 'POPLATEK MESICNE' AND `T1`.`date` BETWEEN '1995-01-01' AND '1997-12-31'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `account`.`district_id` = 1 AND `loan`.`status` IN ('C', 'D')
SELECT COUNT(`client`.`client_id`) FROM `client` WHERE `client`.`gender` = 'M' AND `client`.`district_id` = (SELECT `district`.`district_id` FROM `district` ORDER BY `district`.`A15` DESC LIMIT 1 OFFSET 1)
SELECT COUNT(*) FROM `card` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`disp_id` = `T2`.`disp_id` WHERE `T1`.`type` = 'gold' AND `T2`.`type` = 'DISPONENT'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Pisek'
SELECT DISTINCT `district`.`A2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`amount` > 10000 AND strftime('%Y', `trans`.`date`) = '1997'
SELECT DISTINCT `account`.`account_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`A2` = 'Pisek'
SELECT `card`.`account_id` FROM `card` WHERE `card`.`type` IN ('gold', 'junior') GROUP BY `card`.`account_id` HAVING COUNT(DISTINCT `card`.`type`) = 2
SELECT strftime('%Y-%m', `date`) AS `month`, AVG(`amount`) AS `average_amount` FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND strftime('%Y', `date`) = '2021' GROUP BY `month`
SELECT `account_id` FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY `account_id` HAVING SUM(`amount`) < (SELECT AVG(total_spending) FROM (SELECT SUM(`amount`) AS total_spending FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY `account_id`))
SELECT DISTINCT `T1`.`client_id` FROM `client` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`client_id` = `T2`.`client_id` INNER JOIN `card` AS `T3` ON `T2`.`disp_id` = `T3`.`disp_id` INNER JOIN `loan` AS `T4` ON `T2`.`account_id` = `T4`.`account_id` WHERE `T1`.`gender` = 'F'
SELECT COUNT(*) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A3` = 'south Bohemia'
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `district`.`A2` = 'Tabor' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `disp`.`type` FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`A11` > 8000 AND `district`.`A11` <= 9000
SELECT COUNT(DISTINCT T1.`account_id`) FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN `trans` AS T3 ON T1.`account_id` = T3.`account_id` WHERE T2.`A3` = 'north Bohemia' AND T3.`bank` = 'AB'
SELECT DISTINCT `district`.`A2` FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(`district`.`A15`) FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` WHERE `district`.`A15` > 4000 AND `account`.`date` >= '1997-01-01'
SELECT COUNT(`card`.`card_id`) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'classic' AND `disp`.`type` = 'OWNER'
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Hl.m. Praha' AND `client`.`gender` = 'M'
SELECT CAST(COUNT(CASE WHEN `type` = 'gold' AND `issued` < '1998-01-01' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percent_gold FROM `card`
SELECT `T2`.`client_id` FROM `disp` AS `T2` INNER JOIN (SELECT `T1`.`account_id` FROM `loan` AS `T1` ORDER BY `T1`.`amount` DESC LIMIT 1) AS `T3` ON `T2`.`account_id` = `T3`.`account_id` WHERE `T2`.`type` = 'OWNER'
SELECT `district`.`A15` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`account_id` = 532
SELECT `account`.`district_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333
SELECT `trans`.* FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`client_id` = 3356 AND `trans`.`operation` = 'VYBER'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000
SELECT `card`.`type` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`client_id` = 13539
SELECT `district`.`A3` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT T3.`A2` FROM `account` AS T1 INNER JOIN `loan` AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN `district` AS T3 ON T1.`district_id` = T3.`district_id` WHERE T2.`status` = 'A' GROUP BY T3.`district_id` ORDER BY COUNT(T1.`account_id`) DESC LIMIT 1
SELECT T4.client_id, T4.gender, T4.birth_date FROM `order` AS T1 INNER JOIN `account` AS T2 ON T1.account_id = T2.account_id INNER JOIN `disp` AS T3 ON T2.account_id = T3.account_id INNER JOIN `client` AS T4 ON T3.client_id = T4.client_id WHERE T1.order_id = 32423
SELECT `trans`.`trans_id`, `trans`.`date`, `trans`.`type`, `trans`.`operation`, `trans`.`amount`, `trans`.`balance` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `account`.`district_id` = 5
SELECT COUNT(`account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik'
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'junior' AND `card`.`issued` >= '1997-01-01'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`client_id`) AS percentage_female_clients FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A11` > 10000
SELECT (SUM(CASE WHEN `loan`.`date` LIKE '1997%' THEN `loan`.`amount` ELSE 0 END) - SUM(CASE WHEN `loan`.`date` LIKE '1996%' THEN `loan`.`amount` ELSE 0 END)) * 100.0 / NULLIF(SUM(CASE WHEN `loan`.`date` LIKE '1996%' THEN `loan`.`amount` ELSE 0 END), 0) AS growth_rate FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'M'
SELECT COUNT(`trans`.`trans_id`) FROM `trans` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`date` > '1995-12-31'
SELECT (SELECT `A16` FROM `district` WHERE `A3` = 'north Bohemia') - (SELECT `A16` FROM `district` WHERE `A3` = 'east Bohemia') AS `crime_difference`
SELECT COUNT(*) FROM `disp` WHERE `account_id` IN (1, 10) AND `type` IN ('OWNER', 'DISPONENT')
SELECT (SELECT COUNT(*) FROM `order` WHERE `account_id` = 3) AS statement_requests, (SELECT GROUP_CONCAT(`k_symbol`) FROM `order` WHERE `account_id` = 3539) AS total_debit_purposes
SELECT strftime('%Y', T2.birth_date) FROM `account` AS T0 INNER JOIN `disp` AS T1 ON T0.account_id = T1.account_id INNER JOIN `client` AS T2 ON T1.client_id = T2.client_id WHERE T0.account_id = 130
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `disp`.`type` = 'OWNER' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT SUM(`loan`.`amount`) AS `TotalDebt`, GROUP_CONCAT(`loan`.`status`) AS `PaymentsStatus` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `client` ON `account`.`account_id` = `client`.`district_id` WHERE `client`.`client_id` = 992
SELECT SUM(`T3`.`amount`) AS total_amount, `T1`.`gender` FROM `client` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`client_id` = `T2`.`client_id` INNER JOIN `trans` AS `T3` ON `T2`.`account_id` = `T3`.`account_id` WHERE `T1`.`client_id` = 4 AND `T3`.`trans_id` > 851 GROUP BY `T1`.`gender`
SELECT `card`.`type` FROM `card` INNER JOIN `disp` ON `disp`.`account_id` = `card`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`client_id` = 9
SELECT SUM(`trans`.`amount`) FROM `trans` JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `disp`.`client_id` = 617 AND `trans`.`date` BETWEEN '1998-01-01' AND '1998-12-31' AND `trans`.`amount` IS NOT NULL
SELECT `client`.`client_id` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`A3` = 'East Bohemia'
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F' ORDER BY `loan`.`amount` DESC LIMIT 3
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `trans` ON `client`.`client_id` = `trans`.`account_id` WHERE `client`.`gender` = 'M' AND `client`.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND `trans`.`k_symbol` = 'SIPO' AND `trans`.`amount` > 4000
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Beroun' AND `account`.`date` > '1996-12-31'
SELECT COUNT(DISTINCT `T1`.`client_id`) FROM `client` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`client_id` = `T2`.`client_id` INNER JOIN `card` AS `T3` ON `T2`.`disp_id` = `T3`.`disp_id` WHERE `T1`.`gender` = 'F' AND `T3`.`type` = 'junior'
SELECT (COUNT(CASE WHEN `client`.`gender` = 'F' THEN 1 END) * 100.0 / COUNT(`client`.`client_id`)) AS female_percentage FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague'
SELECT CAST(COUNT(CASE WHEN `T1`.`gender` = 'M' THEN 1 END) AS REAL) * 100 / COUNT(`T1`.`client_id`) AS percentage_male_clients FROM `client` AS `T1` INNER JOIN `account` AS `T2` ON `T1`.`district_id` = `T2`.`district_id` WHERE `T2`.`frequency` = 'POPLATEK TYDNE'
SELECT COUNT(DISTINCT `T1`.`client_id`) FROM `disp` AS `T1` INNER JOIN `account` AS `T2` ON `T1`.`account_id` = `T2`.`account_id` WHERE `T1`.`type` = 'USER' AND `T2`.`frequency` = 'POPLATEK TYDNE'
SELECT `account`.* FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`duration` > 24 AND `account`.`date` < '1997-01-01' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `disp`.`account_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' ORDER BY `client`.`birth_date` ASC, `district`.`A11` ASC LIMIT 1
SELECT COUNT(*) FROM `client` AS `T1` INNER JOIN `district` AS `T2` ON `T1`.`district_id` = `T2`.`district_id` WHERE `T1`.`birth_date` LIKE '1920%' AND `T2`.`A3` = 'east Bohemia'
SELECT COUNT(DISTINCT `loan`.`account_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(`T1`.`amount`) FROM `loan` AS `T1` INNER JOIN `account` AS `T2` ON `T1`.`account_id` = `T2`.`account_id` WHERE `T1`.`status` IN ('C', 'D') AND `T2`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `client`.`client_id`, `client`.`district_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`type` = 'OWNER'
SELECT `T1`.`client_id`, CAST((STRFTIME('%Y', 'now') - STRFTIME('%Y', `T1`.`birth_date`)) AS INTEGER) AS `age` FROM `client` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`client_id` = `T2`.`client_id` INNER JOIN `card` AS `T3` ON `T2`.`disp_id` = `T3`.`disp_id` INNER JOIN `account` AS `T4` ON `T2`.`account_id` = `T4`.`account_id` INNER JOIN `loan` AS `T5` ON `T4`.`account_id` = `T5`.`account_id` WHERE `T3`.`type` = 'gold' AND `T5`.`account_id` IS NOT NULL
SELECT `bond`.`bond_type` FROM `bond` GROUP BY `bond`.`bond_type` ORDER BY COUNT(`bond`.`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-' AND `atom`.`element` = 'cl'
SELECT AVG(oxygen_count) FROM (SELECT COUNT(*) AS oxygen_count FROM `atom` AS `T1` INNER JOIN `bond` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T2`.`bond_type` = '-' AND `T1`.`element` = 'o' GROUP BY `T1`.`molecule_id`);
SELECT CAST(SUM(CASE WHEN `T2`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT `T1`.`molecule_id`) AS average_single_bonded_carcinogenic FROM `molecule` AS `T1` INNER JOIN `bond` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`label` = '+'
SELECT COUNT(DISTINCT `T1`.`molecule_id`) FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`element` = 'na' AND `T2`.`label` = '-'
SELECT `molecule`.`molecule_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT CAST(SUM(CASE WHEN `T1`.`element` = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T1`.`atom_id`) FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` INNER JOIN `bond` AS `T3` ON `T2`.`bond_id` = `T3`.`bond_id` WHERE `T3`.`bond_type` = '='
SELECT COUNT(`bond`.`bond_id`) FROM `bond` WHERE `bond`.`bond_type` = '#'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` WHERE `atom`.`element` != 'br'
SELECT COUNT(*) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'si'
SELECT DISTINCT `T1`.`element` FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` OR `T1`.`atom_id` = `T2`.`atom_id2` WHERE `T2`.`bond_id` = 'TR004_8_9'
SELECT DISTINCT `atom`.`element` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `bond`.`bond_type` = '='
SELECT T2.label FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'h' GROUP BY T2.`label` ORDER BY COUNT(T2.`label`) DESC LIMIT 1
SELECT DISTINCT `bond`.`bond_type` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'te'
SELECT `T1`.`atom_id`, `T1`.`atom_id2` FROM `connected` AS `T1` INNER JOIN `bond` AS `T2` ON `T1`.`bond_id` = `T2`.`bond_id` WHERE `T2`.`bond_type` = '-'
SELECT DISTINCT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-'
SELECT `T1`.`element` FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T2`.`label` = '-' GROUP BY `T1`.`element` ORDER BY COUNT(`T1`.`element`) ASC LIMIT 1
SELECT T2.bond_type FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20'
SELECT DISTINCT `label` FROM `molecule` WHERE `molecule_id` NOT IN (SELECT DISTINCT `molecule_id` FROM `atom` WHERE `element` = 'sn')
SELECT COUNT(DISTINCT T1.`atom_id`) FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `bond` AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE (T1.`element` = 'i' OR T1.`element` = 's') AND T3.`bond_type` = '-'
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT DISTINCT `connected`.`atom_id2` FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`molecule_id` = 'TR181'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `molecule` WHERE `label` = '+')) AS percent FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') AND `element` != 'f'
SELECT (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(b.bond_id)) AS percent FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '#'
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` WHERE `connected`.`bond_id` = 'TR001_2_6'
SELECT (SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END)) AS `difference` FROM `molecule`
SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR_000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT DISTINCT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' ORDER BY `molecule`.`label` ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS percent FROM `bond` WHERE `bond`.`molecule_id` = 'TR008'
SELECT CAST(SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(`molecule_id`) * 100 AS percent FROM `molecule`
SELECT (CAST(SUM(CASE WHEN `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`atom_id`)) * 100 AS `percent` FROM `atom` WHERE `atom`.`molecule_id` = 'TR206'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` = 'TR000'
SELECT `atom`.`element`, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR060'
SELECT `T1`.`bond_type`, `T2`.`label` FROM `bond` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`molecule_id` = 'TR018' GROUP BY `T1`.`bond_type` ORDER BY COUNT(`T1`.`bond_type`) DESC LIMIT 1
SELECT DISTINCT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' ORDER BY `molecule`.`label` ASC LIMIT 3
SELECT `bond`.`bond_id` FROM `bond` WHERE `bond`.`molecule_id` = 'TR006' ORDER BY `bond`.`bond_id` ASC LIMIT 2
SELECT COUNT(*) FROM `bond` AS T1 INNER JOIN `connected` AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12')
SELECT COUNT(DISTINCT `T1`.`molecule_id`) FROM `molecule` AS `T1` INNER JOIN `atom` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`label` = '+' AND `T2`.`element` = 'br'
SELECT `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_id` = 'TR001_6_9'
SELECT `T1`.`molecule_id`, `T2`.`label` FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `molecule_id`) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(DISTINCT `bond_id`) FROM `connected` WHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR004'
SELECT COUNT(*) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT T2.`molecule_id` FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE SUBSTR(T1.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND T2.`label` = '+'
SELECT DISTINCT T3.`bond_id` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `atom` AS T4 ON T2.`atom_id2` = T4.`atom_id` INNER JOIN `bond` AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T1.`element` = 'p' AND T4.`element` = 'n'
SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T1.bond_id) DESC LIMIT 1
SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM `atom` AS T1 LEFT JOIN `bond` AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'i'
SELECT `T2`.`bond_type`, `T2`.`bond_id` FROM `atom` AS `T1` INNER JOIN `connected` AS `T3` ON `T1`.`atom_id` = `T3`.`atom_id` INNER JOIN `bond` AS `T2` ON `T3`.`bond_id` = `T2`.`bond_id` WHERE CAST(SUBSTR(`T1`.`atom_id`, 7, 2) AS INTEGER) = 45
SELECT DISTINCT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected`)
SELECT DISTINCT T2.`atom_id` FROM `connected` AS T2 INNER JOIN `bond` AS T1 ON T2.`bond_id` = T1.`bond_id` WHERE T1.`molecule_id` = 'TR447' AND T1.`bond_type` = '#'
SELECT `T1`.`element` FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` OR `T1`.`atom_id` = `T2`.`atom_id2` WHERE `T2`.`bond_id` = 'TR144_8_19'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = '=' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`bond`.`bond_type`) DESC LIMIT 1
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `atom`.`element` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `connected`.`atom_id2` FROM `connected` WHERE `connected`.`atom_id` = (SELECT `atom`.`atom_id` FROM `atom` WHERE `atom`.`element` = 'pb')
SELECT DISTINCT T3.`element` FROM `bond` AS T1 INNER JOIN `connected` AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN `atom` AS T3 ON T2.`atom_id` = T3.`atom_id` OR T2.`atom_id2` = T3.`atom_id` WHERE T1.`bond_type` = '#'
SELECT CAST(COUNT(T1.bond_id) AS REAL) * 100 / (SELECT COUNT(*) FROM `bond`) FROM `bond` AS T1 INNER JOIN `connected` AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN `atom` AS T3 ON T2.`atom_id` = T3.`atom_id` INNER JOIN `atom` AS T4 ON T2.`atom_id2` = T4.`atom_id` GROUP BY T3.`element`, T4.`element` ORDER BY COUNT(*) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `T2`.`label` = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(`T1`.`bond_id`) AS proportion FROM `bond` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`bond_type` = '-'
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `connected`.`atom_id2` FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 's'
SELECT DISTINCT `bond`.`bond_type` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'sn'
SELECT COUNT(DISTINCT `atom`.`element`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` INNER JOIN `atom` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-'}
SELECT COUNT(DISTINCT T1.`atom_id`) FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN `atom` AS T3 ON T1.`atom_id` = T3.`atom_id` OR T1.`atom_id2` = T3.`atom_id` WHERE T2.`bond_type` = '#' AND (T3.`element` = 'p' OR T3.`element` = 'br')
SELECT DISTINCT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `T1`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T1`.`atom_id`) AS percent FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` INNER JOIN `bond` AS `T3` ON `T2`.`bond_id` = `T3`.`bond_id` WHERE `T3`.`bond_type` = '-'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` WHERE `molecule`.`molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(*) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR030' AND `label` = '+'
SELECT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` BETWEEN 'TR000' AND 'TR050'
SELECT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` WHERE T2.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT `molecule`.`label`, COUNT(*) as `count` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'ca' GROUP BY `molecule`.`label`
SELECT COUNT(DISTINCT T2.element) FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_1_8' AND T2.element IN ('cl', 'c') GROUP BY T1.bond_id HAVING COUNT(DISTINCT T2.element) = 2
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = '#' AND `molecule`.`label` = '-' LIMIT 2
SELECT CAST(SUM(CASE WHEN `T1`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T2`.`molecule_id`) AS percentage FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T2`.`label` = '+'
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '='
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT DISTINCT `T1`.`element` FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` OR `T1`.`atom_id` = `T2`.`atom_id2` WHERE `T2`.`bond_id` = 'TR005_16_26'
SELECT COUNT(DISTINCT `T1`.`molecule_id`) FROM `bond` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`bond_type` = '-' AND `T2`.`label` = '-'
SELECT `molecule`.`label` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11'
SELECT `bond`.`bond_id`, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT `T1`.`element`, COUNT(*) as `tally` FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T2`.`label` = '+' AND SUBSTR(`T1`.`atom_id`, 7, 1) = '4' GROUP BY `T1`.`element`
SELECT CAST(SUM(CASE WHEN `T1`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`T1`.`element`) AS ratio, `T2`.`label` FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`molecule_id` = 'TR006' GROUP BY `T2`.`label`
SELECT T2.label FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'
SELECT DISTINCT `bond`.`bond_type` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'te'
SELECT `element` FROM `atom` WHERE `atom_id` IN ('TR001_10', 'TR001_11')
SELECT CAST(COUNT(DISTINCT T2.molecule_id) AS REAL) * 100 / (SELECT COUNT(DISTINCT T1.molecule_id) FROM `molecule` AS T1) AS percent_triple_bond FROM `bond` AS T2 WHERE T2.bond_type = '#'
SELECT (CAST(SUM(CASE WHEN `bond`.`bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) / COUNT(`bond`.`bond_id`) * 100) AS percent FROM `bond` WHERE `bond`.`molecule_id` = 'TR047'
SELECT T2.label FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR151'
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND (CAST(SUBSTR(`molecule`.`molecule_id`, 3) AS INTEGER) > 10 AND CAST(SUBSTR(`molecule`.`molecule_id`, 3) AS INTEGER) < 50)
SELECT COUNT(`atom`.`atom_id`) FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+')
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' AND `molecule`.`label` = '+'
SELECT COUNT(*) FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`element` = 'h' AND `T2`.`label` = '+'
SELECT `bond`.`molecule_id` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_id` = 'TR00_1_2' AND `connected`.`atom_id` = 'TR00_1'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT (CAST(SUM(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T2.molecule_id)) * 100.0 AS percentage FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.molecule_id = T2.molecule_id
SELECT `label` FROM `molecule` WHERE `molecule`.`molecule_id` = 'TR124'
SELECT `atom`.`atom_id`, `atom`.`element` FROM `atom` WHERE `atom`.`molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT DISTINCT `T1`.`element` FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` OR `T1`.`atom_id` = `T2`.`atom_id2` WHERE `T2`.`bond_id` = 'TR001_2_4'
SELECT COUNT(`T1`.`bond_id`) AS double_bond_count, `T2`.`label` FROM `bond` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`bond_type` = '=' AND `T1`.`molecule_id` = 'TR006'
SELECT `T1`.`molecule_id`, `T2`.`element` FROM `molecule` AS `T1` INNER JOIN `atom` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`label` = `+`
SELECT `bond`.`bond_id`, `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_type` = '-'
SELECT DISTINCT `molecule`.`molecule_id`, `atom`.`element` FROM `bond` INNER JOIN `atom` ON `bond`.`molecule_id` = `atom`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT T1.element FROM `connected` AS T0 INNER JOIN `atom` AS T1 ON T0.atom_id = T1.atom_id WHERE T0.bond_id = 'TR000_2_3' UNION SELECT T2.element FROM `connected` AS T0 INNER JOIN `atom` AS T2 ON T0.atom_id2 = T2.atom_id WHERE T0.bond_id = 'TR000_2_3'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl'
SELECT `atom`.`atom_id`, (SELECT COUNT(DISTINCT `bond`.`bond_type`) FROM `bond` WHERE `bond`.`molecule_id` = 'TR346') AS `bond_type_count` FROM `atom` WHERE `atom`.`molecule_id` = 'TR346'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' AND `molecule`.`label` = '+'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND (`bond`.`bond_type` IS NULL OR `bond`.`bond_type` != '=')
SELECT `T2`.`label` FROM `bond` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`bond_id` = 'TR001_2_4'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` WHERE `atom`.`molecule_id` = 'TR005'
SELECT COUNT(`bond`.`bond_id`) FROM `bond` WHERE `bond`.`bond_type` = '-';
SELECT DISTINCT `T1`.`molecule_id` FROM `atom` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`element` = 'cl' AND `T2`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT (CAST(SUM(CASE WHEN `T1`.`label` = '+' AND `T2`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`T1`.`molecule_id`)) * 100 AS percentage FROM `molecule` AS `T1` LEFT JOIN `atom` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`label` = '+'
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT T2.`element`) FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id2` = T2.`atom_id` WHERE T1.`bond_id` = 'TR001_3_4'
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `connected`.`atom_id` = 'TR000_1' AND `connected`.`atom_id2` = 'TR000_2'
SELECT T1.`molecule_id` FROM `atom` AS T1 INNER JOIN `atom` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`atom_id` = 'TR000_2' AND T2.`atom_id` = 'TR000_4'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS percentage FROM `bond`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'n' AND `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = '='
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `T3`.`element` FROM `bond` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`bond_id` = `T2`.`bond_id` INNER JOIN `atom` AS `T3` ON `T2`.`atom_id` = `T3`.`atom_id` WHERE `T1`.`molecule_id` = 'TR024' AND `T1`.`bond_type` = '='
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`atom`.`molecule_id`) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN T3.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT T1.`molecule_id`) AS percentage FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `bond` AS T4 ON T2.`bond_id` = T4.`bond_id` INNER JOIN `molecule` AS T3 ON T4.`molecule_id` = T3.`molecule_id` WHERE T1.`element` = 'h' AND T4.`bond_type` = '#';
SELECT COUNT(`molecule`.`molecule_id`) FROM `molecule` WHERE `molecule`.`label` = '+'
SELECT COUNT(DISTINCT `T1`.`molecule_id`) FROM `bond` AS `T1` INNER JOIN `molecule` AS `T2` ON `T1`.`molecule_id` = `T2`.`molecule_id` WHERE `T1`.`bond_type` = '-' AND `T2`.`molecule_id` BETWEEN 'TR004' AND 'TR010'
SELECT COUNT(*) FROM `atom` WHERE `molecule_id` = 'TR008' AND `element` = 'c'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR004_7' AND `molecule`.`label` = '-'}
SELECT COUNT(DISTINCT `T3`.`molecule_id`) FROM `atom` AS `T1` INNER JOIN `connected` AS `T2` ON `T1`.`atom_id` = `T2`.`atom_id` INNER JOIN `bond` AS `T3` ON `T2`.`bond_id` = `T3`.`bond_id` WHERE `T1`.`element` = 'o' AND `T3`.`bond_type` = '='
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT DISTINCT `atom`.`element`, `bond`.`bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `bond`.`molecule_id` = 'TR016'
SELECT DISTINCT T1.`atom_id` FROM `atom` AS T1 INNER JOIN `bond` AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN `connected` AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T1.`element` = 'c' AND T2.`bond_type` = '=' AND T1.`molecule_id` = 'TR012' AND T2.`molecule_id` = 'TR012'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardKingdomFoilId` = `cardKingdomId` AND `cardKingdomId` IS NOT NULL
SELECT `id`, `name`, `borderColor` FROM `cards` WHERE `borderColor` = 'borderless' AND (`cardKingdomFoilId` IS NULL OR `cardKingdomId` IS NULL)
SELECT `name` FROM `cards` WHERE `faceConvertedManaCost` = (SELECT MAX(`faceConvertedManaCost`) FROM `cards`)
SELECT `name` FROM `cards` WHERE `frameVersion` = '2015' AND `edhrecRank` < 100
SELECT `cards`.* FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'Banned' AND `legalities`.`format` = 'gladiator'
SELECT `legalities`.`status` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`type` = 'Artifact' AND `cards`.`side` IS NULL AND `legalities`.`format` = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `T1`.`name`, `T2`.`text` FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`artist` = 'Stephen Daniele' AND `T1`.`hasContentWarning` = 1
SELECT T2.`text` FROM `cards` AS T1 INNER JOIN `rulings` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Sublime Epiphany' AND T1.`number` = '74s'
SELECT `T1`.`name`, `T1`.`artist`, `T1`.`isPromo` FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`isPromo` = 1 GROUP BY `T1`.`uuid` ORDER BY COUNT(`T2`.`uuid`) DESC LIMIT 1
SELECT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Annul' AND `cards`.`number` = '29'
SELECT DISTINCT `foreign_data`.`name` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT (CAST((SELECT COUNT(`id`) FROM `foreign_data` WHERE `language` = 'Chinese Simplified') AS REAL) / (SELECT COUNT(`id`) FROM `foreign_data`)) * 100 AS `percentage`
SELECT `sets`.`name`, `sets`.`totalSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `types`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy'
SELECT COUNT(`id`) FROM `cards` WHERE `cards`.`power` = '*'
SELECT `promoTypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `borderColor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originalType` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT DISTINCT `set_translations`.`language` FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` INNER JOIN `set_translations` AS `T3` ON `T2`.`code` = `T3`.`setCode` WHERE `T1`.`name` = 'Angel of Mercy'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `legalities` INNER JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isTextless` = 0
SELECT `T2`.`text` FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`name` = 'Condemn'
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `legalities` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`status` = 'restricted' AND T1.`isStarter` = 1
SELECT T1.status FROM `legalities` AS T1 INNER JOIN `cards` AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Cloudchaser Eagle'
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT `T2`.`text` FROM `rulings` AS `T2` INNER JOIN `cards` AS `T1` ON `T2`.`uuid` = `T1`.`uuid` WHERE `T1`.`name` = 'Benalish Knight'
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Phyrexian'
SELECT (COUNT(CASE WHEN `borderColor` = 'borderless' THEN 1 END) * 100.0 / COUNT(`id`)) AS `percentage_of_borderless_cards` FROM `cards`
SELECT COUNT(DISTINCT T1.`uuid`) FROM `foreign_data` AS T1 INNER JOIN `cards` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`language` = 'German' AND T2.`isReprint` = 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`borderColor` = 'borderless' AND T2.`language` = 'Russian'
SELECT (CAST(COUNT(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS `percentage_french_story_spotlight` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`isStorySpotlight` = 1
SELECT COUNT(*) FROM `cards` WHERE `toughness` = '99'
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedManaCost` = 0
SELECT DISTINCT `layout` FROM `cards` WHERE `keywords` LIKE '%flying%';
SELECT COUNT(*) FROM `cards` WHERE `originalType` = 'Summon - Angel' AND `subtypes` != 'Angel'
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `id` FROM `cards` WHERE `duelDeck` = 'a'
SELECT `edhrecRank` FROM `cards` WHERE `frameVersion` = '2015'
SELECT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`availability` = 'paper' AND `foreign_data`.`language` = 'Japanese'
SELECT COUNT(*) FROM `legalities` AS `T1` INNER JOIN `cards` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`status` = 'Banned' AND `T2`.`borderColor` = 'white'
SELECT `cards`.`uuid`, `foreign_data`.`language` FROM `legalities` INNER JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy'
SELECT `rulings`.`text` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`name` = 'Beacon of Immortality'
SELECT COUNT(`cards`.`id`) AS `card_count`, `legalities`.`status` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = 'future' GROUP BY `legalities`.`status`
SELECT `name`, `colors` FROM `cards` WHERE `setCode` = 'OGW'
SELECT `T1`.`name`, `T2`.`language` FROM `cards` AS `T1` INNER JOIN `sets` AS `T3` ON `T1`.`setCode` = `T3`.`code` INNER JOIN `set_translations` AS `T2` ON `T1`.`uuid` = `T2`.`setCode` WHERE `T1`.`convertedManaCost` = 5 AND `T1`.`setCode` = '10E'
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originalType` = 'Creature - Elf'
SELECT `cards`.`colors`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT T1.* FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`originalType` = 'Artifact' AND T1.`colors` = 'B'
SELECT `T1`.`name` FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`rarity` = 'uncommon' ORDER BY `T2`.`date` ASC LIMIT 3
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'John Avon' AND `hasFoil` = 1 AND `cardKingdomId` IS NOT NULL AND `cardKingdomFoilId` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND `cardKingdomFoilId` = `cardKingdomId` AND `cardKingdomId` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'UDON' AND `availability` = 'mtgo' AND `hand` = '-1'
SELECT COUNT(*) FROM `cards` WHERE `frameVersion` = '1993' AND `availability` = 'paper' AND `hasContentWarning` = 1
SELECT `manaCost` FROM `cards` WHERE `layout` = 'normal' AND `frameVersion` = '2003' AND `borderColor` = 'black' AND `availability` LIKE '%paper%' AND `availability` LIKE '%mtgo%'
SELECT SUM(CAST(`manaCost` AS REAL)) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `types` FROM `cards` WHERE `availability` = 'arena'
SELECT DISTINCT `cards`.`setCode` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Spanish'
SELECT CAST(COUNT(CASE WHEN `hand` = '+3' THEN 1 END) AS REAL) * 100 / COUNT(`id`) FROM `cards` WHERE `frameEffects` = 'legendary' AND `hand` IS NOT NULL
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `cards` WHERE `isStorySpotlight` = 1) AS `percentage`, `id` FROM `cards` WHERE `isStorySpotlight` = 1 AND `isTextless` = 0 GROUP BY `id`
SELECT `foreign_data`.`name`, (COUNT(CASE WHEN `foreign_data`.`language` = 'Spanish' THEN 1 END) * 100.0 / (SELECT COUNT(*) FROM `foreign_data`)) AS `percentage` FROM `foreign_data` WHERE `foreign_data`.`language` = 'Spanish' GROUP BY `foreign_data`.`name`
SELECT DISTINCT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`baseSetSize` = 309
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`block` = 'Commander' AND T2.`language` = 'Portuguese (Brazil)'
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'legal'
SELECT DISTINCT `cards`.`subtypes` AS `type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`subtypes` IS NOT NULL UNION SELECT DISTINCT `cards`.`supertypes` AS `type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`supertypes` IS NOT NULL;
SELECT COUNT(*) FROM `cards` WHERE `power` IS NULL AND (`text` LIKE '%when%' OR `text` LIKE '%whenever%' OR `text` LIKE '%if%')
SELECT COUNT(DISTINCT T1.`id`) FROM `cards` AS T1 INNER JOIN `legalities` AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN `rulings` AS T3 ON T1.`uuid` = T3.`uuid` WHERE T2.`format` = 'premodern' AND T3.`text` = 'This is a triggered mana ability' AND T1.`side` IS NULL
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `legalities`.`format` = 'pauper' AND `cards`.`availability` = 'paper'
SELECT `artist` FROM `cards` WHERE `text` = 'Das perfekte Gegenmittel zu einer dichten Formation'
SELECT `foreign_data`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`type` = 'Creature' AND `cards`.`layout` = 'normal' AND `cards`.`borderColor` = 'black' AND `foreign_data`.`language` = 'French'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`rarity` = 'rare' AND `T2`.`date` = '2009-10-01'
SELECT `T2`.`language` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T1`.`baseSetSize` = 180 AND `T1`.`block` = 'Ravnica'
SELECT (CAST(COUNT(CASE WHEN `T1`.`hasContentWarning` = 0 THEN 1 END) AS REAL) / COUNT(`T1`.`id`)) * 100 AS percentage FROM `cards` AS `T1` INNER JOIN `legalities` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T2`.`format` = 'commander' AND `T2`.`status` = 'legal'
SELECT CAST(COUNT(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 END) AS REAL) * 100 / COUNT(CASE WHEN `cards`.`power` IS NULL OR `cards`.`power` = '*' THEN 1 END) AS percentage FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`power` IS NULL OR `cards`.`power` = '*';
SELECT (COUNT(CASE WHEN T1.language = 'Japanese' AND T2.type = 'expansion' THEN 1 END) * 100.0 / COUNT(T1.language)) AS percentage FROM `set_translations` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`language` = 'Japanese'
SELECT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000
SELECT COUNT(*) FROM `cards` WHERE `isOversized` = 1 AND `isReprint` = 1 AND `isPromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promoTypes` LIKE '%arenaleague%' ORDER BY `name` ASC LIMIT 3
SELECT `language` FROM `foreign_data` WHERE `multiverseid` = 149934
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `cardKingdomFoilId` ASC LIMIT 3
SELECT CAST(COUNT(CASE WHEN `isTextless` = 1 AND `layout` = 'normal' THEN 1 END) AS REAL) * 100 / COUNT(CASE WHEN `isTextless` = 1 THEN 1 END) FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `id`, `name` FROM `sets` WHERE `mtgoCode` IS NULL OR `mtgoCode` = '' ORDER BY `name` ASC LIMIT 3
SELECT DISTINCT `set_translations`.`language` FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `sets`.`mcmName` = 'Archenemy' AND `sets`.`code` = 'ARC'
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 5
SELECT `T2`.`language`, `T1`.`type` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T1`.`id` = 206
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`block` = 'Shadowmoor' AND `set_translations`.`language` = 'Italian' ORDER BY `sets`.`name` ASC LIMIT 2
SELECT `sets`.`id` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`isForeignOnly` = 1 AND `sets`.`isFoilOnly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `T1`.`name`, `T1`.`baseSetSize` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T2`.`language` = 'Russian' ORDER BY `T1`.`baseSetSize` DESC LIMIT 1
SELECT (COUNT(CASE WHEN `cards`.`isOnlineOnly` = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T2`.`language` = 'Japanese' AND (`T1`.`mtgoCode` IS NULL OR `T1`.`mtgoCode` = '')
SELECT `id` FROM `cards` WHERE `borderColor` = 'black'
SELECT `id`, COUNT(`id`) OVER() AS `count` FROM `cards` WHERE `frameEffects` = 'extendedart'
SELECT * FROM `cards` WHERE `borderColor` = 'black' AND `isFullArt` = 1
SELECT `T2`.`language` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T1`.`id` = 174
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT `language` FROM `foreign_data` WHERE `name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2007-07-13'
SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'boros'
SELECT `foreign_data`.`language`, `foreign_data`.`flavorText`, `cards`.`type` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT (COUNT(CASE WHEN `T1`.`convertedManaCost` = 10 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` AS `T1` WHERE `T1`.`setCode` = (SELECT `setCode` FROM `cards` WHERE `name` = 'Abyssal Horror')
SELECT `code` FROM `sets` WHERE `type` = 'commander'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `foreign_data`.`language`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` = `cardKingdomId` AND `cardKingdomId` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` LIKE '+%'
SELECT `name` FROM `cards` WHERE `isTextless` = 0
SELECT `convertedManaCost` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `isPromo` = 1 AND `side` IS NOT NULL
SELECT `types` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseUrls` FROM `cards` WHERE `promoTypes` LIKE '%bundle%';
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` LIKE '%arena,mtgo%';
SELECT `name`, `convertedManaCost` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameVersion` = '2003' ORDER BY `convertedManaCost` DESC LIMIT 3
SELECT `T3`.`translation` FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` INNER JOIN `set_translations` AS `T3` ON `T2`.`code` = `T3`.`setCode` WHERE `T1`.`name` = 'Ancestor''s Chosen' AND `T3`.`language` = 'Italian'
SELECT COUNT(`T2`.`id`) FROM `cards` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`setCode` = `T2`.`setCode` WHERE `T1`.`name` = 'Angel of Mercy'
SELECT `T1`.`name` FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` INNER JOIN `set_translations` AS `T3` ON `T2`.`code` = `T3`.`setCode` WHERE `T3`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) > 0 FROM `foreign_data` AS `T1` INNER JOIN `cards` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T2`.`name` = 'Ancestor''s Chosen' AND `T1`.`language` = 'Korean'
SELECT COUNT(`T1`.`id`) FROM `cards` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`setCode` = `T2`.`setCode` WHERE `T2`.`translation` = 'Hauptset Zehnte Edition' AND `T1`.`artist` = 'Adam Rex'
SELECT `baseSetSize` FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`translation` = 'Hauptset Zehnte Edition'
SELECT `T2`.`translation` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T1`.`name` = 'Eighth Edition' AND `T2`.`language` = 'Chinese Simplified'
SELECT T1.name FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`name` = 'Angel of Mercy' AND T2.`mtgoCode` IS NOT NULL
SELECT `sets`.`releaseDate` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Ancestor''s Chosen'
SELECT `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`block` = 'Ice Age' AND T2.`language` = 'Italian'
SELECT `sets`.`isForeignOnly` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Adarkar Valkyrie'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T2`.`language` = 'Italian' AND `T1`.`baseSetSize` < 10
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`borderColor` = 'black'
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT `cards`.* FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`number` = '4'
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`convertedManaCost` > 5 AND (T1.`power` = '*' OR T1.`power` IS NULL)
SELECT `flavorText` FROM `foreign_data` WHERE `language` = 'Italian' AND `name` = 'Ancestor''s Chosen'
SELECT DISTINCT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`flavorText` IS NOT NULL
SELECT `foreign_data`.`type` FROM `foreign_data` JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`name` = 'Ancestor''s Chosen'
SELECT `foreign_data`.`text` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian'
SELECT `T3`.`name` FROM `foreign_data` AS `T3` INNER JOIN `cards` AS `T1` ON `T3`.`uuid` = `T1`.`uuid` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` WHERE `T2`.`name` = 'Coldsnap' AND `T3`.`language` = 'Italian' ORDER BY `T1`.`convertedManaCost` DESC LIMIT 1
SELECT `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`name` = 'Reminisce'
SELECT (COUNT(CASE WHEN `T1`.`convertedManaCost` = 7 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` WHERE `T2`.`name` = 'Coldsnap'
SELECT (CAST(SUM(CASE WHEN `cards`.`cardKingdomFoilId` IS NOT NULL AND `cards`.`cardKingdomId` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_incredibly_powerful FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2017-07-14'
SELECT `keyruneCode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmId` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmName` FROM `sets` WHERE `releaseDate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore'
SELECT `parentCode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT `T2`.`text`, CASE WHEN `T1`.`hasContentWarning` = 1 THEN 'Yes' ELSE 'No' END AS `has_missing_properties` FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`artist` = 'Jim Pavelec'
SELECT T2.releaseDate FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation'
SELECT `sets`.`baseSetSize` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`translation` = 'Rinascita di Alara'
SELECT `sets`.`type` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`translation` = 'Huitième édition'
SELECT `T3`.`translation` FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` INNER JOIN `set_translations` AS `T3` ON `T2`.`code` = `T3`.`setCode` WHERE `T1`.`name` = 'Tendo Ice Bridge' AND `T3`.`language` = 'French'
SELECT COUNT(`T1`.`translation`) FROM `set_translations` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` WHERE `T2`.`name` = 'Salvat 2011' AND `T1`.`translation` IS NOT NULL
SELECT `T3`.`translation` FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setCode` = `T2`.`code` INNER JOIN `set_translations` AS `T3` ON `T2`.`code` = `T3`.`setCode` WHERE `T1`.`name` = 'Fellwar Stone' AND `T3`.`language` = 'Japanese'
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Journey into Nyx Hero''s Path' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1
SELECT `sets`.`releaseDate` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`translation` = 'Ola de frío'
SELECT `sets`.`type` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Samite Pilgrim'
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'World Championship Decks 2004' AND T1.`convertedManaCost` = 3
SELECT `T2`.`translation` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T1`.`name` = 'Mirrodin' AND `T2`.`language` = 'Chinese Simplified'
SELECT (SUM(CASE WHEN `S`.`isNonFoilOnly` = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS `percentage_non_foil` FROM `sets` AS `S` INNER JOIN `set_translations` AS `ST` ON `S`.`code` = `ST`.`setCode` WHERE `ST`.`language` = 'Japanese'
SELECT (CAST(SUM(CASE WHEN `sets`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_online_only FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Portuguese (Brazil)'
SELECT `availability` FROM `cards` WHERE `artist` = 'Aleksi Briclot' AND `isTextless` = 1
SELECT `id` FROM `sets` ORDER BY `baseSetSize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `frameEffects` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL GROUP BY `frameEffects` ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasFoil` = 0 AND `duelDeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalSetSize` DESC LIMIT 1
SELECT `cards`.`name`, `cards`.`manaCost` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'duel' ORDER BY `cards`.`manaCost` DESC LIMIT 10
SELECT T1.originalReleaseDate, T2.format FROM `cards` AS T1 INNER JOIN `legalities` AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T1.originalReleaseDate = (SELECT MIN(`originalReleaseDate`) FROM `cards` WHERE `rarity` = 'mythic') AND T2.status = 'legal'
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Volkan BaÇµa' AND T2.`language` = 'French'
SELECT COUNT(*) FROM `cards` AS `T1` INNER JOIN `legalities` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`rarity` = 'rare' AND `T1`.`types` = 'Enchantment' AND `T1`.`name` = 'Abundance' AND `T2`.`status` = 'Legal'
SELECT `T1`.`format`, `T2`.`name` FROM `legalities` AS `T1` INNER JOIN `cards` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`status` = 'banned' GROUP BY `T1`.`format` ORDER BY COUNT(`T1`.`status`) DESC LIMIT 1
SELECT `T2`.`language` FROM `sets` AS `T1` INNER JOIN `set_translations` AS `T2` ON `T1`.`code` = `T2`.`setCode` WHERE `T1`.`name` = 'Battlebond'
SELECT T1.artist, T2.format FROM `cards` AS T1 INNER JOIN `legalities` AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = (SELECT T1.artist FROM `cards` AS T1 GROUP BY T1.artist ORDER BY COUNT(T1.id) ASC LIMIT 1)
SELECT T2.status FROM `cards` AS T1 INNER JOIN `legalities` AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy'
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`edhrecRank` = 1 AND `legalities`.`status` = 'banned'
SELECT AVG(set_count) AS annual_average_sets, common_language FROM (SELECT COUNT(*) AS set_count FROM `sets` WHERE `releaseDate` BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', `releaseDate`)) AS yearly_sets, (SELECT `language` FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` GROUP BY `language` ORDER BY COUNT(*) DESC LIMIT 1) AS common_language
SELECT `artist` FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'arena'
SELECT `T1`.`uuid` FROM `legalities` AS `T1` INNER JOIN `cards` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`format` = 'oldschool' AND (`T1`.`status` = 'banned' OR `T1`.`status` = 'restricted')
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT `T1`.`name`, `T2`.`format` FROM `cards` AS `T1` INNER JOIN `legalities` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` INNER JOIN `sets` AS `T3` ON `T1`.`setCode` = `T3`.`code` WHERE `T3`.`name` = 'Hour of Devastation' AND `T2`.`status` = 'legal'
SELECT DISTINCT `sets`.`name` FROM `sets` LEFT JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Korean' AND `sets`.`code` NOT IN (SELECT `setCode` FROM `set_translations` WHERE `language` LIKE '%Japanese%')
SELECT DISTINCT `cards`.`frameVersion`, `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' AND `legalities`.`status` = 'Banned'
SELECT `DisplayName`, `Reputation` FROM `users` WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') ORDER BY `Reputation` DESC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE strftime('%Y', `CreationDate`) = '2014'
SELECT COUNT(`Id`) FROM `users` WHERE `LastAccessDate` > '2014-09-01 00:00:00'
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `UpVotes` > 100 AND `DownVotes` > 1
SELECT COUNT(*) FROM `users` WHERE `Views` > 10 AND `CreationDate` > '2013-01-01'
SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `T2`.`Title` FROM `users` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`Id` = `T2`.`OwnerUserId` WHERE `T1`.`DisplayName` = 'csgillespie'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') ORDER BY `ViewCount` DESC LIMIT 1
SELECT `T2`.`DisplayName` FROM `posts` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`OwnerUserId` = `T2`.`Id` ORDER BY `T1`.`FavoriteCount` DESC LIMIT 1
SELECT SUM(`CommentCount`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT MAX(`posts`.`AnswerCount`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') AND `ParentId` IS NULL
SELECT DISTINCT `users`.`DisplayName` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`ClosedDate` IS NOT NULL
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` > 65 AND `posts`.`Score` >= 20
SELECT `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `T2`.`Body` FROM `tags` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`ExcerptPostId` = `T2`.`Id` WHERE `T1`.`TagName` = 'bayesian'
SELECT `posts`.`Body` FROM `posts` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `tags`.`Count` = (SELECT MAX(`tags`.`Count`) FROM `tags`)
SELECT COUNT(`Id`) FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT COUNT(*) FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') AND strftime('%Y', `Date`) = '2011'
SELECT `users`.`DisplayName` FROM `users` INNER JOIN (SELECT `UserId`, COUNT(`Id`) AS `badge_count` FROM `badges` GROUP BY `UserId` ORDER BY `badge_count` DESC LIMIT 1) AS `max_badges` ON `users`.`Id` = `max_badges`.`UserId`
SELECT AVG(`Score`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT CAST(COUNT(`badges`.`Id`) AS REAL) / COUNT(DISTINCT `users`.`DisplayName`) AS average_badges FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Views` > 200
SELECT (COUNT(CASE WHEN `T2`.`Age` > 65 THEN 1 END) * 100.0 / COUNT(`T1`.`Id)) AS percentage FROM `posts` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`OwnerUserId` = `T2`.`Id` WHERE `T1`.`Score` > 20
SELECT COUNT(*) FROM `votes` WHERE `UserId` = 58 AND `CreationDate` = '2010-07-19'
SELECT `CreationDate` FROM `votes` GROUP BY `CreationDate` ORDER BY COUNT(`Id`) DESC LIMIT 1
SELECT COUNT(`Id`) FROM `badges` WHERE `Name` = 'Revival'
SELECT `posts`.`Title` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` = (SELECT MAX(`Score`) FROM `comments`)
SELECT COUNT(`comments`.`Id`) FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`ViewCount` = 1910
SELECT `posts`.`FavoriteCount` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`UserId` = 3025 AND `comments`.`CreationDate` = '2014-04-23 20:29:39.0'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`ParentId` = 107829 AND `posts`.`CommentCount` = 1
SELECT `posts`.`ClosedDate` IS NULL AS `NotWellFinished` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`UserId` = 23853 AND `comments`.`CreationDate` = '2013-07-12 09:08:18.0'
SELECT `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 65041
SELECT COUNT(`posts`.`Id`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Tiago Pasqualini')
SELECT `users`.`DisplayName` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`Id` = 6347
SELECT COUNT(`votes`.Id) FROM `posts` INNER JOIN `votes` ON `posts`.Id = `votes`.PostId WHERE `posts`.Title LIKE '%data visualization%';
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'
SELECT CAST(COUNT(`T1`.`Id`) AS REAL) / NULLIF(COUNT(`T2`.`Id`), 0) AS post_vote_ratio FROM `posts` AS `T1` LEFT JOIN `votes` AS `T2` ON `T1`.`OwnerUserId` = `T2`.`UserId` WHERE `T1`.`OwnerUserId` = 24
SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `Text` FROM `comments` WHERE `Score` = 17
SELECT `DisplayName` FROM `users` WHERE `WebsiteUrl` = 'http://stackoverflow.com'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'SilentGhost'
SELECT `users`.`DisplayName` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'thank you user93!'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'A Lion'
SELECT `T2`.`DisplayName`, `T2`.`Reputation` FROM `posts` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`OwnerUserId` = `T2`.`Id` WHERE `T1`.`Title` = 'Understanding what Dassault iSight is doing?'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'How does gentle boosting differ from AdaBoost?'
SELECT DISTINCT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Necromancer' LIMIT 10
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Open source tools for visualizing multi-dimensional data?'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Vebjorn Ljosa'
SELECT SUM(`posts`.`Score`) AS `TotalScore`, `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Yevgeny'
SELECT `postHistory`.`Comment` FROM `postHistory` INNER JOIN `posts` ON `postHistory`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?'
SELECT SUM(`votes`.`BountyAmount`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `posts`.`Title` LIKE '%data%';
SELECT DISTINCT `users`.`DisplayName` FROM `votes` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`PostId` = `T2`.`Id` INNER JOIN `users` AS `T3` ON `T1`.`UserId` = `T3`.`Id` WHERE `T1`.`BountyAmount` = 50 AND `T2`.`Title` LIKE '%variance%'
SELECT AVG(`posts`.`ViewCount`) AS `AverageViewCount`, `posts`.`Title`, `comments`.`Text`, `comments`.`Score` FROM `tags` JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` LEFT JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `tags`.`TagName` = 'humor' GROUP BY `posts`.`Id`
SELECT COUNT(*) FROM `comments` WHERE `UserId` = 13
SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT `Id` FROM `users` WHERE `Views` IS NOT NULL ORDER BY `Views` ASC LIMIT 1
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Supporter' AND strftime('%Y', `Date`) = '2011'
SELECT COUNT(*) FROM (SELECT `UserId` FROM `badges` GROUP BY `UserId` HAVING COUNT(`Name`) > 5) AS T
SELECT COUNT(DISTINCT T1.`Id`) FROM `users` AS T1 INNER JOIN `badges` AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`Location` = 'New York' AND T2.`Name` IN ('Supporter', 'Teacher') GROUP BY T1.`Id` HAVING COUNT(DISTINCT T2.`Name`) = 2
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 1
SELECT `users`.`Id` FROM `users` INNER JOIN `postHistory` ON `users`.`Id` = `postHistory`.`UserId` INNER JOIN `posts` ON `postHistory`.`PostId` = `posts`.`Id` WHERE `posts`.`ViewCount` >= 1000 GROUP BY `users`.`Id`, `postHistory`.`PostId` HAVING COUNT(`postHistory`.`Id`) = 1
SELECT U.`DisplayName`, B.`Name` FROM (SELECT `UserId`, COUNT(`Id`) AS `CommentCount` FROM `comments` GROUP BY `UserId` HAVING COUNT(`Id`) = (SELECT MAX(CommentCount) FROM (SELECT COUNT(`Id`) AS CommentCount FROM `comments` GROUP BY `UserId`))) AS T1 INNER JOIN `users` AS U ON T1.`UserId` = U.`Id` INNER JOIN `badges` AS B ON T1.`UserId` = B.`UserId`
SELECT COUNT(DISTINCT `users`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'India' AND `badges`.`Name` = 'Teacher'
SELECT ( (COUNT(CASE WHEN strftime('%Y', `Date`) = '2010' AND `Name` = 'Students' THEN 1 END) * 100.0 / COUNT(CASE WHEN `Name` = 'Students' THEN 1 END)) - (COUNT(CASE WHEN strftime('%Y', `Date`) = '2011' AND `Name` = 'Students' THEN 1 END) * 100.0 / COUNT(CASE WHEN `Name` = 'Students' THEN 1 END)) ) AS percentage_difference FROM `badges`
SELECT `PostHistoryTypeId` FROM `postHistory` WHERE `PostId` = `3720` UNION SELECT COUNT(DISTINCT `UserId`) FROM `comments` WHERE `PostId` = `3720`
SELECT `posts`.`Id`, `posts`.`Title`, `posts`.`ViewCount` FROM `postLinks` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`RelatedPostId` = `T2`.`Id` INNER JOIN `posts` AS `T3` ON `T1`.`PostId` = `T3`.`Id` WHERE `T1`.`PostId` = 61217
SELECT `posts`.`Score`, `postLinks`.`LinkTypeId` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`PostId` WHERE `posts`.`Id` = 395
SELECT `Id`, `OwnerUserId` FROM `posts` WHERE `Score` > 60
SELECT SUM(`FavoriteCount`) FROM `posts` WHERE `OwnerUserId` = 686 AND strftime('%Y', `CreationDate`) = '2011'
SELECT (SUM(`users`.`UpVotes`) * 1.0 / COUNT(`users`.`Id`)) AS `AverageUpVotes`, (SUM(`users`.`Age`) * 1.0 / COUNT(`users`.`Id`)) AS `AverageAge` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` GROUP BY `users`.`Id` HAVING COUNT(`posts`.`Id`) > 10
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Announcer'
SELECT `Name` FROM `badges` WHERE `Date` = '2010-07-19 19:39:08'
SELECT COUNT(*) FROM `comments` WHERE `Score` > 60
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:16:14.0'
SELECT COUNT(*) FROM `posts` WHERE `Score` = 10
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT `users`.`Reputation` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Pierre'
SELECT `badges`.`Date` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'Rochester, NY'
SELECT CAST(COUNT(DISTINCT `T1`.`UserId`) AS REAL) * 100 / (SELECT COUNT(DISTINCT `T2`.`Id`) FROM `users` AS `T2`) AS `percentage` FROM `badges` AS `T1` WHERE `T1`.`Name` = 'Teacher'
SELECT (COUNT(CASE WHEN `T2`.`Age` BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(`T2`.`Id`)) AS percentage FROM `badges` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`UserId` = `T2`.`Id` WHERE `T1`.`Name` = 'Organizer'
SELECT `comments`.`Score` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:19:56.0'
SELECT `comments`.`Text` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:37:33.0'
SELECT `users`.`Age` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'Vienna, Austria'
SELECT COUNT(DISTINCT `T1`.`UserId`) FROM `badges` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`UserId` = `T2`.`Id` WHERE `T1`.`Name` = 'Supporter' AND `T2`.`Age` BETWEEN 19 AND 65
SELECT `users`.`Views` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MIN(`Reputation`) FROM `users`)
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Sharpie'
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` > 65
SELECT `DisplayName` FROM `users` WHERE `Id` = 30
SELECT COUNT(`Id`) FROM `users` WHERE `Location` = 'New York'
SELECT COUNT(`Id`) FROM `votes` WHERE strftime('%Y', `CreationDate`) = '2010'
SELECT COUNT(*) FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT `DisplayName`, `Views` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2010' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2011' THEN 1 END), 0) AS ratio FROM `votes`
SELECT `posts`.`Tags` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'John Stauffer'
SELECT COUNT(`posts`.`Id`) FROM `posts` WHERE `posts`.`OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Daniel Vassallo')
SELECT COUNT(*) FROM `votes` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harlan')
SELECT `T1`.`Id` FROM `posts` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`OwnerUserId` = `T2`.`Id` WHERE `T2`.`DisplayName` = 'slashnick' ORDER BY `T1`.`AnswerCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, SUM(`posts`.`ViewCount`) AS `TotalViewCount` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `users`.`DisplayName` ORDER BY `TotalViewCount` DESC LIMIT 1
SELECT COUNT(DISTINCT T1.Id) FROM `posts` AS T1 INNER JOIN `users` AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN `votes` AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'Matt Parker' GROUP BY T1.Id HAVING COUNT(T3.PostId) > 4
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`OwnerDisplayName` = 'Neil McGuigan' AND `comments`.`Score` < 60
SELECT DISTINCT `T3`.`TagName` FROM `users` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`Id` = `T2`.`OwnerUserId` LEFT JOIN `comments` AS `T4` ON `T2`.`Id` = `T4`.`PostId` INNER JOIN `tags` AS `T3` ON `T2`.`Tags` LIKE '%' || `T3`.`TagName` || '%' WHERE `T1`.`DisplayName` = 'Mark Meckes' AND `T4`.`Id` IS NULL
SELECT DISTINCT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Organizer'
SELECT CAST(COUNT(T1.Id) AS REAL) * 100 / (SELECT COUNT(*) FROM `posts` WHERE `OwnerDisplayName` = 'Community') AS `percentage` FROM `posts` AS T1 INNER JOIN `tags` AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'r'
SELECT (SUM(`T1`.`ViewCount`) - (SELECT SUM(`T2`.`ViewCount`) FROM `posts` AS `T2` INNER JOIN `users` AS `U2` ON `T2`.`OwnerUserId` = `U2`.`Id` WHERE `U2`.`DisplayName` = 'Amos')) AS `ViewCountDifference` FROM `posts` AS `T1` INNER JOIN `users` AS `U1` ON `T1`.`OwnerUserId` = `U1`.`Id` WHERE `U1`.`DisplayName` = 'Mornington'
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'commentator' AND STRFTIME('%Y', `Date`) = '2014'
SELECT COUNT(*) FROM `posts` WHERE `CreationDate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `DisplayName`, `Age` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users` WHERE `Views` IS NOT NULL)
SELECT `LastEditDate`, `LastEditorUserId` FROM `posts` WHERE `Title` = 'Detecting a given face in a database of facial images'
SELECT COUNT(*) FROM `comments` WHERE `Score` < 60 AND `UserId` = 13
SELECT `posts`.`Title`, `comments`.`UserDisplayName` FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `comments`.`Score` > 60
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'North Pole' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`FavoriteCount` > 150
SELECT COUNT(`postHistory`.`Id`) AS `post_history_count`, `posts`.`LastEditDate` AS `last_edit_date` FROM `posts` INNER JOIN `postHistory` ON `posts`.`Id` = `postHistory`.`PostId` WHERE `posts`.`Title` = 'What is the best introductory Bayesian statistics textbook?' GROUP BY `posts`.`Id`
SELECT `users`.`LastAccessDate`, `users`.`Location` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'outliers'
SELECT T2.`Title` FROM `postLinks` AS T1 INNER JOIN `posts` AS T2 ON T1.`RelatedPostId` = T2.`Id` INNER JOIN `posts` AS T3 ON T1.`PostId` = T3.`Id` WHERE T3.`Title` = 'How to tell if something happened in a data set which monitors a value over time'
SELECT `posts`.`Id` AS `PostId`, `badges`.`Name` AS `BadgeName` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`DisplayName` = 'Samuel' AND strftime('%Y', `posts`.`CreationDate`) = '2013' AND strftime('%Y', `badges`.`Date`) = '2013'
SELECT `OwnerDisplayName` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, `users`.`Location` FROM `posts` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `tags`.`TagName` = 'hypothesis-testing'
SELECT `T2`.`Title`, `T1`.`LinkTypeId` FROM `postLinks` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`RelatedPostId` = `T2`.`Id` WHERE `T1`.`PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'What are principal component scores?')
SELECT T2.OwnerDisplayName FROM `posts` AS T1 INNER JOIN `posts` AS T2 ON T1.`ParentId` = T2.`Id` WHERE T1.`Score` = (SELECT MAX(`Score`) FROM `posts` WHERE `ParentId` IS NOT NULL)
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`VoteTypeId` = 8 AND `votes`.`BountyAmount` = (SELECT MAX(`BountyAmount`) FROM `votes` WHERE `votes`.`VoteTypeId` = 8)
SELECT `Title` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 5
SELECT COUNT(`Id`) FROM `tags` WHERE `Count` BETWEEN 5000 AND 7000
SELECT `OwnerUserId` FROM `posts` WHERE `FavoriteCount` = (SELECT MAX(`FavoriteCount`) FROM `posts`);
SELECT `Age` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE strftime('%Y', `posts`.`CreaionDate`) = '2011' AND `votes`.`BountyAmount` = 50
SELECT `Id` FROM `users` ORDER BY `Age` ASC LIMIT 1
SELECT `T1`.`Score` FROM `posts` AS `T1` INNER JOIN `tags` AS `T2` ON `T1`.`Id` = `T2`.`ExcerptPostId` WHERE `T2`.`Count` = (SELECT MAX(`T3`.`Count`) FROM `tags` AS `T3`)
SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM `postLinks` AS T1 INNER JOIN `posts` AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2
SELECT `posts`.`Id` FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `votes`.`UserId` = 1465 ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT T2.`Title` FROM `postLinks` AS T1 INNER JOIN `posts` AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`CreationDate` = (SELECT MIN(`CreationDate`) FROM `postLinks`)
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `badges`.`UserId` ORDER BY COUNT(`badges`.`Name`) DESC LIMIT 1
SELECT MIN(`CreationDate`) FROM `votes` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'chl')
SELECT MIN(`posts`.`CreaionDate`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` = (SELECT MIN(`Age`) FROM `users`)
SELECT T2.`DisplayName` FROM `badges` AS T1 INNER JOIN `users` AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Autobiographer' AND T1.`Date` = (SELECT MIN(`Date`) FROM `badges` WHERE `Name` = 'Autobiographer')
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`Location` = 'United Kingdom' AND `posts`.`FavoriteCount` >= 4
SELECT AVG(v.`PostId`) FROM `votes` AS v INNER JOIN `users` AS u ON v.`UserId` = u.`Id` WHERE u.`Age` = (SELECT MAX(`Age`) FROM `users`)
SELECT `DisplayName` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(*) FROM `users` WHERE `Reputation` > 2000 AND `Views` > 1000
SELECT `DisplayName` FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Jay Stevens' AND strftime('%Y', `posts`.`CreationDate`) = '2010'
SELECT `posts`.`Id`, `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harvey Motulsky' ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `Id`, `Title` FROM `posts` ORDER BY `Score` DESC LIMIT 1
SELECT AVG(`posts`.`Score`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Stephen Turner'
SELECT DISTINCT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ViewCount` > 20000 AND strftime('%Y', `posts`.`CreationDate`) = '2011'
SELECT `posts`.`Id`, `posts`.`OwnerDisplayName` FROM `posts` WHERE strftime('%Y', `posts`.`CreationDate`) = '2010' ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT (COUNT(T1.`Id`) * 100.0 / (SELECT COUNT(`Id`) FROM `posts` WHERE strftime('%Y', `CreaionDate`) = '2011')) AS `percentage` FROM `posts` AS T1 INNER JOIN `users` AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE strftime('%Y', T1.`CreaionDate`) = '2011' AND T2.`Reputation` > 1000
SELECT (COUNT(CASE WHEN `Age` BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(`Id`)) AS percentage FROM `users`
SELECT `posts`.`ViewCount`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Computer Game Datasets'
SELECT COUNT(*) FROM `posts` WHERE `ViewCount` > (SELECT AVG(`ViewCount`) FROM `posts` WHERE `ViewCount` IS NOT NULL)
SELECT COUNT(`comments`.`Id`) FROM `comments` WHERE `comments`.`PostId` = (SELECT `posts`.`Id` FROM `posts` ORDER BY `posts`.`Score` DESC LIMIT 1)
SELECT COUNT(*) FROM `posts` WHERE `ViewCount` > 35000 AND `CommentCount` = 0
SELECT `users`.`DisplayName`, `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Id` = 183 ORDER BY `posts`.`LastEditDate` DESC LIMIT 1
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Emmett' ORDER BY `badges`.`Date` DESC LIMIT 1
SELECT COUNT(`Id`) FROM `users` WHERE `Age` BETWEEN 19 AND 65 AND `UpVotes` > 5000
SELECT SUBSTR(DATETIME(`badges`.`Date`), 1, 10) AS badge_date, `users`.`CreationDate`, (JULIANDAY(`badges`.`Date`) - JULIANDAY(`users`.`CreationDate`)) AS days_taken FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Zolomon'
SELECT COUNT(DISTINCT `posts`.`Id`) AS `PostCount`, COUNT(DISTINCT `comments`.`Id`) AS `CommentCount` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` LEFT JOIN `comments` ON `users`.`Id` = `comments`.`UserId` WHERE `users`.`Id` = (SELECT `Id` FROM `users` ORDER BY `CreationDate` DESC LIMIT 1)
SELECT `T1`.`Text`, `T2`.`DisplayName` FROM `comments` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`UserId` = `T2`.`Id` INNER JOIN `posts` AS `T3` ON `T1`.`PostId` = `T3`.`Id` WHERE `T3`.`Title` = 'Analysing wind data with R' ORDER BY `T1`.`CreationDate` DESC LIMIT 1
SELECT COUNT(`UserId`) FROM `badges` WHERE `badges`.`Name` = 'Citizen Patrol'
SELECT COUNT(*) FROM `posts` AS `T1` INNER JOIN `tags` AS `T2` ON `T1`.`Tags` LIKE '%' || `T2`.`TagName` || '%' WHERE `T2`.`TagName` = 'careers'
SELECT `Reputation`, `Views` FROM `users` WHERE `DisplayName` = 'Jarrod Dixon'
SELECT COUNT(`comments`.`Id`) AS `CommentCount`, `posts`.`AnswerCount` FROM `posts` LEFT JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Clustering 1D data' GROUP BY `posts`.`Id`
SELECT `CreationDate` FROM `users` WHERE `DisplayName` = 'IrishStat'
SELECT COUNT(*) FROM `votes` WHERE `BountyAmount` >= 30
SELECT (CAST(COUNT(CASE WHEN `T1`.`Score` >= 50 THEN 1 END) AS REAL) / COUNT(`T1`.`Id`)) * 100 AS `percentage` FROM `posts` AS `T1` INNER JOIN `users` AS `T2` ON `T1`.`OwnerUserId` = `T2`.`Id` WHERE `T2`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(`Id`) FROM `posts` WHERE `Score` < 20
SELECT COUNT(*) FROM `tags` WHERE `Id` < 15 AND `Count` <= 20
SELECT `ExcerptPostId`, `WikiPostId` FROM `tags` WHERE `TagName` = 'sample'
SELECT `users`.`Reputation`, `users`.`UpVotes` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'fine, you win :)'
SELECT `comments`.`Text` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%regression%' OR `posts`.`Tags` LIKE '%regression%';
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`ViewCount` BETWEEN 100 AND 150 ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT `users`.`CreationDate`, `users`.`Age` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` LIKE '%http://%'
SELECT COUNT(DISTINCT `T1`.`PostId`) FROM `comments` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`PostId` = `T2`.`Id` WHERE `T1`.`Score` = 0 AND `T2`.`ViewCount` < 5
SELECT COUNT(`comments`.`Id`) FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`CommentCount` = 1 AND `comments`.`Score` = 0
SELECT COUNT(DISTINCT `users`.`Id`) FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` = 0 AND `users`.`Age` = 40
SELECT `posts`.`Id`, `comments`.`Text` FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Group differences on a five point Likert item'
SELECT `users`.`UpVotes` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'R is also lazy evaluated.'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harvey Motulsky'
SELECT DISTINCT `users`.`DisplayName` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 1 AND 5 AND `users`.`DownVotes` = 0
SELECT (CAST(COUNT(CASE WHEN U.`UpVotes` = 0 THEN 1 END) AS REAL) / COUNT(*)) * 100 AS `percentage` FROM `comments` AS C INNER JOIN `users` AS U ON C.`UserId` = U.`Id` WHERE C.`Score` BETWEEN 5 AND 10
SELECT `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T1`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT `superhero`.id) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.id = `hero_power`.hero_id INNER JOIN `superpower` ON `hero_power`.power_id = `superpower`.id WHERE `superpower`.power_name = 'Super Strength' AND `superhero`.height_cm > 200
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` HAVING COUNT(`hero_power`.`power_id`) > 15
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue'
SELECT `T2`.`colour` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`skin_colour_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Apocalypse'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` INNER JOIN `colour` AS `T4` ON `T1`.`eye_colour_id` = `T4`.`id` WHERE `T4`.`colour` = 'Blue' AND `T3`.`power_name` = 'Agility'
SELECT `T1`.`superhero_name` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`eye_colour_id` = `T2`.`id` INNER JOIN `colour` AS `T3` ON `T1`.`hair_colour_id` = `T3`.`id` WHERE `T2`.`colour` = 'Blue' AND `T3`.`colour` = 'Blond'
SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T2`.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' ORDER BY `superhero`.`height_cm` DESC LIMIT 1
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Sauron'
SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` INNER JOIN `colour` AS `T3` ON `T1`.`eye_colour_id` = `T3`.`id` WHERE `T2`.`publisher_name` = 'Marvel Comics' AND `T3`.`colour` = 'Blue'
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT CAST(SUM(CASE WHEN `T3`.`power_name` = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T1`.`id`) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` LEFT JOIN `hero_power` AS `T4` ON `T1`.`id` = `T4`.`hero_id` LEFT JOIN `superpower` AS `T3` ON `T4`.`power_id` = `T3`.`id` WHERE `T2`.`publisher_name` = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T2`.`publisher_name` = 'DC Comics'
SELECT `T3`.`publisher_name` FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `publisher` AS `T3` ON `T1`.`publisher_id` = `T3`.`id` WHERE `T2`.`attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Speed') AND `T2`.`attribute_value` = (SELECT MIN(`attribute_value`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Speed'))
SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`eye_colour_id` = `T2`.`id` INNER JOIN `publisher` AS `T3` ON `T1`.`publisher_id` = `T3`.`id` WHERE `T2`.`colour` = 'Gold' AND `T3`.`publisher_name` = 'Marvel Comics'
SELECT `T2`.`publisher_name` FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blond'
SELECT `T1`.`superhero_name`, `T1`.`full_name` FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `attribute` AS `T3` ON `T2`.`attribute_id` = `T3`.`id` WHERE `T3`.`attribute_name` = 'Intelligence' ORDER BY `T2`.`attribute_value` ASC LIMIT 1
SELECT `T2`.`race` FROM `superhero` AS `T1` INNER JOIN `race` AS `T2` ON `T1`.`race_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Copycat'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `hero_attribute` AS `T1` INNER JOIN `attribute` AS `T2` ON `T1`.`attribute_id` = `T2`.`id` INNER JOIN `superhero` AS `T3` ON `T1`.`hero_id` = `T3`.`id` WHERE `T2`.`attribute_name` = 'Durability' AND `T1`.`attribute_value` < 50
SELECT DISTINCT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `superhero` AS `T1` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` INNER JOIN `hero_attribute` AS `T3` ON `T1`.`id` = `T3`.`hero_id` INNER JOIN `attribute` AS `T4` ON `T3`.`attribute_id` = `T4`.`id` WHERE `T2`.`gender` = 'Female' AND `T4`.`attribute_name` = 'Strength' AND `T3`.`attribute_value` = 100
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` ORDER BY COUNT(`hero_power`.`power_id`) DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM `superhero`)) AS `percentage`, COUNT(T1.id) AS `count_marvel` FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN `alignment` AS A ON T1.`alignment_id` = A.`id` WHERE A.`alignment` = 'Bad' AND T2.`publisher_name` = 'Marvel Comics'
SELECT (SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T2`.`publisher_name` = 'Marvel Comics') - (SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T2`.`publisher_name` = 'DC Comics') AS `difference`
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`attribute_value`) FROM `hero_attribute`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T1`.`superhero_name` = 'Deathlok'
SELECT AVG(`weight_kg`) FROM `superhero` WHERE `gender_id` = 2
SELECT DISTINCT `superpower`.`power_name` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `gender`.`gender` = 'Male' LIMIT 5
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero_name` FROM `superhero` WHERE `height_cm` BETWEEN 170 AND 190 AND `eye_colour_id` = 1
SELECT `superpower`.`power_name` FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `hero_power`.`hero_id` = 56
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(`superhero`.`id`) FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Bad'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`height_cm` = 185 AND `race`.`race` = 'human'
SELECT `T2`.`colour` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`eye_colour_id` = `T2`.`id` WHERE `T1`.`weight_kg` = (SELECT MAX(`weight_kg`) FROM `superhero` WHERE `weight_kg` IS NOT NULL)
SELECT CAST(SUM(CASE WHEN `publisher_id` = 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS `percentage` FROM `superhero` WHERE `height_cm` BETWEEN 150 AND 180
SELECT `full_name` FROM `superhero` WHERE `gender_id` = (SELECT `id` FROM `gender` WHERE `gender` = 'Male') AND `weight_kg` > (SELECT AVG(`weight_kg`) * 0.79 FROM `superhero` WHERE `weight_kg` IS NOT NULL)
SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T1.power_id) DESC LIMIT 1
SELECT `T2`.`attribute_value` FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` WHERE `T1`.`superhero_name` = 'Abomination'
SELECT `superpower`.`power_name` FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `hero_power`.`hero_id` = 1
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'stealth'
SELECT T3.`full_name` FROM `superhero` AS T3 INNER JOIN `hero_attribute` AS T2 ON T3.`id` = T2.`hero_id` WHERE T2.`attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength') AND T2.`attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength'))
SELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM `superhero`) FROM `superhero` WHERE `skin_colour_id` IS NULL
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics' AND `hero_attribute`.`attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Durability') ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight'
SELECT `eye_colour`.`colour` AS `eye_colour`, `hair_colour`.`colour` AS `hair_colour`, `skin_colour`.`colour` AS `skin_colour` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` INNER JOIN `colour` AS `skin_colour` ON `superhero`.`skin_colour_id` = `skin_colour`.`id` WHERE `gender`.`gender` = 'Female' AND `publisher`.`publisher_name` = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name`, `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`hair_colour_id` = `superhero`.`skin_colour_id` AND `superhero`.`hair_colour_id` = `superhero`.`eye_colour_id`
SELECT `T2`.`race` FROM `superhero` AS `T1` INNER JOIN `race` AS `T2` ON `T1`.`race_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'A-Bomb'
SELECT CAST((SUM(CASE WHEN `colour`.`colour` = 'Blue' THEN 1 ELSE 0 END) * 100.0) / COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN 1 END) AS REAL) AS percentage FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT `T2`.`gender` FROM `superhero` AS `T1` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation'
SELECT COUNT(DISTINCT `T2`.`power_id`) FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` WHERE `T1`.`superhero_name` = 'Amazo'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Hunter Zolomon'
SELECT `height_cm` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`eye_colour_id` = `T2`.`id` WHERE `T2`.`colour` = 'Amber'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Black' AND `hair_colour`.`colour` = 'Black'
SELECT T2.colour FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.eye_colour_id = T2.id INNER JOIN `colour` AS T3 ON T1.skin_colour_id = T3.id WHERE T3.colour = 'Gold'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(`T1`.`hero_id`) FROM `hero_attribute` AS `T1` INNER JOIN `attribute` AS `T2` ON `T1`.`attribute_id` = `T2`.`id` WHERE `T1`.`attribute_value` = (SELECT MAX(`T3`.`attribute_value`) FROM `hero_attribute` AS `T3` INNER JOIN `attribute` AS `T4` ON `T3`.`attribute_id` = `T4`.`id` WHERE `T4`.`attribute_name` = 'Strength')
SELECT `T1`.`race`, `T2`.`alignment` FROM `superhero` AS `T0` INNER JOIN `race` AS `T1` ON `T0`.`race_id` = `T1`.`id` INNER JOIN `alignment` AS `T2` ON `T0`.`alignment_id` = `T2`.`id` WHERE `T0`.`superhero_name` = 'Cameron Hicks'
SELECT CAST(SUM(CASE WHEN `T1`.`gender_id` = (SELECT `id` FROM `gender` WHERE `gender` = 'Female') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T2`.`publisher_name`) AS percent FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T2`.`publisher_name` = 'Marvel Comics'
SELECT AVG(`weight_kg`) FROM `superhero` AS T1 INNER JOIN `race` AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Alien'
SELECT (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS weight_difference
SELECT `id`, `superhero_name`, AVG(`height_cm`) AS `average_height` FROM `superhero` WHERE `height_cm` > 0 GROUP BY `id`, `superhero_name`
SELECT `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T1`.`superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` WHERE `race_id` = 21 AND `gender_id` = 1
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `superhero`.`alignment_id` = 3
SELECT `T3`.`attribute_name`, `T1`.`attribute_value` FROM `hero_attribute` AS `T1` INNER JOIN `superhero` AS `T2` ON `T1`.`hero_id` = `T2`.`id` INNER JOIN `attribute` AS `T3` ON `T1`.`attribute_id` = `T3`.`id` WHERE `T2`.`superhero_name` = '3-D Man'
SELECT `superhero_name` FROM `superhero` WHERE `eye_colour_id` = 7 AND `hair_colour_id` = 9
SELECT `T2`.`publisher_name` FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T1`.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` IS NULL
SELECT CAST(SUM(CASE WHEN `eye_colour_id` = 7 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(`superhero_name`) AS percentage FROM `superhero` WHERE `superhero_name` IS NOT NULL
SELECT (CAST(SUM(CASE WHEN `gender_id` = 1 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN `gender_id` = 2 THEN 1 ELSE 0 END), 0)) AS gender_ratio FROM `superhero`
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan'
SELECT `superpower`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T1`.`full_name` = 'Helen Parr'
SELECT T2.race FROM `superhero` AS T1 INNER JOIN `race` AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`id` = 38
SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)
SELECT T2.alignment, T3.power_name FROM `superhero` AS T1 INNER JOIN `alignment` AS T2 ON T1.`alignment_id` = T2.`id` INNER JOIN `hero_power` AS T4 ON T1.`id` = T4.`hero_id` INNER JOIN `superpower` AS T3 ON T4.`power_id` = T3.`id` WHERE T1.`superhero_name` = 'Atom IV'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(`T1`.`attribute_value`) FROM `hero_attribute` AS `T1` INNER JOIN `superhero` AS `T2` ON `T1`.`hero_id` = `T2`.`id` WHERE `T2`.`alignment_id` = 3
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `alignment` AS `T2` ON `T1`.`alignment_id` = `T2`.`id` INNER JOIN `gender` AS `T3` ON `T1`.`gender_id` = `T3`.`id` WHERE `T2`.`id` = 1 AND `T3`.`id` = 2
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT `T3`.`race` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`hair_colour_id` = `T2`.`id` INNER JOIN `gender` AS `T4` ON `T1`.`gender_id` = `T4`.`id` INNER JOIN `race` AS `T3` ON `T1`.`race_id` = `T3`.`id` WHERE `T2`.`colour` = 'blue' AND `T4`.`gender` = 'Male'
SELECT (CAST(SUM(CASE WHEN `T1`.`gender_id` = 2 THEN 1 ELSE 0 END) AS REAL) / COUNT(`T2`.`id`)) * 100 AS female_percentage FROM `superhero` AS `T1` INNER JOIN `alignment` AS `T2` ON `T1`.`alignment_id` = `T2`.`id` WHERE `T2`.`id` = 2
SELECT (SUM(CASE WHEN `T1`.`eye_colour_id` = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN `T1`.`eye_colour_id` = 1 THEN 1 ELSE 0 END)) AS difference FROM `superhero` AS `T1` WHERE `T1`.`weight_kg` = 0 OR `T1`.`weight_kg` IS NULL
SELECT `T1`.`attribute_value` FROM `hero_attribute` AS `T1` INNER JOIN `superhero` AS `T2` ON `T1`.`hero_id` = `T2`.`id` INNER JOIN `attribute` AS `T3` ON `T1`.`attribute_id` = `T3`.`id` WHERE `T2`.`superhero_name` = 'Hulk' AND `T3`.`attribute_name` = 'Strength'
SELECT `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T1`.`superhero_name` = 'Ajax'
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `colour`.`colour` = 'Green' AND `alignment`.`alignment` = 'Bad'
SELECT COUNT(*) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` INNER JOIN `gender` AS `T3` ON `T1`.`gender_id` = `T3`.`id` WHERE `T3`.`gender` = 'Female' AND `T2`.`publisher_name` = 'Marvel Comics'
SELECT DISTINCT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT `T4`.`gender` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` INNER JOIN `gender` AS `T4` ON `T1`.`gender_id` = `T4`.`id` WHERE `T3`.`power_name` = 'Phoenix Force'
SELECT `superhero`.`superhero_name`, `superhero`.`weight_kg` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics' AND `superhero`.`weight_kg` IS NOT NULL AND `superhero`.`weight_kg` > 0 ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT AVG(`height_cm`) FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` INNER JOIN `race` AS `T3` ON `T1`.`race_id` = `T3`.`id` WHERE `T3`.`race` <> 'Human' AND `T2`.`publisher_name` = 'Dark Horse Comics'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `attribute` AS `T3` ON `T2`.`attribute_id` = `T3`.`id` WHERE `T3`.`attribute_name` = 'Speed' AND `T2`.`attribute_value` = 100
SELECT (COUNT(CASE WHEN `publisher`.`publisher_name` = 'DC Comics' THEN 1 END) - COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN 1 END)) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `T2`.`attribute_name` FROM `hero_attribute` AS `T1` INNER JOIN `attribute` AS `T2` ON `T1`.`attribute_id` = `T2`.`id` INNER JOIN `superhero` AS `T3` ON `T1`.`hero_id` = `T3`.`id` WHERE `T3`.`superhero_name` = 'Black Panther' ORDER BY `T1`.`attribute_value` ASC LIMIT 1
SELECT `T2`.`colour` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`eye_colour_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler'
SELECT (CAST(SUM(CASE WHEN `gender`.`gender` = 'Female' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100.0 AS female_percentage FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `publisher`.`publisher_name` = 'George Lucas'
SELECT (CAST(SUM(CASE WHEN `alignment`.`alignment` = 'Good' THEN 1 ELSE 0 END) AS REAL) / COUNT(`superhero`.`id`)) * 100 AS percentage_good_superheroes FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%'
SELECT `hero_id` FROM `hero_attribute` ORDER BY `attribute_value` ASC LIMIT 1
SELECT `full_name` FROM `superhero` WHERE `superhero_name` = 'Alien'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` < 100 AND `colour`.`colour` = 'Brown'
SELECT `T2`.`attribute_value` FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` WHERE `T1`.`superhero_name` = 'Aquababy'
SELECT `superhero`.`weight_kg`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`id` = 40
SELECT AVG(`height_cm`) FROM `superhero` AS `T1` INNER JOIN `alignment` AS `T2` ON `T1`.`alignment_id` = `T2`.`id` WHERE `T2`.`alignment` = 'Neutral' AND `T1`.`height_cm` IS NOT NULL AND `T1`.`height_cm` > 0
SELECT `T1`.`id` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T3`.`power_name` = 'Intelligence'
SELECT `T2`.`colour` FROM `superhero` AS `T1` INNER JOIN `colour` AS `T2` ON `T1`.`eye_colour_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Blackwulf'
SELECT DISTINCT `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` WHERE `T1`.`height_cm` > (SELECT AVG(`height_cm`) * 0.8 FROM `superhero` WHERE `height_cm` IS NOT NULL)
SELECT `T1`.`driverRef` FROM `drivers` AS `T1` INNER JOIN `qualifying` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`raceId` = 18 ORDER BY `T2`.`q1` ASC LIMIT 5
SELECT `T1`.`surname` FROM `drivers` AS `T1` INNER JOIN `qualifying` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`q2` = (SELECT MIN(`q2`) FROM `qualifying` WHERE `raceId` = 19) AND `T2`.`raceId` = 19
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`location` = 'Shanghai'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Germany'
SELECT `constructorResults`.`position` FROM `constructors` INNER JOIN `constructorResults` ON `constructors`.`constructorId` = `constructorResults`.`constructorId` INNER JOIN `races` ON `constructorResults`.`raceId` = `races`.`raceId` WHERE `constructors`.`name` = 'Renault'
SELECT COUNT(*) FROM `races` AS `T1` INNER JOIN `circuits` AS `T2` ON `T1`.`circuitId` = `T2`.`circuitId` WHERE `T1`.`year` = 2010 AND `T2`.`country` NOT IN ('Asia', 'Europe')
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Spain'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Australian Grand Prix'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `races`.`time` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Abu Dhabi Grand Prix'
SELECT `T2`.`nationality` FROM `constructorResults` AS `T1` INNER JOIN `constructors` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T1`.`raceId` = 24 AND `T1`.`points` = 1
SELECT `T1`.`q1` FROM `qualifying` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`driverRef` = 'bruno_senna' AND `T1`.`raceId` = 354
SELECT `T1`.`nationality` FROM `drivers` AS `T1` INNER JOIN `qualifying` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`raceId` = 355 AND `T2`.`q2` = '0:01:40'
SELECT `T1`.`number` FROM `drivers` AS `T1` INNER JOIN `qualifying` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`raceId` = 903 AND `T2`.`q3` = '0:01:54'
SELECT COUNT(*) FROM `results` AS T1 INNER JOIN `races` AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`name` = 'Bahrain Grand Prix' AND T2.`year` = 2007 AND T1.`time` IS NULL
SELECT `T2`.`url` FROM `races` AS `T1` INNER JOIN `seasons` AS `T2` ON `T1`.`year` = `T2`.`year` WHERE `T1`.`raceId` = 901
SELECT COUNT(DISTINCT `T2`.`driverId`) FROM `results` AS `T2` INNER JOIN `races` AS `T1` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T1`.`date` = '2015-11-29' AND `T2`.`time` IS NOT NULL
SELECT T2.dob, T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 592 AND T1.time IS NOT NULL ORDER BY T2.dob ASC LIMIT 1
SELECT T2.url FROM `lapTimes` AS T1 INNER JOIN `drivers` AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.time = '0:01:27'
SELECT `T1`.`nationality` FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`raceId` = 933 AND `T2`.`fastestLapSpeed` = (SELECT MAX(`fastestLapSpeed`) FROM `results` WHERE `raceId` = 933)
SELECT `T1`.`lat`, `T1`.`lng` FROM `circuits` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`circuitId` = `T2`.`circuitId` WHERE `T2`.`name` = 'Malaysian Grand Prix'
SELECT `T1`.`url` FROM `constructors` AS `T1` INNER JOIN `constructorResults` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T2`.`raceId` = 9 ORDER BY `T2`.`points` DESC LIMIT 1
SELECT `qualifying`.`q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lucas' AND `drivers`.`surname` = 'di Grassi' AND `qualifying`.`raceId` = 345
SELECT `T2`.`nationality` FROM `qualifying` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T1`.`raceId` = 347 AND `T1`.`q2` = '0:01:15'
SELECT `T1`.`code` FROM `drivers` AS `T1` INNER JOIN `qualifying` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`raceId` = 45 AND `T2`.`q3` = '0:01:33'
SELECT `T2`.`time` FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T1`.`forename` = 'Bruce' AND `T1`.`surname` = 'McLaren' AND `T2`.`raceId` = 743
SELECT `T1`.`forename`, `T1`.`surname` FROM `results` AS `T2` INNER JOIN `drivers` AS `T1` ON `T2`.`driverId` = `T1`.`driverId` WHERE `T2`.`position` = 2 AND `T2`.`raceId` = (SELECT `raceId` FROM `races` WHERE `name` = 'San Marino Grand Prix' AND `year` = 2006)
SELECT T2.url FROM `races` AS T1 INNER JOIN `seasons` AS T2 ON T1.year = T2.year WHERE T1.raceId = 901
SELECT COUNT(DISTINCT `T1`.`driverId`) FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`date` = '2015-11-29' AND `T1`.`time` IS NOT NULL
SELECT `T1`.`driverId`, `T2`.`forename`, `T2`.`surname`, `T2`.`dob` FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T1`.`raceId` = 872 AND `T1`.`time` IS NOT NULL ORDER BY `T2`.`dob` DESC LIMIT 1
SELECT `T1`.`forename` || ' ' || `T1`.`surname` AS full_name FROM `drivers` AS `T1` INNER JOIN `lapTimes` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`raceId` = 348 AND `T2`.`time` = (SELECT MIN(`time`) FROM `lapTimes` WHERE `raceId` = 348)
SELECT `T1`.`nationality` FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`fastestLapSpeed` = (SELECT MAX(`T3`.`fastestLapSpeed`) FROM `results` AS `T3`)
SELECT CAST(((SELECT `T1`.`fastestLapSpeed` FROM `results` AS `T1` WHERE `T1`.`raceId` = 853) - (SELECT `T2`.`fastestLapSpeed` FROM `results` AS `T2` WHERE `T2`.`raceId` = 854)) AS REAL) * 100 / (SELECT `T2`.`fastestLapSpeed` FROM `results` AS `T2` WHERE `T2`.`raceId` = 854) AS `percentage`
SELECT CASE WHEN COUNT(T1.driverId) = 0 THEN 0 ELSE (CAST(COUNT(T1.driverId) AS REAL) / (SELECT COUNT(T3.driverId) FROM results AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T4.date = '1983-07-16')) * 100 END AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16' AND T1.time IS NOT NULL
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix'
SELECT COUNT(*) AS `total_races`, `name` FROM `races` WHERE `year` = 2005 GROUP BY `name` ORDER BY `name` DESC
SELECT `name`, `date` FROM `races` WHERE strftime('%Y', `date`) = (SELECT strftime('%Y', MIN(`date`)) FROM `races`) AND strftime('%m', `date`) = (SELECT strftime('%m', MIN(`date`)) FROM `races`);
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 AND `round` = (SELECT MAX(`round`) FROM `races` WHERE `year` = 1999)
SELECT `year`, COUNT(*) AS `race_count` FROM `races` GROUP BY `year` ORDER BY `race_count` DESC LIMIT 1
SELECT `name` FROM `races` WHERE `year` = 2017
SELECT `T2`.`country`, `T2`.`name` AS `circuit_name`, `T2`.`location` FROM `races` AS `T1` INNER JOIN `circuits` AS `T2` ON `T1`.`circuitId` = `T2`.`circuitId` WHERE `T1`.`name` = 'European Grand Prix' AND `T1`.`year` = (SELECT MIN(`year`) FROM `races` WHERE `name` = 'European Grand Prix')
SELECT MAX(`races`.`year`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'British Grand Prix' AND `circuits`.`name` = 'Brands Hatch'
SELECT COUNT(DISTINCT `T1`.`year`) FROM `races` AS `T1` INNER JOIN `circuits` AS `T2` ON `T1`.`circuitId` = `T2`.`circuitId` WHERE `T1`.`name` = 'British Grand Prix' AND `T2`.`name` = 'Silverstone Circuit'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2010 AND `races`.`name` = 'Singapore Grand Prix' ORDER BY `results`.`position`
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS full_name, `driverStandings`.`points` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` WHERE `driverStandings`.`points` = (SELECT MAX(`points`) FROM `driverStandings`);
SELECT `T1`.`driverId`, `T1`.`points` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`name` = 'Chinese Grand Prix' AND `T2`.`year` = 2017 ORDER BY `T1`.`points` DESC LIMIT 3
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS `driver_name`, `races`.`name` AS `race_name`, `lapTimes`.`time` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`time` = (SELECT MIN(`time`) FROM `lapTimes`)
SELECT CAST(AVG(`T1`.`time`) AS REAL) FROM `lapTimes` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T1`.`driverId` = `T3`.`driverId` WHERE `T2`.`name` = 'Chinese Grand Prix' AND `T2`.`year` = 2009 AND `T3`.`forename` = 'Sebastian' AND `T3`.`surname` = 'Vettel'
SELECT (CAST(COUNT(CASE WHEN `T1`.`position` > 1 THEN 1 END) AS REAL) / COUNT(`T1`.`raceId`)) * 100 AS `percentage` FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` INNER JOIN `races` AS `T3` ON `T1`.`raceId` = `T3`.`raceId` WHERE `T2`.`surname` = 'Hamilton' AND `T3`.`year` >= 2010
SELECT T1.forename || ' ' || T1.surname AS driver_name, T1.nationality, AVG(T2.points) AS average_points FROM `drivers` AS T1 INNER JOIN `driverStandings` AS T2 ON T1.`driverId` = T2.`driverId` GROUP BY T1.`driverId` ORDER BY SUM(T2.`wins`) DESC LIMIT 1
SELECT `T1`.`forename`, `T1`.`surname`, (2022 - STRFTIME('%Y', `T1`.`dob`) + 1) AS `age` FROM `drivers` AS `T1` WHERE `T1`.`nationality` = 'Japanese' AND `T1`.`dob` = (SELECT MAX(`T2`.`dob`) FROM `drivers` AS `T2` WHERE `T2`.`nationality` = 'Japanese')
SELECT `circuits`.`name` FROM `circuits` JOIN `races` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` BETWEEN 1990 AND 2000 GROUP BY `circuits`.`circuitId` HAVING COUNT(`races`.`raceId`) = 4
SELECT `circuits`.`name`, `circuits`.`location`, `races`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `circuits`.`country` = 'USA' AND `races`.`year` = 2006
SELECT `races`.`name`, `circuits`.`name` AS `circuit_name`, `circuits`.`location` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE strftime('%Y', `races`.`date`) = '2005' AND strftime('%m', `races`.`date`) = '09'
SELECT `T3`.`name`, `T3`.`date` FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` INNER JOIN `races` AS `T3` ON `T1`.`raceId` = `T3`.`raceId` WHERE `T2`.`forename` = 'Alex' AND `T2`.`surname` = 'Yoong' AND `T1`.`position` < 10
SELECT COUNT(*) FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `circuits` AS `T3` ON `T2`.`circuitId` = `T3`.`circuitId` INNER JOIN `drivers` AS `T4` ON `T1`.`driverId` = `T4`.`driverId` WHERE `T3`.`name` = 'Sepang International Circuit' AND `T4`.`driverRef` = 'michael_schumacher' AND `T1`.`points` = (SELECT MAX(`points`) FROM `results` WHERE `raceId` = `T1`.`raceId`)
SELECT `T3`.`name`, `T3`.`year` FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` INNER JOIN `races` AS `T3` ON `T1`.`raceId` = `T3`.`raceId` WHERE `T2`.`forename` = 'Michael' AND `T2`.`surname` = 'Schumacher' AND `T1`.`fastestLap` IS NOT NULL ORDER BY `T1`.`milliseconds` ASC LIMIT 1
SELECT AVG(`driverStandings`.`points`) FROM `driverStandings` INNER JOIN `races` ON `driverStandings`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'irvine' AND `races`.`year` = 2000
SELECT `T1`.`year`, `T2`.`points` FROM `races` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T2`.`driverId` = `T3`.`driverId` WHERE `T3`.`driverRef` = 'hamilton' ORDER BY `T1`.`year` ASC LIMIT 1
SELECT `races`.`name`, `circuits`.`country` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2017 ORDER BY `races`.`date`
SELECT `T1`.`name`, `T1`.`year`, `T2`.`location` FROM `results` AS `T3` INNER JOIN `races` AS `T1` ON `T3`.`raceId` = `T1`.`raceId` INNER JOIN `circuits` AS `T2` ON `T1`.`circuitId` = `T2`.`circuitId` ORDER BY `T3`.`laps` DESC LIMIT 1
SELECT CASE WHEN COUNT(`raceId`) = 0 THEN 0 ELSE (CAST(COUNT(CASE WHEN `country` = 'Germany' THEN 1 END) AS REAL) / COUNT(`raceId`) * 100) END AS percentage FROM `races` WHERE `name` = 'European Grand Prix'
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name`, `lat` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `country` FROM `circuits` WHERE `alt` = (SELECT MAX(`alt`) FROM `circuits`)
SELECT COUNT(*) FROM `drivers` WHERE `code` IS NULL
SELECT `T1`.`nationality` FROM `drivers` AS `T1` WHERE `T1`.`dob` = (SELECT MIN(`T2`.`dob`) FROM `drivers` AS `T2`)
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'
SELECT `driverRef` FROM `drivers` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`time` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Abu Dhabi Circuit' AND `races`.`year` BETWEEN 2010 AND 2019
SELECT COUNT(*) FROM `races` AS T1 INNER JOIN `circuits` AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`country` = 'Italy'
SELECT `races`.`date` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `circuits`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`results`.`fastestLapTime`) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT T3.`driverRef` FROM `results` AS T1 INNER JOIN `races` AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN `drivers` AS T3 ON T1.`driverId` = T3.`driverId` WHERE T2.`name` = 'Australian Grand Prix' AND T2.`year` = 2008 AND T1.`positionOrder` = 1
SELECT `T2`.`name`, `T2`.`date` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T1`.`driverId` = `T3`.`driverId` WHERE `T3`.`driverRef` = 'hamilton'
SELECT `races`.`name`, `races`.`year` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'hamilton' AND `results`.`rank` IS NOT NULL ORDER BY `results`.`rank` ASC LIMIT 1
SELECT MAX(`fastestLapSpeed`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2009 AND `name` = 'Spanish Grand Prix')
SELECT DISTINCT `races`.`year` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `T3`.`positionOrder` FROM `results` AS `T3` INNER JOIN `races` AS `T1` ON `T3`.`raceId` = `T1`.`raceId` INNER JOIN `drivers` AS `T2` ON `T3`.`driverId` = `T2`.`driverId` WHERE `T1`.`name` = 'Australian Grand Prix' AND `T1`.`year` = 2008 AND `T2`.`forename` = 'Lewis' AND `T2`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `results`.`grid` = 4 AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix'
SELECT COUNT(*) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL
SELECT `T1`.`fastestLap` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T1`.`driverId` = `T3`.`driverId` WHERE `T2`.`year` = 2008 AND `T2`.`name` = 'Australian Grand Prix' AND `T3`.`forename` = 'Lewis' AND `T3`.`surname` = 'Hamilton' ORDER BY `T1`.`fastestLap` ASC LIMIT 1
SELECT `results`.`time` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`positionOrder` = 2
SELECT T2.forename, T2.surname, T2.url FROM `results` AS T1 INNER JOIN `drivers` AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND T1.`time` IS NOT NULL AND T1.`position` = 1 ORDER BY T1.`milliseconds` ASC LIMIT 1
SELECT COUNT(DISTINCT `T3`.`driverId`) FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T1`.`driverId` = `T3`.`driverId` WHERE `T2`.`year` = 2008 AND `T2`.`name` = 'Australian Grand Prix' AND `T3`.`nationality` = 'American'
SELECT COUNT(DISTINCT `T1`.`driverId`) FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`year` = 2008 AND `T2`.`name` = 'Australian Grand Prix' AND `T1`.`time` IS NOT NULL AND `T1`.`driverId` IS NOT NULL
SELECT SUM(`results`.`points`) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `results`.`points` IS NOT NULL
SELECT AVG(CAST(SUBSTR(`T1`.`fastestLapTime`, 1, INSTR(`T1`.`fastestLapTime`, ':') - 1) AS REAL) * 60 + CAST(SUBSTR(`T1`.`fastestLapTime`, INSTR(`T1`.`fastestLapTime`, ':') + 1) AS REAL)) AS average_fastest_lap_time FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`forename` = 'Lewis' AND `T2`.`surname` = 'Hamilton' AND `T1`.`fastestLapTime` IS NOT NULL
SELECT CAST(COUNT(CASE WHEN `T1`.`time` IS NOT NULL THEN 1 END) AS REAL) * 100 / COUNT(`T1`.`raceId`) AS `completion_rate` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`name` = 'Australian Grand Prix' AND `T2`.`year` = 2008
SELECT CAST(((CAST(SUBSTR(T1.time, INSTR(T1.time, ':') + 1) AS REAL) + CAST(SUBSTR(T1.time, 1, INSTR(T1.time, ':') - 1) AS REAL) * 60) - (CAST(SUBSTR(T2.time, INSTR(T2.time, ':') + 1) AS REAL) + CAST(SUBSTR(T1.time, 1, INSTR(T1.time, ':') - 1) AS REAL) * 60)) / (CAST(SUBSTR(T1.time, INSTR(T1.time, ':') + 1) AS REAL) + CAST(SUBSTR(T1.time, 1, INSTR(T1.time, ':') - 1) AS REAL) * 60) * 100) AS REAL) AS percentage_faster FROM results AS T1 INNER JOIN (SELECT T3.time FROM results AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T4.year = 2008 AND T4.name = 'Australian Grand Prix' AND T3.position = (SELECT MAX(position) FROM results WHERE raceId = T4.raceId)) AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL AND T1.position = 1
SELECT COUNT(*) FROM `circuits` WHERE `location` = 'Melbourne' AND `country` = 'Australia'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND `dob` > '1980-01-01'
SELECT CAST(AVG(`constructorStandings`.`points`) AS REAL) FROM `constructorStandings` INNER JOIN `constructors` ON `constructorStandings`.`constructorId` = `constructors`.`constructorId` WHERE `constructors`.`nationality` = 'British'
SELECT `constructors`.`name`, SUM(`constructorStandings`.`points`) AS `total_points` FROM `constructorStandings` JOIN `constructors` ON `constructorStandings`.`constructorId` = `constructors`.`constructorId` GROUP BY `constructorStandings`.`constructorId` ORDER BY `total_points` DESC LIMIT 1
SELECT `constructors`.`name` FROM `constructorResults` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 291 AND `constructorResults`.`points` = 0
SELECT COUNT(DISTINCT T1.`constructorId`) FROM `constructors` AS T1 INNER JOIN `constructorResults` AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'Japanese' AND T2.`points` = 0 GROUP BY T1.`constructorId` HAVING COUNT(T2.`raceId`) = 2
SELECT DISTINCT `T1`.`name` FROM `constructors` AS `T1` INNER JOIN `constructorStandings` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T2`.`position` = 1
SELECT COUNT(DISTINCT `T1`.`constructorId`) FROM `constructors` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T1`.`nationality` = 'French' AND `T2`.`laps` > 50
SELECT (COUNT(CASE WHEN T2.time IS NOT NULL THEN 1 END) * 100.0 / COUNT(T2.driverId)) AS race_completion_percentage FROM `drivers` AS T1 INNER JOIN `results` AS T2 ON T1.driverId = T2.driverId INNER JOIN `races` AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009
SELECT `races`.`year`, AVG((CAST(SUBSTR(`results`.`time`, 1, INSTR(`results`.`time`, ':') - 1) AS INTEGER) * 3600) + (CAST(SUBSTR(`results`.`time`, INSTR(`results`.`time`, ':') + 1, INSTR(`results`.`time`, ':', INSTR(`results`.`time`, ':') + 1) - INSTR(`results`.`time`, ':') - 1) AS INTEGER) * 60) + CAST(SUBSTR(`results`.`time`, INSTR(`results`.`time`, ':', INSTR(`results`.`time`, ':') + 1) + 1) AS INTEGER)) AS average_time_seconds FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `results`.`time` IS NOT NULL GROUP BY `races`.`year`
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` WHERE strftime('%Y', `drivers`.`dob`) > '1975' AND `driverStandings`.`position` = 2
SELECT COUNT(*) FROM `drivers` AS T1 INNER JOIN `results` AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'Italian' AND T2.`time` IS NULL
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `results`.`fastestLapTime` = (SELECT MIN(`fastestLapTime`) FROM `results`)
SELECT `results`.`fastestLap` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2009 AND `results`.`time` LIKE '%:%' ORDER BY `results`.`fastestLap` ASC LIMIT 1
SELECT AVG(`T1`.`fastestLapSpeed`) FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`name` = 'Spanish Grand Prix' AND `T2`.`year` = 2009
SELECT `T1`.`name`, `T1`.`year` FROM `races` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`milliseconds` IS NOT NULL ORDER BY `T2`.`milliseconds` ASC LIMIT 1
SELECT (CAST(COUNT(DISTINCT T1.`driverId`) AS REAL) / COUNT(DISTINCT T2.`driverId`)) * 100 AS `percentage` FROM `drivers` AS T1 INNER JOIN `results` AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN `races` AS T3 ON T2.`raceId` = T3.`raceId` WHERE strftime('%Y', T1.`dob`) < '1985' AND T2.`laps` > 50 AND T3.`year` BETWEEN 2000 AND 2005
SELECT COUNT(DISTINCT `T1`.`driverId`) FROM `lapTimes` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`nationality` = 'French' AND (CAST(SUBSTR(`T1`.`time`, 1, INSTR(`T1`.`time`, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(`T1`.`time`, INSTR(`T1`.`time`, ':') + 1) AS INTEGER) < 120);
SELECT `code` FROM `drivers` WHERE `nationality` = 'America'
SELECT `raceId` FROM `races` WHERE `year` = 2009
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = 18
SELECT COUNT(*) AS `count_netherlandic_drivers`, GROUP_CONCAT(`code`) AS `youngest_driver_codes` FROM (SELECT `code`, `dob` FROM `drivers` WHERE `nationality` = 'Dutch' ORDER BY `dob` ASC LIMIT 3) AS `youngest_drivers`
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(*) FROM `drivers` WHERE `drivers`.`nationality` = 'Australian' AND strftime('%Y', `drivers`.`dob`) = '1980'
SELECT T1.`driverId`, T1.`forename`, T1.`surname`, MIN(T2.`time`) AS `earliest_lap_time` FROM `drivers` AS T1 INNER JOIN `lapTimes` AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'German' AND T1.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.`driverId` ORDER BY `earliest_lap_time` LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `dob` = (SELECT MIN(`dob`) FROM `drivers` WHERE `nationality` = 'German') AND `nationality` = 'German'
SELECT `T1`.`driverId`, `T1`.`code` FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE STRFTIME('%Y', `T1`.`dob`) = '1971' AND `T2`.`fastestLapTime` IS NOT NULL ORDER BY `T2`.`fastestLapTime` ASC
SELECT T1.driverId, T1.forename, T1.surname, MAX(T2.time) AS latest_lap_time FROM `drivers` AS T1 INNER JOIN `lapTimes` AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND CAST(SUBSTR(T1.dob, 1, 4) AS INTEGER) < 1982 GROUP BY T1.driverId ORDER BY latest_lap_time DESC LIMIT 10
SELECT `T1`.`year` FROM `races` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`fastestLapTime` IS NOT NULL ORDER BY `T2`.`fastestLapTime` ASC LIMIT 1
SELECT `races`.`year`, MAX(`lapTimes`.`milliseconds`) AS `max_lap_time` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` GROUP BY `races`.`year` ORDER BY `max_lap_time` ASC LIMIT 1
SELECT `driverId` FROM `lapTimes` WHERE `lap` = 1 GROUP BY `driverId` ORDER BY MIN(`milliseconds`) ASC LIMIT 5
SELECT COUNT(*) FROM `results` WHERE `raceId` > 50 AND `raceId` < 100 AND `statusId` = 2 AND `time` IS NOT NULL
SELECT COUNT(`circuitId`) AS `TotalCircuits`, `location`, `lat`, `lng` FROM `circuits` WHERE `country` = 'Austria' GROUP BY `location`, `lat`, `lng`
SELECT `raceId`, COUNT(*) AS `finisher_count` FROM `results` WHERE `time` IS NOT NULL GROUP BY `raceId` ORDER BY `finisher_count` DESC LIMIT 1
SELECT `T2`.`driverRef`, `T2`.`nationality`, `T2`.`dob` FROM `qualifying` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T1`.`raceId` = 23 AND `T1`.`q2` IS NOT NULL
SELECT `races`.`year`, `races`.`name`, `races`.`date`, `races`.`time` FROM `qualifying` INNER JOIN `races` ON `qualifying`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`dob` = (SELECT MIN(`dob`) FROM `drivers`) ORDER BY `qualifying`.`number` LIMIT 1
SELECT COUNT(*) FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`nationality` = 'American' AND `T1`.`statusId` = 2
SELECT `T1`.`name`, `T1`.`url` FROM `constructors` AS `T1` INNER JOIN `constructorStandings` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T1`.`nationality` = 'Italian' ORDER BY `T2`.`points` DESC LIMIT 1
SELECT T2.url FROM (SELECT T1.constructorId, SUM(T1.wins) AS total_wins FROM `constructorStandings` AS T1 GROUP BY T1.constructorId ORDER BY total_wins DESC LIMIT 1) AS T1 INNER JOIN `constructors` AS T2 ON T1.constructorId = T2.constructorId
SELECT `lapTimes`.`driverId`, MAX(`lapTimes`.`time`) FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'French Grand Prix' AND `lapTimes`.`lap` = 3 GROUP BY `lapTimes`.`driverId` ORDER BY MAX(`lapTimes`.`time`) DESC LIMIT 1;
SELECT `T2`.`name`, MIN(`T1`.`milliseconds`) AS `fastest_lap_time` FROM `lapTimes` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T1`.`lap` = 1 GROUP BY `T2`.`name` ORDER BY `fastest_lap_time` ASC LIMIT 1
SELECT AVG(CAST(`fastestLapTime` AS REAL)) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2006 AND `name` = 'United States Grand Prix') AND `rank` < 11
SELECT `T1`.`driverId`, `T1`.`forename`, `T1`.`surname`, (SUM(`T2`.`duration`) / COUNT(`T2`.`duration`)) AS `avg_duration` FROM `drivers` AS `T1` INNER JOIN `pitStops` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T1`.`nationality` = 'German' AND `T1`.`dob` BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY `T1`.`driverId` ORDER BY `avg_duration` ASC LIMIT 5
SELECT T1.`driverId`, T1.`time` FROM `results` AS T1 INNER JOIN `races` AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2008 AND T2.`name` = 'Canadian Grand Prix' AND T1.`position` = 1
SELECT `T3`.`constructorRef`, `T3`.`url` FROM `results` AS `T1` INNER JOIN `constructors` AS `T3` ON `T1`.`constructorId` = `T3`.`constructorId` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`name` = 'Singapore Grand Prix' AND `T2`.`year` = 2009 ORDER BY `T1`.`time` ASC LIMIT 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND STRFTIME('%Y', `dob`) BETWEEN '1981' AND '1991'
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS `full_name`, `drivers`.`url`, `drivers`.`dob` FROM `drivers` WHERE `drivers`.`nationality` = 'German' AND strftime('%Y', `drivers`.`dob`) BETWEEN '1971' AND '1985' ORDER BY `drivers`.`dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT SUM(`constructorResults`.`points`) AS `score`, `constructors`.`name`, `constructors`.`nationality` FROM `constructorResults` INNER JOIN `races` ON `constructorResults`.`raceId` = `races`.`raceId` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`name` = 'Monaco Grand Prix' AND `races`.`year` BETWEEN 1980 AND 2010 GROUP BY `constructors`.`constructorId` ORDER BY `score` DESC LIMIT 1
SELECT AVG(`T1`.`points`) FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T1`.`driverId` = `T3`.`driverId` WHERE `T2`.`name` = 'Turkish Grand Prix' AND `T3`.`surname` = 'Hamilton'
SELECT COUNT(`raceId`) * 1.0 / 11 AS `annual_average_races` FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31'
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `T1`.`wins` FROM `driverStandings` AS `T1` WHERE `T1`.`driverId` = (SELECT `T2`.`driverId` FROM `driverStandings` AS `T2` ORDER BY `T2`.`points` DESC LIMIT 1 OFFSET 90)
SELECT `T2`.`name` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T1`.`fastestLapTime` = (SELECT MIN(`fastestLapTime`) FROM `results`)
SELECT `T2`.`circuitId`, `T2`.`location` || ', ' || `T2`.`country` AS `full_location` FROM `races` AS `T1` INNER JOIN `circuits` AS `T2` ON `T1`.`circuitId` = `T2`.`circuitId` WHERE `T1`.`date` = (SELECT MAX(`date`) FROM `races`)
SELECT `T3`.`forename` || ' ' || `T3`.`surname` AS full_name FROM `qualifying` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `drivers` AS `T3` ON `T1`.`driverId` = `T3`.`driverId` INNER JOIN `circuits` AS `T4` ON `T2`.`circuitId` = `T4`.`circuitId` WHERE `T4`.`name` = 'Marina Bay Street Circuit' AND `T2`.`year` = 2008 AND `T1`.`position` = 1 AND `T1`.`number` = 3
SELECT `T1`.`forename` || ' ' || `T1`.`surname` AS `full_name`, `T1`.`nationality`, `T3`.`name` AS `race_name` FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` INNER JOIN `races` AS `T3` ON `T2`.`raceId` = `T3`.`raceId` WHERE `T1`.`dob` = (SELECT MIN(`dob`) FROM `drivers`) LIMIT 1
SELECT COUNT(*) AS accident_count FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`name` = 'Canadian Grand Prix' AND `T1`.`statusId` = 3 GROUP BY `T1`.`driverId` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.forename, T1.surname, SUM(T2.wins) AS wins FROM `drivers` AS T1 INNER JOIN `driverStandings` AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`dob` = (SELECT MIN(`dob`) FROM `drivers`) GROUP BY T1.`driverId`
SELECT MAX(`duration`) FROM `pitStops`
SELECT `time` FROM `lapTimes` WHERE `milliseconds` = (SELECT MIN(`milliseconds`) FROM `lapTimes`)
SELECT MAX(`pitStops`.`duration`) FROM `pitStops` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `pitStops`.`lap` FROM `pitStops` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix'
SELECT `pitStops`.`driverId`, `pitStops`.`duration` FROM `pitStops` INNER JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix'
SELECT `T1`.`fastestLapTime` FROM `results` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T2`.`driverRef` = 'hamilton' ORDER BY `T1`.`fastestLapTime` LIMIT 1
SELECT T1.forename || ' ' || T1.surname AS full_name FROM `lapTimes` AS T2 INNER JOIN `drivers` AS T1 ON T2.driverId = T1.driverId ORDER BY CAST(SUBSTR(T2.time, 1, INSTR(T2.time, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.time, INSTR(T2.time, ':') + 1) AS REAL) LIMIT 1
SELECT `circuits`.`circuitId` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` INNER JOIN `circuits` ON `T2`.`circuitId` = `circuits`.`circuitId` WHERE `T1`.`driverId` = (SELECT `driverId` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton') AND `T1`.`fastestLap` = (SELECT MIN(`fastestLap`) FROM `results` WHERE `driverId` = (SELECT `driverId` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'))
SELECT `results`.`fastestLapTime` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Austrian Grand Prix' ORDER BY `results`.`fastestLapTime` LIMIT 1
SELECT `circuits`.`name`, `results`.`fastestLapTime` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `circuits`.`country` = 'Italy' ORDER BY `results`.`fastestLapTime`
SELECT `T1`.`name`, `T2`.`time` FROM `races` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T1`.`name` = 'Austrian Grand Prix' ORDER BY `T2`.`time` LIMIT 1
SELECT `T2`.`duration` FROM `pitStops` AS `T2` INNER JOIN `results` AS `T1` ON `T2`.`raceId` = `T1`.`raceId` AND `T2`.`driverId` = `T1`.`driverId` INNER JOIN `races` AS `T3` ON `T1`.`raceId` = `T3`.`raceId` INNER JOIN `circuits` AS `T4` ON `T3`.`circuitId` = `T4`.`circuitId` WHERE `T4`.`name` = 'Austrian Grand Prix' AND `T1`.`fastestLap` = 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `results`.`fastestLapTime` = '1:29.488'
SELECT AVG(`pitStops`.`milliseconds`) FROM `pitStops` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT AVG(`lapTimes`.`milliseconds`) FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy'
SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`)
SELECT `player_name`, `height` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT T1.`preferred_foot` FROM `Player_Attributes` AS T1 WHERE T1.`potential` = (SELECT MIN(T2.`potential`) FROM `Player_Attributes` AS T2)
SELECT COUNT(*) FROM `Player_Attributes` WHERE `overall_rating` >= 60 AND `overall_rating` < 65 AND `defensive_work_rate` = 'low'
SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `crossing` DESC LIMIT 5
SELECT `T1`.`name` FROM `League` AS `T1` INNER JOIN `Match` AS `T2` ON `T1`.`id` = `T2`.`league_id` WHERE `T2`.`season` = '2015/2016' GROUP BY `T1`.`id` ORDER BY SUM(`T2`.`home_team_goal` + `T2`.`away_team_goal`) DESC LIMIT 1
SELECT `Team`.`team_long_name`, COUNT(*) AS `losses` FROM `Match` JOIN `Team` ON `Match`.`home_team_api_id` = `Team`.`team_api_id` WHERE `Match`.`home_team_goal` < `Match`.`away_team_goal` AND `Match`.`season` = '2015/2016' GROUP BY `Match`.`home_team_api_id` ORDER BY `losses` ASC LIMIT 1
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player_Attributes`.`penalties` DESC LIMIT 10
SELECT `T2`.`team_long_name`, COUNT(*) AS `wins` FROM `Match` AS `T1` INNER JOIN `Team` AS `T2` ON `T1`.`away_team_api_id` = `T2`.`team_api_id` INNER JOIN `League` AS `T3` ON `T1`.`league_id` = `T3`.`id` WHERE `T3`.`name` = 'Scotland Premier League' AND `T1`.`season` = '2009/2010' AND `T1`.`away_team_goal` > `T1`.`home_team_goal` GROUP BY `T2`.`team_long_name` ORDER BY `wins` DESC LIMIT 1
SELECT `buildUpPlaySpeed` FROM `Team_Attributes` ORDER BY `buildUpPlaySpeed` DESC LIMIT 4
SELECT `T2`.`name` FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T1`.`season` = '2015/2016' AND `T1`.`home_team_goal` = `T1`.`away_team_goal` GROUP BY `T2`.`id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT (CAST((DATETIME('now') - `Player`.`birthday`) AS INTEGER) / 365) AS age, `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`sprint_speed` >= 97 AND `Player_Attributes`.`date` >= '2013-01-01 00:00:00' AND `Player_Attributes`.`date` <= '2015-12-31 00:00:00'
SELECT `League`.`name`, COUNT(`Match`.`id`) AS `match_count` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` GROUP BY `Match`.`league_id` ORDER BY COUNT(`Match`.`id`) DESC LIMIT 1
SELECT CAST(SUM(`height`) AS REAL) / COUNT(`id`) FROM `Player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes` WHERE substr(`date`, 1, 4) = '2010' AND `overall_rating` > (SELECT AVG(`overall_rating`) FROM `Player_Attributes` WHERE substr(`date`, 1, 4) = '2010'))
SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `buildUpPlaySpeed` BETWEEN 51 AND 59
SELECT `T`.`team_long_name` FROM `Team` AS `T` INNER JOIN `Team_Attributes` AS `TA` ON `T`.`team_api_id` = `TA`.`team_api_id` WHERE `TA`.`buildUpPlayPassing` > (SELECT AVG(`TA2`.`buildUpPlayPassing`) FROM `Team_Attributes` AS `TA2` WHERE strftime('%Y', `TA2`.`date`) = '2012' AND `TA2`.`buildUpPlayPassing` IS NOT NULL) AND strftime('%Y', `TA`.`date`) = '2012' AND `TA`.`buildUpPlayPassing` IS NOT NULL
SELECT CAST(SUM(CASE WHEN T1.`preferred_foot` = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.`player_fifa_api_id`) AS percentage FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`birthday` BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'
SELECT `League`.`id`, `League`.`name`, SUM(`Match`.`home_team_goal` + `Match`.`away_team_goal`) AS `total_goals` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` GROUP BY `League`.`id`, `League`.`name` ORDER BY `total_goals` ASC LIMIT 5
SELECT AVG(`T2`.`long_shots`) FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Ahmed Samir Farag'
SELECT `T1`.`player_name` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`height` > 180 GROUP BY `T1`.`player_name` ORDER BY AVG(`T2`.`heading_accuracy`) DESC LIMIT 10
SELECT `T1`.`team_long_name` FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T2`.`buildUpPlayDribblingClass` = 'Normal' AND `T2`.`date` >= '2014-01-01 00:00:00' AND `T2`.`date` <= '2014-01-31 00:00:00' AND `T2`.`chanceCreationPassing` < (SELECT AVG(`chanceCreationPassing`) FROM `Team_Attributes` WHERE `date` >= '2014-01-01 00:00:00' AND `date` <= '2014-01-31 00:00:00') ORDER BY `T2`.`chanceCreationPassing` DESC;
SELECT `League`.`name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2009/2010' GROUP BY `League`.`name` HAVING AVG(`Match`.`home_team_goal`) > AVG(`Match`.`away_team_goal`);
SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `Player` WHERE substr(`birthday`, 1, 4) = '1970' AND substr(`birthday`, 6, 2) = '10'
SELECT `T1`.`attacking_work_rate` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Franco Zennaro'
SELECT T2.`buildUpPlayPositioningClass` FROM `Team` AS T1 INNER JOIN `Team_Attributes` AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'ADO Den Haag'
SELECT `T1`.`heading_accuracy` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Francois Affolter' AND `T1`.`date` = '2014-09-18 00:00:00'
SELECT `Player_Attributes`.`overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `Player_Attributes`.`date`) = '2011'
SELECT COUNT(*) FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T2`.`name` = 'Scotland Premier League' AND `T1`.`season` = '2015/2016'
SELECT T2.`preferred_foot` FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.`player_api_id` = T2.`player_api_id` ORDER BY T1.`birthday` DESC LIMIT 1
SELECT `Player`.`player_name`, `Player_Attributes`.`potential` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT COUNT(*) FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`weight` < 130 AND `Player_Attributes`.`preferred_foot` = 'left'
SELECT `Team`.`team_short_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Risky'
SELECT `Player_Attributes`.`defensive_work_rate` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'David Wilson'
SELECT `T1`.`birthday` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`)
SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands'
SELECT AVG(`home_team_goal`) FROM `Match` AS `T1` INNER JOIN `Country` AS `T2` ON `T1`.`country_id` = `T2`.`id` WHERE `T2`.`name` = 'Poland' AND `T1`.`season` = '2010/2011'
SELECT T1.player_name FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = (SELECT MAX(height) FROM `Player`) OR T1.height = (SELECT MIN(height) FROM `Player`) GROUP BY T1.player_name ORDER BY AVG(T2.finishing) DESC LIMIT 1
SELECT `player_name` FROM `Player` WHERE `height` > 180
SELECT COUNT(*) FROM `Player` WHERE STRFTIME('%Y', `birthday`) > '1990'
SELECT COUNT(`id`) FROM `Player` WHERE `player_name` LIKE 'Adam%' AND `weight` > 170
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` > 80 AND strftime('%Y', `Player_Attributes`.`date`) BETWEEN '2008' AND '2010'
SELECT T2.potential FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`preferred_foot` = 'left'
SELECT `T1`.`team_long_name` FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T2`.`buildUpPlaySpeedClass` = 'Fast'
SELECT `T1`.`buildUpPlayPassingClass` FROM `Team_Attributes` AS `T1` INNER JOIN `Team` AS `T2` ON `T1`.`team_fifa_api_id` = `T2`.`team_fifa_api_id` WHERE `T2`.`team_short_name` = 'CLB'
SELECT `Team`.`team_short_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayPassing` > 70
SELECT AVG(`T1`.`overall_rating`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE strftime('%Y', `T1`.`date`) BETWEEN '2010' AND '2015' AND `T2`.`height` > 170
SELECT `player_name`, `height` FROM `Player` WHERE `height` = (SELECT MIN(`height`) FROM `Player`)
SELECT T2.name FROM `League` AS T1 INNER JOIN `Country` AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A'
SELECT `Team`.`team_short_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeed` = 31 AND `Team_Attributes`.`buildUpPlayDribbling` = 53 AND `Team_Attributes`.`buildUpPlayPassing` = 32
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran'
SELECT COUNT(*) FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T2`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `T1`.`date`) BETWEEN '2008-08' AND '2008-10'
SELECT `T`.`team_short_name` FROM `Team` AS `T` INNER JOIN `Match` AS `M` ON `T`.`team_api_id` = `M`.`home_team_api_id` WHERE `M`.`home_team_goal` = 10
SELECT `T1`.`player_api_id`, `T1`.`player_fifa_api_id`, `T1`.`date`, `T1`.`overall_rating`, `T1`.`potential`, `T1`.`balance` FROM `Player_Attributes` AS `T1` WHERE `T1`.`balance` = (SELECT MAX(`T2`.`balance`) FROM `Player_Attributes` AS `T2` WHERE `T2`.`potential` = 61) AND `T1`.`potential` = 61
SELECT (SELECT AVG(`ball_control`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Abdou Diallo') - (SELECT AVG(`ball_control`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Aaron Appindangoye') AS `difference`
SELECT `team_long_name` FROM `Team` WHERE `team_short_name` = 'GEN'
SELECT `player_name`, `birthday` FROM `Player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1
SELECT `player_name`, `height` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(*) FROM `Player_Attributes` WHERE `preferred_foot` = 'left' AND `attacking_work_rate` = 'low'
SELECT `C`.`name` FROM `League` AS `L` INNER JOIN `Country` AS `C` ON `L`.`country_id` = `C`.`id` WHERE `L`.`name` = 'Belgium Jupiler League'
SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Germany'
SELECT `Player`.`player_name`, `Player_Attributes`.`overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT COUNT(*) FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'
SELECT `T1`.`player_name`, MAX(`T2`.`crossing`) AS `max_crossing` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY `T1`.`player_name` ORDER BY `max_crossing` DESC LIMIT 1
SELECT `T2`.`heading_accuracy` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Ariel Borysiuk'
SELECT COUNT(*) FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70
SELECT `T1`.`player_name` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`volleys` > 70 AND `T2`.`dribbling` > 70
SELECT COUNT(*) FROM `Match` AS `T1` INNER JOIN `Country` AS `T2` ON `T1`.`country_id` = `T2`.`id` WHERE `T1`.`season` = '2008/2009' AND `T2`.`name` = 'Belgium'
SELECT T2.long_passing FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.birthday ASC LIMIT 1
SELECT COUNT(*) FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T2`.`name` = 'Belgium Jupiler League' AND strftime('%Y', `T1`.`date`) = '2009' AND strftime('%m', `T1`.`date`) = '04'
SELECT `league_id` FROM `Match` WHERE `season` = '2008/2009' GROUP BY `league_id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986'
SELECT (CAST((T1.`overall_rating` - T2.`overall_rating`) AS REAL) / T2.`overall_rating`) * 100 AS `percentage_difference` FROM (SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Ariel Borysiuk') AS T1, (SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Paulin Puel') AS T2
SELECT AVG(`T2`.`buildUpPlaySpeed`) FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_fifa_api_id` = `T2`.`team_fifa_api_id` WHERE `T1`.`team_long_name` = 'Heart of Midlothian'
SELECT AVG(`T1`.`overall_rating`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Pietro Marino'
SELECT SUM(`T1`.`crossing`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Aaron Lennox'
SELECT MAX(TA.`chanceCreationPassing`), TA.`chanceCreationPassingClass` FROM `Team` AS T INNER JOIN `Team_Attributes` AS TA ON T.`team_api_id` = TA.`team_api_id` WHERE T.`team_long_name` = 'Ajax' GROUP BY TA.`chanceCreationPassingClass` ORDER BY MAX(TA.`chanceCreationPassing`) DESC LIMIT 1
SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'
SELECT MAX(`T1`.`overall_rating`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Dorlan Pabon'
SELECT AVG(`Match`.away_team_goal) FROM `Match` INNER JOIN `Team` ON `Match`.away_team_api_id = `Team`.team_api_id INNER JOIN `League` ON `Match`.league_id = `League`.id WHERE `Team`.team_long_name = 'Parma' AND `League`.name LIKE '%Italy%';
SELECT `T2`.`player_name` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`overall_rating` = 77 AND `T1`.`date` = '2016-06-23' ORDER BY `T2`.`birthday` ASC LIMIT 1
SELECT T2.overall_rating FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date = '2016-02-04 00:00:00'
SELECT `T2`.`potential` FROM `Player_Attributes` AS `T2` INNER JOIN `Player` AS `T1` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Francesco Parravicini' AND `T2`.`date` = '2010-08-30 00:00:00'
SELECT T2.attacking_work_rate FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date = '2015-05-01 00:00:00'
SELECT T1.`defensive_work_rate` FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Kevin Berigaud' AND T1.`date` = '2013-02-22 00:00:00'
SELECT `T1`.`date` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Kevin Constant' AND `T1`.`crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes` WHERE `player_api_id` = `T2`.`player_api_id`)
SELECT T2.`buildUpPlaySpeedClass` FROM `Team` AS T1 INNER JOIN `Team_Attributes` AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'Willem II' AND T2.`date` = '2012-02-22 00:00:00'
SELECT T2.buildUpPlayDribblingClass FROM `Team` AS T1 INNER JOIN `Team_Attributes` AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00'
SELECT `T2`.`buildUpPlayPassingClass` FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_fifa_api_id` = `T2`.`team_fifa_api_id` WHERE `T1`.`team_long_name` = 'FC Lorient' AND `T2`.`date` = '2010-02-22 00:00:00'
SELECT `T1`.`chanceCreationPassingClass` FROM `Team_Attributes` AS `T1` INNER JOIN `Team` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T2`.`team_long_name` = 'PEC Zwolle' AND `T1`.`date` = '2013-09-20 00:00:00'
SELECT T1.`chanceCreationCrossingClass` FROM `Team_Attributes` AS T1 INNER JOIN `Team` AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'Hull City' AND T1.`date` = '2010-02-22 00:00:00'
SELECT T2.`defenceAggressionClass` FROM `Team` AS T1 INNER JOIN `Team_Attributes` AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'Hannover 96' AND T2.`date` = '2015-09-10 00:00:00'
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Marko Arnautovic' AND `Player_Attributes`.`date` BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'
SELECT CAST((SELECT `T1`.`overall_rating` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Landon Donovan' AND `T1`.`date` = '2013-07-12 00:00:00') - (SELECT `T1`.`overall_rating` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Jordan Bowery' AND `T1`.`date` = '2013-07-12 00:00:00') AS REAL) * 100 / (SELECT `T1`.`overall_rating` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Jordan Bowery' AND `T1`.`date` = '2013-07-12 00:00:00')
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 5
SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `Player` WHERE (strftime('%Y', 'now') - strftime('%Y', `birthday`)) >= 35
SELECT SUM(`Match`.home_team_goal) FROM `Match` INNER JOIN `Player` ON `Match`.home_player_1 = `Player`.player_api_id OR `Match`.home_player_2 = `Player`.player_api_id OR `Match`.home_player_3 = `Player`.player_api_id OR `Match`.home_player_4 = `Player`.player_api_id OR `Match`.home_player_5 = `Player`.player_api_id OR `Match`.home_player_6 = `Player`.player_api_id OR `Match`.home_player_7 = `Player`.player_api_id OR `Match`.home_player_8 = `Player`.player_api_id OR `Match`.home_player_9 = `Player`.player_api_id OR `Match`.home_player_10 = `Player`.player_api_id OR `Match`.home_player_11 = `Player`.player_api_id WHERE `Player`.player_name = 'Aaron Lennon'
SELECT SUM(`Match`.away_team_goal) FROM `Match` INNER JOIN `Player` ON (`Match`.away_player_1 = `Player`.player_api_id OR `Match`.away_player_2 = `Player`.player_api_id OR `Match`.away_player_3 = `Player`.player_api_id OR `Match`.away_player_4 = `Player`.player_api_id OR `Match`.away_player_5 = `Player`.player_api_id OR `Match`.away_player_6 = `Player`.player_api_id OR `Match`.away_player_7 = `Player`.player_api_id OR `Match`.away_player_8 = `Player`.player_api_id OR `Match`.away_player_9 = `Player`.player_api_id OR `Match`.away_player_10 = `Player`.player_api_id OR `Match`.away_player_11 = `Player`.player_api_id) WHERE `Player`.player_name IN ('Daan Smith', 'Filipe Ferreira')
SELECT SUM(`Match`.home_team_goal) FROM `Match` INNER JOIN `Player` ON `Match`.home_player_1 = `Player`.player_api_id OR `Match`.home_player_2 = `Player`.player_api_id OR `Match`.home_player_3 = `Player`.player_api_id OR `Match`.home_player_4 = `Player`.player_api_id OR `Match`.home_player_5 = `Player`.player_api_id OR `Match`.home_player_6 = `Player`.player_api_id OR `Match`.home_player_7 = `Player`.player_api_id OR `Match`.home_player_8 = `Player`.player_api_id OR `Match`.home_player_9 = `Player`.player_api_id OR `Match`.home_player_10 = `Player`.player_api_id OR `Match`.home_player_11 = `Player`.player_api_id WHERE (julianday('now') - julianday(`Player`.birthday)) / 365.25 <= 30 AND `Match`.home_team_goal IS NOT NULL;
SELECT `T1`.`player_name` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` ORDER BY `T2`.`overall_rating` DESC LIMIT 10
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`attacking_work_rate` = 'high'
SELECT `T1`.`player_name` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`finishing` = 1 ORDER BY (JULIANDAY(CURRENT_TIMESTAMP) - JULIANDAY(`T1`.`birthday`)) DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` INNER JOIN `League` ON `League`.`id` = `Player_Attributes`.`player_fifa_api_id` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium'
SELECT `Player`.`player_name`, `Country`.`name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` INNER JOIN `League` ON `League`.`id` = `Player`.`player_api_id` INNER JOIN `Country` ON `Country`.`id` = `League`.`country_id` WHERE `Player_Attributes`.`vision` >= 90
SELECT `Country`.`name`, AVG(`Player`.`weight`) AS `average_weight` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` INNER JOIN `Team` ON `Player`.`player_api_id` IN (`Team`.`home_player_1`, `Team`.`home_player_2`, `Team`.`home_player_3`, `Team`.`home_player_4`, `Team`.`home_player_5`, `Team`.`home_player_6`, `Team`.`home_player_7`, `Team`.`home_player_8`, `Team`.`home_player_9`, `Team`.`home_player_10`, `Team`.`home_player_11`, `Team`.`away_player_1`, `Team`.`away_player_2`, `Team`.`away_player_3`, `Team`.`away_player_4`, `Team`.`away_player_5`, `Team`.`away_player_6`, `Team`.`away_player_7`, `Team`.`away_player_8`, `Team`.`away_player_9`, `Team`.`away_player_10`, `Team`.`away_player_11`) INNER JOIN `League` ON `Team`.`team_api_id` = `League`.`id` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` GROUP BY `Country`.`name` ORDER BY `average_weight` DESC LIMIT 1
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeedClass` = 'Slow'
SELECT `Team`.`team_short_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Safe'
SELECT AVG(`height`) FROM `Player` AS T1 INNER JOIN `Country` AS T2 ON T1.`player_fifa_api_id` = T2.`id` WHERE T2.`name` = 'Italy'
SELECT `player_name` FROM `Player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(*) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990-12-31'
SELECT (T1.`jumping` - T2.`jumping`) AS difference FROM `Player_Attributes` AS T1, `Player_Attributes` AS T2 WHERE T1.`id` = 6 AND T2.`id` = 23
SELECT `Player`.`id` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`preferred_foot` = 'right' ORDER BY `Player_Attributes`.`potential` ASC LIMIT 3
SELECT COUNT(*) FROM `Player_Attributes` WHERE `crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes`) AND `preferred_foot` = 'left'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `Player_Attributes`)) AS percentage FROM `Player_Attributes` WHERE `strength` > 80 AND `stamina` > 80
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Poland Ekstraklasa'
SELECT `home_team_goal`, `away_team_goal` FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T1`.`date` LIKE '2008-09-24%' AND `T2`.`name` = 'Belgian Jupiler League'
SELECT `T2`.`sprint_speed`, `T2`.`agility`, `T2`.`acceleration` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Alexis Blin'
SELECT `T2`.`buildUpPlaySpeedClass` FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T1`.`team_long_name` = 'KSV Cercle Brugge'
SELECT COUNT(*) FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T1`.`season` = '2015/2016' AND `T2`.`name` = 'Italy Serie A'
SELECT MAX(`home_team_goal`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Netherlands Eredivisie'
SELECT `T1`.`finishing`, `T1`.`curve` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`weight` = (SELECT MAX(`weight`) FROM `Player`)
SELECT `T2`.`name`, COUNT(`T1`.`id`) AS `game_count` FROM `Match` AS `T1` INNER JOIN `League` AS `T2` ON `T1`.`league_id` = `T2`.`id` WHERE `T1`.`season` = '2015/2016' GROUP BY `T2`.`id` ORDER BY `game_count` DESC LIMIT 1
SELECT `T`.`team_long_name` FROM `Team` AS `T` INNER JOIN `Match` AS `M` ON `T`.`team_api_id` = `M`.`away_team_api_id` ORDER BY `M`.`away_team_goal` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`) LIMIT 1
SELECT (COUNT(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 END) * 100.0 / COUNT(T1.id)) AS percentage FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id
SELECT (COUNT(CASE WHEN `Admission` = '+' AND `SEX` = 'M' THEN 1 END) - COUNT(CASE WHEN `Admission` = '-' AND `SEX` = 'M' THEN 1 END)) * 100.0 / COUNT(CASE WHEN `SEX` = 'M' THEN 1 END) AS deviation_percentage FROM `Patient` WHERE `SEX` = 'M'
SELECT CAST(COUNT(CASE WHEN `Birthday` > '1930-01-01' THEN 1 END) AS REAL) * 100 / COUNT(`ID`) FROM `Patient` WHERE `SEX` = 'F'
SELECT CAST((SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS REAL) AS inpatient_percentage FROM `Patient` WHERE `Birthday` BETWEEN '1930-01-01' AND '1940-12-31'
SELECT CAST(COUNT(CASE WHEN `Admission` = '-' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN `Admission` = '+' THEN 1 END), 0) AS `ratio` FROM `Patient` WHERE `Diagnosis` = 'SLE'
SELECT `Patient`.`Diagnosis`, `Laboratory`.`Date` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = `30609`
SELECT `Patient`.`SEX`, `Patient`.`Birthday`, `Examination`.`Examination Date`, `Examination`.`Symptoms` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = '163109'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`LDH` > 500
SELECT `Patient`.`ID`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`RVVT` = '+'
SELECT `Examination`.`ID`, `Patient`.`SEX`, `Examination`.`Diagnosis` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Thrombosis` = 2
SELECT T1.* FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE strftime('%Y', T1.`Birthday`) = '1937' AND T2.`T-CHO` >= 250
SELECT `T1`.`ID`, `T2`.`SEX`, `T2`.`Diagnosis` FROM `Laboratory` AS `T1` INNER JOIN `Patient` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`ALB` < 3.5
SELECT CAST(COUNT(CASE WHEN `Laboratory`.`TP` < 6.0 OR `Laboratory`.`TP` > 8.5 THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F'
SELECT AVG(`Examination`.`aCL IgG`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Admission` = '+' AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', `Patient`.`Birthday`)) >= 50
SELECT COUNT(*) FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `First Date`) = '1997' AND `Admission` = '-'
SELECT (strftime('%Y', `First Date`) - strftime('%Y', `Birthday`)) AS age FROM `Patient` ORDER BY age ASC LIMIT 1
SELECT COUNT(`T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T2`.`Thrombosis` = '1' AND `T2`.`Examination Date` LIKE '1997%' AND `T1`.`SEX` = 'F'
SELECT (CAST(strftime('%Y', MAX(`T1`.`Birthday`)) AS INTEGER) - CAST(strftime('%Y', MIN(`T1`.`Birthday`)) AS INTEGER)) AS age_gap FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T2`.`TG` >= 200
SELECT T1.Symptoms, T2.Diagnosis FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = (SELECT MIN(`Birthday`) FROM `Patient` WHERE `Birthday` IS NOT NULL)
SELECT COUNT(DISTINCT `T1`.`ID`) / 12.0 AS average_male_patients FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'M' AND `T2`.`Date` BETWEEN '1998-01-01' AND '1998-12-31'
SELECT T2.`Date`, (STRFTIME('%Y', T1.`First Date`) - STRFTIME('%Y', T1.`Birthday`)) AS `Age` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'SJS' AND T1.`Birthday` = (SELECT MAX(`Birthday`) FROM `Patient` WHERE `Diagnosis` = 'SJS')
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'M' AND `Laboratory`.`UA` <= 8.0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` <= 6.5 THEN 1 ELSE 0 END), 0) AS male_to_female_ratio FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID`
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` LEFT JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE (STRFTIME('%Y', `T2`.`Examination Date`) - STRFTIME('%Y', `T1`.`First Date`)) >= 1 OR `T2`.`Examination Date` IS NULL
SELECT COUNT(DISTINCT `Patient`.ID) FROM `Patient` INNER JOIN `Examination` ON `Patient`.ID = `Examination`.ID WHERE strftime('%Y', `Patient`.Birthday) > '2005' AND `Examination`.Examination Date BETWEEN '1990-01-01' AND '1993-12-31'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-BIL` > 2.0
SELECT `Examination`.`Diagnosis` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `Examination`.`Diagnosis` ORDER BY COUNT(`Examination`.`Diagnosis`) DESC LIMIT 1
SELECT AVG(1991 - strftime('%Y', `Birthday`)) AS average_age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1991-10-01' AND '1991-10-31' AND `Patient`.`Birthday` IS NOT NULL
SELECT (strftime('%Y', `Laboratory`.`Date`) - strftime('%Y', `Patient`.`Birthday`)) AS Age, `Patient`.`Diagnosis` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`)
SELECT `ANA` FROM `Examination` WHERE `ID` = 3605340 AND `Examination Date` = '1996-12-02'
SELECT `T-CHO` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04' AND `T-CHO` < 250
SELECT `Patient`.`SEX` FROM `Patient` WHERE `Patient`.`Diagnosis` = 'AORTITIS' ORDER BY `Patient`.`First Date` LIMIT 1
SELECT T1.`aCL IgM` FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T2.`Description` = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'
SELECT `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` = '1992-06-12' AND `Laboratory`.`GPT` = 9
SELECT (STRFTIME('%Y', '1991-10-21') - STRFTIME('%Y', `Patient`.`Birthday`)) AS age FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` = '1991-10-21' AND `Laboratory`.`UA` = '8.4'
SELECT COUNT(`T2`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`First Date` = '1991-06-13' AND `T1`.`Diagnosis` = 'SJS' AND `T2`.`Date` BETWEEN '1995-01-01' AND '1995-12-31'
SELECT `Patient`.`Diagnosis` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Diagnosis` = 'SLE' AND `Examination`.`Examination Date` = '1997-01-27' AND `Patient`.`First Date` IS NOT NULL
SELECT `Examination`.`Symptoms` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Birthday` = '1959-03-01' AND `Examination`.`Examination Date` = '1993-09-27'
SELECT CAST((SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-11-%' THEN `Laboratory`.`T-CHO` ELSE 0 END) - SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-12-%' THEN `Laboratory`.`T-CHO` ELSE 0 END)) AS REAL) / NULLIF(SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-11-%' THEN `Laboratory`.`T-CHO` ELSE 0 END), 0) * 100 AS decrease_rate FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`Birthday` = '1959-02-18'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` = 'BEHCET' AND `Examination`.`Examination Date` >= '1997-01-01' AND `Examination`.`Examination Date` < '1998-01-01'
SELECT `Patient`.`ID` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4
SELECT `ID` FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) = '1964' AND `Admission` = '+'
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Examination` AS `T1` INNER JOIN `Patient` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`Thrombosis` = 2 AND `T1`.`ANA` = 'S' AND `T1`.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM `Examination` WHERE `aCL IgM` IS NOT NULL)
SELECT (COUNT(CASE WHEN `UA` <= 6.5 THEN 1 END) * 100.0 / COUNT(CASE WHEN `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 END)) AS percentage FROM `Laboratory` WHERE `U-PRO` > 0 AND `U-PRO` < 30
SELECT CAST(SUM(CASE WHEN `T1`.`Diagnosis` = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T1`.`ID`) FROM `Patient` AS `T1` WHERE `T1`.`SEX` = 'M' AND strftime('%Y', `T1`.`First Date`) = '1981'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`Date` LIKE '1991-10%' AND `Laboratory`.`T-BIL` < 2.0
SELECT COUNT(*) FROM `Patient` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'F' AND `T1`.`Birthday` BETWEEN '1980-01-01' AND '1989-12-31' AND `T2`.`ANA Pattern` != 'P'
SELECT `T1`.`SEX` FROM `Patient` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` INNER JOIN `Laboratory` AS `T3` ON `T1`.`ID` = `T3`.`ID` WHERE `T2`.`Diagnosis` = 'PSS' AND `T3`.`CRP` = '2+' AND `T3`.`CRE` = 1 AND `T3`.`LDH` = 123
SELECT AVG(`Laboratory`.`ALB`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`PLT` > 400
SELECT `Symptoms` FROM `Examination` WHERE `Diagnosis` = 'SLE' GROUP BY `Symptoms` ORDER BY COUNT(`Symptoms`) DESC LIMIT 1
SELECT `Description`, `Diagnosis` FROM `Patient` WHERE `ID` = `48473`
SELECT COUNT(`ID`) FROM `Patient` WHERE `SEX` = 'F' AND `Diagnosis` = 'APS'
SELECT COUNT(DISTINCT `ID`) FROM `Laboratory` WHERE (`TP` <= 6.0 OR `TP` >= 8.5) AND strftime('%Y', `Date`) = '1997'
SELECT CAST(SUM(CASE WHEN `Examination`.`Symptoms` LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(SUM(CASE WHEN `Patient`.`Diagnosis` LIKE '%SLE%' THEN 1 ELSE 0 END), 0) AS proportion FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID`
SELECT CAST(SUM(CASE WHEN `SEX` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `Patient` WHERE strftime('%Y', `Birthday`) = '1980' AND `Diagnosis` = 'RA'
SELECT COUNT(DISTINCT `P`.`ID`) FROM `Patient` AS `P` INNER JOIN `Examination` AS `E` ON `P`.`ID` = `E`.`ID` WHERE `P`.`SEX` = 'M' AND `E`.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND `E`.`Diagnosis` = 'BEHCET' AND `P`.`Admission` = '-'
SELECT COUNT(*) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'F' AND `T2`.`WBC` < 3.5
SELECT julianday(`Examination`.`Examination Date`) - julianday(`Patient`.`First Date`) AS Duration FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = 821298
SELECT `Laboratory`.`UA` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 57266 AND ((`Patient`.`SEX` = 'M' AND `Laboratory`.`UA` > 8.0) OR (`Patient`.`SEX` = 'F' AND `Laboratory`.`UA` > 6.5))
SELECT `Date` FROM `Laboratory` WHERE `ID` = '48473' AND `GOT` >= 60
SELECT `Patient`.`SEX`, `Patient`.`Birthday` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GOT` < 60 AND strftime('%Y', `Laboratory`.`Date`) = '1994'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GPT` >= 60
SELECT `Patient`.`Diagnosis` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GPT` > 60 ORDER BY `Patient`.`Birthday` ASC
SELECT AVG(`LDH`) FROM `Laboratory` WHERE `LDH` < 500
SELECT `Patient`.`ID`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` BETWEEN 600 AND 800
SELECT `Patient`.`Admission`, COUNT(`Patient`.`ID`) AS `PatientCount` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`ALP` < 300 GROUP BY `Patient`.`Admission`
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1982-04-01' AND `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT `Laboratory`.`ID`, (`Laboratory`.`TP` - 8.5) AS `Deviation` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`TP` > 8.5
SELECT `Patient`.`ID`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND (`Laboratory`.`ALB` <= 3.5 OR `Laboratory`.`ALB` >= 5.5) ORDER BY `Patient`.`Birthday` DESC
SELECT T1.`ID`, CASE WHEN T2.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS `Albumin_Status` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE strftime('%Y', T1.`Birthday`) = '1982'
SELECT CAST(SUM(CASE WHEN `Laboratory`.`UA` > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F'
SELECT AVG(`Laboratory`.`UA`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` = (SELECT MAX(`Date`) FROM `Laboratory` AS `L` WHERE `L`.`ID` = `Laboratory`.`ID`) AND ((`Patient`.`SEX` = 'M' AND `Laboratory`.`UA` < 8.0) OR (`Patient`.`SEX` = 'F' AND `Laboratory`.`UA` < 6.5))
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`UN` = 29
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'RA' AND `Laboratory`.`UN` < 30
SELECT COUNT(*) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'M' AND `T2`.`CRE` >= 1.5
SELECT (SUM(CASE WHEN `Patient`.`SEX` = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END)) AS result FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` >= 1.5
SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory`)
SELECT `Patient`.`SEX`, COUNT(*) AS `TotalPatients` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 GROUP BY `Patient`.`SEX`
SELECT T1.`ID`, T2.`T-CHO` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-CHO` = (SELECT MAX(`T-CHO`) FROM `Laboratory`) AND T1.`Birthday` = (SELECT MIN(`Birthday`) FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `T-CHO` = (SELECT MAX(`T-CHO`) FROM `Laboratory`)))
SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', `Patient`.`Birthday`)) AS average_age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-CHO` >= 250
SELECT `Patient`.`ID`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` > 300
SELECT COUNT(*) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TG` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', T1.`Birthday`)) > 50
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) BETWEEN '1936' AND '1956' AND `Patient`.`SEX` = 'M' AND `Laboratory`.`CPK` >= 250
SELECT T1.`ID`, T1.`SEX`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.`Birthday`)) AS `age` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GLU` >= 180 AND T2.`T-CHO` < 250
SELECT `Patient`.`ID`, `Laboratory`.`GLU` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Description` >= '1991-01-01' AND `Laboratory`.`GLU` < 180
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`WBC` <= 3.5 OR `Laboratory`.`WBC` >= 9.0 ORDER BY `Patient`.`Birthday` ASC, `Patient`.`SEX`
SELECT `Patient`.`ID`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', `Patient`.`Birthday`)) AS `Age`, `Patient`.`Diagnosis` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`RBC` < 3.5
SELECT `Patient`.`Admission` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50 AND (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0)
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`HGB` < 10
SELECT `T1`.`ID`, `T1`.`SEX` FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`Diagnosis` = 'SLE' AND `T2`.`HGB` > 10 AND `T2`.`HGB` < 17 ORDER BY `T1`.`Birthday` ASC LIMIT 1
SELECT `Patient`.`ID`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` >= 52 GROUP BY `Patient`.`ID` HAVING COUNT(`Laboratory`.`ID`) > 2
SELECT AVG(`HCT`) FROM `Laboratory` WHERE `Date` LIKE '1991%' AND `HCT` < 29
SELECT COUNT(CASE WHEN `PLT` < 100 THEN 1 END) AS `Lower_Than_Normal`, COUNT(CASE WHEN `PLT` > 400 THEN 1 END) AS `Higher_Than_Normal` FROM `Laboratory` WHERE `PLT` IS NOT NULL
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` LIKE '1984%' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 50 AND `Laboratory`.`PLT` BETWEEN 100 AND 400
SELECT CAST(SUM(CASE WHEN T1.`SEX` = 'F' AND T2.`PT` >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(COUNT(CASE WHEN T2.`PT` >= 14 THEN 1 END), 0) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.`Birthday`)) > 55 AND T2.`PT` >= 14
SELECT `Patient`.`ID`, `Patient`.`First Date` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` > '1992-12-31' AND `Laboratory`.`PT` < 14
SELECT COUNT(*) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`APTT` < 45
SELECT COUNT(DISTINCT T1.`ID`) FROM `Laboratory` AS T1 INNER JOIN `Examination` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`APTT` > 45 AND T2.`Thrombosis` = 3
SELECT COUNT(DISTINCT T1.`ID`) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`WBC` BETWEEN 3.5 AND 9.0 AND (T2.`FG` <= 150 OR T2.`FG` >= 450)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` > '1980-01-01' AND (`Laboratory`.`FG` < 150 OR `Laboratory`.`FG` > 450)
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` >= 30
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` IS NOT NULL AND `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30 AND `Patient`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Laboratory` INNER JOIN `Examination` ON `Laboratory`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`IGG` < 900 AND `Examination`.`Symptoms` = 'abortion'
SELECT COUNT(DISTINCT T1.ID) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` INNER JOIN `Examination` AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`IGG` BETWEEN 900 AND 2000 AND T3.`Symptoms` IS NOT NULL
SELECT `T1`.`Diagnosis` FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T2`.`IGA` = (SELECT MAX(`T3`.`IGA`) FROM `Laboratory` AS `T3` WHERE `T3`.`IGA` BETWEEN 80 AND 500)
SELECT COUNT(DISTINCT T1.`ID`) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`IGA` BETWEEN 80 AND 500 AND T1.`First Date` >= '1990-01-01'
SELECT `Patient`.`Diagnosis` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`IGM` < 40 OR `Laboratory`.`IGM` > 400 GROUP BY `Patient`.`Diagnosis` ORDER BY COUNT(`Patient`.`Diagnosis`) DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`CRP` = '+' OR `Laboratory`.`CRP` = '-' OR `Laboratory`.`CRP` < 1.0) AND `Patient`.`Description` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRP` NOT IN ('+-', '-') AND `Laboratory`.`CRP` >= 1.0 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 18
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` INNER JOIN `Laboratory` AS `T3` ON `T1`.`ID` = `T3`.`ID` WHERE `T3`.`RA` IN ('-', '+-') AND `T2`.`KCT` = '+'
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` >= '1995-01-01' AND `Laboratory`.`RA` IN ('-', '+-')
SELECT `T1`.`ID` FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T2`.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `T1`.`Birthday`)) > 60
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Laboratory` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`RF` < 20 AND `T2`.`Thrombosis` = '0'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Laboratory` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`C3` > 35 AND `T2`.`ANA Pattern` = 'P'
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`HCT` < 29 OR `Laboratory`.`HCT` > 52 ORDER BY `Examination`.`aCL IgA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'APS' AND `Laboratory`.`C4` > 10
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` IN ('-', '+-') AND `Patient`.`Admission` = '+'
SELECT `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` NOT IN ('-', '+-') ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SM` IN ('-', '+-') AND `Examination`.`Thrombosis` = '1'
SELECT T1.`ID` FROM `Patient` AS T1 INNER JOIN `Examination` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SM` NOT IN ('-', '+-') ORDER BY T1.`Birthday` ASC LIMIT 3
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` >= '1997-01-01' AND `Laboratory`.`SC170` IN ('-', '+-')
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` INNER JOIN `Examination` AS `T3` ON `T1`.`ID` = `T3`.`ID` WHERE `T1`.`SEX` = 'M' AND `T2`.`SC170` IN ('-', '+-') AND `T3`.`Symptoms` LIKE '%vertigo%'
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T2`.`SSA` IN ('-', '+-') AND substr(`T1`.`First Date`, 1, 4) < '1990'
SELECT T1.`ID` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SSA` NOT IN ('-', '+-') ORDER BY T1.`First Date` LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('-', '0') AND `Examination`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('-', '+-') AND `Examination`.`Symptoms` IS NOT NULL
SELECT COUNT(`Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CENTROMEA` IN ('-', '+-') AND `Laboratory`.`SSB` IN ('-', '+-') AND `Patient`.`SEX` = 'M'
SELECT DISTINCT `Examination`.`Diagnosis` FROM `Laboratory` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`DNA` >= 8
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` < 8 AND `Patient`.`Description` IS NULL
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T2`.`DNA-II` >= 8 AND `T1`.`Admission` = '+'
SELECT CAST(COUNT(CASE WHEN `Patient`.`Diagnosis` = 'SLE' THEN 1 END) AS REAL) * 100 / COUNT(`Laboratory`.`ID`) AS percentage FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GOT` >= 60
SELECT COUNT(*) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'M' AND `T2`.`GOT` < 60
SELECT `Patient`.`Birthday` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GOT` >= 60 ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` < 60 ORDER BY `Laboratory`.`GPT` DESC LIMIT 3
SELECT COUNT(`Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND `Patient`.`SEX` = 'M'
SELECT MIN(`Patient`.`First_Date`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`LDH` = (SELECT MAX(`LDH`) FROM `Laboratory` WHERE `LDH` < 500)
SELECT T1.`First Date` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`LDH` >= 500 ORDER BY T1.`First Date` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` >= 300 AND `Patient`.`Admission` = '+'
SELECT COUNT(*) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`ALP` < 300
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`TP` > 6.0 AND `Laboratory`.`TP` < 8.5
SELECT `Examination`.`Date` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5)
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'M' AND `T2`.`ALB` > 3.5 AND `T2`.`ALB` < 5.5 AND `T2`.`TP` > 6.0 AND `T2`.`TP` < 8.5
SELECT T1.`aCL IgG`, T1.`aCL IgM`, T1.`aCL IgA` FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` INNER JOIN `Patient` AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`SEX` = 'F' AND T2.`UA` > 6.5 AND T2.`UA` = (SELECT MAX(T4.`UA`) FROM `Laboratory` AS T4 INNER JOIN `Patient` AS T5 ON T4.`ID` = T5.`ID` WHERE T5.`SEX` = 'F' AND T4.`UA` > 6.5)
SELECT MAX(`Examination`.`ANA`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` < 1.5
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`CRE` < 1.5 AND `Examination`.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM `Examination` WHERE `Examination`.`ID` = `Patient`.`ID` AND `Laboratory`.`CRE` < 1.5)
SELECT COUNT(*) FROM `Laboratory` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`T-BIL` >= 2.0 AND `T2`.`ANA Pattern` LIKE '%P%'
SELECT T1.`ANA` FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory` WHERE `T-BIL` < 2.0)
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Laboratory` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`T-CHO` >= 250 AND `T2`.`KCT` = '-'
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Laboratory` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`T-CHO` < 250 AND `T2`.`ANA Pattern` = 'P'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`TG` < 200 AND `Examination`.`Symptoms` IS NOT NULL
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 ORDER BY `Laboratory`.`TG` DESC LIMIT 1
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 0 AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`CPK` < 250 AND (`Examination`.`KCT` = '+' OR `Examination`.`RVVT` = '+' OR `Examination`.`LAC` = '+')
SELECT MIN(`Patient`.`Birthday`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` > 180
SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` INNER JOIN `Examination` ON `Laboratory`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`GLU` < 180 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0) AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` IS NOT NULL
SELECT `Laboratory`.`PLT` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` = 'MCTD'
SELECT AVG(`Laboratory`.`PT`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`PT` < 14
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Examination` AS `T2` ON `T1`.`ID` = `T2`.`ID` INNER JOIN `Laboratory` AS `T3` ON `T1`.`ID` = `T3`.`ID` WHERE `T2`.`Thrombosis` IN (1, 2) AND `T3`.`PT` < 14
SELECT `T2`.`major_name` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T1`.`first_name` = 'Angela' AND `T1`.`last_name` = 'Sanders'
SELECT COUNT(*) FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`college` = 'College of Engineering'
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`department` = 'Art and Design Department'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women's Soccer'
SELECT `member`.`phone` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT COUNT(`T3`.`member_id`) FROM `event` AS `T1` INNER JOIN `attendance` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` INNER JOIN `member` AS `T3` ON `T2`.`link_to_member` = `T3`.`member_id` WHERE `T1`.`event_name` = 'Women''s Soccer' AND `T3`.`t_shirt_size` = 'Medium'
SELECT `T1`.`event_name` FROM `event` AS `T1` INNER JOIN `attendance` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` GROUP BY `T1`.`event_id` ORDER BY COUNT(DISTINCT `T2`.`link_to_member`) DESC LIMIT 1
SELECT `T2`.`college` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T1`.`position` = 'Vice President'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Maya' AND `member`.`last_name` = 'Mclean'
SELECT COUNT(`T1`.`link_to_event`) FROM `attendance` AS `T1` INNER JOIN `member` AS `T2` ON `T1`.`link_to_member` = `T2`.`member_id` INNER JOIN `event` AS `T3` ON `T1`.`link_to_event` = `T3`.`event_id` WHERE `T2`.`first_name` = 'Sacha' AND `T2`.`last_name` = 'Harrison' AND STRFTIME('%Y', `T3`.`event_date`) = '2019'
SELECT COUNT(*) FROM (SELECT `link_to_event` FROM `attendance` GROUP BY `link_to_event` HAVING COUNT(`link_to_member`) > 10) AS T1 INNER JOIN `event` AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`type` = 'Meeting'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_member`) > 20
SELECT CAST(COUNT(`attendance`.`link_to_event`) AS REAL) / COUNT(DISTINCT `event`.`event_id`) AS average_attendance FROM `event` LEFT JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT `expense_description`, `cost` FROM `expense` ORDER BY `cost` DESC LIMIT 1
SELECT COUNT(`T1`.`member_id`) FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`major_name` = 'Environmental Engineering'
SELECT `m`.`first_name`, `m`.`last_name` FROM `attendance` AS `a` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` INNER JOIN `member` AS `m` ON `a`.`link_to_member` = `m`.`member_id` WHERE `e`.`event_name` = 'Laugh Out Loud'
SELECT `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT `T2`.`county` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T1`.`first_name` = 'Sherri' AND `T1`.`last_name` = 'Ramsey'
SELECT `T2`.`college` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T1`.`first_name` = 'Tyler' AND `T1`.`last_name` = 'Hewitt'
SELECT SUM(`Income`.`amount`) FROM `Income` INNER JOIN `Member` ON `Income`.`link_to_member` = `Member`.`member_id` WHERE `Member`.`position` = 'Vice President'
SELECT SUM(`b`.`spent`) FROM `budget` AS `b` INNER JOIN `event` AS `e` ON `b`.`link_to_event` = `e`.`event_id` WHERE `b`.`category` = 'Food' AND `e`.`event_name` = 'September Meeting'
SELECT T2.city, T2.state FROM `member` AS T1 INNER JOIN `zip_code` AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T2`.`state` = 'Illinois'
SELECT `budget`.`spent` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement' AND `event`.`event_name` = 'September Meeting' AND `budget`.`spent` IS NOT NULL
SELECT DISTINCT `j`.`department` FROM `member` AS `m` INNER JOIN `major` AS `j` ON `m`.`link_to_major` = `j`.`major_id` WHERE `m`.`first_name` = 'Pierce' OR `m`.`last_name` = 'Guidi'
SELECT SUM(`budget`.`amount`) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Speaker'
SELECT COUNT(`expense`.`expense_id`) AS total_expenses, COUNT(CASE WHEN `expense`.`approved` = 'true' THEN 1 END) AS approved_expenses FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `event`.`event_date` = '2019-10-08'
SELECT AVG(`cost`) FROM `expense` AS `T1` INNER JOIN `member` AS `T2` ON `T1`.`link_to_member` = `T2`.`member_id` WHERE `T2`.`first_name` = 'Elijah' AND `T2`.`last_name` = 'Allen' AND (STRFTIME('%m', `T1`.`expense_date`) = '09' OR STRFTIME('%m', `T1`.`expense_date`) = '10')
SELECT (SELECT SUM(`spent`) FROM `budget` AS b INNER JOIN `event` AS e ON b.`link_to_event` = e.`event_id` WHERE strftime('%Y', e.`event_date`) = '2019') - (SELECT SUM(`spent`) FROM `budget` AS b INNER JOIN `event` AS e ON b.`link_to_event` = e.`event_id` WHERE strftime('%Y', e.`event_date`) = '2020') AS total_difference
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT `cost` FROM `expense` WHERE `expense_description` = 'Posters' AND `expense_date` = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `amount` = (SELECT MAX(`amount`) FROM `budget` WHERE `category` = 'Food') AND `category` = 'Food'
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `major`.`college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT `zip_code`.`county` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Adela' AND `member`.`last_name` = 'O''Gallagher'
SELECT COUNT(*) FROM `budget` AS `T1` INNER JOIN `event` AS `T2` ON `T1`.`link_to_event` = `T2`.`event_id` WHERE `T2`.`event_name` = 'November Meeting' AND `T1`.`remaining` < 0
SELECT SUM(`budget`.`amount`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'September Speaker'
SELECT T3.status FROM `expense` AS T1 INNER JOIN `budget` AS T2 ON T1.`link_to_budget` = T2.`budget_id` INNER JOIN `event` AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T1.`expense_description` = 'Post Cards, Posters' AND T1.`expense_date` = '2019-08-20'
SELECT T2.`major_name` FROM `member` AS T1 INNER JOIN `major` AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Brent' AND T1.`last_name` = 'Thomason'
SELECT COUNT(*) FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`major_name` = 'Human Development and Family Studies' AND `T1`.`t_shirt_size` = 'Large'
SELECT T2.type FROM `zip_code` AS T2 INNER JOIN `member` AS T1 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT T2.department FROM `member` AS T1 INNER JOIN `major` AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'
SELECT `income`.`date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Connor' AND `member`.`last_name` = 'Hilton' AND `income`.`source` = 'Dues'
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS full_name FROM `member` AS `T1` INNER JOIN `income` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` WHERE `T2`.`source` = 'Dues' AND `T2`.`date_received` = (SELECT MIN(`date_received`) FROM `income` WHERE `source` = 'Dues')
SELECT CAST(SUM(CASE WHEN `T1`.`event_name` = 'Yearly Kickoff' THEN `T2`.`amount` ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN `T1`.`event_name` = 'October Meeting' THEN `T2`.`amount` ELSE 0 END), 0) AS budget_ratio FROM `event` AS `T1` INNER JOIN `budget` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` WHERE `T2`.`category` = 'Advertisement'
SELECT (SUM(CASE WHEN `T1`.`category` = 'Parking' THEN `T1`.`amount` ELSE 0 END) * 100.0 / SUM(`T1`.`amount`)) AS `Parking_Percentage` FROM `budget` AS `T1` INNER JOIN `event` AS `T2` ON `T1`.`link_to_event` = `T2`.`event_id` WHERE `T2`.`event_name` = 'November Speaker'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `zip_code`.`city`) FROM `zip_code` WHERE `zip_code`.`county` = 'Orange County' AND `zip_code`.`state` = 'Virginia'
SELECT DISTINCT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `T2`.`city`, `T2`.`county`, `T2`.`state` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T1`.`first_name` = 'Amy' AND `T1`.`last_name` = 'Firth'
SELECT `T2`.`expense_description` FROM `expense` AS `T2` INNER JOIN `budget` AS `T1` ON `T2`.`link_to_budget` = `T1`.`budget_id` WHERE `T1`.`remaining` = (SELECT MIN(`T3`.`remaining`) FROM `budget` AS `T3`)
SELECT `member`.`first_name`, `member`.`last_name`, `member`.`email` FROM `attendance` AS `T1` INNER JOIN `event` AS `T2` ON `T1`.`link_to_event` = `T2`.`event_id` INNER JOIN `member` ON `T1`.`link_to_member` = `member`.`member_id` WHERE `T2`.`event_name` = 'October Meeting'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` GROUP BY `major`.`college` ORDER BY COUNT(`member`.`member_id`) DESC LIMIT 1
SELECT `T2`.`major_name` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T1`.`phone` = '809-555-3360'
SELECT `event`.`event_name`, `budget`.`amount` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'Women''s Soccer')
SELECT `date_received` FROM `income` AS `T1` INNER JOIN `member` AS `T2` ON `T1`.`link_to_member` = `T2`.`member_id` WHERE `T2`.`first_name` = 'Casey' AND `T2`.`last_name` = 'Mason'
SELECT COUNT(*) FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T2`.`state` = 'Maryland'
SELECT COUNT(`link_to_event`) FROM `attendance` WHERE `link_to_member` = (SELECT `member_id` FROM `member` WHERE `phone` = '954-555-6240')
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS full_name FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event`.`event_name`, CAST(`budget`.`spent` AS REAL) / `budget`.`amount` AS `spend_to_budget_ratio` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' ORDER BY `spend_to_budget_ratio` DESC LIMIT 1
SELECT COUNT(`member`.`member_id`) FROM `member` WHERE `member`.`position` = 'President'
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(*) FROM `event` WHERE `type` = 'Meeting' AND strftime('%Y', `event_date`) = '2020
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT DISTINCT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` GROUP BY `member`.`member_id` HAVING COUNT(`attendance`.`link_to_event`) > 7
SELECT `T1`.`first_name`, `T1`.`last_name` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` INNER JOIN `attendance` AS `T3` ON `T1`.`member_id` = `T3`.`link_to_member` INNER JOIN `event` AS `T4` ON `T3`.`link_to_event` = `T4`.`event_id` WHERE `T2`.`major_name` = 'Interior Design' AND `T4`.`event_name` = 'Community Theater'
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T2`.`city` = 'Georgetown' AND `T2`.`state` = 'South Carolina'
SELECT SUM(`Income`.`amount`) FROM `Income` INNER JOIN `Member` ON `Income`.`link_to_member` = `Member`.`member_id` WHERE `Member`.`first_name` = 'Grant' AND `Member`.`last_name` = 'Gilmour'
SELECT `member`.`first_name`, `member`.`last_name` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`amount` > 40
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `expense` ON `event`.`event_id` = `expense`.`link_to_event` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `T1`.`first_name`, `T1`.`last_name` FROM `member` AS `T1` INNER JOIN `expense` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` INNER JOIN `budget` AS `T3` ON `T2`.`link_to_budget` = `T3`.`budget_id` INNER JOIN `event` AS `T4` ON `T3`.`link_to_event` = `T4`.`event_id` WHERE `T4`.`event_name` = 'Yearly Kickoff'
SELECT `Member`.`first_name`, `Member`.`last_name`, `Income`.`source` FROM `Member` INNER JOIN `Income` ON `Member`.`member_id` = `Income`.`link_to_member` WHERE `Income`.`amount` = (SELECT MAX(`amount`) FROM `Income`)
SELECT `event`.`event_name` FROM `event` INNER JOIN `expense` ON `event`.`event_id` = `expense`.`link_to_event` GROUP BY `event`.`event_id` ORDER BY SUM(`expense`.`cost`) ASC LIMIT 1
SELECT (CAST(SUM(CASE WHEN E.event_name = 'Yearly Kickoff' THEN B.amount ELSE 0 END) AS REAL) * 100 / SUM(B.amount)) AS percentage FROM `event` AS E INNER JOIN `budget` AS B ON E.event_id = B.link_to_event INNER JOIN `expense` AS Ex ON B.budget_id = Ex.link_to_budget
SELECT CAST(SUM(CASE WHEN `major`.`major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN `major`.`major_name` = 'Physics' THEN 1 ELSE 0 END), 0) AS ratio FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT `source`, SUM(`amount`) AS total_amount FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY `source` ORDER BY total_amount DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(*) FROM `member` AS T1 INNER JOIN `major` AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`event_name` = 'Community Theater' AND strftime('%Y', `event`.`event_date`) = '2019'
SELECT COUNT(`T1`.`link_to_event`) AS `event_count`, `T3`.`major_name` FROM `attendance` AS `T1` INNER JOIN `member` AS `T2` ON `T1`.`link_to_member` = `T2`.`member_id` INNER JOIN `major` AS `T3` ON `T2`.`link_to_major` = `T3`.`major_id` WHERE `T2`.`first_name` = 'Luisa' AND `T2`.`last_name` = 'Guidi' GROUP BY `T3`.`major_name`
SELECT CAST(SUM(`spent`) AS REAL) / COUNT(`spent`) FROM `budget` AS `T1` INNER JOIN `event` AS `T2` ON `T1`.`link_to_event` = `T2`.`event_id` WHERE `T1`.`category` = 'Food' AND `T1`.`event_status` = 'Closed'
SELECT T1.`event_name` FROM `event` AS T1 INNER JOIN `budget` AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`category` = 'Advertisement' ORDER BY T2.`spent` DESC LIMIT 1
SELECT COUNT(*) > 0 FROM `attendance` AS `T1` INNER JOIN `event` AS `T2` ON `T1`.`link_to_event` = `T2`.`event_id` INNER JOIN `member` AS `T3` ON `T1`.`link_to_member` = `T3`.`member_id` WHERE `T2`.`event_name` = 'Women''s Soccer' AND `T3`.`first_name` = 'Maya' AND `T3`.`last_name` = 'Mclean'
SELECT (SUM(CASE WHEN `type` = 'Community Service' THEN 1 ELSE 0 END) * 100.0 / COUNT(`event_id`)) AS percentage_share FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT `T2`.`cost` FROM `event` AS `T1` INNER JOIN `budget` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` INNER JOIN `expense` AS `T3` ON `T2`.`budget_id` = `T3`.`link_to_budget` WHERE `T1`.`event_name` = 'September Speaker' AND `T3`.`expense_description` = 'Posters'
SELECT `t_shirt_size`, COUNT(`t_shirt_size`) AS `size_count` FROM `member` GROUP BY `t_shirt_size` ORDER BY `size_count` DESC LIMIT 1
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' AND `budget`.`remaining` < 0 ORDER BY `budget`.`remaining` ASC LIMIT 1
SELECT `expense_description`, SUM(`cost`) AS `total_value` FROM `expense` AS `T1` INNER JOIN `budget` AS `T2` ON `T1`.`link_to_budget` = `T2`.`budget_id` INNER JOIN `event` AS `T3` ON `T2`.`link_to_event` = `T3`.`event_id` WHERE `T3`.`event_name` = 'October Meeting' AND `T1`.`approved` = 'true' GROUP BY `expense_description`
SELECT `Budget`.`category`, `Budget`.`amount` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'April Speaker' ORDER BY `Budget`.`amount` ASC
SELECT `budget_id`, `amount` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `budget_id`, `category`, `amount` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS `full_name`, SUM(`T2`.`cost`) AS `total_cost` FROM `member` AS `T1` LEFT JOIN `expense` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` WHERE `T1`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `T1`.`member_id`
SELECT `T2`.`expense_description` FROM `member` AS `T1` INNER JOIN `expense` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` WHERE `T1`.`first_name` = 'Sacha' AND `T1`.`last_name` = 'Harrison'
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT `member`.`zip` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`cost` < 50
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Phillip' AND `member`.`last_name` = 'Cullen'
SELECT `position` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`major_name` = 'Business'
SELECT COUNT(`T1`.`member_id`) FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T2`.`major_name` = 'Business' AND `T1`.`t_shirt_size` = 'Medium'
SELECT DISTINCT `event`.`type` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`remaining` > 30
SELECT `type` FROM `event` WHERE `location` = 'MU 215'
SELECT `budget`.`category` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_date` = '2020-03-24T12:00:00'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT (CAST(SUM(CASE WHEN `T1`.`position` = 'Member' AND `T2`.`major_name` = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) / COUNT(`T1`.`member_id`)) * 100 AS percentage FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id`
SELECT `type` FROM `event` WHERE `location` = 'MU 215'
SELECT COUNT(*) FROM `income` WHERE `income`.`amount` = 50
SELECT COUNT(`member`.`member_id`) FROM `member` WHERE `member`.`position` = 'Member' AND `member`.`t_shirt_size` = 'X-Large'
SELECT COUNT(`major_id`) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `member`.`last_name`, `major`.`department`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT DISTINCT `budget`.`category` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT `T3`.`city`, `T3`.`state` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` INNER JOIN `zip_code` AS `T3` ON `T1`.`zip` = `T3`.`zip_code` WHERE `T2`.`department` = 'Electrical and Computer Engineering Department' AND `T1`.`position` = 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`type` = 'Social' AND `event`.`location` = '900 E. Washington St.' AND `member`.`position` = 'Vice President'
SELECT `T1`.`last_name`, `T1`.`position` FROM `expense` AS `T2` INNER JOIN `member` AS `T1` ON `T2`.`link_to_member` = `T1`.`member_id` WHERE `T2`.`expense_description` = 'Pizza' AND `T2`.`expense_date` = '2019-09-10'
SELECT `m`.`last_name` FROM `member` AS `m` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `e`.`event_name` = 'Women''s Soccer' AND `m`.`position` = 'Member'
SELECT (CAST((SELECT COUNT(*) FROM `income` AS `T1` INNER JOIN `member` AS `T2` ON `T1`.`link_to_member` = `T2`.`member_id` WHERE `T1`.`amount` = 50 AND `T2`.`t_shirt_size` = 'Medium' AND `T2`.`position` = 'Member') AS REAL) / COUNT(`T2`.`member_id`) * 100) AS `percentage` FROM `member` AS `T2` WHERE `T2`.`t_shirt_size` = 'Medium' AND `T2`.`position` = 'Member'
SELECT DISTINCT `city`, `state` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `type` = 'PO Box' AND `city` = 'San Juan' AND `county` = 'San Juan Municipio' AND `state` = 'Puerto Rico'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT `attendance`.`link_to_event` FROM `attendance` INNER JOIN `expense` ON `attendance`.`link_to_member` = `expense`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT `member`.`first_name`, `member`.`last_name`, `attendance`.`link_to_event` FROM `expense` INNER JOIN `attendance` ON `expense`.`link_to_member` = `attendance`.`link_to_member` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `expense`.`approved` = 'true' AND `expense`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Katy' AND `member`.`link_to_major` = 'rec1N0upiVLy5esTO'
SELECT `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences'
SELECT DISTINCT `member`.`email` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `expense`.`cost` > 20
SELECT COUNT(*) FROM `member` AS T1 INNER JOIN `major` AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Education' AND T2.`college` = 'College of Education & Human Services'
SELECT CAST(SUM(CASE WHEN `budget`.`remaining` < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event`.`event_id`) AS `percentage_over_budget` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_description` FROM `expense` GROUP BY `expense_description` HAVING (SUM(`cost`) / COUNT(`expense_id`)) > 50
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT (CAST(SUM(CASE WHEN `type` = 'PO Box' THEN 1 ELSE 0 END) AS REAL) / COUNT(`zip_code`)) * 100 AS percentage_of_po_boxes FROM `zip_code`
SELECT `event`.`event_name`, `event`.`location` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` INNER JOIN `expense` ON `event`.`event_id` = `expense`.`link_to_event` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `Member`.`first_name` || ' ' || `Member`.`last_name` AS `full_name`, `Major`.`major_name` FROM `member` AS `Member` INNER JOIN `expense` AS `Expense` ON `Member`.`member_id` = `Expense`.`link_to_member` INNER JOIN `major` AS `Major` ON `Member`.`link_to_major` = `Major`.`major_id` WHERE `Expense`.`cost` > 100
SELECT `zip_code`.`city`, `zip_code`.`county` FROM `event` INNER JOIN `income` ON `event`.`event_id` = `income`.`link_to_event` INNER JOIN `member` ON `member`.`member_id` = `income`.`link_to_member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` GROUP BY `event`.`event_id` HAVING COUNT(`income`.`income_id`) > 40
SELECT `expense`.`link_to_member`, MAX(`expense`.`cost`) AS `max_cost` FROM `expense` GROUP BY `expense`.`link_to_member` HAVING COUNT(DISTINCT `expense`.`link_to_event`) > 1 ORDER BY `max_cost` DESC LIMIT 1
SELECT CAST(SUM(`T1`.`cost`) AS REAL) / COUNT(`T3`.`link_to_event`) AS average_amount FROM `expense` AS T1 INNER JOIN `member` AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN `attendance` AS T3 ON T2.`member_id` = T3.`link_to_member` WHERE T2.`position` != 'Member' AND T1.`cost` IS NOT NULL
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`cost` < (SELECT CAST(SUM(`cost`) AS REAL) / COUNT(`expense_id`) FROM `expense` WHERE `link_to_budget` IN (SELECT `budget_id` FROM `budget` WHERE `category` = 'Parking'))
SELECT CAST(SUM(T2.cost) AS REAL) * 100 / COUNT(T1.event_id) FROM `event` AS T1 LEFT JOIN `expense` AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Game'
SELECT `budget`.`amount` FROM `budget` JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Water, chips, cookies' ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS `full_name` FROM `member` AS `T1` INNER JOIN `expense` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` GROUP BY `T1`.`member_id` ORDER BY SUM(`T2`.`cost`) DESC LIMIT 5
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS `full_name`, `T1`.`phone` FROM `member` AS `T1` INNER JOIN `expense` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` WHERE `T2`.`cost` > (SELECT AVG(`cost`) FROM `expense`)
SELECT (CAST(SUM(CASE WHEN `zip_code`.`state` = 'Maine' THEN 1 ELSE 0 END) AS REAL) / COUNT(`member`.`member_id`)) - (CAST(SUM(CASE WHEN `zip_code`.`state` = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / COUNT(`member`.`member_id`)) AS percentage_difference FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'Member'
SELECT `T2`.`major_name`, `T2`.`department` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T1`.`first_name` = 'Garrett' AND `T1`.`last_name` = 'Gerke'
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS `full_name`, `T2`.`cost` FROM `member` AS `T1` INNER JOIN `expense` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` WHERE `T2`.`expense_description` = 'Water, Veggie tray, supplies'
SELECT `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Elementary Education'
SELECT `budget`.`category`, `budget`.`amount` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'January Speaker'
SELECT `T1`.`event_name` FROM `event` AS `T1` INNER JOIN `budget` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` WHERE `T2`.`category` = 'Food'
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS `full_name`, `T2`.`amount` FROM `member` AS `T1` INNER JOIN `income` AS `T2` ON `T1`.`member_id` = `T2`.`link_to_member` WHERE `T2`.`date_received` = '2019-09-09'
SELECT `budget`.`category` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `expense`.`expense_description` = 'Posters'
SELECT `T1`.`first_name`, `T1`.`last_name`, `T2`.`college` FROM `member` AS `T1` INNER JOIN `major` AS `T2` ON `T1`.`link_to_major` = `T2`.`major_id` WHERE `T1`.`position` = 'Secretary'
SELECT `event`.`event_name`, SUM(`budget`.`spent`) AS `total_spent` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Speaker Gifts' GROUP BY `event`.`event_name`
SELECT `T2`.`city` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T1`.`first_name` = 'Garrett' AND `T1`.`last_name` = 'Girke'
SELECT `T1`.`first_name` || ' ' || `T1`.`last_name` AS `full_name`, `T1`.`position` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T2`.`city` = 'Lincolnton' AND `T2`.`state` = 'North Carolina' AND `T1`.`zip` = 28092
SELECT COUNT(*) FROM `gasstations` WHERE `gasstations`.`Country` = 'CZE' AND `gasstations`.`Segment` = 'Premium'
SELECT CAST((SELECT COUNT(*) FROM `customers` WHERE `Currency` = 'EUR') AS REAL) / NULLIF((SELECT COUNT(*) FROM `customers` WHERE `Currency` = 'CZK'), 0) AS `ratio`
SELECT `T1`.`CustomerID` FROM `yearmonth` AS `T1` INNER JOIN `customers` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Date` BETWEEN '201201' AND '201212' AND `T2`.`Segment` = 'LAM' ORDER BY `T1`.`Consumption` ASC LIMIT 1
SELECT AVG(`T1`.`Consumption`) / 12 FROM `yearmonth` AS `T1` INNER JOIN `customers` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T2`.`Segment` = 'SME' AND `T1`.`Date` BETWEEN '201301' AND '201312'
SELECT `T1`.`CustomerID`, SUM(`T2`.`Consumption`) AS TotalConsumption FROM `customers` AS `T1` INNER JOIN `yearmonth` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Currency` = 'CZK' AND `T2`.`Date` BETWEEN '201101' AND '201112' GROUP BY `T1`.`CustomerID` ORDER BY TotalConsumption DESC
SELECT COUNT(DISTINCT `T1`.`CustomerID`) FROM `customers` AS `T1` INNER JOIN `yearmonth` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Segment` = 'KAM' AND `T2`.`Consumption` < 30000 AND `T2`.`Date` BETWEEN '201201' AND '201212'
SELECT (SUM(CASE WHEN `C`.`Currency` = 'CZK' THEN `Y`.`Consumption` ELSE 0 END) - SUM(CASE WHEN `C`.`Currency` = 'EUR' THEN `Y`.`Consumption` ELSE 0 END)) AS `ConsumptionDifference` FROM `yearmonth` AS `Y` INNER JOIN `customers` AS `C` ON `Y`.`CustomerID` = `C`.`CustomerID` WHERE `Y`.`Date` BETWEEN '201201' AND '201212'
SELECT strftime('%Y', `T1`.`Date`) AS `Year`, SUM(`Y`.`Consumption`) AS `TotalGasUse` FROM `transactions_1k` AS `T1` INNER JOIN `customers` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` INNER JOIN `yearmonth` AS `Y` ON `T1`.`CustomerID` = `Y`.`CustomerID` WHERE `T2`.`Currency` = 'EUR' GROUP BY `Year` ORDER BY `TotalGasUse` DESC LIMIT 1
SELECT `customers`.`Segment`, SUM(`yearmonth`.`Consumption`) AS `TotalConsumption` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` GROUP BY `customers`.`Segment` ORDER BY `TotalConsumption` ASC LIMIT 1
SELECT SUBSTR(`yearmonth`.`Date`, 1, 4) AS `Year`, SUM(`yearmonth`.`Consumption`) AS `TotalConsumption` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' GROUP BY `Year` ORDER BY `TotalConsumption` DESC LIMIT 1
SELECT SUBSTR(`yearmonth`.`Date`, 5, 2) AS `Month`, SUM(`yearmonth`.`Consumption`) AS `TotalConsumption` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` LIKE '2013%' AND `customers`.`Segment` = 'SME' GROUP BY `Month` ORDER BY `TotalConsumption` DESC LIMIT 1
SELECT (SME_avg - LAM_avg) AS SME_LAM_diff, (LAM_avg - KAM_avg) AS LAM_KAM_diff, (KAM_avg - SME_avg) AS KAM_SME_diff FROM ( SELECT AVG(T1.Consumption) AS SME_avg FROM `yearmonth` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` BETWEEN '201301' AND '201312' AND T2.`Segment` = 'SME' AND T1.`Consumption` IS NOT NULL AND T1.`CustomerID` = (SELECT T3.`CustomerID` FROM `yearmonth` AS T3 INNER JOIN `customers` AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Segment` = 'SME' AND T3.`Date` BETWEEN '201301' AND '201312' ORDER BY T3.`Consumption` ASC LIMIT 1) UNION ALL SELECT AVG(T1.`Consumption`) AS LAM_avg FROM `yearmonth` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` BETWEEN '201301' AND '201312' AND T2.`Segment` = 'LAM' AND T1.`Consumption` IS NOT NULL AND T1.`CustomerID` = (SELECT T3.`CustomerID` FROM `yearmonth` AS T3 INNER JOIN `customers` AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Segment` = 'LAM' AND T3.`Date` BETWEEN '201301' AND '201312' ORDER BY T3.`Consumption` ASC LIMIT 1) UNION ALL SELECT AVG(T1.`Consumption`) AS KAM_avg FROM `yearmonth` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` BETWEEN '201301' AND '201312' AND T2.`Segment` = 'KAM' AND T1.`Consumption` IS NOT NULL AND T1.`CustomerID` = (SELECT T3.`CustomerID` FROM `yearmonth` AS T3 INNER JOIN `customers` AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Segment` = 'KAM' AND T3.`Date` BETWEEN '201301' AND '201312' ORDER BY T3.`Consumption` ASC LIMIT 1) ) AS averages;
SELECT `c`.`Segment`, ((SUM(CASE WHEN `y`.`Date` = '201312' THEN `y`.`Consumption` ELSE 0 END) - SUM(CASE WHEN `y`.`Date` = '201201' THEN `y`.`Consumption` ELSE 0 END)) / NULLIF(SUM(CASE WHEN `y`.`Date` = '201201' THEN `y`.`Consumption` ELSE 0 END), 0)) * 100 AS `PercentageIncrease` FROM `yearmonth` AS `y` INNER JOIN `customers` AS `c` ON `y`.`CustomerID` = `c`.`CustomerID` WHERE `y`.`Date` BETWEEN '201201' AND '201312' AND `c`.`Currency` = 'EUR' AND `c`.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY `c`.`Segment` ORDER BY `PercentageIncrease` ASC;
SELECT SUM(`Consumption`) FROM `yearmonth` WHERE `CustomerID` = 6 AND `Date` BETWEEN '201308' AND '201311'
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `Segment` = 'Discount' AND `Country` = 'CZE') - (SELECT COUNT(*) FROM `gasstations` WHERE `Segment` = 'Discount' AND `Country` = 'SVK') AS `more_discount_gas_stations`
SELECT (T1.Consumption - T2.Consumption) AS ConsumptionDifference FROM `yearmonth` AS T1, `yearmonth` AS T2 WHERE T1.`CustomerID` = 7 AND T2.`CustomerID` = 5 AND T1.`Date` = '201304' AND T2.`Date` = '201304'
SELECT COUNT(CASE WHEN `T2`.`Currency` = 'CZK' THEN 1 END) - COUNT(CASE WHEN `T2`.`Currency` = 'EUR' THEN 1 END) AS more_SMEs FROM `customers` AS `T1` INNER JOIN `transactions_1k` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Segment` = 'SME'
SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1
SELECT `T1`.`CustomerID`, SUM(`T2`.`Consumption`) AS `TotalConsumption` FROM `customers` AS `T1` INNER JOIN `yearmonth` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Segment` = 'KAM' GROUP BY `T1`.`CustomerID` ORDER BY `TotalConsumption` DESC LIMIT 1
SELECT SUM(`yearmonth`.`Consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' AND `yearmonth`.`Date` = '201305'
SELECT CAST(COUNT(CASE WHEN `T2`.`Consumption` > 46.73 THEN 1 END) AS REAL) * 100 / COUNT(`T1`.`CustomerID`) FROM `customers` AS `T1` INNER JOIN `yearmonth` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Segment` = 'LAM'
SELECT `Country`, COUNT(`GasStationID`) AS `TotalValueForMoneyGasStations` FROM `gasstations` WHERE `Segment` = 'Value for money' GROUP BY `Country` ORDER BY `TotalValueForMoneyGasStations` DESC
SELECT (COUNT(CASE WHEN `Currency` = 'EUR' THEN 1 END) * 100.0 / COUNT(*)) AS `Percentage_of_KAM_using_Euro` FROM `customers` WHERE `Segment` = 'KAM'
SELECT CAST(COUNT(CASE WHEN `T1`.`Consumption` > 528.3 THEN 1 END) AS REAL) * 100 / COUNT(DISTINCT `T1`.`CustomerID`) FROM `yearmonth` AS `T1` WHERE `T1`.`Date` = '201202' AND `T1`.`Consumption` IS NOT NULL
SELECT (COUNT(CASE WHEN `Segment` = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS `Percentage` FROM `gasstations` WHERE `Country` = 'SVK'
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' GROUP BY `CustomerID` ORDER BY SUM(`Consumption`) DESC LIMIT 1
SELECT T1.`Segment`, SUM(T2.`Consumption`) AS `TotalConsumption` FROM `customers` AS T1 INNER JOIN `yearmonth` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '201309' GROUP BY T1.`Segment` ORDER BY `TotalConsumption` ASC LIMIT 1
SELECT `T1`.`CustomerID` FROM `yearmonth` AS `T1` INNER JOIN `customers` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Date` = '201206' AND `T2`.`Segment` = 'SME' ORDER BY `T1`.`Consumption` ASC LIMIT 1
SELECT MAX(`Consumption`) FROM `yearmonth` WHERE `Date` LIKE '2012%'
SELECT (SUM(`yearmonth`.`Consumption`) / 12) AS `MonthlyConsumption` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' GROUP BY `customers`.`CustomerID` ORDER BY `MonthlyConsumption` DESC LIMIT 1
SELECT DISTINCT `products`.`Description` FROM `yearmonth` INNER JOIN `transactions_1k` ON `yearmonth`.`CustomerID` = `transactions_1k`.`CustomerID` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `yearmonth`.`Date` = '201309'
SELECT DISTINCT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` LIKE '2013-06%'}
SELECT DISTINCT `T2`.`ChainID` FROM `transactions_1k` AS `T1` INNER JOIN `gasstations` AS `T2` ON `T1`.`GasStationID` = `T2`.`GasStationID` INNER JOIN `customers` AS `T3` ON `T1`.`CustomerID` = `T3`.`CustomerID` WHERE `T3`.`Currency` = 'EUR'
SELECT `products`.`Description` FROM `products` INNER JOIN `transactions_1k` ON `products`.`ProductID` = `transactions_1k`.`ProductID` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR'
SELECT AVG(`Amount` * `Price`) AS average_total_price FROM `transactions_1k` WHERE `Date` LIKE '2012-01%'
SELECT COUNT(DISTINCT `T1`.`CustomerID`) FROM `customers` AS `T1` INNER JOIN `yearmonth` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Currency` = 'EUR' AND `T2`.`Consumption` > 1000
SELECT `products`.`Description` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `gasstations`.`Country` = 'CZE'
SELECT DISTINCT `transactions_1k`.`Time` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`ChainID` = 11
SELECT COUNT(t1.TransactionID) FROM `transactions_1k` AS t1 INNER JOIN `gasstations` AS t2 ON t1.GasStationID = t2.GasStationID WHERE t2.Country = 'CZE' AND t1.Price > 1000
SELECT COUNT(*) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE' AND T1.`Date` > '2012-01-01'
SELECT CAST(AVG(T1.Amount * T1.Price) AS REAL) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'
SELECT AVG(`T1`.`Amount` * `T1`.`Price`) AS average_total_price FROM `transactions_1k` AS `T1` INNER JOIN `customers` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T2`.`Currency` = 'EUR'
SELECT `customers`.`CustomerID`, SUM(`transactions_1k`.`Price`) AS TotalPaid FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-25' GROUP BY `customers`.`CustomerID` ORDER BY TotalPaid DESC LIMIT 1
SELECT `T2`.`Country` FROM `transactions_1k` AS `T1` INNER JOIN `gasstations` AS `T2` ON `T1`.`GasStationID` = `T2`.`GasStationID` WHERE `T1`.`Date` = '2012-08-25' ORDER BY `T1`.`TransactionID` ASC LIMIT 1
SELECT `customers`.`Currency` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Time` = '16:25:00'
SELECT `customers`.`Segment` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-23' AND `transactions_1k`.`Time` = '21:20:00'
SELECT COUNT(*) FROM `transactions_1k` AS `T1` INNER JOIN `customers` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`Date` = '2012-08-26' AND `T1`.`Time` < '13:00:00' AND `T2`.`Currency` = 'EUR'
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT MIN(`CustomerID`) FROM `customers`)
SELECT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Time` = '12:42:00'
SELECT `ProductID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00'
SELECT `Date`, `Consumption` FROM `yearmonth` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Price` = 124.05 AND `Date` = '2012-08-24') AND `Date` = '201201'
SELECT COUNT(*) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`Date` = '2012-08-26' AND T1.`Time` BETWEEN '08:00:00' AND '09:00:00' AND T2.`Country` = 'CZE'
SELECT `customers`.`Currency` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Consumption` = 214582.17 AND `yearmonth`.`Date` LIKE '201306%'
SELECT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`CardID` = 667467
SELECT `gasstations`.`Country` FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND (`transactions_1k`.`Amount` * `transactions_1k`.`Price`) = 548.4
SELECT CAST(COUNT(DISTINCT CASE WHEN `c`.`Currency` = 'EUR' THEN `c`.`CustomerID` END) AS REAL) * 100 / COUNT(DISTINCT `t`.`CustomerID`) AS percentage_eur_customers FROM `transactions_1k` AS `t` INNER JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` WHERE `t`.`Date` = '2012-08-25'
SELECT (T2.Consumption - T3.Consumption) / T2.Consumption AS consumption_decrease_rate FROM `transactions_1k` AS T1 INNER JOIN `yearmonth` AS T2 ON T1.CustomerID = T2.CustomerID AND T2.Date = '201212' INNER JOIN `yearmonth` AS T3 ON T1.CustomerID = T3.CustomerID AND T3.Date = '201301' WHERE T1.Price = 634.8 AND T1.Date = '2012-08-25' AND T2.Consumption IS NOT NULL AND T3.Consumption IS NOT NULL
SELECT T2.`GasStationID`, SUM(T1.`Amount` * T1.`Price`) AS `TotalRevenue` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` GROUP BY T2.`GasStationID` ORDER BY `TotalRevenue` DESC LIMIT 1
SELECT (CAST(COUNT(CASE WHEN `Segment` = 'Premium' THEN 1 END) AS REAL) * 100 / COUNT(*)) AS `premium_percentage` FROM `gasstations` WHERE `Country` = 'SVK'
SELECT SUM(`Amount`) AS `Total_Spent`, SUM(CASE WHEN `yearmonth`.`Date` = '201201' THEN `transactions_1k`.`Amount` ELSE 0 END) AS `Total_Spent_January` FROM `transactions_1k` JOIN `yearmonth` ON `transactions_1k`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `transactions_1k`.`CustomerID` = 38508
SELECT `T2`.`Description` FROM `transactions_1k` AS `T1` INNER JOIN `products` AS `T2` ON `T1`.`ProductID` = `T2`.`ProductID` GROUP BY `T1`.`ProductID` ORDER BY SUM(`T1`.`Amount`) DESC LIMIT 5
SELECT T1.CustomerID, CAST(SUM(T1.Amount * T1.Price) AS REAL) AS TotalSpending, CAST(SUM(T1.Price) AS REAL) / NULLIF(SUM(T1.Amount), 0) AS AveragePricePerItem, T2.Currency FROM `transactions_1k` AS T1 INNER JOIN `customers` AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY TotalSpending DESC LIMIT 1
SELECT `T3`.`Country` FROM `transactions_1k` AS `T1` INNER JOIN `products` AS `T2` ON `T1`.`ProductID` = `T2`.`ProductID` INNER JOIN `gasstations` AS `T3` ON `T1`.`GasStationID` = `T3`.`GasStationID` WHERE `T2`.`ProductID` = 2 ORDER BY `T1`.`Price` DESC LIMIT 1
SELECT `T2`.`Consumption` FROM `transactions_1k` AS `T1` INNER JOIN `yearmonth` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T1`.`ProductID` = 5 AND (`T1`.`Price` / `T1`.`Amount`) > 29.00 AND `T2`.`Date` = '201208'
