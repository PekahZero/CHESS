{
    "question": "What are airport names at City 'Aberdeen'?",
    "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "What are the names of airports in Aberdeen?",
    "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "How many flights depart from 'APG'?",
    "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "Count the number of flights departing from 'APG'.",
    "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "How many flights have destination ATO?",
    "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "db_id": "flight_2"
}{
    "question": "Count the number of flights into ATO.",
    "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "db_id": "flight_2"
}{
    "question": "How many flights depart from City Aberdeen?",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "Return the number of flights departing from Aberdeen.",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "How many flights arriving in Aberdeen city?",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "Return the number of flights arriving in Aberdeen.",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "How many flights fly from Aberdeen to Ashley?",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "How many flights does airline 'JetBlue Airways' have?",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "db_id": "flight_2"
}{
    "question": "Give the number of Jetblue Airways flights.",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "db_id": "flight_2"
}{
    "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "db_id": "flight_2"
}{
    "question": "Count the number of United Airlines flights arriving in ASY Airport.",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "db_id": "flight_2"
}{
    "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "db_id": "flight_2"
}{
    "question": "Return the number of United Airlines flights leaving from AHD Airport.",
    "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "db_id": "flight_2"
}{
    "question": "How many United Airlines flights go to City 'Aberdeen'?",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "db_id": "flight_2"
}{
    "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
    "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "db_id": "flight_2"
}{
    "question": "Which city has most number of arriving flights?",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "Which city has the most frequent destination airport?",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "Which city has most number of departing flights?",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "Which city is the most frequent source airport?",
    "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "What is the code of airport that has the highest number of flights?",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "What is the airport code of the airport with the most flights?",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "What is the code of airport that has fewest number of flights?",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "Give the code of the airport with the least flights.",
    "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "Which airline has most number of flights?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "What airline serves the most flights?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
    "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
    "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "db_id": "flight_2"
}{
    "question": "What are airlines that have some flight departing from airport 'AHD'?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "db_id": "flight_2"
}{
    "question": "Which airlines have a flight with source airport AHD?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "db_id": "flight_2"
}{
    "question": "What are airlines that have flights arriving at airport 'AHD'?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "db_id": "flight_2"
}{
    "question": "Which airlines have a flight with destination airport AHD?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "db_id": "flight_2"
}{
    "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "db_id": "flight_2"
}{
    "question": "Which airlines have departing flights from both APG and CVO airports?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "db_id": "flight_2"
}{
    "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "Which airlines have departures from CVO but not from APG airports?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "Find all airlines that have at least 10 flights.",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "db_id": "flight_2"
}{
    "question": "Which airlines have at least 10 flights?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "db_id": "flight_2"
}{
    "question": "Find all airlines that have fewer than 200 flights.",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "db_id": "flight_2"
}{
    "question": "Which airlines have less than 200 flights?",
    "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "db_id": "flight_2"
}{
    "question": "What are flight numbers of Airline \"United Airlines\"?",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "db_id": "flight_2"
}{
    "question": "Which flight numbers correspond to United Airlines flights?",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "db_id": "flight_2"
}{
    "question": "What are flight numbers of flights departing from Airport \"APG\"?",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "Give the flight numbers of flights leaving from APG.",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "Give the flight numbers of flights landing at APG.",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "db_id": "flight_2"
}{
    "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "Give the flight numbers of flights leaving from Aberdeen.",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "Give the flight numbers of flights arriving in Aberdeen.",
    "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "db_id": "flight_2"
}{
    "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
    "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "db_id": "flight_2"
}{
    "question": "How many flights land in Aberdeen or Abilene?",
    "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "db_id": "flight_2"
}{
    "question": "Find the name of airports which do not have any flight in and out.",
    "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "db_id": "flight_2"
}{
    "question": "Which airports do not have departing or arriving flights?",
    "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "db_id": "flight_2"
}{
    "question": "How many employees are there?",
    "query": "SELECT count(*) FROM employee",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Count the number of employees",
    "query": "SELECT count(*) FROM employee",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Sort employee names by their age in ascending order.",
    "query": "SELECT name FROM employee ORDER BY age",
    "db_id": "employee_hire_evaluation"
}{
    "question": "List the names of employees and sort in ascending order of age.",
    "query": "SELECT name FROM employee ORDER BY age",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What is the number of employees from each city?",
    "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Count the number of employees for each city.",
    "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which cities do more than one employee under age 30 come from?",
    "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the cities that have more than one employee under age 30.",
    "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the number of shops in each location.",
    "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "db_id": "employee_hire_evaluation"
}{
    "question": "How many shops are there in each location?",
    "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the manager name and district of the shop whose number of products is the largest.",
    "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What are the manager name and district of the shop that sells the largest number of products?",
    "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "find the minimum and maximum number of products of all stores.",
    "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What are the minimum and maximum number of products across all the shops?",
    "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Return the name, location and district of all shops in descending order of number of products.",
    "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
    "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the names of stores whose number products is more than the average number of products.",
    "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which shops' number products is above the average? Give me the shop names.",
    "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "db_id": "employee_hire_evaluation"
}{
    "question": "find the name of employee who was awarded the most times in the evaluation.",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which employee received the most awards in evaluations? Give me the employee name.",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the name of the employee who got the highest one time bonus.",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which employee received the biggest bonus? Give me the employee name.",
    "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the names of employees who never won any award in the evaluation.",
    "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What are the names of the employees who never received any evaluation?",
    "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What is the name of the shop that is hiring the largest number of employees?",
    "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which shop has the most employees? Give me the shop name.",
    "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the name of the shops that do not hire any employee.",
    "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which shops run with no employees? Find the shop names",
    "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the number of employees hired in each shop; show the shop name as well.",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "db_id": "employee_hire_evaluation"
}{
    "question": "For each shop, return the number of employees working there and the name of the shop.",
    "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What is total bonus given in all evaluations?",
    "query": "SELECT sum(bonus) FROM evaluation",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the total amount of bonus given in all the evaluations.",
    "query": "SELECT sum(bonus) FROM evaluation",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Give me all the information about hiring.",
    "query": "SELECT * FROM hiring",
    "db_id": "employee_hire_evaluation"
}{
    "question": "What is all the information about hiring?",
    "query": "SELECT * FROM hiring",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
    "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
    "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "db_id": "employee_hire_evaluation"
}{
    "question": "How many different store locations are there?",
    "query": "SELECT count(DISTINCT LOCATION) FROM shop",
    "db_id": "employee_hire_evaluation"
}{
    "question": "Count the number of distinct store locations.",
    "query": "SELECT count(DISTINCT LOCATION) FROM shop",
    "db_id": "employee_hire_evaluation"
}{
    "question": "How many documents do we have?",
    "query": "SELECT count(*) FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of documents.",
    "query": "SELECT count(*) FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "List document IDs, document names, and document descriptions for all documents.",
    "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids, names, and descriptions for all documents?",
    "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the document name and template id for document with description with the letter 'w' in it?",
    "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the names and template ids for documents that contain the letter w in their description.",
    "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
    "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
    "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many different templates do all document use?",
    "query": "SELECT count(DISTINCT template_id) FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of different templates used for documents.",
    "query": "SELECT count(DISTINCT template_id) FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many documents are using the template with type code 'PPT'?",
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of documents that use the PPT template type.",
    "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all template ids and number of documents using each template.",
    "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are all different template ids used for documents, and how many times were each of them used?",
    "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the id and type code for the template used by the most documents?",
    "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the id and type code of the template that is used for the greatest number of documents.",
    "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show ids for all templates that are used by more than one document.",
    "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the template ids of any templates used in more than a single document?",
    "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show ids for all templates not used by any document.",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids for templates that are not used in any documents?",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many templates do we have?",
    "query": "SELECT count(*) FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of templates.",
    "query": "SELECT count(*) FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show template ids, version numbers, and template type codes for all templates.",
    "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids, version numbers, and type codes for each template?",
    "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all distinct template type codes for all templates.",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the different template type codes?",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids of templates with template type code PP or PPT?",
    "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the ids of templates that have the code PP or PPT.",
    "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many templates have template type code CV?",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of templates of the type CV.",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the version number and template type code for the template with version number later than 5?",
    "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
    "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all template type codes and number of templates for each.",
    "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the different template type codes, and how many templates correspond to each?",
    "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Which template type code has most number of templates?",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the type code of the template type that the most templates belong to.",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all template type codes with less than three templates.",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the codes of template types that have fewer than 3 templates?",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What the smallest version number and its template type code?",
    "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the lowest version number, along with its corresponding template type code.",
    "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the template type code of the template used by document with the name \"Data base\"?",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the template type code of the template that is used by a document named Data base.",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all document names using templates with template type code BK.",
    "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the names of documents that use templates with the code BK?",
    "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all template type codes and the number of documents using each type.",
    "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the different template type codes, and how many documents use each type?",
    "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Which template type code is used by most number of documents?",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the code of the template type that is most commonly used in documents.",
    "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all template type codes that are not used by any document.",
    "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the codes of template types that are not used for any document?",
    "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all template type codes and descriptions.",
    "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the type codes and descriptions for all template types?",
    "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the template type descriptions for template type code \"AD\".",
    "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the template type description of the template type with the code AD.",
    "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the template type code for template type description \"Book\".",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the type code of the template type with the description \"Book\".",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the distinct template type descriptions for the templates ever used by any document?",
    "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the different descriptions for templates that have been used in a document.",
    "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the template ids with template type description \"Presentation\".",
    "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the ids corresponding to templates with the description 'Presentation'.",
    "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many paragraphs in total?",
    "query": "SELECT count(*) FROM Paragraphs",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of paragraphs.",
    "query": "SELECT count(*) FROM Paragraphs",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many paragraphs for the document with name 'Summer Show'?",
    "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Count the number of paragraphs in the document named 'Summer Show'.",
    "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show paragraph details for paragraph with text 'Korea ' .",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the details for the paragraph that includes the text 'Korea ' ?",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
    "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
    "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all paragraph texts for the document \"Customer reviews\".",
    "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
    "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
    "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
    "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show all document ids, names and the number of paragraphs in each document.",
    "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
    "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "List all document ids with at least two paragraphs.",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids of documents that have 2 or more paragraphs?",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the document id and name with greatest number of paragraphs?",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the id and name of the document with the most paragraphs.",
    "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the document id with least number of paragraphs?",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Return the id of the document with the fewest paragraphs.",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What is the document id with 1 to 2 paragraphs?",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Give the ids of documents that have between one and two paragraphs.",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
    "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
    "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "db_id": "cre_Doc_Template_Mgt"
}{
    "question": "How many teachers are there?",
    "query": "SELECT count(*) FROM teacher",
    "db_id": "course_teach"
}{
    "question": "What is the total count of teachers?",
    "query": "SELECT count(*) FROM teacher",
    "db_id": "course_teach"
}{
    "question": "List the names of teachers in ascending order of age.",
    "query": "SELECT Name FROM teacher ORDER BY Age ASC",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers ordered by ascending age?",
    "query": "SELECT Name FROM teacher ORDER BY Age ASC",
    "db_id": "course_teach"
}{
    "question": "What are the age and hometown of teachers?",
    "query": "SELECT Age ,  Hometown FROM teacher",
    "db_id": "course_teach"
}{
    "question": "What is the age and hometown of every teacher?",
    "query": "SELECT Age ,  Hometown FROM teacher",
    "db_id": "course_teach"
}{
    "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "db_id": "course_teach"
}{
    "question": "Show the name of teachers aged either 32 or 33?",
    "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers who are aged either 32 or 33?",
    "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "db_id": "course_teach"
}{
    "question": "What is the hometown of the youngest teacher?",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "db_id": "course_teach"
}{
    "question": "Where is the youngest teacher from?",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "db_id": "course_teach"
}{
    "question": "Show different hometown of teachers and the number of teachers from each hometown.",
    "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "db_id": "course_teach"
}{
    "question": "For each hometown, how many teachers are there?",
    "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "db_id": "course_teach"
}{
    "question": "List the most common hometown of teachers.",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "course_teach"
}{
    "question": "What is the most commmon hometowns for teachers?",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "course_teach"
}{
    "question": "Show the hometowns shared by at least two teachers.",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "db_id": "course_teach"
}{
    "question": "What are the towns from which at least two teachers come from?",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "db_id": "course_teach"
}{
    "question": "Show names of teachers and the courses they are arranged to teach.",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "db_id": "course_teach"
}{
    "question": "What is the name of each teacher and what course they teach?",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "db_id": "course_teach"
}{
    "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
    "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "db_id": "course_teach"
}{
    "question": "Show the name of the teacher for the math course.",
    "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "db_id": "course_teach"
}{
    "question": "What are the names of the people who teach math courses?",
    "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "db_id": "course_teach"
}{
    "question": "Show names of teachers and the number of courses they teach.",
    "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers and how many courses do they teach?",
    "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "db_id": "course_teach"
}{
    "question": "Show names of teachers that teach at least two courses.",
    "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers who teach at least two courses?",
    "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "db_id": "course_teach"
}{
    "question": "List the names of teachers who have not been arranged to teach courses.",
    "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "db_id": "course_teach"
}{
    "question": "What are the names of the teachers whose courses have not been arranged?",
    "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "db_id": "course_teach"
}{
    "question": "How many visitors below age 30 are there?",
    "query": "SELECT count(*) FROM visitor WHERE age  <  30",
    "db_id": "museum_visit"
}{
    "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
    "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "db_id": "museum_visit"
}{
    "question": "What is the average age of the visitors whose membership level is not higher than 4?",
    "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "db_id": "museum_visit"
}{
    "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
    "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "db_id": "museum_visit"
}{
    "question": "Find the id and name of the museum that has the most staff members?",
    "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "db_id": "museum_visit"
}{
    "question": "Find the average number of staff working for the museums that were open before 2009.",
    "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "db_id": "museum_visit"
}{
    "question": "What are the opening year and staff number of the museum named Plaza Museum?",
    "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "db_id": "museum_visit"
}{
    "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
    "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "db_id": "museum_visit"
}{
    "question": "find the id, name and age for visitors who visited some museums more than once.",
    "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "db_id": "museum_visit"
}{
    "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
    "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "db_id": "museum_visit"
}{
    "question": "What are the id and name of the museum visited most times?",
    "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "db_id": "museum_visit"
}{
    "question": "What is the name of the museum that had no visitor yet?",
    "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "db_id": "museum_visit"
}{
    "question": "Find the name and age of the visitor who bought the most tickets at once.",
    "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "db_id": "museum_visit"
}{
    "question": "What are the average and maximum number of tickets bought in all visits?",
    "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "db_id": "museum_visit"
}{
    "question": "What is the total ticket expense of the visitors whose membership level is 1?",
    "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "db_id": "museum_visit"
}{
    "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
    "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "db_id": "museum_visit"
}{
    "question": "Find the number of visitors who did not visit any museum opened after 2010.",
    "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "db_id": "museum_visit"
}{
    "question": "How many museums were opened after 2013 or before 2008?",
    "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "db_id": "museum_visit"
}{
    "question": "Find the total number of players.",
    "query": "SELECT count(*) FROM players",
    "db_id": "wta_1"
}{
    "question": "How many players are there?",
    "query": "SELECT count(*) FROM players",
    "db_id": "wta_1"
}{
    "question": "Find the total number of matches.",
    "query": "SELECT count(*) FROM matches",
    "db_id": "wta_1"
}{
    "question": "Count the number of matches.",
    "query": "SELECT count(*) FROM matches",
    "db_id": "wta_1"
}{
    "question": "List the first name and birth date of all players from the country with code USA.",
    "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "db_id": "wta_1"
}{
    "question": "What are the first names and birth dates of players from the USA?",
    "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "db_id": "wta_1"
}{
    "question": "Find the average age of losers and winners of all matches.",
    "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "db_id": "wta_1"
}{
    "question": "What are the average ages of losers and winners across matches?",
    "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "db_id": "wta_1"
}{
    "question": "Find the average rank of winners in all matches.",
    "query": "SELECT avg(winner_rank) FROM matches",
    "db_id": "wta_1"
}{
    "question": "What is the average rank for winners in all matches?",
    "query": "SELECT avg(winner_rank) FROM matches",
    "db_id": "wta_1"
}{
    "question": "Find the highest rank of losers in all matches.",
    "query": "SELECT min(loser_rank) FROM matches",
    "db_id": "wta_1"
}{
    "question": "What is the best rank of losers across all matches?",
    "query": "SELECT min(loser_rank) FROM matches",
    "db_id": "wta_1"
}{
    "question": "find the number of distinct country codes of all players.",
    "query": "SELECT count(DISTINCT country_code) FROM players",
    "db_id": "wta_1"
}{
    "question": "How many distinct countries do players come from?",
    "query": "SELECT count(DISTINCT country_code) FROM players",
    "db_id": "wta_1"
}{
    "question": "Find the number of distinct name of losers.",
    "query": "SELECT count(DISTINCT loser_name) FROM matches",
    "db_id": "wta_1"
}{
    "question": "How many different loser names are there?",
    "query": "SELECT count(DISTINCT loser_name) FROM matches",
    "db_id": "wta_1"
}{
    "question": "Find the name of tourney that has more than 10 matches.",
    "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "db_id": "wta_1"
}{
    "question": "What are the names of tournaments that have more than 10 matches?",
    "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "db_id": "wta_1"
}{
    "question": "List the names of all winners who played in both 2013 and 2016.",
    "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "db_id": "wta_1"
}{
    "question": "What are the names of players who won in both 2013 and 2016?",
    "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "db_id": "wta_1"
}{
    "question": "List the number of all matches who played in years of 2013 or 2016.",
    "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "db_id": "wta_1"
}{
    "question": "How many matches were played in 2013 or 2016?",
    "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "db_id": "wta_1"
}{
    "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "db_id": "wta_1"
}{
    "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "db_id": "wta_1"
}{
    "question": "Find the first name and country code of the oldest player.",
    "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What is the first name and country code of the oldest player?",
    "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "List the first and last name of all players in the order of birth date.",
    "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "db_id": "wta_1"
}{
    "question": "What are the full names of all players, sorted by birth date?",
    "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "db_id": "wta_1"
}{
    "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
    "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "db_id": "wta_1"
}{
    "question": "What are the full names of all left handed players, in order of birth date?",
    "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "db_id": "wta_1"
}{
    "question": "Find the first name and country code of the player who did the most number of tours.",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What is the first name and country code of the player with the most tours?",
    "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Find the year that has the most number of matches.",
    "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Which year had the most matches?",
    "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Find the name and rank points of the winner who won the most times.",
    "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
    "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "find the names of loser and winner who played in the match with greatest number of minutes.",
    "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What are the names of the winner and loser who played in the longest match?",
    "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Find the average ranking for each player and their first name.",
    "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "db_id": "wta_1"
}{
    "question": "What are the first names of all players, and their average rankings?",
    "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "db_id": "wta_1"
}{
    "question": "Find the total ranking points for each player and their first name.",
    "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "db_id": "wta_1"
}{
    "question": "What are the first names of all players, and their total ranking points?",
    "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "db_id": "wta_1"
}{
    "question": "find the number of players for each country.",
    "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "db_id": "wta_1"
}{
    "question": "How many players are from each country?",
    "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "db_id": "wta_1"
}{
    "question": "find the code of the country where has the greatest number of players.",
    "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What is the code of the country with the most players?",
    "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Find the codes of countries that have more than 50 players.",
    "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "db_id": "wta_1"
}{
    "question": "What are the codes of countries with more than 50 players?",
    "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "db_id": "wta_1"
}{
    "question": "Find the total number of tours for each ranking date.",
    "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "db_id": "wta_1"
}{
    "question": "How many total tours were there for each ranking date?",
    "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "db_id": "wta_1"
}{
    "question": "Find the number of matches happened in each year.",
    "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "db_id": "wta_1"
}{
    "question": "How many matches were played in each year?",
    "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "db_id": "wta_1"
}{
    "question": "Find the name and rank of the 3 youngest winners across all matches.",
    "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "db_id": "wta_1"
}{
    "question": "What are the names and ranks of the three youngest winners across all matches?",
    "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "db_id": "wta_1"
}{
    "question": "How many different winners both participated in the WTA Championships and were left handed?",
    "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "db_id": "wta_1"
}{
    "question": "Find the number of left handed winners who participated in the WTA Championships.",
    "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "db_id": "wta_1"
}{
    "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
    "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
    "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "db_id": "wta_1"
}{
    "question": "Find the number of players for each hand type.",
    "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "db_id": "wta_1"
}{
    "question": "How many players are there for each hand type?",
    "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "db_id": "wta_1"
}{
    "question": "How many ships ended up being 'Captured'?",
    "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "db_id": "battle_death"
}{
    "question": "List the name and tonnage ordered by in descending alphaetical order for the names.",
    "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "db_id": "battle_death"
}{
    "question": "List the name, date and result of each battle.",
    "query": "SELECT name ,  date FROM battle",
    "db_id": "battle_death"
}{
    "question": "What is maximum and minimum death toll caused each time?",
    "query": "SELECT max(killed) ,  min(killed) FROM death",
    "db_id": "battle_death"
}{
    "question": "What is the average number of injuries caused each time?",
    "query": "SELECT avg(injured) FROM death",
    "db_id": "battle_death"
}{
    "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
    "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "db_id": "battle_death"
}{
    "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
    "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "db_id": "battle_death"
}{
    "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
    "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "db_id": "battle_death"
}{
    "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
    "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "db_id": "battle_death"
}{
    "question": "What is the ship id and name that caused most total injuries?",
    "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "battle_death"
}{
    "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
    "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "db_id": "battle_death"
}{
    "question": "How many different results are there for the battles?",
    "query": "SELECT count(DISTINCT RESULT) FROM battle",
    "db_id": "battle_death"
}{
    "question": "How many battles did not lose any ship with tonnage '225'?",
    "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "db_id": "battle_death"
}{
    "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
    "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "db_id": "battle_death"
}{
    "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
    "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "db_id": "battle_death"
}{
    "question": "What are the notes of the death events which has substring 'East'?",
    "query": "SELECT note FROM death WHERE note LIKE '%East%'",
    "db_id": "battle_death"
}{
    "question": "what are all the addresses including line 1 and line 2?",
    "query": "SELECT line_1 ,  line_2 FROM addresses",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the first and second line for all addresses?",
    "query": "SELECT line_1 ,  line_2 FROM addresses",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many courses in total are listed?",
    "query": "SELECT count(*) FROM Courses",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many courses are there?",
    "query": "SELECT count(*) FROM Courses",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How is the math course described?",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the descriptions for all the math courses?",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the zip code of the address in the city Port Chelsea?",
    "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the zip code for Port Chelsea?",
    "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Which department offers the most number of degrees? List department name and id.",
    "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the name and id of the department with the most number of degrees ?",
    "query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many departments offer any degree?",
    "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many different departments offer degrees?",
    "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many different degree names are offered?",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many different degrees are offered?",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many degrees does the engineering department offer?",
    "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many degrees does the engineering department have?",
    "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the names and descriptions of all the sections?",
    "query": "SELECT section_name ,  section_description FROM Sections",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the names and descriptions for all the sections?",
    "query": "SELECT section_name ,  section_description FROM Sections",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the names and id of courses having at most 2 sections?",
    "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the names and ids of every course with less than 2 sections?",
    "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "db_id": "student_transcripts_tracking"
}{
    "question": "List the section_name in reversed lexicographical order.",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the names of the sections in reverse alphabetical order?",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the semester which most student registered in? Show both the name and the id.",
    "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "For each semester, what is the name and id of the one with the most students registered?",
    "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the description of the department whose name has the substring the computer?",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the department description for the one whose name has the word computer?",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
    "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
    "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
    "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
    "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Find the kind of program which most number of students are enrolled in?",
    "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the degree summary name that has the most number of students enrolled?",
    "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
    "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the program id and the summary of the degree that has the most students enrolled?",
    "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
    "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Which semesters do not have any student enrolled? List the semester name.",
    "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the name of the semester with no students enrolled?",
    "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are all the course names of the courses which ever have students enrolled in?",
    "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the names of all courses that have some students enrolled?",
    "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What's the name of the course with most number of enrollments?",
    "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the name of the course with the most students enrolled?",
    "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
    "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
    "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Show the date and id of the transcript with at least 2 course results.",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the date and id of the transcript with at least 2 courses listed?",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
    "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the mobile phone number of the student named Timmothy Ward ?",
    "query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Who is the first student to register? List the first name, middle name and last name.",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the first, middle, and last name of the first student to register?",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the first, middle, and last name of the earliest school graduate?",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Whose permanent address is different from his or her current address? List his or her first name.",
    "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the first name of the student whose permanent address is different from his or her current one?",
    "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Which address holds the most number of students currently? List the address id and all lines.",
    "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the id, line 1, and line 2 of the address with the most students?",
    "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "On average, when were the transcripts printed?",
    "query": "SELECT avg(transcript_date) FROM Transcripts",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the average transcript date?",
    "query": "SELECT avg(transcript_date) FROM Transcripts",
    "db_id": "student_transcripts_tracking"
}{
    "question": "When is the first transcript released? List the date and details.",
    "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the earliest date of a transcript release, and what details can you tell me?",
    "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many transcripts are released?",
    "query": "SELECT count(*) FROM Transcripts",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many transcripts are listed?",
    "query": "SELECT count(*) FROM Transcripts",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the last transcript release date?",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "When was the last transcript released?",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
    "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
    "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Show the date of the transcript which shows the least number of results, also list the id.",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the date and id of the transcript with the least number of results?",
    "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
    "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
    "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "How many different addresses do the students currently live?",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the different addresses that have students living there?",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "db_id": "student_transcripts_tracking"
}{
    "question": "List all the student details in reversed lexicographical order.",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What other details can you tell me about students in reverse alphabetical order?",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Describe the section h.",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What is the description for the section named h?",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
    "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
    "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "db_id": "student_transcripts_tracking"
}{
    "question": "List the title of all cartoons in alphabetical order.",
    "query": "SELECT Title FROM Cartoon ORDER BY title",
    "db_id": "tvshow"
}{
    "question": "What are the titles of the cartoons sorted alphabetically?",
    "query": "SELECT Title FROM Cartoon ORDER BY title",
    "db_id": "tvshow"
}{
    "question": "List all cartoon directed by \"Ben Jones\".",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "db_id": "tvshow"
}{
    "question": "What are the names of all cartoons directed by Ben Jones?",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "db_id": "tvshow"
}{
    "question": "How many cartoons were written by \"Joseph Kuhr\"?",
    "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "db_id": "tvshow"
}{
    "question": "What is the number of cartoones written by Joseph Kuhr?",
    "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "db_id": "tvshow"
}{
    "question": "list all cartoon titles and their directors ordered by their air date",
    "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "db_id": "tvshow"
}{
    "question": "What is the name and directors of all the cartoons that are ordered by air date?",
    "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "db_id": "tvshow"
}{
    "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "db_id": "tvshow"
}{
    "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "db_id": "tvshow"
}{
    "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
    "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "db_id": "tvshow"
}{
    "question": "What is the country with the most number of TV Channels and how many does it have?",
    "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "db_id": "tvshow"
}{
    "question": "List the number of different series names and contents in the TV Channel table.",
    "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "db_id": "tvshow"
}{
    "question": "How many different series and contents are listed in the TV Channel table?",
    "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "db_id": "tvshow"
}{
    "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
    "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "What is the content of the series Sky Radio?",
    "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
    "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
    "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "How many TV Channel using language English?",
    "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "db_id": "tvshow"
}{
    "question": "How many TV Channels use the English language?",
    "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "db_id": "tvshow"
}{
    "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "db_id": "tvshow"
}{
    "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "db_id": "tvshow"
}{
    "question": "List each language and the number of TV Channels using it.",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "db_id": "tvshow"
}{
    "question": "For each language, list the number of TV Channels that use it.",
    "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "db_id": "tvshow"
}{
    "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "db_id": "tvshow"
}{
    "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "db_id": "tvshow"
}{
    "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
    "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
    "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "List the Episode of all TV series sorted by rating.",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "db_id": "tvshow"
}{
    "question": "What are all of the episodes ordered by ratings?",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "db_id": "tvshow"
}{
    "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
    "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "db_id": "tvshow"
}{
    "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
    "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "db_id": "tvshow"
}{
    "question": "What is minimum and maximum share of TV series?",
    "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "db_id": "tvshow"
}{
    "question": "What is the maximum and minimum share for the TV series?",
    "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "db_id": "tvshow"
}{
    "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
    "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "db_id": "tvshow"
}{
    "question": "When did the episode \"A Love of a Lifetime\" air?",
    "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "db_id": "tvshow"
}{
    "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
    "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "db_id": "tvshow"
}{
    "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
    "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "db_id": "tvshow"
}{
    "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "db_id": "tvshow"
}{
    "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
    "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "db_id": "tvshow"
}{
    "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
    "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "What is the episode for the TV series named \"Sky Radio\"?",
    "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "db_id": "tvshow"
}{
    "question": "Find the number of cartoons directed by each of the listed directors.",
    "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "db_id": "tvshow"
}{
    "question": "How many cartoons did each director create?",
    "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "db_id": "tvshow"
}{
    "question": "Find the production code and channel of the most recently aired cartoon .",
    "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "db_id": "tvshow"
}{
    "question": "What is the produdction code and channel of the most recent cartoon ?",
    "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "db_id": "tvshow"
}{
    "question": "Find the package choice and series name of the TV channel that has high definition TV.",
    "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "db_id": "tvshow"
}{
    "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
    "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "db_id": "tvshow"
}{
    "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "db_id": "tvshow"
}{
    "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
    "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "db_id": "tvshow"
}{
    "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "db_id": "tvshow"
}{
    "question": "What are the countries that are not playing cartoons written by Todd Casey?",
    "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "db_id": "tvshow"
}{
    "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
    "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "db_id": "tvshow"
}{
    "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
    "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "db_id": "tvshow"
}{
    "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
    "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "db_id": "tvshow"
}{
    "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
    "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "db_id": "tvshow"
}{
    "question": "find id of the tv channels that from the countries where have more than two tv channels.",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "db_id": "tvshow"
}{
    "question": "What are the ids of all tv channels that have more than 2 TV channels?",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "db_id": "tvshow"
}{
    "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
    "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "db_id": "tvshow"
}{
    "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
    "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "db_id": "tvshow"
}{
    "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
    "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "db_id": "tvshow"
}{
    "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
    "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "db_id": "tvshow"
}{
    "question": "How many poker players are there?",
    "query": "SELECT count(*) FROM poker_player",
    "db_id": "poker_player"
}{
    "question": "Count the number of poker players.",
    "query": "SELECT count(*) FROM poker_player",
    "db_id": "poker_player"
}{
    "question": "List the earnings of poker players in descending order.",
    "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "db_id": "poker_player"
}{
    "question": "What are the earnings of poker players, ordered descending by value?",
    "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "db_id": "poker_player"
}{
    "question": "List the final tables made and the best finishes of poker players.",
    "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "db_id": "poker_player"
}{
    "question": "What are the final tables made and best finishes for all poker players?",
    "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "db_id": "poker_player"
}{
    "question": "What is the average earnings of poker players?",
    "query": "SELECT avg(Earnings) FROM poker_player",
    "db_id": "poker_player"
}{
    "question": "Return the average earnings across all poker players.",
    "query": "SELECT avg(Earnings) FROM poker_player",
    "db_id": "poker_player"
}{
    "question": "What is the money rank of the poker player with the highest earnings?",
    "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "Return the money rank of the player with the greatest earnings.",
    "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
    "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "db_id": "poker_player"
}{
    "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
    "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "db_id": "poker_player"
}{
    "question": "What are the names of poker players?",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "db_id": "poker_player"
}{
    "question": "Return the names of all the poker players.",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "db_id": "poker_player"
}{
    "question": "What are the names of poker players whose earnings is higher than 300000?",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "db_id": "poker_player"
}{
    "question": "Give the names of poker players who have earnings above 300000.",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "db_id": "poker_player"
}{
    "question": "List the names of poker players ordered by the final tables made in ascending order.",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "db_id": "poker_player"
}{
    "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "db_id": "poker_player"
}{
    "question": "What is the birth date of the poker player with the lowest earnings?",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "Return the birth date of the poker player with the lowest earnings.",
    "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "What is the money rank of the tallest poker player?",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "Return the money rank of the poker player with the greatest height.",
    "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "What is the average earnings of poker players with height higher than 200?",
    "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "db_id": "poker_player"
}{
    "question": "Give average earnings of poker players who are taller than 200.",
    "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "db_id": "poker_player"
}{
    "question": "What are the names of poker players in descending order of earnings?",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "db_id": "poker_player"
}{
    "question": "Return the names of poker players sorted by their earnings descending.",
    "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "db_id": "poker_player"
}{
    "question": "What are different nationalities of people and the corresponding number of people from each nation?",
    "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "db_id": "poker_player"
}{
    "question": "How many people are there of each nationality?",
    "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "db_id": "poker_player"
}{
    "question": "What is the most common nationality of people?",
    "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "Give the nationality that is most common across all people.",
    "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "poker_player"
}{
    "question": "What are the nationalities that are shared by at least two people?",
    "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "db_id": "poker_player"
}{
    "question": "Return the nationalities for which there are two or more people.",
    "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "db_id": "poker_player"
}{
    "question": "List the names and birth dates of people in ascending alphabetical order of name.",
    "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "db_id": "poker_player"
}{
    "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
    "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "db_id": "poker_player"
}{
    "question": "Show names of people whose nationality is not \"Russia\".",
    "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "db_id": "poker_player"
}{
    "question": "What are the names of people who are not from Russia?",
    "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "db_id": "poker_player"
}{
    "question": "List the names of people that are not poker players.",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "db_id": "poker_player"
}{
    "question": "What are the names of people who do not play poker?",
    "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "db_id": "poker_player"
}{
    "question": "How many distinct nationalities are there?",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "db_id": "poker_player"
}{
    "question": "Count the number of different nationalities.",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "db_id": "poker_player"
}{
    "question": "How many states are there?",
    "query": "SELECT count(*) FROM area_code_state",
    "db_id": "voter_1"
}{
    "question": "List the contestant numbers and names, ordered by contestant name descending.",
    "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "db_id": "voter_1"
}{
    "question": "List the vote ids, phone numbers and states of all votes.",
    "query": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "db_id": "voter_1"
}{
    "question": "What are the maximum and minimum values of area codes?",
    "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "db_id": "voter_1"
}{
    "question": "What is last date created of votes from the state 'CA'?",
    "query": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "db_id": "voter_1"
}{
    "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
    "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "db_id": "voter_1"
}{
    "question": "What are the distinct states and create time of all votes?",
    "query": "SELECT DISTINCT state ,  created FROM votes",
    "db_id": "voter_1"
}{
    "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
    "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "db_id": "voter_1"
}{
    "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
    "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "db_id": "voter_1"
}{
    "question": "What are the number of votes from state 'NY' or 'CA'?",
    "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "db_id": "voter_1"
}{
    "question": "How many contestants did not get voted?",
    "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "db_id": "voter_1"
}{
    "question": "What is the area code in which the most voters voted?",
    "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "db_id": "voter_1"
}{
    "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
    "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "db_id": "voter_1"
}{
    "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
    "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "db_id": "voter_1"
}{
    "question": "Return the names of the contestants whose names contain the substring 'Al' .",
    "query": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "db_id": "voter_1"
}{
    "question": "What are the names of all the countries that became independent after 1950?",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "db_id": "world_1"
}{
    "question": "Give the names of the nations that were founded after 1950.",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "db_id": "world_1"
}{
    "question": "How many countries have a republic as their form of government?",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "db_id": "world_1"
}{
    "question": "How many countries have governments that are republics?",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "db_id": "world_1"
}{
    "question": "What is the total surface area of the countries in the Caribbean region?",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "db_id": "world_1"
}{
    "question": "How much surface area do the countires in the Carribean cover together?",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "db_id": "world_1"
}{
    "question": "Which continent is Anguilla in?",
    "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "db_id": "world_1"
}{
    "question": "What is the continent name which Anguilla belongs to?",
    "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "db_id": "world_1"
}{
    "question": "Which region is the city Kabul located in?",
    "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "db_id": "world_1"
}{
    "question": "What region is Kabul in?",
    "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "db_id": "world_1"
}{
    "question": "Which language is the most popular in Aruba?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What language is predominantly spoken in Aruba?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What are the population and life expectancies in Brazil?",
    "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "db_id": "world_1"
}{
    "question": "Give me Brazil\u2019s population and life expectancies.",
    "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "db_id": "world_1"
}{
    "question": "What are the region and population of Angola?",
    "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "db_id": "world_1"
}{
    "question": "What region does Angola belong to and what is its population?",
    "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "db_id": "world_1"
}{
    "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "db_id": "world_1"
}{
    "question": "How long is the people\u2019s average life expectancy in Central Africa?",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "db_id": "world_1"
}{
    "question": "What is the name of country that has the shortest life expectancy in Asia?",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Give the name of the country in Asia with the lowest life expectancy.",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What is the total population and maximum GNP in Asia?",
    "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "db_id": "world_1"
}{
    "question": "How many people live in Asia, and what is the largest GNP among them?",
    "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "db_id": "world_1"
}{
    "question": "What is the average life expectancy in African countries that are republics?",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "db_id": "world_1"
}{
    "question": "Give the average life expectancy for countries in Africa which are republics?",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "db_id": "world_1"
}{
    "question": "What is the total surface area of the continents Asia and Europe?",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "db_id": "world_1"
}{
    "question": "Give the total surface area covered by countries in Asia or Europe.",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "db_id": "world_1"
}{
    "question": "How many people live in Gelderland district?",
    "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "db_id": "world_1"
}{
    "question": "What is the total population of Gelderland district?",
    "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "db_id": "world_1"
}{
    "question": "What is the average GNP and total population in all nations whose government is US territory?",
    "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "db_id": "world_1"
}{
    "question": "Give the mean GNP and total population of nations which are considered US territory.",
    "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "db_id": "world_1"
}{
    "question": "How many unique languages are spoken in the world?",
    "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "db_id": "world_1"
}{
    "question": "What is the number of distinct languages used around the world?",
    "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "db_id": "world_1"
}{
    "question": "How many type of governments are in Africa?",
    "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "db_id": "world_1"
}{
    "question": "How many different forms of governments are there in Africa?",
    "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "db_id": "world_1"
}{
    "question": "What is the total number of languages used in Aruba?",
    "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "db_id": "world_1"
}{
    "question": "How many languages are spoken in Aruba?",
    "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "db_id": "world_1"
}{
    "question": "How many official languages does Afghanistan have?",
    "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "How many official languages are spoken in Afghanistan?",
    "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "What is name of the country that speaks the largest number of languages?",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Give the name of the nation that uses the greatest amount of languages.",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Which continent has the most diverse languages?",
    "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Which continent speaks the most languages?",
    "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "How many countries speak both English and Dutch?",
    "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "db_id": "world_1"
}{
    "question": "What is the number of nations that use English and Dutch?",
    "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "db_id": "world_1"
}{
    "question": "What are the names of nations speak both English and French?",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "db_id": "world_1"
}{
    "question": "Give the names of nations that speak both English and French.",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "db_id": "world_1"
}{
    "question": "What are the names of nations where both English and French are official languages?",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "Give the names of countries with English and French as official languages.",
    "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "What is the number of distinct continents where Chinese is spoken?",
    "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "db_id": "world_1"
}{
    "question": "How many continents speak Chinese?",
    "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "db_id": "world_1"
}{
    "question": "What are the regions that use English or Dutch?",
    "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "db_id": "world_1"
}{
    "question": "Which regions speak Dutch or English?",
    "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "db_id": "world_1"
}{
    "question": "What are the countries where either English or Dutch is the official language ?",
    "query": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "db_id": "world_1"
}{
    "question": "Which countries have either English or Dutch as an official language?",
    "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "Which language is the most popular on the Asian continent?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What is the language that is used by the largest number of Asian nations?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Which languages are spoken by only one country in republic governments?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "db_id": "world_1"
}{
    "question": "What languages are only used by a single country with a republic government?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "db_id": "world_1"
}{
    "question": "Find the city with the largest population that uses English.",
    "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What is the most populace city that speaks English?",
    "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Find the name, population and expected life length of asian country with the largest area?",
    "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
    "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What is average life expectancy in the countries where English is not the official language?",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "db_id": "world_1"
}{
    "question": "Give the mean life expectancy of countries in which English is not the official language.",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "db_id": "world_1"
}{
    "question": "What is the total number of people living in the nations that do not use English?",
    "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "db_id": "world_1"
}{
    "question": "How many people live in countries that do not speak English?",
    "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "db_id": "world_1"
}{
    "question": "What is the official language spoken in the country whose head of state is Beatrix?",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
    "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
    "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
    "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "db_id": "world_1"
}{
    "question": "What are the countries that have greater surface area than any country in Europe?",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "db_id": "world_1"
}{
    "question": "Which countries have greater area than that of any country in Europe?",
    "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "db_id": "world_1"
}{
    "question": "What are the African countries that have a  population less than any country in Asia?",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "db_id": "world_1"
}{
    "question": "Which African countries have a smaller population than that of any country in Asia?",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "db_id": "world_1"
}{
    "question": "Which Asian countries have a population that is larger than any country in Africa?",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "db_id": "world_1"
}{
    "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "db_id": "world_1"
}{
    "question": "What are the country codes for countries that do not speak English?",
    "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "db_id": "world_1"
}{
    "question": "Return the country codes for countries that do not speak English.",
    "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "db_id": "world_1"
}{
    "question": "What are the country codes of countries where people use languages other than English?",
    "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "db_id": "world_1"
}{
    "question": "Give the country codes for countries in which people speak langauges that are not English.",
    "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "db_id": "world_1"
}{
    "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
    "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "db_id": "world_1"
}{
    "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
    "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "db_id": "world_1"
}{
    "question": "Which cities are in European countries where English is not the official language?",
    "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "db_id": "world_1"
}{
    "question": "What are the names of cities in Europe for which English is not the official language?",
    "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "db_id": "world_1"
}{
    "question": "Which unique cities are in Asian countries where Chinese is the official language ?",
    "query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "db_id": "world_1"
}{
    "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
    "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "db_id": "world_1"
}{
    "question": "What are the name, independence year, and surface area of the country with the smallest population?",
    "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
    "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What are the population, name and leader of the country with the largest area?",
    "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Give the name, population, and head of state for the country that has the largest area.",
    "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
    "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "db_id": "world_1"
}{
    "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
    "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "db_id": "world_1"
}{
    "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
    "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "db_id": "world_1"
}{
    "question": "How many cities in each district have a population that is above the average population across all cities?",
    "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "db_id": "world_1"
}{
    "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
    "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "db_id": "world_1"
}{
    "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
    "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "db_id": "world_1"
}{
    "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
    "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "db_id": "world_1"
}{
    "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
    "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "db_id": "world_1"
}{
    "question": "What are the names and areas of countries with the top 5 largest area?",
    "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "db_id": "world_1"
}{
    "question": "Return the names and surface areas of the 5 largest countries.",
    "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "db_id": "world_1"
}{
    "question": "What are names of countries with the top 3 largest population?",
    "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "db_id": "world_1"
}{
    "question": "Return the names of the 3 most populated countries.",
    "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "db_id": "world_1"
}{
    "question": "What are the names of the nations with the 3 lowest populations?",
    "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "db_id": "world_1"
}{
    "question": "Return the names of the 3 countries with the fewest people.",
    "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "db_id": "world_1"
}{
    "question": "how many countries are in Asia?",
    "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "db_id": "world_1"
}{
    "question": "Count the number of countries in Asia.",
    "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "db_id": "world_1"
}{
    "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
    "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "db_id": "world_1"
}{
    "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
    "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "db_id": "world_1"
}{
    "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "db_id": "world_1"
}{
    "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
    "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "db_id": "world_1"
}{
    "question": "What are the cities whose population is between 160000 and 900000?",
    "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "db_id": "world_1"
}{
    "question": "Return the names of cities that have a population between 160000 and 900000 .",
    "query": "select name from city where population between 160000 and 900000",
    "db_id": "world_1"
}{
    "question": "Which language is spoken by the largest number of countries?",
    "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "Give the language that is spoken in the most countries.",
    "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "db_id": "world_1"
}{
    "question": "What is the language spoken by the largest percentage of people in each country?",
    "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "db_id": "world_1"
}{
    "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
    "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "db_id": "world_1"
}{
    "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
    "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "db_id": "world_1"
}{
    "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
    "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "db_id": "world_1"
}{
    "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
    "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "db_id": "world_1"
}{
    "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
    "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "db_id": "world_1"
}{
    "question": "How many conductors are there?",
    "query": "SELECT count(*) FROM conductor",
    "db_id": "orchestra"
}{
    "question": "Count the number of conductors.",
    "query": "SELECT count(*) FROM conductor",
    "db_id": "orchestra"
}{
    "question": "List the names of conductors in ascending order of age.",
    "query": "SELECT Name FROM conductor ORDER BY Age ASC",
    "db_id": "orchestra"
}{
    "question": "What are the names of conductors, ordered by age?",
    "query": "SELECT Name FROM conductor ORDER BY Age ASC",
    "db_id": "orchestra"
}{
    "question": "What are the names of conductors whose nationalities are not \"USA\"?",
    "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "db_id": "orchestra"
}{
    "question": "Return the names of conductors that do not have the nationality \"USA\".",
    "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "db_id": "orchestra"
}{
    "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
    "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "db_id": "orchestra"
}{
    "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
    "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "db_id": "orchestra"
}{
    "question": "What is the average attendance of shows?",
    "query": "SELECT avg(Attendance) FROM SHOW",
    "db_id": "orchestra"
}{
    "question": "Return the average attendance across all shows.",
    "query": "SELECT avg(Attendance) FROM SHOW",
    "db_id": "orchestra"
}{
    "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
    "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "db_id": "orchestra"
}{
    "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
    "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "db_id": "orchestra"
}{
    "question": "How many different nationalities do conductors have?",
    "query": "SELECT count(DISTINCT Nationality) FROM conductor",
    "db_id": "orchestra"
}{
    "question": "Count the number of different nationalities of conductors.",
    "query": "SELECT count(DISTINCT Nationality) FROM conductor",
    "db_id": "orchestra"
}{
    "question": "List names of conductors in descending order of years of work.",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "db_id": "orchestra"
}{
    "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "db_id": "orchestra"
}{
    "question": "List the name of the conductor with the most years of work.",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "db_id": "orchestra"
}{
    "question": "What is the name of the conductor who has worked the greatest number of years?",
    "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "db_id": "orchestra"
}{
    "question": "Show the names of conductors and the orchestras they have conducted.",
    "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "db_id": "orchestra"
}{
    "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
    "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "db_id": "orchestra"
}{
    "question": "Show the names of conductors that have conducted more than one orchestras.",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "db_id": "orchestra"
}{
    "question": "What are the names of conductors who have conducted at more than one orchestra?",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "db_id": "orchestra"
}{
    "question": "Show the name of the conductor that has conducted the most number of orchestras.",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "orchestra"
}{
    "question": "What is the name of the conductor who has conducted the most orchestras?",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "orchestra"
}{
    "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "db_id": "orchestra"
}{
    "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
    "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "db_id": "orchestra"
}{
    "question": "Please show the different record companies and the corresponding number of orchestras.",
    "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "db_id": "orchestra"
}{
    "question": "How many orchestras does each record company manage?",
    "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "db_id": "orchestra"
}{
    "question": "Please show the record formats of orchestras in ascending order of count.",
    "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "db_id": "orchestra"
}{
    "question": "What are the major record formats of orchestras, sorted by their frequency?",
    "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "db_id": "orchestra"
}{
    "question": "List the record company shared by the most number of orchestras.",
    "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "orchestra"
}{
    "question": "What is the record company used by the greatest number of orchestras?",
    "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "orchestra"
}{
    "question": "List the names of orchestras that have no performance.",
    "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "db_id": "orchestra"
}{
    "question": "What are the orchestras that do not have any performances?",
    "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "db_id": "orchestra"
}{
    "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
    "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "db_id": "orchestra"
}{
    "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
    "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "db_id": "orchestra"
}{
    "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
    "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "db_id": "orchestra"
}{
    "question": "Count the number of orchestras that have CD or DVD as their record format.",
    "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "db_id": "orchestra"
}{
    "question": "Show the years in which orchestras that have given more than one performance are founded.",
    "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "db_id": "orchestra"
}{
    "question": "What are years of founding for orchestras that have had more than a single performance?",
    "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "db_id": "orchestra"
}{
    "question": "How many high schoolers are there?",
    "query": "SELECT count(*) FROM Highschooler",
    "db_id": "network_1"
}{
    "question": "Count the number of high schoolers.",
    "query": "SELECT count(*) FROM Highschooler",
    "db_id": "network_1"
}{
    "question": "Show the names and grades of each high schooler.",
    "query": "SELECT name ,  grade FROM Highschooler",
    "db_id": "network_1"
}{
    "question": "What are the names and grades for each high schooler?",
    "query": "SELECT name ,  grade FROM Highschooler",
    "db_id": "network_1"
}{
    "question": "Show all the grades of the high schoolers.",
    "query": "SELECT grade FROM Highschooler",
    "db_id": "network_1"
}{
    "question": "What is the grade of each high schooler?",
    "query": "SELECT grade FROM Highschooler",
    "db_id": "network_1"
}{
    "question": "What grade is Kyle in?",
    "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Return the grade for the high schooler named Kyle.",
    "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Show the names of all high schoolers in grade 10.",
    "query": "SELECT name FROM Highschooler WHERE grade  =  10",
    "db_id": "network_1"
}{
    "question": "What are the names of all high schoolers in grade 10?",
    "query": "SELECT name FROM Highschooler WHERE grade  =  10",
    "db_id": "network_1"
}{
    "question": "Show the ID of the high schooler named Kyle.",
    "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "What is Kyle's id?",
    "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "How many high schoolers are there in grade 9 or 10?",
    "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "db_id": "network_1"
}{
    "question": "Count the number of high schoolers in grades 9 or 10.",
    "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "db_id": "network_1"
}{
    "question": "Show the number of high schoolers for each grade.",
    "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "db_id": "network_1"
}{
    "question": "How many high schoolers are in each grade?",
    "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "db_id": "network_1"
}{
    "question": "Which grade has the most high schoolers?",
    "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "db_id": "network_1"
}{
    "question": "Return the grade that has the greatest number of high schoolers.",
    "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "db_id": "network_1"
}{
    "question": "Show me all grades that have at least 4 students.",
    "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "db_id": "network_1"
}{
    "question": "Which grades have 4 or more high schoolers?",
    "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "db_id": "network_1"
}{
    "question": "Show the student IDs and numbers of friends corresponding to each.",
    "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "db_id": "network_1"
}{
    "question": "How many friends does each student have?",
    "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "db_id": "network_1"
}{
    "question": "Show the names of high school students and their corresponding number of friends.",
    "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "db_id": "network_1"
}{
    "question": "What are the names of the high schoolers and how many friends does each have?",
    "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "db_id": "network_1"
}{
    "question": "What is the name of the high schooler who has the greatest number of friends?",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "network_1"
}{
    "question": "Return the name of the high school student with the most friends.",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "network_1"
}{
    "question": "Show the names of high schoolers who have at least 3 friends.",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "db_id": "network_1"
}{
    "question": "What are the names of high schoolers who have 3 or more friends?",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "db_id": "network_1"
}{
    "question": "Show the names of all of the high schooler Kyle's friends.",
    "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Return the names of friends of the high school student Kyle.",
    "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "How many friends does the high school student Kyle have?",
    "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Count the number of friends Kyle has.",
    "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Show ids of all students who do not have any friends.",
    "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "db_id": "network_1"
}{
    "question": "What are the ids of high school students who do not have friends?",
    "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "db_id": "network_1"
}{
    "question": "Show names of all high school students who do not have any friends.",
    "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "db_id": "network_1"
}{
    "question": "What are the names of students who have no friends?",
    "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "db_id": "network_1"
}{
    "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
    "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "db_id": "network_1"
}{
    "question": "What are the ids of students who both have friends and are liked?",
    "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "db_id": "network_1"
}{
    "question": "Show name of all students who have some friends and also are liked by someone else.",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "db_id": "network_1"
}{
    "question": "What are the names of high schoolers who both have friends and are liked?",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "db_id": "network_1"
}{
    "question": "Count the number of likes for each student id.",
    "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "db_id": "network_1"
}{
    "question": "How many likes correspond to each student id?",
    "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "db_id": "network_1"
}{
    "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
    "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "db_id": "network_1"
}{
    "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
    "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "db_id": "network_1"
}{
    "question": "What is the name of the high schooler who has the greatest number of likes?",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "network_1"
}{
    "question": "Give the name of the student with the most likes.",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "network_1"
}{
    "question": "Show the names of students who have at least 2 likes.",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "db_id": "network_1"
}{
    "question": "What are the names of students who have 2 or more likes?",
    "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "db_id": "network_1"
}{
    "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "db_id": "network_1"
}{
    "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
    "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "db_id": "network_1"
}{
    "question": "How many likes does Kyle have?",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Return the number of likes that the high schooler named Kyle has.",
    "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "db_id": "network_1"
}{
    "question": "Find the average grade of all students who have some friends.",
    "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "db_id": "network_1"
}{
    "question": "What is the average grade of students who have friends?",
    "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "db_id": "network_1"
}{
    "question": "Find the minimum grade of students who have no friends.",
    "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "db_id": "network_1"
}{
    "question": "What is the lowest grade of students who do not have any friends?",
    "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "db_id": "network_1"
}{
    "question": "Which states have both owners and professionals living there?",
    "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "db_id": "dog_kennels"
}{
    "question": "Find the states where both owners and professionals live.",
    "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "db_id": "dog_kennels"
}{
    "question": "What is the average age of the dogs who have gone through any treatments?",
    "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "Find the average age of the dogs who went through treatments.",
    "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
    "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "db_id": "dog_kennels"
}{
    "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
    "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "db_id": "dog_kennels"
}{
    "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
    "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "db_id": "dog_kennels"
}{
    "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
    "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "db_id": "dog_kennels"
}{
    "question": "Which first names are used for professionals or owners but are not used as dog names?",
    "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "Find the first names that are used for professionals or owners but are not used as dog names.",
    "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
    "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "db_id": "dog_kennels"
}{
    "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
    "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "db_id": "dog_kennels"
}{
    "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
    "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
    "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "db_id": "dog_kennels"
}{
    "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
    "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "db_id": "dog_kennels"
}{
    "question": "What is the name of the breed with the most dogs?",
    "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Which breed do the most dogs have? Give me the breed name.",
    "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
    "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "What is the description of the treatment type that costs the least money in total?",
    "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Give me the description of the treatment type whose total cost is the lowest.",
    "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
    "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "db_id": "dog_kennels"
}{
    "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
    "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "db_id": "dog_kennels"
}{
    "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
    "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
    "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "List the date of each treatment, together with the first name of the professional who operated it.",
    "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "db_id": "dog_kennels"
}{
    "question": "What are the date and the operating professional's first name of each treatment?",
    "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "db_id": "dog_kennels"
}{
    "question": "List the cost of each treatment and the corresponding treatment type description.",
    "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "db_id": "dog_kennels"
}{
    "question": "What are the cost and treatment type description of each treatment?",
    "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "db_id": "dog_kennels"
}{
    "question": "List each owner's first name, last name, and the size of his for her dog.",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "db_id": "dog_kennels"
}{
    "question": "What are each owner's first name, last name, and the size of their dog?",
    "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "db_id": "dog_kennels"
}{
    "question": "List pairs of the owner's first name and the dogs's name.",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "db_id": "dog_kennels"
}{
    "question": "What are each owner's first name and their dogs's name?",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "db_id": "dog_kennels"
}{
    "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
    "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "db_id": "dog_kennels"
}{
    "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
    "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "db_id": "dog_kennels"
}{
    "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "db_id": "dog_kennels"
}{
    "question": "Find the first names of owners living in Virginia and the names of dogs they own.",
    "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "db_id": "dog_kennels"
}{
    "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
    "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "db_id": "dog_kennels"
}{
    "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
    "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "db_id": "dog_kennels"
}{
    "question": "List the last name of the owner owning the youngest dog.",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "db_id": "dog_kennels"
}{
    "question": "Who owns the youngest dog? Give me his or her last name.",
    "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "db_id": "dog_kennels"
}{
    "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
    "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "db_id": "dog_kennels"
}{
    "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
    "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "db_id": "dog_kennels"
}{
    "question": "What are the arriving date and the departing date of all the dogs?",
    "query": "SELECT date_arrived ,  date_departed FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "List the arrival date and the departure date for all the dogs.",
    "query": "SELECT date_arrived ,  date_departed FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "How many dogs went through any treatments?",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "db_id": "dog_kennels"
}{
    "question": "Count the number of dogs that went through a treatment.",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "db_id": "dog_kennels"
}{
    "question": "How many professionals have performed any treatment to dogs?",
    "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "db_id": "dog_kennels"
}{
    "question": "Find the number of professionals who have ever treated dogs.",
    "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "db_id": "dog_kennels"
}{
    "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
    "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "db_id": "dog_kennels"
}{
    "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
    "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "db_id": "dog_kennels"
}{
    "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
    "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "db_id": "dog_kennels"
}{
    "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
    "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "db_id": "dog_kennels"
}{
    "question": "How many dogs have an age below the average?",
    "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "db_id": "dog_kennels"
}{
    "question": "Count the number of dogs of an age below the average.",
    "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "db_id": "dog_kennels"
}{
    "question": "How much does the most recent treatment cost?",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "Show me the cost of the most recently performed treatment.",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "db_id": "dog_kennels"
}{
    "question": "How many dogs have not gone through any treatment?",
    "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "Tell me the number of dogs that have not received any treatment .",
    "query": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "db_id": "dog_kennels"
}{
    "question": "How many owners temporarily do not have any dogs?",
    "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "db_id": "dog_kennels"
}{
    "question": "Find the number of owners who do not own any dogs at this moment.",
    "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "db_id": "dog_kennels"
}{
    "question": "How many professionals did not operate any treatment on dogs?",
    "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "Find the number of professionals who have not treated any dogs.",
    "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "db_id": "dog_kennels"
}{
    "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
    "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "db_id": "dog_kennels"
}{
    "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
    "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "db_id": "dog_kennels"
}{
    "question": "What is the average age of all the dogs?",
    "query": "SELECT avg(age) FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "Compute the average age of all the dogs.",
    "query": "SELECT avg(age) FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "What is the age of the oldest dog?",
    "query": "SELECT max(age) FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "Tell me the age of the oldest dog.",
    "query": "SELECT max(age) FROM Dogs",
    "db_id": "dog_kennels"
}{
    "question": "How much does each charge type costs? List both charge type and amount.",
    "query": "SELECT charge_type ,  charge_amount FROM Charges",
    "db_id": "dog_kennels"
}{
    "question": "List each charge type and its amount.",
    "query": "SELECT charge_type ,  charge_amount FROM Charges",
    "db_id": "dog_kennels"
}{
    "question": "How much does the most expensive charge type costs?",
    "query": "SELECT max(charge_amount) FROM Charges",
    "db_id": "dog_kennels"
}{
    "question": "What is the charge amount of the most expensive charge type?",
    "query": "SELECT max(charge_amount) FROM Charges",
    "db_id": "dog_kennels"
}{
    "question": "List the email, cell phone and home phone of all the professionals.",
    "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "db_id": "dog_kennels"
}{
    "question": "What are the email, cell phone and home phone of each professional?",
    "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "db_id": "dog_kennels"
}{
    "question": "What are all the possible breed type and size type combinations?",
    "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "db_id": "dog_kennels"
}{
    "question": "Find the distinct breed type and size type combinations for dogs.",
    "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "db_id": "dog_kennels"
}{
    "question": "List the first name of all the professionals along with the description of the treatment they have done.",
    "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "db_id": "dog_kennels"
}{
    "question": "What are each professional's first name and description of the treatment they have performed?",
    "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "db_id": "dog_kennels"
}{
    "question": "How many singers are there?",
    "query": "SELECT count(*) FROM singer",
    "db_id": "singer"
}{
    "question": "What is the count of singers?",
    "query": "SELECT count(*) FROM singer",
    "db_id": "singer"
}{
    "question": "List the name of singers in ascending order of net worth.",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "db_id": "singer"
}{
    "question": "What are the names of singers ordered by ascending net worth?",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "db_id": "singer"
}{
    "question": "What are the birth year and citizenship of singers?",
    "query": "SELECT Birth_Year ,  Citizenship FROM singer",
    "db_id": "singer"
}{
    "question": "What are the birth years and citizenships of the singers?",
    "query": "SELECT Birth_Year ,  Citizenship FROM singer",
    "db_id": "singer"
}{
    "question": "List the name of singers whose citizenship is not \"France\".",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "db_id": "singer"
}{
    "question": "What are the names of the singers who are not French citizens?",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "db_id": "singer"
}{
    "question": "Show the name of singers whose birth year is either 1948 or 1949?",
    "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "db_id": "singer"
}{
    "question": "What are the names of the singers whose birth years are either 1948 or 1949?",
    "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "db_id": "singer"
}{
    "question": "What is the name of the singer with the largest net worth?",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "db_id": "singer"
}{
    "question": "What is the name of the singer who is worth the most?",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "db_id": "singer"
}{
    "question": "Show different citizenship of singers and the number of singers of each citizenship.",
    "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "db_id": "singer"
}{
    "question": "For each citizenship, how many singers are from that country?",
    "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "db_id": "singer"
}{
    "question": "Please show the most common citizenship of singers.",
    "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "db_id": "singer"
}{
    "question": "What is the most common singer citizenship ?",
    "query": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "db_id": "singer"
}{
    "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
    "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "db_id": "singer"
}{
    "question": "For each citizenship, what is the maximum net worth?",
    "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "db_id": "singer"
}{
    "question": "Show titles of songs and names of singers.",
    "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "db_id": "singer"
}{
    "question": "What are the song titles and singer names?",
    "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "db_id": "singer"
}{
    "question": "Show distinct names of singers that have songs with sales more than 300000.",
    "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "db_id": "singer"
}{
    "question": "what are the different names of the singers that have sales more than 300000?",
    "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "db_id": "singer"
}{
    "question": "Show the names of singers that have more than one song.",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "db_id": "singer"
}{
    "question": "What are the names of the singers that have more than one songs?",
    "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "db_id": "singer"
}{
    "question": "Show the names of singers and the total sales of their songs.",
    "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "db_id": "singer"
}{
    "question": "For each singer name, what is the total sales for their songs?",
    "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "db_id": "singer"
}{
    "question": "List the name of singers that do not have any song.",
    "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "db_id": "singer"
}{
    "question": "What is the sname of every sing that does not have any song?",
    "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "db_id": "singer"
}{
    "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
    "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "db_id": "singer"
}{
    "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
    "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "db_id": "singer"
}{
    "question": "How many available features are there in total?",
    "query": "SELECT count(*) FROM Other_Available_Features",
    "db_id": "real_estate_properties"
}{
    "question": "What is the feature type name of feature AirCon?",
    "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "db_id": "real_estate_properties"
}{
    "question": "Show the property type descriptions of properties belonging to that code.",
    "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "db_id": "real_estate_properties"
}{
    "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
    "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "db_id": "real_estate_properties"
}