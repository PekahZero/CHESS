{
    "0": "SELECT COUNT(DISTINCT Singer_ID) FROM singer;\t----- bird -----\tconcert_singer",
    "1": "SELECT COUNT(*) FROM singer;\t----- bird -----\tconcert_singer",
    "2": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC;\t----- bird -----\tconcert_singer",
    "3": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC;\t----- bird -----\tconcert_singer",
    "4": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'\t----- bird -----\tconcert_singer",
    "5": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'\t----- bird -----\tconcert_singer",
    "6": "SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Age = (SELECT MIN(Age) FROM singer)\t----- bird -----\tconcert_singer",
    "7": "SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)\t----- bird -----\tconcert_singer",
    "8": "SELECT DISTINCT Country FROM singer WHERE Age > 20;\t----- bird -----\tconcert_singer",
    "9": "SELECT DISTINCT Country FROM singer WHERE Age > 20;\t----- bird -----\tconcert_singer",
    "10": "SELECT Country, COUNT(*) FROM singer GROUP BY Country\t----- bird -----\tconcert_singer",
    "11": "SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country\t----- bird -----\tconcert_singer",
    "12": "SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer);\t----- bird -----\tconcert_singer",
    "13": "SELECT DISTINCT T1.Song_Name  FROM singer AS T1  WHERE T1.Age > (SELECT AVG(Age) FROM singer);\t----- bird -----\tconcert_singer",
    "14": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000\t----- bird -----\tconcert_singer",
    "15": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000\t----- bird -----\tconcert_singer",
    "16": "SELECT MAX(Capacity), AVG(Capacity) FROM stadium;\t----- bird -----\tconcert_singer",
    "17": "SELECT AVG(Capacity), MAX(Capacity) FROM stadium;\t----- bird -----\tconcert_singer",
    "18": "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)\t----- bird -----\tconcert_singer",
    "19": "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)\t----- bird -----\tconcert_singer",
    "20": "SELECT COUNT(concert_ID) FROM concert WHERE Year = '2014' OR Year = '2015';\t----- bird -----\tconcert_singer",
    "21": "SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');\t----- bird -----\tconcert_singer",
    "22": "SELECT T1.Name, COUNT(T2.concert_ID) AS NumberOfConcerts  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Name\t----- bird -----\tconcert_singer",
    "23": "SELECT T1.Stadium_ID, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID\t----- bird -----\tconcert_singer",
    "24": "SELECT T4.Name, T4.Capacity FROM stadium AS T4 INNER JOIN (SELECT concert.Stadium_ID, COUNT(*) AS concert_count FROM concert WHERE Year >= '2014' GROUP BY concert.Stadium_ID) AS T3 ON T4.Stadium_ID = T3.Stadium_ID ORDER BY T3.concert_count DESC LIMIT 1\t----- bird -----\tconcert_singer",
    "25": "SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > '2013' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1\t----- bird -----\tconcert_singer",
    "26": "SELECT Year, COUNT(concert_ID) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1\t----- bird -----\tconcert_singer",
    "27": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tconcert_singer",
    "28": "SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)\t----- bird -----\tconcert_singer",
    "29": "SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL\t----- bird -----\tconcert_singer",
    "30": "SELECT DISTINCT `Country`  FROM `singer` AS S1  WHERE EXISTS (SELECT 1 FROM `singer` AS S2 WHERE S2.`Country` = S1.`Country` AND S2.`Age` > 40)  AND EXISTS (SELECT 1 FROM `singer` AS S3 WHERE S3.`Country` = S1.`Country` AND S3.`Age` < 30);\t----- bird -----\tconcert_singer",
    "31": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')\t----- bird -----\tconcert_singer",
    "32": "SELECT DISTINCT S.Name  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID AND C.Year = '2014'  WHERE C.concert_ID IS NULL\t----- bird -----\tconcert_singer",
    "33": "SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS num_singers FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID\t----- bird -----\tconcert_singer",
    "34": "SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID\t----- bird -----\tconcert_singer",
    "35": "SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name\t----- bird -----\tconcert_singer",
    "36": "SELECT T1.Name, COUNT(T2.concert_ID) AS number_of_concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name\t----- bird -----\tconcert_singer",
    "37": "SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'\t----- bird -----\tconcert_singer",
    "38": "SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T2.concert_ID = T1.concert_ID WHERE T1.Year = '2014'\t----- bird -----\tconcert_singer",
    "39": "SELECT DISTINCT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'\t----- bird -----\tconcert_singer",
    "40": "SELECT DISTINCT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'\t----- bird -----\tconcert_singer",
    "41": "SELECT T4.Name, T4.Location FROM stadium AS T4 WHERE T4.Stadium_ID IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year IN ('2014', '2015') GROUP BY T2.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2)\t----- bird -----\tconcert_singer",
    "42": "SELECT DISTINCT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2\t----- bird -----\tconcert_singer",
    "43": "SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)\t----- bird -----\tconcert_singer",
    "44": "SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT T2.Stadium_ID FROM stadium AS T2 WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium))\t----- bird -----\tconcert_singer",
    "45": "SELECT COUNT(*) FROM Pets WHERE weight > 10;\t----- bird -----\tpets_1",
    "46": "SELECT COUNT(*) FROM Pets WHERE weight > 10;\t----- bird -----\tpets_1",
    "47": "SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'\t----- bird -----\tpets_1",
    "48": "SELECT weight FROM Pets WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1)\t----- bird -----\tpets_1",
    "49": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType\t----- bird -----\tpets_1",
    "50": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType\t----- bird -----\tpets_1",
    "51": "SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20\t----- bird -----\tpets_1",
    "52": "SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20\t----- bird -----\tpets_1",
    "53": "SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE P.PetType = 'dog' AND S.Sex = 'F'\t----- bird -----\tpets_1",
    "54": "SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'\t----- bird -----\tpets_1",
    "55": "SELECT COUNT(DISTINCT PetType) FROM Pets;\t----- bird -----\tpets_1",
    "56": "SELECT COUNT(DISTINCT PetType) FROM Pets;\t----- bird -----\tpets_1",
    "57": "SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')\t----- bird -----\tpets_1",
    "58": "SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')\t----- bird -----\tpets_1",
    "59": "SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2\t----- bird -----\tpets_1",
    "60": "SELECT T2.Fname FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T2.StuID HAVING COUNT(DISTINCT T3.PetType) = 2\t----- bird -----\tpets_1",
    "61": "SELECT Major, Age FROM Student AS T1 WHERE NOT EXISTS (SELECT 1 FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T2.StuID = T1.StuID AND T3.PetType = 'cat')\t----- bird -----\tpets_1",
    "62": "SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')\t----- bird -----\tpets_1",
    "63": "SELECT S.StuID FROM Student AS S WHERE NOT EXISTS (SELECT 1 FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE HP.StuID = S.StuID AND P.PetType = 'cat')\t----- bird -----\tpets_1",
    "64": "SELECT DISTINCT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetID IS NULL\t----- bird -----\tpets_1",
    "65": "SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')\t----- bird -----\tpets_1",
    "66": "SELECT Fname FROM Student WHERE StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog') AND StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')\t----- bird -----\tpets_1",
    "67": "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)\t----- bird -----\tpets_1",
    "68": "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);\t----- bird -----\tpets_1",
    "69": "SELECT PetID, weight FROM Pets WHERE pet_age > 1\t----- bird -----\tpets_1",
    "70": "SELECT PetID, weight FROM Pets WHERE pet_age > 1;\t----- bird -----\tpets_1",
    "71": "SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType\t----- bird -----\tpets_1",
    "72": "SELECT PetType, AVG(pet_age) AS Average_Age, MAX(pet_age) AS Max_Age FROM Pets GROUP BY PetType\t----- bird -----\tpets_1",
    "73": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType\t----- bird -----\tpets_1",
    "74": "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType\t----- bird -----\tpets_1",
    "75": "SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID\t----- bird -----\tpets_1",
    "76": "SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID\t----- bird -----\tpets_1",
    "77": "SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'\t----- bird -----\tpets_1",
    "78": "SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = 'Smith'\t----- bird -----\tpets_1",
    "79": "SELECT T1.StuID, COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID\t----- bird -----\tpets_1",
    "80": "SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID\t----- bird -----\tpets_1",
    "81": "SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1\t----- bird -----\tpets_1",
    "82": "SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1\t----- bird -----\tpets_1",
    "83": "SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'\t----- bird -----\tpets_1",
    "84": "SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3\t----- bird -----\tpets_1",
    "85": "SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL\t----- bird -----\tpets_1",
    "86": "SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL\t----- bird -----\tpets_1",
    "87": "SELECT COUNT(DISTINCT ContId) FROM continents;\t----- bird -----\tcar_1",
    "88": "SELECT COUNT(DISTINCT Continent) FROM continents;\t----- bird -----\tcar_1",
    "89": "SELECT C.ContId, C.Continent, COUNT(CN.CountryId) AS NumberOfCountries  FROM continents AS C  LEFT JOIN countries AS CN ON C.ContId = CN.Continent  GROUP BY C.ContId, C.Continent\t----- bird -----\tcar_1",
    "90": "SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent\t----- bird -----\tcar_1",
    "91": "SELECT COUNT(*) FROM countries;\t----- bird -----\tcar_1",
    "92": "SELECT COUNT(DISTINCT CountryId) FROM countries;\t----- bird -----\tcar_1",
    "93": "SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id\t----- bird -----\tcar_1",
    "94": "SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) AS ModelCount FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName\t----- bird -----\tcar_1",
    "95": "SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower IS NOT NULL AND T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data WHERE Horsepower IS NOT NULL)\t----- bird -----\tcar_1",
    "96": "SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data WHERE Horsepower IS NOT NULL AND Horsepower NOT LIKE '%[^0-9]%')\t----- bird -----\tcar_1",
    "97": "SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)\t----- bird -----\tcar_1",
    "98": "SELECT DISTINCT T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)\t----- bird -----\tcar_1",
    "99": "SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970\t----- bird -----\tcar_1",
    "100": "SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970\t----- bird -----\tcar_1",
    "101": "SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)\t----- bird -----\tcar_1",
    "102": "SELECT T3.Maker, MIN(T1.Year) FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id\t----- bird -----\tcar_1",
    "103": "SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year > 1980\t----- bird -----\tcar_1",
    "104": "SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T3 ON T1.Id = T3.MakeId INNER JOIN model_list AS T2 ON T3.Model = T2.Model WHERE T1.Year > 1980\t----- bird -----\tcar_1",
    "105": "SELECT T3.Continent, COUNT(DISTINCT T2.Id) FROM car_makers AS T2 INNER JOIN countries AS T1 ON T2.Country = T1.CountryId INNER JOIN continents AS T3 ON T1.Continent = T3.ContId GROUP BY T3.Continent\t----- bird -----\tcar_1",
    "106": "SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS MakerCount  FROM continents AS C  LEFT JOIN countries AS CO ON C.ContId = CO.Continent  LEFT JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent\t----- bird -----\tcar_1",
    "107": "SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Id) DESC LIMIT 1\t----- bird -----\tcar_1",
    "108": "SELECT CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY CountryName ORDER BY COUNT(T2.Id) DESC LIMIT 1\t----- bird -----\tcar_1",
    "109": "SELECT COUNT(T1.ModelId) AS ModelCount, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName\t----- bird -----\tcar_1",
    "110": "SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS ModelCount FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName\t----- bird -----\tcar_1",
    "111": "SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'\t----- bird -----\tcar_1",
    "112": "SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T1.MakeId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'\t----- bird -----\tcar_1",
    "113": "SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')\t----- bird -----\tcar_1",
    "114": "SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 WHERE T1.Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')\t----- bird -----\tcar_1",
    "115": "SELECT COUNT(DISTINCT T3.Model) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId INNER JOIN model_list AS T3 ON T1.Id = T3.Maker WHERE T2.CountryName = 'usa'\t----- bird -----\tcar_1",
    "116": "SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'\t----- bird -----\tcar_1",
    "117": "SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;\t----- bird -----\tcar_1",
    "118": "SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;\t----- bird -----\tcar_1",
    "119": "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;\t----- bird -----\tcar_1",
    "120": "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;\t----- bird -----\tcar_1",
    "121": "SELECT DISTINCT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker\t----- bird -----\tcar_1",
    "122": "SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker\t----- bird -----\tcar_1",
    "123": "SELECT DISTINCT c.CountryName, c.CountryId  FROM countries AS c  INNER JOIN car_makers AS cm ON c.CountryId = cm.Country\t----- bird -----\tcar_1",
    "124": "SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country\t----- bird -----\tcar_1",
    "125": "SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;\t----- bird -----\tcar_1",
    "126": "SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;\t----- bird -----\tcar_1",
    "127": "SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year\t----- bird -----\tcar_1",
    "128": "SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year\t----- bird -----\tcar_1",
    "129": "SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryName HAVING COUNT(M.Id) >= 3\t----- bird -----\tcar_1",
    "130": "SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') GROUP BY T1.CountryName HAVING COUNT(T2.Id) >= 3\t----- bird -----\tcar_1",
    "131": "SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make\t----- bird -----\tcar_1",
    "132": "SELECT T2.Make, MAX(T1.Horsepower)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make  ORDER BY MAX(T1.Horsepower) DESC  LIMIT 1\t----- bird -----\tcar_1",
    "133": "SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T3 ON T1.Id = T3.MakeId INNER JOIN model_list AS T2 ON T3.Model = T2.Model WHERE T1.MPG = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)\t----- bird -----\tcar_1",
    "134": "SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE CAST(T2.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)\t----- bird -----\tcar_1",
    "135": "SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;\t----- bird -----\tcar_1",
    "136": "SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;\t----- bird -----\tcar_1",
    "137": "SELECT AVG(CD.Edispl)  FROM cars_data AS CD  INNER JOIN car_names AS CN ON CD.Id = CN.MakeId  WHERE CN.Model = 'volvo'\t----- bird -----\tcar_1",
    "138": "SELECT AVG(Edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo')\t----- bird -----\tcar_1",
    "139": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders\t----- bird -----\tcar_1",
    "140": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders\t----- bird -----\tcar_1",
    "141": "SELECT T1.Model, COUNT(DISTINCT T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1\t----- bird -----\tcar_1",
    "142": "SELECT Model, COUNT(DISTINCT Make) FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT Make) DESC LIMIT 1\t----- bird -----\tcar_1",
    "143": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;\t----- bird -----\tcar_1",
    "144": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;\t----- bird -----\tcar_1",
    "145": "SELECT COUNT(Id) FROM cars_data WHERE Year = 1980;\t----- bird -----\tcar_1",
    "146": "SELECT COUNT(*) FROM cars_data WHERE Year = 1980;\t----- bird -----\tcar_1",
    "147": "SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'\t----- bird -----\tcar_1",
    "148": "SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'\t----- bird -----\tcar_1",
    "149": "SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName  HAVING COUNT(T2.ModelId) > 3\t----- bird -----\tcar_1",
    "150": "SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) > 3\t----- bird -----\tcar_1",
    "151": "SELECT DISTINCT T1.Model FROM model_list AS T1 LEFT JOIN car_makers AS T2 ON T1.Maker = T2.Id LEFT JOIN cars_data AS T3 ON T1.Model = T3.Id WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500\t----- bird -----\tcar_1",
    "152": "SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T1.ModelId = T3.Id WHERE T2.Maker = 'General Motors' OR T3.Weight > 3500\t----- bird -----\tcar_1",
    "153": "SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000\t----- bird -----\tcar_1",
    "154": "SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000 GROUP BY Year HAVING COUNT(CASE WHEN Weight < 4000 THEN 1 END) > 0 AND COUNT(CASE WHEN Weight > 3000 THEN 1 END) > 0\t----- bird -----\tcar_1",
    "155": "SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)\t----- bird -----\tcar_1",
    "156": "SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);\t----- bird -----\tcar_1",
    "157": "SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1\t----- bird -----\tcar_1",
    "158": "SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') ORDER BY T1.Accelerate ASC LIMIT 1\t----- bird -----\tcar_1",
    "159": "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);\t----- bird -----\tcar_1",
    "160": "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data) LIMIT 1)\t----- bird -----\tcar_1",
    "161": "SELECT COUNT(DISTINCT T1.Country)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  GROUP BY T1.Country  HAVING COUNT(T1.Id) > 2\t----- bird -----\tcar_1",
    "162": "SELECT COUNT(*) FROM (SELECT countries.CountryId FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) > 2) AS CountryCount\t----- bird -----\tcar_1",
    "163": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;\t----- bird -----\tcar_1",
    "164": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;\t----- bird -----\tcar_1",
    "165": "SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY CAST(T2.Horsepower AS INTEGER) DESC LIMIT 1\t----- bird -----\tcar_1",
    "166": "SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY CAST(T1.Horsepower AS INTEGER) DESC LIMIT 1\t----- bird -----\tcar_1",
    "167": "SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T2.Cylinders <= 3\t----- bird -----\tcar_1",
    "168": "SELECT T1.Id, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders < 4 AND T1.Horsepower NOT IN (SELECT MIN(Horsepower) FROM cars_data)\t----- bird -----\tcar_1",
    "169": "SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980\t----- bird -----\tcar_1",
    "170": "SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980\t----- bird -----\tcar_1",
    "171": "SELECT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Weight < 3500 AND T1.Maker NOT IN (SELECT Id FROM car_makers WHERE FullName = 'Ford Motor Company')\t----- bird -----\tcar_1",
    "172": "SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id INNER JOIN car_makers AS T4 ON T1.Maker = T4.Id WHERE T3.Weight < 3500 AND T4.FullName <> 'Ford Motor Company'\t----- bird -----\tcar_1",
    "173": "SELECT DISTINCT CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL\t----- bird -----\tcar_1",
    "174": "SELECT c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.Country WHERE cm.Country IS NULL\t----- bird -----\tcar_1",
    "175": "SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.ModelId) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3\t----- bird -----\tcar_1",
    "176": "SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model  INNER JOIN cars_data AS T4 ON T3.MakeId = T4.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(T4.Id) > 3\t----- bird -----\tcar_1",
    "177": "SELECT CountryId, CountryName FROM countries WHERE EXISTS (SELECT 1 FROM car_makers WHERE countries.CountryId = car_makers.Country GROUP BY car_makers.Country HAVING COUNT(Maker) > 3) OR EXISTS (SELECT 1 FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker WHERE countries.CountryId = car_makers.Country AND model_list.Model = 'fiat')\t----- bird -----\tcar_1",
    "178": "SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN model_list AS ml ON cm.Maker = ml.Model  GROUP BY c.CountryId  HAVING COUNT(cm.Country) > 3 OR MAX(ml.Model) = 'fiat';\t----- bird -----\tcar_1",
    "179": "SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';\t----- bird -----\tflight_2",
    "180": "SELECT Country FROM airlines WHERE LOWER(TRIM(Airline)) = LOWER(TRIM('Jetblue Airways'))\t----- bird -----\tflight_2",
    "181": "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';\t----- bird -----\tflight_2",
    "182": "SELECT Abbreviation FROM airlines WHERE TRIM(LOWER(Airline)) = TRIM(LOWER('Jetblue Airways'));\t----- bird -----\tflight_2",
    "183": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';\t----- bird -----\tflight_2",
    "184": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';\t----- bird -----\tflight_2",
    "185": "SELECT AirportCode, AirportName FROM airports WHERE TRIM(LOWER(City)) = TRIM(LOWER('Anthony'));\t----- bird -----\tflight_2",
    "186": "SELECT AirportCode, AirportName FROM airports WHERE LOWER(TRIM(City)) = LOWER(TRIM('Anthony'))\t----- bird -----\tflight_2",
    "187": "SELECT COUNT(DISTINCT Airline) FROM airlines;\t----- bird -----\tflight_2",
    "188": "SELECT COUNT(DISTINCT Airline) FROM airlines;\t----- bird -----\tflight_2",
    "189": "SELECT COUNT(DISTINCT AirportCode) FROM airports;\t----- bird -----\tflight_2",
    "190": "SELECT COUNT(DISTINCT AirportCode) FROM airports;\t----- bird -----\tflight_2",
    "191": "SELECT COUNT(FlightNo) FROM flights;\t----- bird -----\tflight_2",
    "192": "SELECT COUNT(FlightNo) FROM flights;\t----- bird -----\tflight_2",
    "193": "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';\t----- bird -----\tflight_2",
    "194": "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';\t----- bird -----\tflight_2",
    "195": "SELECT COUNT(*) FROM airlines WHERE Country = 'USA';\t----- bird -----\tflight_2",
    "196": "SELECT COUNT(DISTINCT Airline) FROM airlines WHERE Country = 'USA';\t----- bird -----\tflight_2",
    "197": "SELECT City, Country FROM airports WHERE TRIM(LOWER(AirportName)) = 'alton'\t----- bird -----\tflight_2",
    "198": "SELECT City, Country FROM airports WHERE TRIM(AirportName) = 'Alton'\t----- bird -----\tflight_2",
    "199": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO';\t----- bird -----\tflight_2",
    "200": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'\t----- bird -----\tflight_2",
    "201": "SELECT AirportName FROM airports WHERE LOWER(TRIM(City)) = LOWER(TRIM('Aberdeen'))\t----- bird -----\tflight_2",
    "202": "SELECT AirportName FROM airports WHERE TRIM(LOWER(City)) = 'aberdeen'\t----- bird -----\tflight_2",
    "203": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';\t----- bird -----\tflight_2",
    "204": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';\t----- bird -----\tflight_2",
    "205": "SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';\t----- bird -----\tflight_2",
    "206": "SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';\t----- bird -----\tflight_2",
    "207": "SELECT COUNT(T1.FlightNo) FROM flights AS T1 INNER JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'\t----- bird -----\tflight_2",
    "208": "SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');\t----- bird -----\tflight_2",
    "209": "SELECT COUNT(*) FROM flights AS T1 INNER JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'\t----- bird -----\tflight_2",
    "210": "SELECT COUNT(FlightNo) FROM flights AS T1 INNER JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'\t----- bird -----\tflight_2",
    "211": "SELECT COUNT(F.FlightNo) FROM flights AS F INNER JOIN airports AS A1 ON F.SourceAirport = A1.AirportCode INNER JOIN airports AS A2 ON F.DestAirport = A2.AirportCode WHERE A1.City = 'Aberdeen' AND A2.City = 'Ashley'\t----- bird -----\tflight_2",
    "212": "SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley')\t----- bird -----\tflight_2",
    "213": "SELECT COUNT(*) FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'JetBlue Airways';\t----- bird -----\tflight_2",
    "214": "SELECT COUNT(*) FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'Jetblue Airways'\t----- bird -----\tflight_2",
    "215": "SELECT COUNT(f.FlightNo) FROM flights AS f INNER JOIN airlines AS a ON f.Airline = a.uid WHERE a.Airline = 'United Airlines' AND f.DestAirport = 'ASY'\t----- bird -----\tflight_2",
    "216": "SELECT COUNT(*) FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Abbreviation = 'UAL') AND DestAirport = 'ASY';\t----- bird -----\tflight_2",
    "217": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'AHD' AND Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')\t----- bird -----\tflight_2",
    "218": "SELECT COUNT(F.flightNo) FROM flights AS F INNER JOIN airlines AS A ON F.Airline = A.uid WHERE F.SourceAirport = 'AHD' AND A.Airline = 'United Airlines'\t----- bird -----\tflight_2",
    "219": "SELECT COUNT(T1.FlightNo) FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid INNER JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T2.Airline = 'United Airlines' AND T3.City = 'Aberdeen'\t----- bird -----\tflight_2",
    "220": "SELECT COUNT(F1.FlightNo) FROM flights AS F1 INNER JOIN airports AS A1 ON F1.DestAirport = A1.AirportCode INNER JOIN airlines AS AL1 ON F1.Airline = AL1.uid WHERE AL1.Airline = 'United Airlines' AND A1.City = 'Aberdeen'\t----- bird -----\tflight_2",
    "221": "SELECT A.City, COUNT(F.DestAirport) FROM airports AS A INNER JOIN flights AS F ON TRIM(A.AirportCode) = TRIM(F.DestAirport) GROUP BY A.City ORDER BY COUNT(F.DestAirport) DESC LIMIT 1\t----- bird -----\tflight_2",
    "222": "SELECT A.City, F.DestAirport, COUNT(*) AS FlightCount FROM flights AS F INNER JOIN airports AS A ON F.DestAirport = A.AirportCode GROUP BY F.DestAirport ORDER BY FlightCount DESC LIMIT 1\t----- bird -----\tflight_2",
    "223": "SELECT T2.City, COUNT(T1.SourceAirport) AS FlightCount FROM flights AS T1 INNER JOIN airports AS T2 ON TRIM(T1.SourceAirport) = TRIM(T2.AirportCode) GROUP BY T2.City ORDER BY FlightCount DESC LIMIT 1\t----- bird -----\tflight_2",
    "224": "SELECT T2.City, COUNT(T1.SourceAirport) AS frequency FROM flights AS T1 INNER JOIN airports AS T2 ON TRIM(T1.SourceAirport) = TRIM(T2.AirportCode) GROUP BY T2.City ORDER BY frequency DESC LIMIT 1\t----- bird -----\tflight_2",
    "225": "SELECT AirportCode FROM (SELECT AirportCode, COUNT(*) AS flight_count FROM (SELECT SourceAirport AS AirportCode FROM flights UNION ALL SELECT DestAirport AS AirportCode FROM flights) GROUP BY AirportCode) ORDER BY flight_count DESC LIMIT 1\t----- bird -----\tflight_2",
    "226": "SELECT airport_code FROM (     SELECT SourceAirport AS airport_code, COUNT(*) AS flight_count FROM flights GROUP BY SourceAirport      UNION ALL      SELECT DestAirport AS airport_code, COUNT(*) AS flight_count FROM flights GROUP BY DestAirport ) AS combined GROUP BY airport_code ORDER BY SUM(flight_count) DESC LIMIT 1\t----- bird -----\tflight_2",
    "227": "SELECT airport_code FROM (     SELECT airport_code, COUNT(*) AS total_flights      FROM (         SELECT SourceAirport AS airport_code FROM flights          UNION ALL          SELECT DestAirport AS airport_code FROM flights     )      GROUP BY airport_code )  ORDER BY total_flights ASC  LIMIT 1\t----- bird -----\tflight_2",
    "228": "SELECT AirportCode FROM (     SELECT SourceAirport AS AirportCode FROM flights     UNION ALL     SELECT DestAirport AS AirportCode FROM flights ) AS CombinedFlights GROUP BY AirportCode ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\tflight_2",
    "229": "SELECT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid GROUP BY T2.Airline ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tflight_2",
    "230": "SELECT T1.Airline, COUNT(T2.FlightNo) AS FlightCount FROM flights AS T2 INNER JOIN airlines AS T1 ON T2.Airline = T1.uid GROUP BY T1.Airline ORDER BY FlightCount DESC LIMIT 1\t----- bird -----\tflight_2",
    "231": "SELECT T1.Abbreviation, T1.Country FROM airlines AS T1 INNER JOIN (SELECT Airline, COUNT(FlightNo) AS FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount ASC LIMIT 1) AS T2 ON T1.uid = T2.Airline;\t----- bird -----\tflight_2",
    "232": "SELECT T1.Abbreviation, T1.Country  FROM airlines AS T1  INNER JOIN (SELECT Airline, COUNT(FlightNo) AS flight_count              FROM flights              GROUP BY Airline              ORDER BY flight_count ASC              LIMIT 1) AS T2  ON T1.uid = T2.Airline\t----- bird -----\tflight_2",
    "233": "--error--\t----- bird -----\tflight_2",
    "234": "SELECT DISTINCT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE TRIM(T1.SourceAirport) = 'AHD'\t----- bird -----\tflight_2",
    "235": "SELECT DISTINCT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE TRIM(T1.DestAirport) = 'AHD'\t----- bird -----\tflight_2",
    "236": "SELECT DISTINCT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE UPPER(TRIM(T1.DestAirport)) = 'AHD'\t----- bird -----\tflight_2",
    "237": "SELECT DISTINCT T2.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport IN ('APG', 'CVO') GROUP BY T2.Airline HAVING COUNT(DISTINCT T1.SourceAirport) = 2\t----- bird -----\tflight_2",
    "238": "SELECT Airline FROM flights WHERE SourceAirport IN ('APG', 'CVO') GROUP BY Airline HAVING COUNT(SourceAirport) = 2\t----- bird -----\tflight_2",
    "239": "SELECT DISTINCT T1.Airline FROM flights AS T1 WHERE T1.SourceAirport = 'CVO' AND T1.Airline NOT IN (SELECT T2.Airline FROM flights AS T2 WHERE T2.SourceAirport = 'APG')\t----- bird -----\tflight_2",
    "240": "SELECT DISTINCT A.Airline FROM airlines AS A INNER JOIN flights AS F ON A.uid = F.Airline WHERE F.SourceAirport = 'CVO' AND A.uid NOT IN (SELECT F2.Airline FROM flights AS F2 WHERE F2.SourceAirport = 'APG')\t----- bird -----\tflight_2",
    "241": "SELECT T1.Airline FROM airlines AS T1 LEFT JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(T2.FlightNo) >= 10\t----- bird -----\tflight_2",
    "242": "SELECT T1.Airline FROM flights AS T1 GROUP BY T1.Airline HAVING COUNT(T1.FlightNo) >= 10\t----- bird -----\tflight_2",
    "243": "SELECT T2.Airline FROM airlines AS T2 INNER JOIN flights AS T1 ON T2.uid = T1.Airline GROUP BY T2.Airline HAVING COUNT(T1.FlightNo) < 200\t----- bird -----\tflight_2",
    "244": "SELECT T2.Airline FROM airlines AS T2 INNER JOIN (SELECT Airline, COUNT(*) AS FlightCount FROM flights GROUP BY Airline HAVING COUNT(*) < 200) AS T1 ON T2.uid = T1.Airline\t----- bird -----\tflight_2",
    "245": "SELECT T1.FlightNo FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'United Airlines'\t----- bird -----\tflight_2",
    "246": "SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines');\t----- bird -----\tflight_2",
    "247": "SELECT FlightNo FROM flights WHERE TRIM(UPPER(SourceAirport)) = 'APG'\t----- bird -----\tflight_2",
    "248": "SELECT FlightNo FROM flights WHERE TRIM(UPPER(SourceAirport)) = 'APG'\t----- bird -----\tflight_2",
    "249": "SELECT FlightNo FROM flights WHERE TRIM(UPPER(DestAirport)) = 'APG';\t----- bird -----\tflight_2",
    "250": "SELECT FlightNo FROM flights WHERE TRIM(UPPER(DestAirport)) = 'APG'\t----- bird -----\tflight_2",
    "251": "SELECT T1.FlightNo FROM flights AS T1 INNER JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'\t----- bird -----\tflight_2",
    "252": "SELECT FlightNo FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')\t----- bird -----\tflight_2",
    "253": "SELECT F.FlightNo FROM flights AS F INNER JOIN airports AS A ON F.DestAirport = A.AirportCode WHERE LOWER(A.City) = 'aberdeen'\t----- bird -----\tflight_2",
    "254": "SELECT FlightNo FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE LOWER(City) = 'aberdeen')\t----- bird -----\tflight_2",
    "255": "SELECT COUNT(*) FROM flights AS T1 INNER JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City IN ('Aberdeen', 'Abilene')\t----- bird -----\tflight_2",
    "256": "SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));\t----- bird -----\tflight_2",
    "257": "SELECT AirportName FROM airports WHERE NOT EXISTS (SELECT 1 FROM flights WHERE flights.SourceAirport = airports.AirportCode OR flights.DestAirport = airports.AirportCode)\t----- bird -----\tflight_2",
    "258": "SELECT a.AirportName  FROM airports AS a  LEFT JOIN flights AS f1 ON a.AirportCode = f1.SourceAirport  LEFT JOIN flights AS f2 ON a.AirportCode = f2.DestAirport  WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL\t----- bird -----\tflight_2",
    "259": "SELECT COUNT(DISTINCT Employee_ID) FROM employee;\t----- bird -----\temployee_hire_evaluation",
    "260": "SELECT COUNT(Employee_ID) FROM employee;\t----- bird -----\temployee_hire_evaluation",
    "261": "SELECT Name FROM employee ORDER BY Age ASC;\t----- bird -----\temployee_hire_evaluation",
    "262": "SELECT Name FROM employee ORDER BY Age ASC;\t----- bird -----\temployee_hire_evaluation",
    "263": "SELECT City, COUNT(*) FROM employee GROUP BY City\t----- bird -----\temployee_hire_evaluation",
    "264": "SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City\t----- bird -----\temployee_hire_evaluation",
    "265": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1\t----- bird -----\temployee_hire_evaluation",
    "266": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1\t----- bird -----\temployee_hire_evaluation",
    "267": "SELECT Location, COUNT(*) FROM shop GROUP BY Location\t----- bird -----\temployee_hire_evaluation",
    "268": "SELECT Location, COUNT(*) FROM shop GROUP BY Location\t----- bird -----\temployee_hire_evaluation",
    "269": "SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)\t----- bird -----\temployee_hire_evaluation",
    "270": "SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1)\t----- bird -----\temployee_hire_evaluation",
    "271": "SELECT MIN(Number_products), MAX(Number_products) FROM shop;\t----- bird -----\temployee_hire_evaluation",
    "272": "SELECT MIN(Number_products), MAX(Number_products) FROM shop;\t----- bird -----\temployee_hire_evaluation",
    "273": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;\t----- bird -----\temployee_hire_evaluation",
    "274": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC\t----- bird -----\temployee_hire_evaluation",
    "275": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);\t----- bird -----\temployee_hire_evaluation",
    "276": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);\t----- bird -----\temployee_hire_evaluation",
    "277": "SELECT T1.Name FROM employee AS T1 INNER JOIN (SELECT Employee_ID, COUNT(Year_awarded) AS Award_Count FROM evaluation GROUP BY Employee_ID) AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Award_Count DESC LIMIT 1\t----- bird -----\temployee_hire_evaluation",
    "278": "SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\temployee_hire_evaluation",
    "279": "SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.Bonus DESC LIMIT 1\t----- bird -----\temployee_hire_evaluation",
    "280": "SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)\t----- bird -----\temployee_hire_evaluation",
    "281": "SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)\t----- bird -----\temployee_hire_evaluation",
    "282": "SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL\t----- bird -----\temployee_hire_evaluation",
    "283": "SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1\t----- bird -----\temployee_hire_evaluation",
    "284": "SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1\t----- bird -----\temployee_hire_evaluation",
    "285": "SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL\t----- bird -----\temployee_hire_evaluation",
    "286": "SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL\t----- bird -----\temployee_hire_evaluation",
    "287": "SELECT T1.Name, COUNT(T2.Employee_ID) AS Employee_Count  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name;\t----- bird -----\temployee_hire_evaluation",
    "288": "SELECT T1.Name, COUNT(T2.Employee_ID) AS Number_of_Employees  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name\t----- bird -----\temployee_hire_evaluation",
    "289": "SELECT SUM(Bonus) FROM evaluation;\t----- bird -----\temployee_hire_evaluation",
    "290": "SELECT SUM(\"Bonus\") FROM evaluation;\t----- bird -----\temployee_hire_evaluation",
    "291": "SELECT * FROM hiring;\t----- bird -----\temployee_hire_evaluation",
    "292": "SELECT * FROM hiring AS H INNER JOIN employee AS E ON H.Employee_ID = E.Employee_ID INNER JOIN shop AS S ON H.Shop_ID = S.Shop_ID\t----- bird -----\temployee_hire_evaluation",
    "293": "SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN Shop_ID END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN Shop_ID END) > 0\t----- bird -----\temployee_hire_evaluation",
    "294": "SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0\t----- bird -----\temployee_hire_evaluation",
    "295": "SELECT COUNT(DISTINCT Location) FROM shop;\t----- bird -----\temployee_hire_evaluation",
    "296": "SELECT COUNT(DISTINCT Location) FROM shop;\t----- bird -----\temployee_hire_evaluation",
    "297": "SELECT COUNT(Document_ID) FROM Documents;\t----- bird -----\tcre_Doc_Template_Mgt",
    "298": "SELECT COUNT(Document_ID) FROM Documents;\t----- bird -----\tcre_Doc_Template_Mgt",
    "299": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;\t----- bird -----\tcre_Doc_Template_Mgt",
    "300": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;\t----- bird -----\tcre_Doc_Template_Mgt",
    "301": "SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'\t----- bird -----\tcre_Doc_Template_Mgt",
    "302": "SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'\t----- bird -----\tcre_Doc_Template_Mgt",
    "303": "SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'\t----- bird -----\tcre_Doc_Template_Mgt",
    "304": "SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'\t----- bird -----\tcre_Doc_Template_Mgt",
    "305": "SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Template_ID IS NOT NULL\t----- bird -----\tcre_Doc_Template_Mgt",
    "306": "SELECT COUNT(DISTINCT Template_ID) FROM Templates WHERE Template_ID IN (SELECT DISTINCT Template_ID FROM Documents)\t----- bird -----\tcre_Doc_Template_Mgt",
    "307": "SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'\t----- bird -----\tcre_Doc_Template_Mgt",
    "308": "SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'\t----- bird -----\tcre_Doc_Template_Mgt",
    "309": "SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID\t----- bird -----\tcre_Doc_Template_Mgt",
    "310": "SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID;\t----- bird -----\tcre_Doc_Template_Mgt",
    "311": "SELECT T1.Template_ID, T2.Template_Type_Code FROM Templates AS T2 INNER JOIN Documents AS T1 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T2.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "312": "SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "313": "SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "314": "SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "315": "SELECT T.Template_ID FROM Templates AS T LEFT JOIN Documents AS D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL\t----- bird -----\tcre_Doc_Template_Mgt",
    "316": "SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL\t----- bird -----\tcre_Doc_Template_Mgt",
    "317": "SELECT COUNT(*) FROM Templates;\t----- bird -----\tcre_Doc_Template_Mgt",
    "318": "SELECT COUNT(*) FROM Templates;\t----- bird -----\tcre_Doc_Template_Mgt",
    "319": "SELECT T1.Template_ID, T1.Version_Number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code\t----- bird -----\tcre_Doc_Template_Mgt",
    "320": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates\t----- bird -----\tcre_Doc_Template_Mgt",
    "321": "SELECT DISTINCT Template_Type_Code FROM Templates;\t----- bird -----\tcre_Doc_Template_Mgt",
    "322": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;\t----- bird -----\tcre_Doc_Template_Mgt",
    "323": "SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')\t----- bird -----\tcre_Doc_Template_Mgt",
    "324": "SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')\t----- bird -----\tcre_Doc_Template_Mgt",
    "325": "SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';\t----- bird -----\tcre_Doc_Template_Mgt",
    "326": "SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';\t----- bird -----\tcre_Doc_Template_Mgt",
    "327": "SELECT T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Version_Number > 5\t----- bird -----\tcre_Doc_Template_Mgt",
    "328": "SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number > 5;\t----- bird -----\tcre_Doc_Template_Mgt",
    "329": "SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code\t----- bird -----\tcre_Doc_Template_Mgt",
    "330": "SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code\t----- bird -----\tcre_Doc_Template_Mgt",
    "331": "SELECT Template_Type_Code, COUNT(*) AS Template_Count FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Count DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "332": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "333": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3\t----- bird -----\tcre_Doc_Template_Mgt",
    "334": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3\t----- bird -----\tcre_Doc_Template_Mgt",
    "335": "SELECT MIN(T1.Version_Number), T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2  ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  ORDER BY MIN(T1.Version_Number) ASC  LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "336": "SELECT T1.Version_Number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)\t----- bird -----\tcre_Doc_Template_Mgt",
    "337": "SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'\t----- bird -----\tcre_Doc_Template_Mgt",
    "338": "SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'\t----- bird -----\tcre_Doc_Template_Mgt",
    "339": "SELECT T2.Document_Name FROM Documents AS T2 INNER JOIN Templates AS T1 ON T2.Template_ID = T1.Template_ID WHERE T1.Template_Type_Code = 'BK'\t----- bird -----\tcre_Doc_Template_Mgt",
    "340": "SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'\t----- bird -----\tcre_Doc_Template_Mgt",
    "341": "SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code\t----- bird -----\tcre_Doc_Template_Mgt",
    "342": "SELECT T1.Template_Type_Code, COUNT(T3.Document_ID) AS Document_Count FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code\t----- bird -----\tcre_Doc_Template_Mgt",
    "343": "SELECT T.Template_Type_Code, COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID GROUP BY T.Template_Type_Code ORDER BY COUNT(D.Document_ID) DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "344": "SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "345": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Template_ID IS NULL\t----- bird -----\tcre_Doc_Template_Mgt",
    "346": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT T.Template_Type_Code FROM Documents D INNER JOIN Templates T ON D.Template_ID = T.Template_ID)\t----- bird -----\tcre_Doc_Template_Mgt",
    "347": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types\t----- bird -----\tcre_Doc_Template_Mgt",
    "348": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types\t----- bird -----\tcre_Doc_Template_Mgt",
    "349": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'\t----- bird -----\tcre_Doc_Template_Mgt",
    "350": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';\t----- bird -----\tcre_Doc_Template_Mgt",
    "351": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'\t----- bird -----\tcre_Doc_Template_Mgt",
    "352": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'\t----- bird -----\tcre_Doc_Template_Mgt",
    "353": "SELECT DISTINCT T3.Template_Type_Description FROM Ref_Template_Types AS T3 INNER JOIN Templates AS T2 ON T3.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T1 ON T2.Template_ID = T1.Template_ID\t----- bird -----\tcre_Doc_Template_Mgt",
    "354": "SELECT DISTINCT T3.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code\t----- bird -----\tcre_Doc_Template_Mgt",
    "355": "SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'\t----- bird -----\tcre_Doc_Template_Mgt",
    "356": "SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'\t----- bird -----\tcre_Doc_Template_Mgt",
    "357": "SELECT COUNT(Paragraph_ID) FROM Paragraphs;\t----- bird -----\tcre_Doc_Template_Mgt",
    "358": "SELECT COUNT(Paragraph_ID) FROM Paragraphs;\t----- bird -----\tcre_Doc_Template_Mgt",
    "359": "SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = 'Summer Show')\t----- bird -----\tcre_Doc_Template_Mgt",
    "360": "SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'\t----- bird -----\tcre_Doc_Template_Mgt",
    "361": "SELECT * FROM Paragraphs WHERE TRIM(Paragraph_Text) = 'Korea'\t----- bird -----\tcre_Doc_Template_Mgt",
    "362": "SELECT Paragraph_ID, Paragraph_Text, Other_Details, Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'\t----- bird -----\tcre_Doc_Template_Mgt",
    "363": "SELECT T2.Paragraph_ID, T2.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Welcome to NY'\t----- bird -----\tcre_Doc_Template_Mgt",
    "364": "SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'\t----- bird -----\tcre_Doc_Template_Mgt",
    "365": "SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'\t----- bird -----\tcre_Doc_Template_Mgt",
    "366": "SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'\t----- bird -----\tcre_Doc_Template_Mgt",
    "367": "SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS T1  LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  ORDER BY T1.Document_ID;\t----- bird -----\tcre_Doc_Template_Mgt",
    "368": "SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS NumberOfParagraphs FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID\t----- bird -----\tcre_Doc_Template_Mgt",
    "369": "SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID\t----- bird -----\tcre_Doc_Template_Mgt",
    "370": "SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name\t----- bird -----\tcre_Doc_Template_Mgt",
    "371": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2\t----- bird -----\tcre_Doc_Template_Mgt",
    "372": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2\t----- bird -----\tcre_Doc_Template_Mgt",
    "373": "SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "374": "SELECT D.Document_ID, D.Document_Name  FROM Documents AS D  INNER JOIN (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count              FROM Paragraphs              GROUP BY Document_ID              ORDER BY Paragraph_Count DESC              LIMIT 1) AS P  ON D.Document_ID = P.Document_ID;\t----- bird -----\tcre_Doc_Template_Mgt",
    "375": "SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "376": "SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1\t----- bird -----\tcre_Doc_Template_Mgt",
    "377": "SELECT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2\t----- bird -----\tcre_Doc_Template_Mgt",
    "378": "SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_Text) BETWEEN 1 AND 2\t----- bird -----\tcre_Doc_Template_Mgt",
    "379": "SELECT T1.Document_ID  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T2.Paragraph_Text) = 2;\t----- bird -----\tcre_Doc_Template_Mgt",
    "380": "SELECT DISTINCT P1.Document_ID  FROM Paragraphs AS P1  INNER JOIN Paragraphs AS P2 ON P1.Document_ID = P2.Document_ID  WHERE P1.Paragraph_Text = 'Brazil' AND P2.Paragraph_Text = 'Ireland'\t----- bird -----\tcre_Doc_Template_Mgt",
    "381": "SELECT COUNT(*) FROM teacher;\t----- bird -----\tcourse_teach",
    "382": "SELECT COUNT(*) FROM teacher;\t----- bird -----\tcourse_teach",
    "383": "SELECT T1.Name FROM teacher AS T1 ORDER BY T1.Age ASC\t----- bird -----\tcourse_teach",
    "384": "SELECT Name FROM teacher ORDER BY Age ASC;\t----- bird -----\tcourse_teach",
    "385": "SELECT Age, Hometown FROM teacher\t----- bird -----\tcourse_teach",
    "386": "SELECT Age, Hometown FROM teacher\t----- bird -----\tcourse_teach",
    "387": "SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'\t----- bird -----\tcourse_teach",
    "388": "SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';\t----- bird -----\tcourse_teach",
    "389": "SELECT Name FROM teacher WHERE Age IN ('32', '33');\t----- bird -----\tcourse_teach",
    "390": "SELECT Name FROM teacher WHERE Age IN ('32', '33');\t----- bird -----\tcourse_teach",
    "391": "SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);\t----- bird -----\tcourse_teach",
    "392": "SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)\t----- bird -----\tcourse_teach",
    "393": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown\t----- bird -----\tcourse_teach",
    "394": "SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown\t----- bird -----\tcourse_teach",
    "395": "SELECT Hometown FROM (SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown) ORDER BY count DESC LIMIT 1\t----- bird -----\tcourse_teach",
    "396": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcourse_teach",
    "397": "SELECT LOWER(Hometown) AS Hometown FROM teacher GROUP BY LOWER(Hometown) HAVING COUNT(DISTINCT Teacher_ID) >= 2\t----- bird -----\tcourse_teach",
    "398": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2\t----- bird -----\tcourse_teach",
    "399": "SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID\t----- bird -----\tcourse_teach",
    "400": "SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID\t----- bird -----\tcourse_teach",
    "401": "SELECT T2.Name, T3.Course FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID ORDER BY T2.Name ASC\t----- bird -----\tcourse_teach",
    "402": "SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC\t----- bird -----\tcourse_teach",
    "403": "SELECT T3.Name FROM teacher AS T3 INNER JOIN course_arrange AS T2 ON T3.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T1 ON T2.Course_ID = T1.Course_ID WHERE T1.Course = 'Math'\t----- bird -----\tcourse_teach",
    "404": "SELECT DISTINCT T2.Name FROM course AS T1 INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID WHERE T1.Course = 'Math'\t----- bird -----\tcourse_teach",
    "405": "SELECT T1.Name, COUNT(T2.Course_ID) AS NumberOfCourses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name\t----- bird -----\tcourse_teach",
    "406": "SELECT T1.Name, COUNT(DISTINCT T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name\t----- bird -----\tcourse_teach",
    "407": "SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2\t----- bird -----\tcourse_teach",
    "408": "SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(DISTINCT T1.Course_ID) >= 2\t----- bird -----\tcourse_teach",
    "409": "SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL\t----- bird -----\tcourse_teach",
    "410": "SELECT DISTINCT T1.Name  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  WHERE T2.Course_ID IS NULL\t----- bird -----\tcourse_teach",
    "411": "SELECT COUNT(*) FROM visitor WHERE Age < 30;\t----- bird -----\tmuseum_visit",
    "412": "SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;\t----- bird -----\tmuseum_visit",
    "413": "SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;\t----- bird -----\tmuseum_visit",
    "414": "SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC\t----- bird -----\tmuseum_visit",
    "415": "SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)\t----- bird -----\tmuseum_visit",
    "416": "SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';\t----- bird -----\tmuseum_visit",
    "417": "SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';\t----- bird -----\tmuseum_visit",
    "418": "SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')\t----- bird -----\tmuseum_visit",
    "419": "SELECT T2.ID, T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN (SELECT Museum_ID, visitor_ID, COUNT(*) AS VisitCount              FROM visit              GROUP BY visitor_ID              HAVING COUNT(*) > 1) AS T1  ON T2.ID = T1.visitor_ID\t----- bird -----\tmuseum_visit",
    "420": "SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS TotalSpent FROM visit GROUP BY visitor_ID ORDER BY TotalSpent DESC LIMIT 1) AS T2 ON T1.ID = T2.visitor_ID\t----- bird -----\tmuseum_visit",
    "421": "SELECT T1.Museum_ID, T2.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID, T2.Name ORDER BY COUNT(T1.visitor_ID) DESC LIMIT 1\t----- bird -----\tmuseum_visit",
    "422": "SELECT T1.Name FROM museum AS T1 WHERE T1.Museum_ID NOT IN (SELECT Museum_ID FROM visit);\t----- bird -----\tmuseum_visit",
    "423": "SELECT T2.Name, T2.Age FROM visitor AS T2 INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)\t----- bird -----\tmuseum_visit",
    "424": "SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS max_tickets FROM visit;\t----- bird -----\tmuseum_visit",
    "425": "SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1\t----- bird -----\tmuseum_visit",
    "426": "SELECT DISTINCT T1.Name FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID  WHERE T3.Open_Year < '2009'  AND T2.visitor_ID IN (     SELECT T4.visitor_ID FROM visit AS T4      INNER JOIN museum AS T5 ON T4.Museum_ID = T5.Museum_ID      WHERE T5.Open_Year > '2011' )\t----- bird -----\tmuseum_visit",
    "427": "SELECT COUNT(DISTINCT v.ID) FROM visitor AS v WHERE v.ID NOT IN (SELECT DISTINCT v2.visitor_ID FROM visit AS v2 INNER JOIN museum AS m ON v2.Museum_ID = m.Museum_ID WHERE m.Open_Year > '2010')\t----- bird -----\tmuseum_visit",
    "428": "SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'\t----- bird -----\tmuseum_visit",
    "429": "SELECT COUNT(*) FROM players;\t----- bird -----\twta_1",
    "430": "SELECT COUNT(*) FROM players;\t----- bird -----\twta_1",
    "431": "SELECT COUNT(*) FROM matches;\t----- bird -----\twta_1",
    "432": "SELECT COUNT(*) FROM matches;\t----- bird -----\twta_1",
    "433": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';\t----- bird -----\twta_1",
    "434": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';\t----- bird -----\twta_1",
    "435": "SELECT AVG(age) FROM (     SELECT winner_age AS age FROM matches     UNION ALL     SELECT loser_age AS age FROM matches )\t----- bird -----\twta_1",
    "436": "SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches\t----- bird -----\twta_1",
    "437": "SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;\t----- bird -----\twta_1",
    "438": "SELECT AVG(winner_rank) FROM matches;\t----- bird -----\twta_1",
    "439": "SELECT MAX(loser_rank) FROM matches;\t----- bird -----\twta_1",
    "440": "SELECT MIN(loser_rank) FROM matches;\t----- bird -----\twta_1",
    "441": "SELECT COUNT(DISTINCT country_code) FROM players;\t----- bird -----\twta_1",
    "442": "SELECT COUNT(DISTINCT country_code) FROM players;\t----- bird -----\twta_1",
    "443": "SELECT COUNT(DISTINCT loser_name) FROM matches;\t----- bird -----\twta_1",
    "444": "SELECT COUNT(DISTINCT loser_name) FROM matches;\t----- bird -----\twta_1",
    "445": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10\t----- bird -----\twta_1",
    "446": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10\t----- bird -----\twta_1",
    "447": "SELECT DISTINCT T3.first_name, T3.last_name  FROM matches AS T1  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T3.player_id  HAVING COUNT(DISTINCT T1.year) = 2;\t----- bird -----\twta_1",
    "448": "SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2\t----- bird -----\twta_1",
    "449": "SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);\t----- bird -----\twta_1",
    "450": "SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);\t----- bird -----\twta_1",
    "451": "SELECT T1.country_code, T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY T1.player_id HAVING COUNT(DISTINCT T2.tourney_name) = 2\t----- bird -----\twta_1",
    "452": "SELECT DISTINCT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  INNER JOIN matches AS T3 ON T1.player_id = T3.winner_id  WHERE T2.tourney_name = 'WTA Championships'  AND T3.tourney_name = 'Australian Open'\t----- bird -----\twta_1",
    "453": "SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1\t----- bird -----\twta_1",
    "454": "SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1\t----- bird -----\twta_1",
    "455": "SELECT first_name, last_name FROM players ORDER BY birth_date ASC;\t----- bird -----\twta_1",
    "456": "SELECT CAST(first_name || ' ' || last_name AS TEXT) AS full_name FROM players ORDER BY birth_date\t----- bird -----\twta_1",
    "457": "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;\t----- bird -----\twta_1",
    "458": "SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC\t----- bird -----\twta_1",
    "459": "WITH TourCounts AS (SELECT player_id, COUNT(tours) AS tour_count FROM rankings GROUP BY player_id) SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN TourCounts AS T2 ON T1.player_id = T2.player_id  WHERE T2.tour_count = (SELECT MAX(tour_count) FROM TourCounts);\t----- bird -----\twta_1",
    "460": "SELECT T2.first_name, T2.country_code  FROM players AS T2  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T1  ON T2.player_id = T1.player_id\t----- bird -----\twta_1",
    "461": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\twta_1",
    "462": "SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1\t----- bird -----\twta_1",
    "463": "SELECT T1.first_name, T1.last_name, T3.ranking_points FROM players AS T1 INNER JOIN (SELECT winner_id, COUNT(*) AS win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1) AS T2 ON T1.player_id = T2.winner_id INNER JOIN rankings AS T3 ON T1.player_id = T3.player_id ORDER BY T3.ranking_date DESC LIMIT 1\t----- bird -----\twta_1",
    "464": "SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM players AS P  INNER JOIN (SELECT winner_id, COUNT(*) AS match_count              FROM matches              GROUP BY winner_id              ORDER BY match_count DESC              LIMIT 1) AS M ON P.player_id = M.winner_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE R.ranking_date = (SELECT MAX(ranking_date) FROM rankings WHERE player_id = M.winner_id)\t----- bird -----\twta_1",
    "465": "SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')\t----- bird -----\twta_1",
    "466": "SELECT T1.winner_name FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1\t----- bird -----\twta_1",
    "467": "SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)\t----- bird -----\twta_1",
    "468": "SELECT W.first_name || ' ' || W.last_name AS winner_name, L.first_name || ' ' || L.last_name AS loser_name FROM matches AS M INNER JOIN players AS W ON M.winner_id = W.player_id INNER JOIN players AS L ON M.loser_id = L.player_id WHERE M.minutes = (SELECT MAX(minutes) FROM matches)\t----- bird -----\twta_1",
    "469": "SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM rankings INNER JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name\t----- bird -----\twta_1",
    "470": "SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name\t----- bird -----\twta_1",
    "471": "SELECT T2.first_name, SUM(T1.ranking_points) FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name\t----- bird -----\twta_1",
    "472": "SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name\t----- bird -----\twta_1",
    "473": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code\t----- bird -----\twta_1",
    "474": "SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code\t----- bird -----\twta_1",
    "475": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\twta_1",
    "476": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1\t----- bird -----\twta_1",
    "477": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;\t----- bird -----\twta_1",
    "478": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50\t----- bird -----\twta_1",
    "479": "SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date\t----- bird -----\twta_1",
    "480": "SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date\t----- bird -----\twta_1",
    "481": "SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year\t----- bird -----\twta_1",
    "482": "SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year\t----- bird -----\twta_1",
    "483": "SELECT T2.first_name, T2.last_name, R.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS R ON T2.player_id = R.player_id ORDER BY T2.birth_date DESC LIMIT 3\t----- bird -----\twta_1",
    "484": "SELECT T2.first_name, T2.last_name, T3.ranking  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  ORDER BY T2.birth_date DESC  LIMIT 3\t----- bird -----\twta_1",
    "485": "SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'L' AND T1.tourney_name = 'WTA Championships'\t----- bird -----\twta_1",
    "486": "SELECT COUNT(*) FROM matches AS M INNER JOIN players AS P ON M.winner_id = P.player_id WHERE P.hand = 'L' AND M.tourney_name = 'WTA Championships'\t----- bird -----\twta_1",
    "487": "SELECT T2.first_name, T2.country_code, T2.birth_date FROM players AS T2 WHERE T2.player_id = (SELECT T1.winner_id FROM matches AS T1 ORDER BY T1.winner_rank_points DESC LIMIT 1)\t----- bird -----\twta_1",
    "488": "SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN (SELECT winner_id, SUM(winner_rank_points) AS total_points FROM matches GROUP BY winner_id ORDER BY total_points DESC LIMIT 1) AS T2 ON T1.player_id = T2.winner_id\t----- bird -----\twta_1",
    "489": "SELECT hand, COUNT(player_id) AS player_count FROM players GROUP BY hand\t----- bird -----\twta_1",
    "490": "SELECT hand, COUNT(*) FROM players GROUP BY hand\t----- bird -----\twta_1",
    "491": "SELECT COUNT(id) FROM ship WHERE disposition_of_ship = 'Captured';\t----- bird -----\tbattle_death",
    "492": "SELECT name, tonnage FROM ship ORDER BY name DESC;\t----- bird -----\tbattle_death",
    "493": "SELECT name, date, result FROM battle\t----- bird -----\tbattle_death",
    "494": "SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id\t----- bird -----\tbattle_death",
    "495": "SELECT AVG(injured) FROM death WHERE injured IS NOT NULL;\t----- bird -----\tbattle_death",
    "496": "SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'\t----- bird -----\tbattle_death",
    "497": "SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril';\t----- bird -----\tbattle_death",
    "498": "SELECT DISTINCT T3.id, T3.name FROM battle AS T3 INNER JOIN ship AS T2 ON T3.id = T2.lost_in_battle INNER JOIN death AS T1 ON T2.id = T1.caused_by_ship_id WHERE T2.ship_type = 'Brig'\t----- bird -----\tbattle_death",
    "499": "SELECT T2.id, T2.name  FROM battle AS T2  INNER JOIN (SELECT caused_by_ship_id, SUM(killed) AS total_killed              FROM death              GROUP BY caused_by_ship_id              HAVING total_killed > 10) AS T1  ON T2.id = T1.caused_by_ship_id\t----- bird -----\tbattle_death",
    "500": "SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1\t----- bird -----\tbattle_death",
    "501": "SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';\t----- bird -----\tbattle_death",
    "502": "SELECT COUNT(DISTINCT result) FROM battle;\t----- bird -----\tbattle_death",
    "503": "SELECT COUNT(*) FROM battle AS B WHERE NOT EXISTS (SELECT 1 FROM ship AS S WHERE S.lost_in_battle = B.id AND S.tonnage = '225')\t----- bird -----\tbattle_death",
    "504": "SELECT T3.name, T3.date FROM ship AS T1 INNER JOIN battle AS T3 ON T1.lost_in_battle = T3.id WHERE T1.name IN ('Lettice', 'HMS Atalanta') GROUP BY T3.name, T3.date HAVING COUNT(DISTINCT T1.name) = 2\t----- bird -----\tbattle_death",
    "505": "SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle AND T2.location = 'English Channel' WHERE T2.id IS NULL\t----- bird -----\tbattle_death",
    "506": "SELECT note FROM death WHERE note LIKE '%East%'\t----- bird -----\tbattle_death",
    "507": "SELECT line_1, line_2 FROM Addresses;\t----- bird -----\tstudent_transcripts_tracking",
    "508": "SELECT line_1, line_2 FROM Addresses;\t----- bird -----\tstudent_transcripts_tracking",
    "509": "SELECT COUNT(*) FROM Courses;\t----- bird -----\tstudent_transcripts_tracking",
    "510": "SELECT COUNT(DISTINCT course_id) FROM Courses;\t----- bird -----\tstudent_transcripts_tracking",
    "511": "SELECT course_description FROM Courses WHERE course_name = 'math';\t----- bird -----\tstudent_transcripts_tracking",
    "512": "SELECT course_description FROM Courses WHERE course_name LIKE '%math%'\t----- bird -----\tstudent_transcripts_tracking",
    "513": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';\t----- bird -----\tstudent_transcripts_tracking",
    "514": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';\t----- bird -----\tstudent_transcripts_tracking",
    "515": "SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_name, T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "516": "SELECT D.department_id, D.department_name  FROM Departments AS D  INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id  GROUP BY D.department_id, D.department_name  ORDER BY COUNT(DP.degree_program_id) DESC  LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "517": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs WHERE department_id IS NOT NULL;\t----- bird -----\tstudent_transcripts_tracking",
    "518": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;\t----- bird -----\tstudent_transcripts_tracking",
    "519": "SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs\t----- bird -----\tstudent_transcripts_tracking",
    "520": "SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;\t----- bird -----\tstudent_transcripts_tracking",
    "521": "SELECT COUNT(T1.degree_program_id) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'\t----- bird -----\tstudent_transcripts_tracking",
    "522": "SELECT COUNT(degree_program_id) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');\t----- bird -----\tstudent_transcripts_tracking",
    "523": "SELECT section_name, section_description FROM Sections\t----- bird -----\tstudent_transcripts_tracking",
    "524": "SELECT section_name, section_description FROM Sections;\t----- bird -----\tstudent_transcripts_tracking",
    "525": "SELECT C.course_id, C.course_name  FROM Courses AS C  INNER JOIN (SELECT course_id, COUNT(section_id) AS section_count              FROM Sections              GROUP BY course_id              HAVING COUNT(section_id) <= 2) AS S  ON C.course_id = S.course_id\t----- bird -----\tstudent_transcripts_tracking",
    "526": "SELECT C.course_id, C.course_name FROM Courses AS C LEFT JOIN Sections AS S ON C.course_id = S.course_id GROUP BY C.course_id, C.course_name HAVING COUNT(S.section_id) < 2\t----- bird -----\tstudent_transcripts_tracking",
    "527": "SELECT section_name FROM Sections ORDER BY section_name DESC\t----- bird -----\tstudent_transcripts_tracking",
    "528": "SELECT section_name FROM Sections ORDER BY section_name DESC\t----- bird -----\tstudent_transcripts_tracking",
    "529": "SELECT T2.semester_name, T2.semester_id FROM Semesters AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "530": "SELECT S.semester_id, S.semester_name  FROM Semesters AS S  INNER JOIN (SELECT semester_id, COUNT(student_enrolment_id) AS student_count              FROM Student_Enrolment              GROUP BY semester_id) AS counts  ON S.semester_id = counts.semester_id  ORDER BY counts.student_count DESC  LIMIT 1;\t----- bird -----\tstudent_transcripts_tracking",
    "531": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'\t----- bird -----\tstudent_transcripts_tracking",
    "532": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'\t----- bird -----\tstudent_transcripts_tracking",
    "533": "SELECT first_name, middle_name, last_name, student_id FROM Students AS S WHERE student_id IN (SELECT student_id FROM Student_Enrolment GROUP BY student_id, semester_id HAVING COUNT(DISTINCT degree_program_id) = 2)\t----- bird -----\tstudent_transcripts_tracking",
    "534": "SELECT first_name, middle_name, last_name, student_id FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment GROUP BY student_id, semester_id HAVING COUNT(DISTINCT degree_program_id) = 2)\t----- bird -----\tstudent_transcripts_tracking",
    "535": "SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'\t----- bird -----\tstudent_transcripts_tracking",
    "536": "SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'\t----- bird -----\tstudent_transcripts_tracking",
    "537": "SELECT T2.degree_summary_name, COUNT(T1.student_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY enrollment_count DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "538": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "539": "SELECT T1.degree_program_id, T1.degree_summary_description FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "540": "SELECT DP.degree_program_id, DP.degree_summary_name  FROM Degree_Programs AS DP  INNER JOIN (      SELECT student_enrolment.degree_program_id, COUNT(*) AS student_count      FROM Student_Enrolment AS student_enrolment      GROUP BY student_enrolment.degree_program_id      ORDER BY student_count DESC      LIMIT 1 ) AS Enrolled ON DP.degree_program_id = Enrolled.degree_program_id\t----- bird -----\tstudent_transcripts_tracking",
    "541": "SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY enrollment_count DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "542": "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS enrollment_count FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollment_count DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "543": "SELECT T2.semester_name FROM Semesters AS T2 LEFT JOIN Student_Enrolment AS T1 ON T2.semester_id = T1.semester_id WHERE T1.student_enrolment_id IS NULL\t----- bird -----\tstudent_transcripts_tracking",
    "544": "SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL\t----- bird -----\tstudent_transcripts_tracking",
    "545": "SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id\t----- bird -----\tstudent_transcripts_tracking",
    "546": "SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id\t----- bird -----\tstudent_transcripts_tracking",
    "547": "SELECT T2.course_name FROM Courses AS T2 INNER JOIN Student_Enrolment_Courses AS T1 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "548": "SELECT C.course_name FROM Courses AS C INNER JOIN (SELECT course_id, COUNT(student_course_id) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id) AS E ON C.course_id = E.course_id ORDER BY E.enrollment_count DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "549": "SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)\t----- bird -----\tstudent_transcripts_tracking",
    "550": "SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE LOWER(T2.state_province_county) = 'north carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IS NOT NULL)\t----- bird -----\tstudent_transcripts_tracking",
    "551": "SELECT T1.transcript_date, T1.transcript_id  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2\t----- bird -----\tstudent_transcripts_tracking",
    "552": "SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2\t----- bird -----\tstudent_transcripts_tracking",
    "553": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';\t----- bird -----\tstudent_transcripts_tracking",
    "554": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';\t----- bird -----\tstudent_transcripts_tracking",
    "555": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "556": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "557": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "558": "SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)\t----- bird -----\tstudent_transcripts_tracking",
    "559": "SELECT T1.first_name FROM Students AS T1 WHERE T1.permanent_address_id <> T1.current_address_id\t----- bird -----\tstudent_transcripts_tracking",
    "560": "SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;\t----- bird -----\tstudent_transcripts_tracking",
    "561": "SELECT A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode, A.country  FROM Addresses AS A  INNER JOIN (SELECT current_address_id, COUNT(*) AS student_count              FROM Students              GROUP BY current_address_id              ORDER BY student_count DESC              LIMIT 1) AS S  ON A.address_id = S.current_address_id\t----- bird -----\tstudent_transcripts_tracking",
    "562": "SELECT A.address_id, A.line_1, A.line_2  FROM Addresses A  INNER JOIN (SELECT current_address_id, COUNT(*) AS student_count              FROM Students              GROUP BY current_address_id              ORDER BY student_count DESC              LIMIT 1) AS S  ON A.address_id = S.current_address_id\t----- bird -----\tstudent_transcripts_tracking",
    "563": "SELECT AVG(transcript_date) FROM Transcripts;\t----- bird -----\tstudent_transcripts_tracking",
    "564": "SELECT DATETIME(AVG(STRFTIME('%s', transcript_date)), 'unixepoch') AS average_transcript_date FROM Transcripts\t----- bird -----\tstudent_transcripts_tracking",
    "565": "SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "566": "SELECT T1.transcript_date, T1.other_details FROM Transcripts AS T1 WHERE T1.transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)\t----- bird -----\tstudent_transcripts_tracking",
    "567": "SELECT COUNT(transcript_id) FROM Transcripts;\t----- bird -----\tstudent_transcripts_tracking",
    "568": "SELECT COUNT(transcript_id) FROM Transcripts;\t----- bird -----\tstudent_transcripts_tracking",
    "569": "SELECT MAX(transcript_date) FROM Transcripts;\t----- bird -----\tstudent_transcripts_tracking",
    "570": "SELECT MAX(transcript_date) FROM Transcripts;\t----- bird -----\tstudent_transcripts_tracking",
    "571": "SELECT student_course_id, COUNT(transcript_id) AS enrollment_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY enrollment_count DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "572": "SELECT T1.student_course_id, COUNT(T1.transcript_id) AS count FROM Transcript_Contents AS T1 INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.student_course_id ORDER BY count DESC LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "573": "SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id = (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\tstudent_transcripts_tracking",
    "574": "SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1\t----- bird -----\tstudent_transcripts_tracking",
    "575": "SELECT T3.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  INNER JOIN Semesters AS T3 ON T1.semester_id = T3.semester_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T3.semester_name  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2\t----- bird -----\tstudent_transcripts_tracking",
    "576": "SELECT SE.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY SE.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2\t----- bird -----\tstudent_transcripts_tracking",
    "577": "SELECT COUNT(DISTINCT T1.address_id) FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id\t----- bird -----\tstudent_transcripts_tracking",
    "578": "SELECT DISTINCT A.* FROM Addresses AS A  WHERE A.address_id IN (SELECT S.current_address_id FROM Students AS S)     OR A.address_id IN (SELECT S.permanent_address_id FROM Students AS S);\t----- bird -----\tstudent_transcripts_tracking",
    "579": "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC\t----- bird -----\tstudent_transcripts_tracking",
    "580": "SELECT * FROM Students ORDER BY last_name DESC\t----- bird -----\tstudent_transcripts_tracking",
    "581": "SELECT * FROM Sections WHERE section_name = 'h';\t----- bird -----\tstudent_transcripts_tracking",
    "582": "SELECT section_description FROM Sections WHERE section_name = 'h'\t----- bird -----\tstudent_transcripts_tracking",
    "583": "SELECT S.first_name FROM Students AS S INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582'\t----- bird -----\tstudent_transcripts_tracking",
    "584": "SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'\t----- bird -----\tstudent_transcripts_tracking",
    "585": "SELECT Title FROM Cartoon ORDER BY Title ASC\t----- bird -----\ttvshow",
    "586": "SELECT Title FROM Cartoon ORDER BY Title ASC\t----- bird -----\ttvshow",
    "587": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';\t----- bird -----\ttvshow",
    "588": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\t----- bird -----\ttvshow",
    "589": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';\t----- bird -----\ttvshow",
    "590": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';\t----- bird -----\ttvshow",
    "591": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC\t----- bird -----\ttvshow",
    "592": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date\t----- bird -----\ttvshow",
    "593": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'\t----- bird -----\ttvshow",
    "594": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'\t----- bird -----\ttvshow",
    "595": "SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1\t----- bird -----\ttvshow",
    "596": "SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1\t----- bird -----\ttvshow",
    "597": "SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT content) AS distinct_content_count FROM TV_Channel\t----- bird -----\ttvshow",
    "598": "SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel\t----- bird -----\ttvshow",
    "599": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';\t----- bird -----\ttvshow",
    "600": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'\t----- bird -----\ttvshow",
    "601": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'\t----- bird -----\ttvshow",
    "602": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';\t----- bird -----\ttvshow",
    "603": "SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';\t----- bird -----\ttvshow",
    "604": "SELECT COUNT(id) FROM TV_Channel WHERE Language = 'English'\t----- bird -----\ttvshow",
    "605": "SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1\t----- bird -----\ttvshow",
    "606": "WITH LanguageCounts AS (SELECT `Language`, COUNT(`id`) AS `channel_count` FROM `TV_Channel` GROUP BY `Language`) SELECT `Language`, `channel_count` FROM LanguageCounts WHERE `channel_count` = (SELECT MIN(`channel_count`) FROM LanguageCounts)\t----- bird -----\ttvshow",
    "607": "SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language\t----- bird -----\ttvshow",
    "608": "SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language\t----- bird -----\ttvshow",
    "609": "SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'\t----- bird -----\ttvshow",
    "610": "SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'\t----- bird -----\ttvshow",
    "611": "SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'\t----- bird -----\ttvshow",
    "612": "SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'\t----- bird -----\ttvshow",
    "613": "SELECT Episode FROM TV_series ORDER BY Rating ASC\t----- bird -----\ttvshow",
    "614": "SELECT Episode FROM TV_series ORDER BY Rating DESC\t----- bird -----\ttvshow",
    "615": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\t----- bird -----\ttvshow",
    "616": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;\t----- bird -----\ttvshow",
    "617": "SELECT MIN(Share), MAX(Share) FROM TV_series\t----- bird -----\ttvshow",
    "618": "SELECT MAX(Share), MIN(Share) FROM TV_series\t----- bird -----\ttvshow",
    "619": "SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'\t----- bird -----\ttvshow",
    "620": "SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'\t----- bird -----\ttvshow",
    "621": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';\t----- bird -----\ttvshow",
    "622": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';\t----- bird -----\ttvshow",
    "623": "SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'\t----- bird -----\ttvshow",
    "624": "SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'\t----- bird -----\ttvshow",
    "625": "SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'\t----- bird -----\ttvshow",
    "626": "SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')\t----- bird -----\ttvshow",
    "627": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\t----- bird -----\ttvshow",
    "628": "SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by\t----- bird -----\ttvshow",
    "629": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\t----- bird -----\ttvshow",
    "630": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\t----- bird -----\ttvshow",
    "631": "SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'\t----- bird -----\ttvshow",
    "632": "SELECT \"Package_Option\", \"series_name\" FROM TV_Channel WHERE \"Hight_definition_TV\" = 'yes'\t----- bird -----\ttvshow",
    "633": "SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'\t----- bird -----\ttvshow",
    "634": "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'\t----- bird -----\ttvshow",
    "635": "SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL;\t----- bird -----\ttvshow",
    "636": "SELECT DISTINCT T2.Country FROM TV_Channel AS T2 WHERE T2.id NOT IN (SELECT T1.Channel FROM Cartoon AS T1 WHERE T1.Written_by = 'Todd Casey')\t----- bird -----\ttvshow",
    "637": "SELECT DISTINCT T2.series_name, T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')\t----- bird -----\ttvshow",
    "638": "SELECT DISTINCT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang') GROUP BY T1.series_name, T1.Country HAVING COUNT(DISTINCT T2.Directed_by) = 2\t----- bird -----\ttvshow",
    "639": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'\t----- bird -----\ttvshow",
    "640": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'\t----- bird -----\ttvshow",
    "641": "SELECT T1.id FROM TV_Channel AS T1 WHERE T1.Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)\t----- bird -----\ttvshow",
    "642": "SELECT T1.id  FROM TV_Channel AS T1  LEFT JOIN TV_series AS T2 ON T2.Channel = T1.id  LEFT JOIN Cartoon AS T3 ON T3.Channel = T1.id  GROUP BY T1.id  HAVING COUNT(DISTINCT T2.id) + COUNT(DISTINCT T3.id) > 2\t----- bird -----\ttvshow",
    "643": "SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')\t----- bird -----\ttvshow",
    "644": "SELECT id FROM TV_Channel WHERE NOT EXISTS (SELECT 1 FROM Cartoon WHERE Cartoon.Channel = TV_Channel.id AND Directed_by = 'Ben Jones')\t----- bird -----\ttvshow",
    "645": "SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones'  WHERE T2.Channel IS NULL\t----- bird -----\ttvshow",
    "646": "SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones'  WHERE T2.Channel IS NULL\t----- bird -----\ttvshow",
    "647": "SELECT COUNT(*) FROM poker_player;\t----- bird -----\tpoker_player",
    "648": "SELECT COUNT(Poker_Player_ID) FROM poker_player;\t----- bird -----\tpoker_player",
    "649": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\t----- bird -----\tpoker_player",
    "650": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\t----- bird -----\tpoker_player",
    "651": "SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID\t----- bird -----\tpoker_player",
    "652": "SELECT Final_Table_Made, Best_Finish FROM poker_player\t----- bird -----\tpoker_player",
    "653": "SELECT AVG(Earnings) FROM poker_player;\t----- bird -----\tpoker_player",
    "654": "SELECT AVG(Earnings) FROM poker_player;\t----- bird -----\tpoker_player",
    "655": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);\t----- bird -----\tpoker_player",
    "656": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);\t----- bird -----\tpoker_player",
    "657": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;\t----- bird -----\tpoker_player",
    "658": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;\t----- bird -----\tpoker_player",
    "659": "SELECT DISTINCT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID\t----- bird -----\tpoker_player",
    "660": "SELECT DISTINCT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID\t----- bird -----\tpoker_player",
    "661": "SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000\t----- bird -----\tpoker_player",
    "662": "SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000\t----- bird -----\tpoker_player",
    "663": "SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC\t----- bird -----\tpoker_player",
    "664": "SELECT T1.Name, COUNT(T2.Final_Table_Made) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name ORDER BY COUNT(T2.Final_Table_Made) ASC\t----- bird -----\tpoker_player",
    "665": "SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)\t----- bird -----\tpoker_player",
    "666": "SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)\t----- bird -----\tpoker_player",
    "667": "SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)\t----- bird -----\tpoker_player",
    "668": "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)\t----- bird -----\tpoker_player",
    "669": "SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200\t----- bird -----\tpoker_player",
    "670": "SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200\t----- bird -----\tpoker_player",
    "671": "SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC\t----- bird -----\tpoker_player",
    "672": "SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC\t----- bird -----\tpoker_player",
    "673": "SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality\t----- bird -----\tpoker_player",
    "674": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\t----- bird -----\tpoker_player",
    "675": "SELECT Nationality, COUNT(*) AS count FROM people GROUP BY Nationality ORDER BY count DESC LIMIT 1\t----- bird -----\tpoker_player",
    "676": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tpoker_player",
    "677": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2\t----- bird -----\tpoker_player",
    "678": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2\t----- bird -----\tpoker_player",
    "679": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\t----- bird -----\tpoker_player",
    "680": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\t----- bird -----\tpoker_player",
    "681": "SELECT Name FROM people WHERE Nationality <> 'Russia';\t----- bird -----\tpoker_player",
    "682": "SELECT Name FROM people WHERE Nationality <> 'Russia';\t----- bird -----\tpoker_player",
    "683": "SELECT T1.Name FROM people AS T1 WHERE T1.People_ID NOT IN (SELECT T2.People_ID FROM poker_player AS T2)\t----- bird -----\tpoker_player",
    "684": "SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL\t----- bird -----\tpoker_player",
    "685": "SELECT COUNT(DISTINCT Nationality) FROM people\t----- bird -----\tpoker_player",
    "686": "SELECT COUNT(DISTINCT Nationality) FROM people;\t----- bird -----\tpoker_player",
    "687": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;\t----- bird -----\tvoter_1",
    "688": "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\t----- bird -----\tvoter_1",
    "689": "SELECT vote_id, phone_number, state FROM VOTES;\t----- bird -----\tvoter_1",
    "690": "SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE\t----- bird -----\tvoter_1",
    "691": "SELECT MAX(created) FROM VOTES WHERE state = 'CA';\t----- bird -----\tvoter_1",
    "692": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';\t----- bird -----\tvoter_1",
    "693": "SELECT DISTINCT state, created FROM VOTES;\t----- bird -----\tvoter_1",
    "694": "SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.vote_id) >= 2\t----- bird -----\tvoter_1",
    "695": "SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = (SELECT T2.contestant_number FROM VOTES AS T2 GROUP BY T2.contestant_number ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\tvoter_1",
    "696": "SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA');\t----- bird -----\tvoter_1",
    "697": "SELECT COUNT(contestant_number) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES);\t----- bird -----\tvoter_1",
    "698": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1\t----- bird -----\tvoter_1",
    "699": "SELECT V.created, V.state, V.phone_number FROM VOTES AS V INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'\t----- bird -----\tvoter_1",
    "700": "SELECT T3.area_code  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  INNER JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state  WHERE T1.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY T3.area_code  HAVING COUNT(DISTINCT T1.contestant_number) = 2\t----- bird -----\tvoter_1",
    "701": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'\t----- bird -----\tvoter_1",
    "702": "SELECT Name FROM country WHERE IndepYear > 1950;\t----- bird -----\tworld_1",
    "703": "SELECT Name FROM country WHERE IndepYear > 1950;\t----- bird -----\tworld_1",
    "704": "SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';\t----- bird -----\tworld_1",
    "705": "SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';\t----- bird -----\tworld_1",
    "706": "SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';\t----- bird -----\tworld_1",
    "707": "SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';\t----- bird -----\tworld_1",
    "708": "SELECT Continent FROM country WHERE Name = 'Anguilla'\t----- bird -----\tworld_1",
    "709": "SELECT Continent FROM country WHERE Name = 'Anguilla' OR Code = 'AIA'\t----- bird -----\tworld_1",
    "710": "SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'\t----- bird -----\tworld_1",
    "711": "SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'\t----- bird -----\tworld_1",
    "712": "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1\t----- bird -----\tworld_1",
    "713": "SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Aruba' ORDER BY T1.Percentage DESC LIMIT 1\t----- bird -----\tworld_1",
    "714": "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';\t----- bird -----\tworld_1",
    "715": "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'\t----- bird -----\tworld_1",
    "716": "SELECT Region, Population FROM country WHERE Name = 'Angola';\t----- bird -----\tworld_1",
    "717": "SELECT Region, Population FROM country WHERE Name = 'Angola';\t----- bird -----\tworld_1",
    "718": "SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';\t----- bird -----\tworld_1",
    "719": "SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';\t----- bird -----\tworld_1",
    "720": "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\t----- bird -----\tworld_1",
    "721": "SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.LifeExpectancy = (SELECT MIN(T2.LifeExpectancy) FROM country AS T2 WHERE T2.Continent = 'Asia')\t----- bird -----\tworld_1",
    "722": "SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'\t----- bird -----\tworld_1",
    "723": "SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'\t----- bird -----\tworld_1",
    "724": "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic' AND LifeExpectancy IS NOT NULL\t----- bird -----\tworld_1",
    "725": "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';\t----- bird -----\tworld_1",
    "726": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');\t----- bird -----\tworld_1",
    "727": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');\t----- bird -----\tworld_1",
    "728": "SELECT SUM(Population) FROM city WHERE District = 'Gelderland';\t----- bird -----\tworld_1",
    "729": "SELECT SUM(Population) FROM city WHERE District = 'Gelderland';\t----- bird -----\tworld_1",
    "730": "SELECT AVG(GNP) AS average_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm = 'US territory'\t----- bird -----\tworld_1",
    "731": "SELECT AVG(GNP) AS mean_GNP, SUM(Population) AS total_population FROM country WHERE Code IN ('ASM', 'GUM', 'PRI', 'VIR') -- Assuming these are the US territories in the country table\t----- bird -----\tworld_1",
    "732": "SELECT COUNT(DISTINCT Language) FROM countrylanguage\t----- bird -----\tworld_1",
    "733": "SELECT COUNT(DISTINCT Language) FROM countrylanguage;\t----- bird -----\tworld_1",
    "734": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';\t----- bird -----\tworld_1",
    "735": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';\t----- bird -----\tworld_1",
    "736": "SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba')\t----- bird -----\tworld_1",
    "737": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')\t----- bird -----\tworld_1",
    "738": "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'\t----- bird -----\tworld_1",
    "739": "SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan')\t----- bird -----\tworld_1",
    "740": "SELECT C.Name FROM country AS C INNER JOIN (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode ORDER BY LanguageCount DESC LIMIT 1) AS CL ON C.Code = CL.CountryCode\t----- bird -----\tworld_1",
    "741": "SELECT T2.Name FROM (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.LanguageCount DESC LIMIT 1\t----- bird -----\tworld_1",
    "742": "SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY LanguageCount DESC LIMIT 1\t----- bird -----\tworld_1",
    "743": "SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1\t----- bird -----\tworld_1",
    "744": "SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch'\t----- bird -----\tworld_1",
    "745": "SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2\t----- bird -----\tworld_1",
    "746": "SELECT C.Name  FROM country AS C  JOIN (SELECT CL.CountryCode        FROM countrylanguage AS CL        WHERE CL.Language IN ('English', 'French')        GROUP BY CL.CountryCode        HAVING COUNT(DISTINCT CL.Language) = 2) AS CL  ON C.Code = CL.CountryCode;\t----- bird -----\tworld_1",
    "747": "SELECT T3.Name  FROM (SELECT CountryCode        FROM countrylanguage        WHERE Language IN ('English', 'French')        GROUP BY CountryCode        HAVING COUNT(DISTINCT Language) = 2) AS T1  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code\t----- bird -----\tworld_1",
    "748": "SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "749": "SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "750": "SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'\t----- bird -----\tworld_1",
    "751": "SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'\t----- bird -----\tworld_1",
    "752": "SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')\t----- bird -----\tworld_1",
    "753": "SELECT DISTINCT T1.Region FROM country AS T1 WHERE T1.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' OR Language = 'English')\t----- bird -----\tworld_1",
    "754": "SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "755": "SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "756": "SELECT T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.Continent = 'Asia'  GROUP BY T2.Language  ORDER BY SUM(T2.Percentage) DESC  LIMIT 1\t----- bird -----\tworld_1",
    "757": "SELECT CL.Language, COUNT(DISTINCT CL.CountryCode) AS CountryCount FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY CountryCount DESC LIMIT 1\t----- bird -----\tworld_1",
    "758": "SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(DISTINCT C.Code) = 1\t----- bird -----\tworld_1",
    "759": "SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  GROUP BY CL.Language  HAVING COUNT(DISTINCT CL.CountryCode) = 1 AND C.GovernmentForm = 'Republic'\t----- bird -----\tworld_1",
    "760": "SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1\t----- bird -----\tworld_1",
    "761": "SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1\t----- bird -----\tworld_1",
    "762": "SELECT T1.Name, T1.Population, T1.LifeExpectancy FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.SurfaceArea DESC LIMIT 1\t----- bird -----\tworld_1",
    "763": "SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')\t----- bird -----\tworld_1",
    "764": "SELECT AVG(T1.LifeExpectancy) FROM country AS T1 WHERE NOT EXISTS (SELECT 1 FROM countrylanguage AS T2 WHERE T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T')\t----- bird -----\tworld_1",
    "765": "SELECT AVG(T1.LifeExpectancy) FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T' WHERE T2.CountryCode IS NULL\t----- bird -----\tworld_1",
    "766": "SELECT SUM(c.Population) FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English' WHERE cl.Language IS NULL;\t----- bird -----\tworld_1",
    "767": "SELECT SUM(T1.Population) FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T' WHERE T2.CountryCode IS NULL\t----- bird -----\tworld_1",
    "768": "SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "769": "SELECT cl.Language  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  WHERE c.HeadOfState = 'Beatrix' AND cl.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "770": "SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "771": "SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "772": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe');\t----- bird -----\tworld_1",
    "773": "SELECT Name FROM country WHERE SurfaceArea > (SELECT COALESCE(MAX(SurfaceArea), 0) FROM country WHERE Region = 'Europe');\t----- bird -----\tworld_1",
    "774": "SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Asia')\t----- bird -----\tworld_1",
    "775": "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia');\t----- bird -----\tworld_1",
    "776": "SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.Population > (SELECT MAX(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Africa')\t----- bird -----\tworld_1",
    "777": "SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')\t----- bird -----\tworld_1",
    "778": "SELECT Code FROM country WHERE NOT EXISTS (SELECT 1 FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code AND countrylanguage.Language = 'English')\t----- bird -----\tworld_1",
    "779": "SELECT DISTINCT c.Code FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English' WHERE cl.Language IS NULL\t----- bird -----\tworld_1",
    "780": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'\t----- bird -----\tworld_1",
    "781": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'\t----- bird -----\tworld_1",
    "782": "SELECT T1.Code FROM country AS T1 WHERE T1.GovernmentForm != 'Republic' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T2 WHERE T2.CountryCode = T1.Code AND T2.Language = 'English')\t----- bird -----\tworld_1",
    "783": "SELECT c.Code  FROM country AS c  LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English'  WHERE cl.CountryCode IS NULL AND c.GovernmentForm <> 'Republic'\t----- bird -----\tworld_1",
    "784": "SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Region = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.Code AND T3.Language = 'English' AND T3.IsOfficial = 'T')\t----- bird -----\tworld_1",
    "785": "SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code LEFT JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode AND T3.Language = 'English' WHERE T2.Region = 'Europe' AND (T3.CountryCode IS NULL OR T3.IsOfficial = 'F')\t----- bird -----\tworld_1",
    "786": "SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'Chinese' AND T3.IsOfficial = 'T' AND T2.Continent = 'Asia'\t----- bird -----\tworld_1",
    "787": "SELECT DISTINCT C.Name FROM city AS C INNER JOIN country AS Co ON C.CountryCode = Co.Code INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode WHERE Co.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'\t----- bird -----\tworld_1",
    "788": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);\t----- bird -----\tworld_1",
    "789": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)\t----- bird -----\tworld_1",
    "790": "SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)\t----- bird -----\tworld_1",
    "791": "SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)\t----- bird -----\tworld_1",
    "792": "SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3\t----- bird -----\tworld_1",
    "793": "SELECT T2.Name, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Name  HAVING COUNT(DISTINCT T1.Language) > 2\t----- bird -----\tworld_1",
    "794": "SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District\t----- bird -----\tworld_1",
    "795": "SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District\t----- bird -----\tworld_1",
    "796": "SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72\t----- bird -----\tworld_1",
    "797": "SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm;\t----- bird -----\tworld_1",
    "798": "SELECT Continent, AVG(LifeExpectancy) AS AvgLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72\t----- bird -----\tworld_1",
    "799": "SELECT Continent, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72\t----- bird -----\tworld_1",
    "800": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\t----- bird -----\tworld_1",
    "801": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\t----- bird -----\tworld_1",
    "802": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3;\t----- bird -----\tworld_1",
    "803": "SELECT T1.Name FROM country AS T1 INNER JOIN (SELECT CountryCode, SUM(Population) AS TotalPopulation FROM city GROUP BY CountryCode) AS T2 ON T1.Code = T2.CountryCode ORDER BY TotalPopulation DESC LIMIT 3\t----- bird -----\tworld_1",
    "804": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\t----- bird -----\tworld_1",
    "805": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3;\t----- bird -----\tworld_1",
    "806": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia';\t----- bird -----\tworld_1",
    "807": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia';\t----- bird -----\tworld_1",
    "808": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;\t----- bird -----\tworld_1",
    "809": "SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;\t----- bird -----\tworld_1",
    "810": "SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000\t----- bird -----\tworld_1",
    "811": "SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea FROM country WHERE Region = 'North America' AND SurfaceArea > 3000\t----- bird -----\tworld_1",
    "812": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;\t----- bird -----\tworld_1",
    "813": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;\t----- bird -----\tworld_1",
    "814": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\t----- bird -----\tworld_1",
    "815": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\t----- bird -----\tworld_1",
    "816": "SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T1.Code)\t----- bird -----\tworld_1",
    "817": "SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage              FROM countrylanguage              GROUP BY CountryCode) AS T2  ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage\t----- bird -----\tworld_1",
    "818": "SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')\t----- bird -----\tworld_1",
    "819": "SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';\t----- bird -----\tworld_1",
    "820": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')\t----- bird -----\tworld_1",
    "821": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50.0;\t----- bird -----\tworld_1",
    "822": "SELECT COUNT(Conductor_ID) FROM conductor;\t----- bird -----\torchestra",
    "823": "SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;\t----- bird -----\torchestra",
    "824": "SELECT Name FROM conductor ORDER BY Age ASC;\t----- bird -----\torchestra",
    "825": "SELECT Name FROM conductor ORDER BY Age ASC;\t----- bird -----\torchestra",
    "826": "SELECT Name FROM conductor WHERE Nationality <> 'USA';\t----- bird -----\torchestra",
    "827": "SELECT Name FROM conductor WHERE Nationality != 'USA'\t----- bird -----\torchestra",
    "828": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;\t----- bird -----\torchestra",
    "829": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\t----- bird -----\torchestra",
    "830": "SELECT AVG(Attendance) FROM show;\t----- bird -----\torchestra",
    "831": "SELECT AVG(Attendance) FROM show;\t----- bird -----\torchestra",
    "832": "SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';\t----- bird -----\torchestra",
    "833": "SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final';\t----- bird -----\torchestra",
    "834": "SELECT COUNT(DISTINCT Nationality) FROM conductor;\t----- bird -----\torchestra",
    "835": "SELECT COUNT(DISTINCT \"Nationality\") FROM conductor;\t----- bird -----\torchestra",
    "836": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;\t----- bird -----\torchestra",
    "837": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\t----- bird -----\torchestra",
    "838": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)\t----- bird -----\torchestra",
    "839": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);\t----- bird -----\torchestra",
    "840": "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\t----- bird -----\torchestra",
    "841": "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\t----- bird -----\torchestra",
    "842": "SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1\t----- bird -----\torchestra",
    "843": "SELECT T1.Name FROM conductor AS T1 WHERE T1.Conductor_ID IN (SELECT T2.Conductor_ID FROM orchestra AS T2 GROUP BY T2.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1)\t----- bird -----\torchestra",
    "844": "SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC LIMIT 1\t----- bird -----\torchestra",
    "845": "SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1\t----- bird -----\torchestra",
    "846": "SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008\t----- bird -----\torchestra",
    "847": "SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008\t----- bird -----\torchestra",
    "848": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\t----- bird -----\torchestra",
    "849": "SELECT T1.Record_Company, COUNT(DISTINCT T1.Orchestra_ID) AS Orchestra_Count  FROM orchestra AS T1  GROUP BY T1.Record_Company\t----- bird -----\torchestra",
    "850": "SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\t----- bird -----\torchestra",
    "851": "SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC\t----- bird -----\torchestra",
    "852": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1\t----- bird -----\torchestra",
    "853": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1\t----- bird -----\torchestra",
    "854": "SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL\t----- bird -----\torchestra",
    "855": "SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL\t----- bird -----\torchestra",
    "856": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\t----- bird -----\torchestra",
    "857": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\t----- bird -----\torchestra",
    "858": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD';\t----- bird -----\torchestra",
    "859": "SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');\t----- bird -----\torchestra",
    "860": "SELECT DISTINCT O.Year_of_Founded FROM orchestra AS O INNER JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID GROUP BY O.Year_of_Founded HAVING COUNT(P.Performance_ID) > 1\t----- bird -----\torchestra",
    "861": "SELECT DISTINCT T2.Year_of_Founded FROM orchestra AS T2 INNER JOIN performance AS T1 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Year_of_Founded HAVING COUNT(T1.Performance_ID) > 1\t----- bird -----\torchestra",
    "862": "SELECT COUNT(ID) FROM Highschooler;\t----- bird -----\tnetwork_1",
    "863": "SELECT COUNT(*) FROM Highschooler;\t----- bird -----\tnetwork_1",
    "864": "SELECT name, grade FROM Highschooler;\t----- bird -----\tnetwork_1",
    "865": "SELECT name, grade FROM Highschooler;\t----- bird -----\tnetwork_1",
    "866": "SELECT DISTINCT grade FROM Highschooler;\t----- bird -----\tnetwork_1",
    "867": "SELECT ID, grade FROM Highschooler\t----- bird -----\tnetwork_1",
    "868": "SELECT grade FROM Highschooler WHERE name = 'Kyle';\t----- bird -----\tnetwork_1",
    "869": "SELECT grade FROM Highschooler WHERE name = 'Kyle';\t----- bird -----\tnetwork_1",
    "870": "SELECT name FROM Highschooler WHERE grade = 10;\t----- bird -----\tnetwork_1",
    "871": "SELECT name FROM Highschooler WHERE grade = 10;\t----- bird -----\tnetwork_1",
    "872": "SELECT ID FROM Highschooler WHERE name = 'Kyle';\t----- bird -----\tnetwork_1",
    "873": "SELECT ID FROM Highschooler WHERE name = 'Kyle';\t----- bird -----\tnetwork_1",
    "874": "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);\t----- bird -----\tnetwork_1",
    "875": "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);\t----- bird -----\tnetwork_1",
    "876": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;\t----- bird -----\tnetwork_1",
    "877": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade\t----- bird -----\tnetwork_1",
    "878": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tnetwork_1",
    "879": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tnetwork_1",
    "880": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4\t----- bird -----\tnetwork_1",
    "881": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4\t----- bird -----\tnetwork_1",
    "882": "SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID\t----- bird -----\tnetwork_1",
    "883": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id\t----- bird -----\tnetwork_1",
    "884": "SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID\t----- bird -----\tnetwork_1",
    "885": "SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID\t----- bird -----\tnetwork_1",
    "886": "SELECT T2.name FROM (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID\t----- bird -----\tnetwork_1",
    "887": "SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T2.ID = T1.student_id ORDER BY friend_count DESC LIMIT 1\t----- bird -----\tnetwork_1",
    "888": "SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3) AS T2 ON T1.ID = T2.student_id\t----- bird -----\tnetwork_1",
    "889": "SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.friend_id) >= 3\t----- bird -----\tnetwork_1",
    "890": "SELECT T2.name FROM Highschooler AS T1 INNER JOIN Friend AS T3 ON T1.ID = T3.friend_id INNER JOIN Highschooler AS T2 ON T3.student_id = T2.ID WHERE T1.name = 'Kyle'\t----- bird -----\tnetwork_1",
    "891": "SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\t----- bird -----\tnetwork_1",
    "892": "SELECT COUNT(F.friend_id) FROM Friend AS F INNER JOIN Highschooler AS H ON F.student_id = H.ID WHERE H.name = 'Kyle'\t----- bird -----\tnetwork_1",
    "893": "SELECT COUNT(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\t----- bird -----\tnetwork_1",
    "894": "SELECT ID FROM Highschooler WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID)\t----- bird -----\tnetwork_1",
    "895": "SELECT T1.ID FROM Highschooler AS T1 WHERE NOT EXISTS (SELECT 1 FROM Friend AS T2 WHERE T2.student_id = T1.ID)\t----- bird -----\tnetwork_1",
    "896": "SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL\t----- bird -----\tnetwork_1",
    "897": "SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL\t----- bird -----\tnetwork_1",
    "898": "SELECT DISTINCT H.ID  FROM Highschooler H  INNER JOIN Friend F ON H.ID = F.student_id  INNER JOIN Likes L ON H.ID = L.liked_id\t----- bird -----\tnetwork_1",
    "899": "SELECT DISTINCT F.student_id FROM Friend F INNER JOIN Likes L ON F.student_id = L.student_id\t----- bird -----\tnetwork_1",
    "900": "SELECT DISTINCT T3.name FROM Highschooler AS T3 INNER JOIN Friend AS F ON T3.ID = F.student_id INNER JOIN Likes AS L ON T3.ID = L.liked_id\t----- bird -----\tnetwork_1",
    "901": "SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id\t----- bird -----\tnetwork_1",
    "902": "SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id\t----- bird -----\tnetwork_1",
    "903": "SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id\t----- bird -----\tnetwork_1",
    "904": "SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name\t----- bird -----\tnetwork_1",
    "905": "SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) > 0\t----- bird -----\tnetwork_1",
    "906": "SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Likes AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.liked_id) DESC LIMIT 1)\t----- bird -----\tnetwork_1",
    "907": "SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(liked_id) DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id\t----- bird -----\tnetwork_1",
    "908": "SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) >= 2\t----- bird -----\tnetwork_1",
    "909": "SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID GROUP BY T1.liked_id HAVING COUNT(T1.student_id) >= 2\t----- bird -----\tnetwork_1",
    "910": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)\t----- bird -----\tnetwork_1",
    "911": "SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT T2.student_id FROM Friend AS T2 GROUP BY T2.student_id HAVING COUNT(T2.friend_id) >= 2)\t----- bird -----\tnetwork_1",
    "912": "SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID WHERE T2.name = 'Kyle'\t----- bird -----\tnetwork_1",
    "913": "SELECT COUNT(T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\t----- bird -----\tnetwork_1",
    "914": "SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)\t----- bird -----\tnetwork_1",
    "915": "SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend);\t----- bird -----\tnetwork_1",
    "916": "SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE NOT EXISTS (SELECT 1 FROM Friend AS T2 WHERE T1.ID = T2.student_id);\t----- bird -----\tnetwork_1",
    "917": "SELECT MIN(H.grade) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL\t----- bird -----\tnetwork_1",
    "918": "SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state\t----- bird -----\tdog_kennels",
    "919": "SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state\t----- bird -----\tdog_kennels",
    "920": "SELECT AVG(CAST(T1.age AS INTEGER)) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id\t----- bird -----\tdog_kennels",
    "921": "SELECT AVG(CAST(T1.age AS INTEGER)) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id\t----- bird -----\tdog_kennels",
    "922": "SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)\t----- bird -----\tdog_kennels",
    "923": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)\t----- bird -----\tdog_kennels",
    "924": "SELECT T1.name FROM Dogs AS T1 WHERE T1.dog_id IN (SELECT T2.dog_id FROM Treatments AS T2 GROUP BY T2.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000)\t----- bird -----\tdog_kennels",
    "925": "SELECT D.name FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY D.dog_id HAVING SUM(T.cost_of_treatment) <= 1000\t----- bird -----\tdog_kennels",
    "926": "SELECT `first_name` FROM `Professionals` UNION SELECT `first_name` FROM `Owners` WHERE `first_name` NOT IN (SELECT `name` FROM `Dogs`)\t----- bird -----\tdog_kennels",
    "927": "SELECT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)\t----- bird -----\tdog_kennels",
    "928": "SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments)\t----- bird -----\tdog_kennels",
    "929": "SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM Treatments)\t----- bird -----\tdog_kennels",
    "930": "SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN (SELECT owner_id, COUNT(*) AS dog_count FROM Dogs GROUP BY owner_id) AS T1 ON T1.owner_id = T2.owner_id ORDER BY dog_count DESC LIMIT 1\t----- bird -----\tdog_kennels",
    "931": "SELECT O.owner_id, O.first_name, O.last_name  FROM Owners O INNER JOIN Dogs D ON O.owner_id = D.owner_id  GROUP BY O.owner_id ORDER BY COUNT(D.dog_id) DESC  LIMIT 1;\t----- bird -----\tdog_kennels",
    "932": "SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2\t----- bird -----\tdog_kennels",
    "933": "SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T2.treatment_id) >= 2\t----- bird -----\tdog_kennels",
    "934": "SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1\t----- bird -----\tdog_kennels",
    "935": "SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1\t----- bird -----\tdog_kennels",
    "936": "SELECT T1.owner_id, T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1\t----- bird -----\tdog_kennels",
    "937": "SELECT O.owner_id, O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;\t----- bird -----\tdog_kennels",
    "938": "SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T1 ON T1.treatment_type_code = T2.treatment_type_code\t----- bird -----\tdog_kennels",
    "939": "SELECT T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code HAVING SUM(T1.cost_of_treatment) = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code))\t----- bird -----\tdog_kennels",
    "940": "SELECT T1.owner_id, T3.zip_code FROM (SELECT T2.owner_id, SUM(T1.cost_of_treatment) AS total_paid FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T2.owner_id) AS T1 INNER JOIN Owners AS T3 ON T1.owner_id = T3.owner_id ORDER BY total_paid DESC LIMIT 1\t----- bird -----\tdog_kennels",
    "941": "SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  INNER JOIN (SELECT T2.owner_id, SUM(T1.cost_of_treatment) AS total_spent              FROM Treatments AS T1              INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id              GROUP BY T2.owner_id              ORDER BY total_spent DESC LIMIT 1) AS T4  ON T3.owner_id = T4.owner_id\t----- bird -----\tdog_kennels",
    "942": "SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2\t----- bird -----\tdog_kennels",
    "943": "SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2\t----- bird -----\tdog_kennels",
    "944": "SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)\t----- bird -----\tdog_kennels",
    "945": "SELECT DISTINCT T2.first_name, T2.last_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id WHERE T1.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)\t----- bird -----\tdog_kennels",
    "946": "SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id\t----- bird -----\tdog_kennels",
    "947": "SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id\t----- bird -----\tdog_kennels",
    "948": "SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code\t----- bird -----\tdog_kennels",
    "949": "SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code\t----- bird -----\tdog_kennels",
    "950": "SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code\t----- bird -----\tdog_kennels",
    "951": "SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code\t----- bird -----\tdog_kennels",
    "952": "SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\t----- bird -----\tdog_kennels",
    "953": "SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id\t----- bird -----\tdog_kennels",
    "954": "SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(dog_id) ASC LIMIT 1))\t----- bird -----\tdog_kennels",
    "955": "SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\tdog_kennels",
    "956": "SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'\t----- bird -----\tdog_kennels",
    "957": "SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'\t----- bird -----\tdog_kennels",
    "958": "SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id\t----- bird -----\tdog_kennels",
    "959": "SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id\t----- bird -----\tdog_kennels",
    "960": "SELECT O.last_name  FROM Owners O  INNER JOIN Dogs D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)\t----- bird -----\tdog_kennels",
    "961": "SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MIN(date_of_birth) FROM Dogs)\t----- bird -----\tdog_kennels",
    "962": "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';\t----- bird -----\tdog_kennels",
    "963": "SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');\t----- bird -----\tdog_kennels",
    "964": "SELECT date_arrived, date_departed FROM Dogs;\t----- bird -----\tdog_kennels",
    "965": "SELECT date_arrived, date_departed FROM Dogs;\t----- bird -----\tdog_kennels",
    "966": "SELECT COUNT(DISTINCT dog_id) FROM Treatments WHERE dog_id IS NOT NULL;\t----- bird -----\tdog_kennels",
    "967": "SELECT COUNT(DISTINCT dog_id) FROM Treatments;\t----- bird -----\tdog_kennels",
    "968": "SELECT COUNT(DISTINCT professional_id) FROM Treatments;\t----- bird -----\tdog_kennels",
    "969": "SELECT COUNT(DISTINCT professional_id) FROM Treatments;\t----- bird -----\tdog_kennels",
    "970": "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'\t----- bird -----\tdog_kennels",
    "971": "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'\t----- bird -----\tdog_kennels",
    "972": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'\t----- bird -----\tdog_kennels",
    "973": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'\t----- bird -----\tdog_kennels",
    "974": "SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);\t----- bird -----\tdog_kennels",
    "975": "SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);\t----- bird -----\tdog_kennels",
    "976": "SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)\t----- bird -----\tdog_kennels",
    "977": "SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)\t----- bird -----\tdog_kennels",
    "978": "SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL\t----- bird -----\tdog_kennels",
    "979": "SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL\t----- bird -----\tdog_kennels",
    "980": "SELECT COUNT(*) FROM Owners O WHERE NOT EXISTS (SELECT 1 FROM Dogs D WHERE D.owner_id = O.owner_id)\t----- bird -----\tdog_kennels",
    "981": "SELECT COUNT(owner_id) FROM Owners WHERE NOT EXISTS (SELECT 1 FROM Dogs WHERE Dogs.owner_id = Owners.owner_id);\t----- bird -----\tdog_kennels",
    "982": "SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);\t----- bird -----\tdog_kennels",
    "983": "SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL\t----- bird -----\tdog_kennels",
    "984": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';\t----- bird -----\tdog_kennels",
    "985": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';\t----- bird -----\tdog_kennels",
    "986": "SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;\t----- bird -----\tdog_kennels",
    "987": "SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;\t----- bird -----\tdog_kennels",
    "988": "SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs\t----- bird -----\tdog_kennels",
    "989": "SELECT MAX(CAST(age AS INTEGER)) FROM Dogs;\t----- bird -----\tdog_kennels",
    "990": "SELECT charge_type, charge_amount FROM Charges;\t----- bird -----\tdog_kennels",
    "991": "SELECT charge_type, charge_amount FROM Charges;\t----- bird -----\tdog_kennels",
    "992": "SELECT MAX(charge_amount) FROM Charges;\t----- bird -----\tdog_kennels",
    "993": "SELECT MAX(charge_amount) FROM Charges;\t----- bird -----\tdog_kennels",
    "994": "SELECT email_address, cell_number, home_phone FROM Professionals\t----- bird -----\tdog_kennels",
    "995": "SELECT email_address, cell_number, home_phone FROM Professionals\t----- bird -----\tdog_kennels",
    "996": "SELECT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S\t----- bird -----\tdog_kennels",
    "997": "SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code\t----- bird -----\tdog_kennels",
    "998": "SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code\t----- bird -----\tdog_kennels",
    "999": "SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code\t----- bird -----\tdog_kennels",
    "1000": "SELECT COUNT(DISTINCT Singer_ID) FROM singer;\t----- bird -----\tsinger",
    "1001": "SELECT COUNT(*) FROM singer;\t----- bird -----\tsinger",
    "1002": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\t----- bird -----\tsinger",
    "1003": "SELECT T1.Name FROM singer AS T1 ORDER BY T1.Net_Worth_Millions ASC\t----- bird -----\tsinger",
    "1004": "SELECT Birth_Year, Citizenship FROM singer\t----- bird -----\tsinger",
    "1005": "SELECT Birth_Year, Citizenship FROM singer;\t----- bird -----\tsinger",
    "1006": "SELECT Name FROM singer WHERE Citizenship <> 'France'\t----- bird -----\tsinger",
    "1007": "SELECT Name FROM singer WHERE Citizenship <> 'France';\t----- bird -----\tsinger",
    "1008": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;\t----- bird -----\tsinger",
    "1009": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);\t----- bird -----\tsinger",
    "1010": "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)\t----- bird -----\tsinger",
    "1011": "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)\t----- bird -----\tsinger",
    "1012": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship\t----- bird -----\tsinger",
    "1013": "SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship\t----- bird -----\tsinger",
    "1014": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsinger",
    "1015": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsinger",
    "1016": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship\t----- bird -----\tsinger",
    "1017": "SELECT T1.Citizenship, MAX(T1.Net_Worth_Millions) FROM singer AS T1 GROUP BY T1.Citizenship\t----- bird -----\tsinger",
    "1018": "SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID\t----- bird -----\tsinger",
    "1019": "SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID\t----- bird -----\tsinger",
    "1020": "SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000\t----- bird -----\tsinger",
    "1021": "SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000\t----- bird -----\tsinger",
    "1022": "SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1\t----- bird -----\tsinger",
    "1023": "SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1\t----- bird -----\tsinger",
    "1024": "SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name\t----- bird -----\tsinger",
    "1025": "SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name\t----- bird -----\tsinger",
    "1026": "SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL\t----- bird -----\tsinger",
    "1027": "SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL\t----- bird -----\tsinger",
    "1028": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT CASE WHEN Birth_Year < 1945 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Birth_Year > 1955 THEN 1 END) > 0\t----- bird -----\tsinger",
    "1029": "SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) > 1\t----- bird -----\tsinger",
    "1030": "SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;\t----- bird -----\treal_estate_properties",
    "1031": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon'\t----- bird -----\treal_estate_properties",
    "1032": "SELECT DISTINCT RPT.property_type_description  FROM Properties AS P  INNER JOIN Ref_Property_Types AS RPT  ON P.property_type_code = RPT.property_type_code;\t----- bird -----\treal_estate_properties",
    "1033": "SELECT T1.property_name  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  WHERE (T2.property_type_description LIKE '%House%' OR T2.property_type_description LIKE '%Apartment%')  AND T1.room_count > 1\t----- bird -----\treal_estate_properties"
}