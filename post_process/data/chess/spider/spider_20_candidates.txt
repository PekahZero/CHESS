SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT "Name") FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT T1.Name, T1.Country, T1.Age FROM singer AS T1 ORDER BY T1.Age DESC
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC

SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
SELECT Name, Country, Age FROM singer ORDER BY Age DESC

SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France';

SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France';
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France'

SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT T2.Song_Name, T2.Song_release_year FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT Song_Name, Song_release_year FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM singer ORDER BY Age ASC LIMIT 1)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Age = (SELECT MIN(T2.Age) FROM singer AS T2)
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT T2.Song_Name, T2.Song_release_year  FROM singer AS T1  INNER JOIN singer_in_concert AS T3 ON T1.Singer_ID = T3.Singer_ID  INNER JOIN concert AS T2 ON T3.concert_ID = T2.concert_ID  WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T3.Song_Name, T3.Song_release_year  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  INNER JOIN singer AS T3 ON T2.concert_ID = T3.Singer_ID  WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Age = (SELECT MIN(T2.Age) FROM singer AS T2)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Age = (SELECT MIN(Age) FROM singer);

SELECT T2.Song_Name, T2.Song_release_year FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T2.Song_Name, T1.Song_release_year FROM singer AS T1 INNER JOIN singer_in_concert AS T3 ON T1.Singer_ID = T3.Singer_ID INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 WHERE T2.Age = (SELECT MIN(Age) FROM singer))
SELECT Song_Name, Song_release_year FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Age = (SELECT MIN(Age) FROM singer))
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 WHERE T2.Age = (SELECT MIN(Age) FROM singer))
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Singer_ID = (SELECT MIN(T2.Singer_ID) FROM singer AS T2 WHERE T2.Age = (SELECT MIN(Age) FROM singer))
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)
SELECT T1.Song_Name, T1.Song_release_year FROM singer AS T1 WHERE T1.Age = (SELECT MIN(Age) FROM singer)
SELECT T1.Song_Name, T1.Song_release_year  FROM singer AS T1  WHERE T1.Singer_ID = (SELECT T2.Singer_ID FROM singer AS T2 ORDER BY T2.Age ASC LIMIT 1)
SELECT T2.Song_Name, T2.Song_release_year  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Age = (SELECT MIN(Age) FROM singer);
SELECT T2.Song_Name, T2.Song_release_year  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Age = (SELECT MIN(Age) FROM singer)

SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20

SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20;

SELECT Country, COUNT(*) FROM singer GROUP BY Country
SELECT Country, COUNT(*) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(*) FROM singer GROUP BY Country;
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) AS Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS number_of_singers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) AS Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) AS Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) AS Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) AS NumberOfSingers FROM singer GROUP BY Country;

SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(*) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(*) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS Singer_Count FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS Singer_Count FROM singer GROUP BY Country
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country
SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country
SELECT Country, COUNT(Singer_ID) AS Singer_Count FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as singer_count FROM singer GROUP BY Country

SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT DISTINCT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name  FROM singer AS T1  WHERE T1.Age > (SELECT AVG(T2.Age) FROM singer AS T2)
SELECT DISTINCT T2.Song_Name  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT DISTINCT T3.Song_Name  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)

SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT DISTINCT T1.Song_Name  FROM singer AS T1  WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT DISTINCT T3.Song_Name  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT DISTINCT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)
SELECT DISTINCT T1.Song_Name  FROM singer AS T1  WHERE T1.Age > (SELECT AVG(Age) FROM singer);
SELECT DISTINCT T1.Song_Name  FROM singer AS T1  WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T2.Song_Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age > (SELECT AVG(Age) FROM singer)
SELECT T1.Song_Name FROM singer AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM singer)

SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Name, Location FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000

SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Name, Location FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Name, Location FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Name, Location FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;

SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity), AVG(Capacity) FROM stadium
SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity), AVG(Capacity) FROM stadium
SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity), AVG(Capacity) FROM stadium
SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity), AVG(Capacity) FROM stadium;
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium;
SELECT MAX(Capacity) AS Maximum_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium;
SELECT MAX(Capacity) AS max_capacity, AVG(Capacity) AS avg_capacity FROM stadium
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium;
SELECT MAX(Capacity) AS max_capacity, AVG(Capacity) AS average_capacity FROM stadium
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium
SELECT MAX(Capacity) AS Max_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium

SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
SELECT AVG(Capacity) AS average_capacity, MAX(Capacity) AS maximum_capacity FROM stadium
SELECT AVG(Capacity) AS average_capacity, MAX(Capacity) AS maximum_capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium
SELECT AVG(Capacity) AS average_capacity, MAX(Capacity) AS maximum_capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium;

SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1
SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)

SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)

SELECT COUNT(concert_ID) FROM concert WHERE Year = '2014' OR Year = '2015';
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year = '2014' OR Year = '2015';
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year = '2014' OR Year = '2015';
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');

SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(concert_ID) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');
SELECT COUNT(*) FROM concert WHERE Year = '2014' OR Year = '2015';

SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T2.Name, COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS NumberOfConcerts  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Name
SELECT T2.Name AS stadium_name, COUNT(T1.concert_ID) AS number_of_concerts  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T2.Name
SELECT S.Name, COUNT(C.concert_ID) AS Number_of_Concerts  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  GROUP BY S.Name
SELECT S.Name, COUNT(C.concert_ID) AS Number_of_Concerts  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  GROUP BY S.Name;
SELECT T1.Name, COUNT(T2.concert_ID) AS NumberOfConcerts  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Name
SELECT S.Name, COUNT(C.concert_ID) AS concert_count  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  GROUP BY S.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Name
SELECT T2.Name, COUNT(T1.concert_ID) AS concert_count  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name

SELECT T1.Stadium_ID, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
SELECT Stadium_ID, COUNT(concert_ID) FROM concert GROUP BY Stadium_ID;
SELECT T2.Stadium_ID, COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T2.Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
SELECT T2.Stadium_ID, COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T2.Stadium_ID
SELECT Stadium_ID, COUNT(concert_ID) FROM concert GROUP BY Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID
SELECT T2.Name, COUNT(T1.concert_ID) AS concert_count  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T2.Stadium_ID
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) AS Concert_Count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Name
SELECT S.Name, COUNT(C.concert_ID) AS concert_count  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  GROUP BY S.Name
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID
SELECT T1.Stadium_ID, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  GROUP BY T1.Stadium_ID;

SELECT T2.Name, T2.Capacity, COUNT(T1.concert_ID) AS concert_count FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year >= '2014' GROUP BY T2.Stadium_ID ORDER BY concert_count DESC LIMIT 1
SELECT S.Name, S.Capacity FROM stadium AS S INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.Year >= '2014' GROUP BY S.Stadium_ID ORDER BY COUNT(C.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity FROM stadium AS T2 INNER JOIN concert AS T1 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year >= '2014' GROUP BY T2.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T4.Name, T4.Capacity FROM stadium AS T4 INNER JOIN (SELECT concert.Stadium_ID, COUNT(*) AS concert_count FROM concert WHERE Year >= '2014' GROUP BY concert.Stadium_ID) AS T3 ON T4.Stadium_ID = T3.Stadium_ID ORDER BY T3.concert_count DESC LIMIT 1
SELECT T2.Name, T2.Capacity FROM stadium AS T2 INNER JOIN concert AS T1 ON T2.Stadium_ID = T1.Stadium_ID WHERE T1.Year >= '2014' GROUP BY T2.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T3.Name, T3.Capacity FROM stadium AS T3 INNER JOIN concert AS T2 ON T3.Stadium_ID = T2.Stadium_ID WHERE T2.Year >= '2014' GROUP BY T3.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T3.Name, T3.Capacity FROM stadium AS T3 INNER JOIN concert AS T2 ON T3.Stadium_ID = T2.Stadium_ID WHERE T2.Year >= '2014' GROUP BY T3.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity FROM stadium AS T2 INNER JOIN concert AS T1 ON T2.Stadium_ID = T1.Stadium_ID WHERE T1.Year >= '2014' GROUP BY T2.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year >= '2014' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year >= '2014' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T3.Name, T3.Capacity  FROM concert AS T1  INNER JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID  WHERE T1.Year >= '2014'  GROUP BY T3.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year >= '2014'  GROUP BY T2.Name, T2.Capacity  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T3.Name, T3.Capacity FROM concert AS T1 INNER JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID WHERE T1.Year >= '2014' GROUP BY T3.Name, T3.Capacity ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year >= '2014'  GROUP BY T2.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM stadium AS T2  INNER JOIN (      SELECT Stadium_ID, COUNT(*) AS concert_count      FROM concert      WHERE Year >= '2014'      GROUP BY Stadium_ID  ) AS T1  ON T1.Stadium_ID = T2.Stadium_ID  ORDER BY T1.concert_count DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year >= '2014'  GROUP BY T2.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year >= '2014'  GROUP BY T2.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T1.Name, T1.Capacity  FROM stadium AS T1  INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year >= '2014'  GROUP BY T1.Stadium_ID, T1.Name, T1.Capacity  ORDER BY COUNT(T2.concert_ID) DESC  LIMIT 1
SELECT T1.Name, T1.Capacity  FROM stadium AS T1  INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year >= '2014'  GROUP BY T1.Stadium_ID  ORDER BY COUNT(T2.concert_ID) DESC  LIMIT 1;
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year >= '2014'  GROUP BY T2.Name, T2.Capacity  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1

SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > '2013' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity FROM stadium AS T2 INNER JOIN (SELECT Stadium_ID, COUNT(*) AS Concert_Count FROM concert WHERE Year > '2013' GROUP BY Stadium_ID) AS T1 ON T1.Stadium_ID = T2.Stadium_ID ORDER BY T1.Concert_Count DESC LIMIT 1
SELECT T2.Name, T2.Capacity FROM stadium AS T2 INNER JOIN concert AS T1 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year > '2013' GROUP BY T2.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > '2013' GROUP BY T2.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > '2013' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T4.Name, T4.Capacity FROM stadium AS T4 INNER JOIN (SELECT T3.Stadium_ID, COUNT(T3.concert_ID) AS concert_count FROM concert AS T3 WHERE T3.Year > '2013' GROUP BY T3.Stadium_ID) AS T2 ON T4.Stadium_ID = T2.Stadium_ID ORDER BY T2.concert_count DESC LIMIT 1
SELECT T3.Name, T3.Capacity FROM stadium AS T3 INNER JOIN concert AS T2 ON T2.Stadium_ID = T3.Stadium_ID INNER JOIN singer_in_concert AS T1 ON T1.concert_ID = T2.concert_ID WHERE T2.Year > '2013' GROUP BY T3.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity FROM stadium AS T2 INNER JOIN concert AS T1 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year > '2013' GROUP BY T2.Stadium_ID ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > '2013' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > '2013' GROUP BY T1.Stadium_ID ORDER BY COUNT(T2.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year > '2013'  GROUP BY T2.Name, T2.Capacity  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year > '2013'  GROUP BY T2.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T3.Name, T3.Capacity  FROM concert AS T1  INNER JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID  WHERE T1.Year > '2013'  GROUP BY T3.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year > '2013'  GROUP BY T2.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year > '2013'  GROUP BY T2.Stadium_ID  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year > '2013'  GROUP BY T2.Name, T2.Capacity  ORDER BY COUNT(T1.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year > '2013' GROUP BY T2.Name, T2.Capacity ORDER BY COUNT(T1.concert_ID) DESC LIMIT 1
SELECT T2.Name, T2.Capacity  FROM stadium AS T2  INNER JOIN (      SELECT Stadium_ID, COUNT(*) AS concert_count      FROM concert      WHERE Year > 2013      GROUP BY Stadium_ID  ) AS T1 ON T2.Stadium_ID = T1.Stadium_ID  ORDER BY T1.concert_count DESC  LIMIT 1
SELECT S.Name, S.Capacity  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year > '2013'  GROUP BY S.Stadium_ID, S.Name, S.Capacity  ORDER BY COUNT(C.concert_ID) DESC  LIMIT 1
SELECT T2.Name, T2.Capacity  FROM stadium AS T2  INNER JOIN (      SELECT T1.Stadium_ID, COUNT(T1.concert_ID) AS concert_count      FROM concert AS T1      WHERE T1.Year > '2013'      GROUP BY T1.Stadium_ID  ) AS T3 ON T2.Stadium_ID = T3.Stadium_ID  ORDER BY T3.concert_count DESC  LIMIT 1

SELECT Year, COUNT(*) as concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1
SELECT Year FROM (SELECT Year, COUNT(concert_ID) AS concert_count FROM concert GROUP BY Year) AS YearConcerts ORDER BY concert_count DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year, COUNT(*) FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year, COUNT(concert_ID) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year, COUNT(*) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1
SELECT Year, COUNT(*) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT "Year" FROM concert GROUP BY "Year" ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year, COUNT(*) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1
SELECT Year, COUNT(*) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1

SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT "Year" FROM concert GROUP BY "Year" ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(concert_ID) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;

SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT s.Name FROM stadium AS s LEFT JOIN concert AS c ON s.Stadium_ID = c.Stadium_ID WHERE c.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2)
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT s.Name FROM stadium AS s LEFT JOIN concert AS c ON s.Stadium_ID = c.Stadium_ID WHERE c.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT DISTINCT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT S.Name FROM stadium AS S LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_Name IS NULL
SELECT S.Name FROM stadium AS S LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.concert_ID IS NULL
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL

SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT S.Name FROM stadium AS S LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT S.Name FROM stadium AS S LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.concert_ID IS NULL

SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30
SELECT `Country` FROM `singer` GROUP BY `Country` HAVING COUNT(CASE WHEN `Age` > 40 THEN 1 END) > 0 AND COUNT(CASE WHEN `Age` < 30 THEN 1 END) > 0
SELECT Country FROM singer GROUP BY Country HAVING SUM(CASE WHEN Age > 40 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN Age < 30 THEN 1 ELSE 0 END) > 0
SELECT DISTINCT Country FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM singer WHERE Age > 40) AND Singer_ID IN (SELECT Singer_ID FROM singer WHERE Age < 30)
SELECT DISTINCT `Country`  FROM `singer` AS S1  WHERE EXISTS (SELECT 1 FROM `singer` AS S2 WHERE S2.`Country` = S1.`Country` AND S2.`Age` > 40)  AND EXISTS (SELECT 1 FROM `singer` AS S3 WHERE S3.`Country` = S1.`Country` AND S3.`Age` < 30);
SELECT Country FROM singer GROUP BY Country HAVING SUM(CASE WHEN Age > 40 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN Age < 30 THEN 1 ELSE 0 END) > 0
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30 GROUP BY Country HAVING COUNT(CASE WHEN Age > 40 THEN 1 END) > 0 AND COUNT(CASE WHEN Age < 30 THEN 1 END) > 0
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30;
SELECT DISTINCT `Country`  FROM `singer` AS s1  WHERE EXISTS (SELECT 1 FROM `singer` AS s2 WHERE s2.`Age` > 40 AND s1.`Country` = s2.`Country`)  AND EXISTS (SELECT 1 FROM `singer` AS s3 WHERE s3.`Age` < 30 AND s1.`Country` = s3.`Country`)
SELECT DISTINCT T1.Country FROM singer AS T1 INNER JOIN singer AS T2 ON T1.Country = T2.Country WHERE T1.Age > 40 AND T2.Age < 30
SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30
SELECT DISTINCT T1.Country FROM singer AS T1 WHERE T1.Age > 40 AND T1.Country IN (SELECT T2.Country FROM singer AS T2 WHERE T2.Age < 30)
SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30;
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30
SELECT DISTINCT T1.Country  FROM singer AS T1  WHERE T1.Age > 40    AND T1.Singer_ID IN (SELECT T2.Singer_ID FROM singer AS T2 WHERE T2.Age < 30)
SELECT DISTINCT Country FROM singer WHERE Age > 40 UNION SELECT DISTINCT Country FROM singer WHERE Age < 30
SELECT DISTINCT T1.Country FROM singer AS T1 WHERE T1.Age > 40 AND T1.Country IN (SELECT T2.Country FROM singer AS T2 WHERE T2.Age < 30)
SELECT DISTINCT Country FROM singer WHERE Age > 40 UNION SELECT DISTINCT Country FROM singer WHERE Age < 30
SELECT DISTINCT Country FROM singer WHERE Age > 40 UNION SELECT DISTINCT Country FROM singer WHERE Age < 30
SELECT DISTINCT Country FROM singer WHERE Age > 40 UNION SELECT DISTINCT Country FROM singer WHERE Age < 30

SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert WHERE Year = '2014')
SELECT DISTINCT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')

SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE NOT EXISTS (SELECT 1 FROM concert AS T2 WHERE T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014' WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT T1.Name  FROM stadium AS T1  LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014'  WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014' WHERE T2.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 WHERE T1.Stadium_ID NOT IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = '2014')
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014' WHERE T2.Stadium_ID IS NULL
SELECT S.Name  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID AND C.Year = '2014'  WHERE C.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IS NULL OR T2.Year <> '2014'
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014' WHERE T2.Stadium_ID IS NULL
SELECT S.Name FROM stadium AS S LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID AND C.Year = '2014' WHERE C.Stadium_ID IS NULL
SELECT T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID AND T2.Year = '2014' WHERE T2.Stadium_ID IS NULL
SELECT DISTINCT S.Name  FROM stadium AS S  LEFT JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID AND C.Year = '2014'  WHERE C.concert_ID IS NULL

SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS num_singers FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_Name, T1.Theme
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_Name, T1.Theme
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID, T1.concert_Name, T1.Theme
SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) AS Number_of_Singers FROM concert AS C LEFT JOIN singer_in_concert AS SIC ON C.concert_ID = SIC.concert_ID GROUP BY C.concert_Name, C.Theme
SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) AS Number_of_Singers  FROM concert AS C  LEFT JOIN singer_in_concert AS SIC ON C.concert_ID = SIC.concert_ID  GROUP BY C.concert_ID;
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID;
SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) AS Number_of_Singers  FROM concert AS C  LEFT JOIN singer_in_concert AS SIC ON C.concert_ID = SIC.concert_ID  GROUP BY C.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID

SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID LEFT JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_name, T1.theme, COUNT(T2.Singer_ID) FROM concert AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_Name, T1.Theme
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_Name, T1.Theme
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS Number_of_Singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_Name, T1.Theme
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) AS number_of_singers  FROM concert AS C  LEFT JOIN singer_in_concert AS SIC ON C.concert_ID = SIC.concert_ID  GROUP BY C.concert_ID, C.concert_Name, C.Theme
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID
SELECT T1.concert_Name, T1.Theme, COUNT(T2.Singer_ID) AS number_of_singers  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  GROUP BY T1.concert_ID

SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name;
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS number_of_concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS number_of_concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name

SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) as number_of_concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID
SELECT T1.Name, COUNT(T2.concert_ID) AS number_of_concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts FROM singer AS T1 LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID, T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID;
SELECT T1.Name, COUNT(T2.concert_ID) AS Number_of_Concerts  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.concert_ID) AS concert_count  FROM singer AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name

SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T1.concert_ID = T2.concert_ID WHERE T1.Year = '2014'
SELECT DISTINCT T3.Name FROM singer_in_concert AS T1 INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID INNER JOIN singer AS T3 ON T1.Singer_ID = T3.Singer_ID WHERE T2.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name  FROM singer_in_concert AS T1  INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T1.Singer_ID = T3.Singer_ID  WHERE T2.Year = '2014'
SELECT DISTINCT T4.Name  FROM concert AS T1  INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID  WHERE T1.Year = '2014'
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name  FROM singer_in_concert AS T1  INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T1.Singer_ID = T3.Singer_ID  WHERE T2.Year = '2014'
SELECT DISTINCT S.Name  FROM singer AS S  INNER JOIN singer_in_concert AS SIC ON S.Singer_ID = SIC.Singer_ID  INNER JOIN concert AS C ON SIC.concert_ID = C.concert_ID  WHERE C.Year = '2014'
SELECT DISTINCT S.Name  FROM singer AS S  INNER JOIN singer_in_concert AS SIC ON S.Singer_ID = SIC.Singer_ID  INNER JOIN concert AS C ON SIC.concert_ID = C.concert_ID  WHERE C.Year = '2014'
SELECT DISTINCT T3.Name  FROM concert AS T1  INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID  WHERE T1.Year = '2014'
SELECT DISTINCT S.Name  FROM singer AS S  INNER JOIN singer_in_concert AS SIC ON S.Singer_ID = SIC.Singer_ID  INNER JOIN concert AS C ON SIC.concert_ID = C.concert_ID  WHERE C.Year = '2014'
SELECT DISTINCT S.Name  FROM singer AS S  INNER JOIN singer_in_concert AS SIC ON S.Singer_ID = SIC.Singer_ID  INNER JOIN concert AS C ON SIC.concert_ID = C.concert_ID  WHERE C.Year = '2014'
SELECT DISTINCT T3.Name FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T1.Year = '2014'

SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T2.concert_ID = T1.concert_ID WHERE T1.Year = '2014'
SELECT DISTINCT T5.Name FROM singer AS T5 INNER JOIN singer_in_concert AS T4 ON T5.Singer_ID = T4.Singer_ID INNER JOIN concert AS T3 ON T4.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T2.concert_ID = T1.concert_ID WHERE T1.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T2.concert_ID = T1.concert_ID WHERE T1.Year = '2014'
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T2.concert_ID = T1.concert_ID WHERE T1.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name FROM singer_in_concert AS T1  INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T1.Singer_ID = T3.Singer_ID  WHERE T2.Year = '2014'
SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T1 ON T3.Singer_ID = T1.Singer_ID INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Year = '2014'
SELECT DISTINCT T3.Name FROM singer AS T3 INNER JOIN singer_in_concert AS T2 ON T3.Singer_ID = T2.Singer_ID INNER JOIN concert AS T1 ON T2.concert_ID = T1.concert_ID WHERE T1.Year = '2014'
SELECT DISTINCT T1.Name  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID  WHERE T3.Year = '2014'
SELECT DISTINCT T3.Name  FROM concert AS T1  INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID  WHERE T1.Year = '2014'
SELECT DISTINCT T3.Name  FROM singer_in_concert AS T1  INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T1.Singer_ID = T3.Singer_ID  WHERE T2.Year = '2014'
SELECT DISTINCT T3.Name  FROM concert AS T1  INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID  WHERE T1.Year = '2014'
SELECT DISTINCT T2.Name  FROM concert AS T1  INNER JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID  INNER JOIN singer AS T2 ON T3.Singer_ID = T2.Singer_ID  WHERE T1.Year = '2014'
SELECT DISTINCT T4.Name FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID INNER JOIN singer AS T4 ON T2.Singer_ID = T4.Singer_ID WHERE T1.Year = '2014'
SELECT DISTINCT T3.Name  FROM concert AS T1  INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID  WHERE T1.Year = '2014'

SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Singer_ID IN (SELECT T2.Singer_ID FROM singer_in_concert AS T2 INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.concert_Name LIKE '%Hey%')
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT DISTINCT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT DISTINCT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT DISTINCT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT DISTINCT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Song_Name LIKE '%Hey%'

SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT DISTINCT T1.Name, T1.Country FROM singer AS T1 WHERE T1.Song_Name LIKE '%Hey%'
SELECT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_Name LIKE '%Hey%'
SELECT DISTINCT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'

SELECT T4.Name, T4.Location FROM stadium AS T4 WHERE T4.Stadium_ID IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year IN ('2014', '2015') GROUP BY T2.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2)
SELECT T3.Name, T3.Location FROM stadium AS T3 INNER JOIN concert AS T2 ON T3.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T3.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT T2.Name, T2.Location FROM stadium AS T2 WHERE T2.Stadium_ID IN (SELECT T1.Stadium_ID FROM concert AS T1 WHERE T1.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T1.Year) = 2)
SELECT DISTINCT T3.Name, T3.Location FROM stadium AS T3 INNER JOIN concert AS T1 ON T3.Stadium_ID = T1.Stadium_ID WHERE T1.Year IN ('2014', '2015') GROUP BY T3.Stadium_ID HAVING COUNT(DISTINCT T1.Year) = 2
SELECT DISTINCT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID INNER JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT T1.Name, T1.Location  FROM stadium AS T1  INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year IN ('2014', '2015')  GROUP BY T1.Stadium_ID  HAVING COUNT(DISTINCT T2.Year) = 2
SELECT T3.Name, T3.Location FROM stadium AS T3 INNER JOIN concert AS T2 ON T3.Stadium_ID = T2.Stadium_ID GROUP BY T2.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2 AND (MIN(T2.Year) = '2014' AND MAX(T2.Year) = '2015')
SELECT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT DISTINCT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT DISTINCT T3.Name, T3.Location FROM stadium AS T3 INNER JOIN concert AS T2 ON T3.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T3.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT DISTINCT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Name, S.Location  HAVING COUNT(DISTINCT C.Year) = 2
SELECT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Name, S.Location  HAVING COUNT(DISTINCT C.Year) = 2;
SELECT S.Name, S.Location  FROM stadium AS S  JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2;
SELECT T4.Name, T4.Location  FROM (      SELECT T2.Stadium_ID      FROM concert AS T1      WHERE T1.Year IN ('2014', '2015')      GROUP BY T2.Stadium_ID      HAVING COUNT(DISTINCT T1.Year) = 2  ) AS T3  INNER JOIN stadium AS T4 ON T3.Stadium_ID = T4.Stadium_ID
SELECT DISTINCT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT DISTINCT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2;
SELECT DISTINCT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT DISTINCT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT DISTINCT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2;

SELECT DISTINCT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT DISTINCT T3.Name, T3.Location  FROM stadium AS T3  INNER JOIN concert AS T2 ON T3.Stadium_ID = T2.Stadium_ID  WHERE T2.Stadium_ID IN (SELECT Stadium_ID                          FROM concert                          WHERE Year IN ('2014', '2015')                          GROUP BY Stadium_ID                          HAVING COUNT(DISTINCT Year) = 2)
SELECT T3.Name, T3.Location FROM stadium AS T3 INNER JOIN concert AS T1 ON T1.Stadium_ID = T3.Stadium_ID WHERE T1.Year IN ('2014', '2015') GROUP BY T3.Stadium_ID HAVING COUNT(DISTINCT T1.Year) = 2
SELECT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T2.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT DISTINCT T3.Name, T3.Location FROM stadium AS T3 INNER JOIN concert AS T1 ON T3.Stadium_ID = T1.Stadium_ID WHERE T1.Year IN ('2014', '2015') GROUP BY T3.Stadium_ID HAVING COUNT(DISTINCT T1.Year) = 2
SELECT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T2.Year) = 2
SELECT T3.Name, T3.Location FROM stadium AS T3 WHERE T3.Stadium_ID IN (SELECT T1.Stadium_ID FROM concert AS T1 WHERE T1.Year IN ('2014', '2015') GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T1.Year) = 2)
SELECT T4.Name, T4.Location  FROM stadium AS T4  INNER JOIN concert AS T3 ON T4.Stadium_ID = T3.Stadium_ID  WHERE T3.Year IN ('2014', '2015')  GROUP BY T4.Stadium_ID  HAVING COUNT(DISTINCT T3.Year) = 2
SELECT T2.Name, T2.Location FROM stadium AS T2 INNER JOIN concert AS T1 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID HAVING COUNT(DISTINCT T1.Year) = 2 AND MIN(T1.Year) = '2014' AND MAX(T1.Year) = '2015'
SELECT T1.Name, T1.Location  FROM stadium AS T1  INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year IN ('2014', '2015')  GROUP BY T1.Name, T1.Location  HAVING COUNT(DISTINCT T2.Year) = 2;
SELECT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT T2.Name, T2.Location  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T1.Year IN ('2014', '2015')  GROUP BY T1.Stadium_ID  HAVING COUNT(DISTINCT T1.Year) = 2
SELECT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY C.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY C.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT T3.Name, T3.Location  FROM concert AS T1  INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN stadium AS T3 ON T1.Stadium_ID = T3.Stadium_ID  WHERE T1.Year IN ('2014', '2015')  GROUP BY T3.Stadium_ID  HAVING COUNT(DISTINCT T1.Year) = 2
SELECT S.Name, S.Location  FROM stadium AS S  JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2
SELECT DISTINCT S.Name, S.Location  FROM stadium AS S  INNER JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2;
SELECT DISTINCT S.Name, S.Location  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE C.Year IN ('2014', '2015')  GROUP BY S.Stadium_ID  HAVING COUNT(DISTINCT C.Year) = 2

SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT T2.Stadium_ID FROM stadium AS T2 WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT T2.Stadium_ID FROM stadium AS T2 ORDER BY T2.Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T2.concert_ID) FROM concert AS T2 INNER JOIN stadium AS T1 ON T2.Stadium_ID = T1.Stadium_ID WHERE T1.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT T2.Stadium_ID FROM stadium AS T2 ORDER BY T2.Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID)  FROM concert AS T1  WHERE T1.Stadium_ID = (SELECT T2.Stadium_ID FROM stadium AS T2 ORDER BY T2.Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T2.concert_ID)  FROM concert AS T2  INNER JOIN stadium AS T1 ON T2.Stadium_ID = T1.Stadium_ID  WHERE T1.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium)

SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT T2.Stadium_ID FROM stadium AS T2 WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium))
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium))
SELECT COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE T1.Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium))
SELECT COUNT(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium))
SELECT COUNT(T1.concert_ID)  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(T1.concert_ID) FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(T2.concert_ID)  FROM concert AS T2  INNER JOIN stadium AS T1 ON T2.Stadium_ID = T1.Stadium_ID  WHERE T1.Capacity = (SELECT MAX(Capacity) FROM stadium)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(T2.concert_ID)  FROM concert AS T2  WHERE T2.Stadium_ID = (SELECT T1.Stadium_ID FROM stadium AS T1 ORDER BY T1.Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)

SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;

SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;

SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1)
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1);
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetID = (SELECT PetID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' ORDER BY pet_age ASC LIMIT 1)
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')

SELECT weight FROM Pets WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1)
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1
SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1)
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog') AND PetType = 'dog'
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')

SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS MaxWeight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS MaxWeight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS MaxWeight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType

SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS MaxWeight FROM Pets GROUP BY PetType
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType

SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T3.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(HP.PetID) FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(HP.PetID) FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(H.PetID) FROM Student AS S INNER JOIN Has_Pet AS H ON S.StuID = H.StuID WHERE S.Age > 20
SELECT COUNT(*) FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20

SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(H.StuID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(DISTINCT T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(T3.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Age > 20
SELECT COUNT(T3.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(H.PetID) FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(PetID) FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT COUNT(P.PetID)  FROM Has_Pet AS H  INNER JOIN Student AS S ON H.StuID = S.StuID  INNER JOIN Pets AS P ON H.PetID = P.PetID  WHERE S.Age > 20
SELECT COUNT(P.PetID) FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE S.Age > 20

SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE P.PetType = 'dog' AND S.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Sex = 'F' AND P.PetType = 'dog'
SELECT COUNT(P.PetID) FROM Pets AS P INNER JOIN Has_Pet AS HP ON P.PetID = HP.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE P.PetType = 'dog' AND S.Sex = 'F'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T3.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex = 'F' AND T3.PetType = 'dog'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID)  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(DISTINCT HP.PetID)  FROM Has_Pet AS HP  INNER JOIN Student AS S ON HP.StuID = S.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE S.Sex = 'F' AND P.PetType = 'dog'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID)  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T3.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex = 'F' AND T3.PetType = 'dog'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID)  FROM Pets AS T1  INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T2.StuID = T3.StuID  WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*) FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.Sex = 'F' AND P.PetType = 'dog'
SELECT COUNT(T3.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex = 'F' AND T3.PetType = 'dog'

SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.Sex = 'F' AND T1.PetType = 'dog'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T3.PetID) FROM Pets AS T3 INNER JOIN Has_Pet AS T2 ON T3.PetID = T2.PetID INNER JOIN Student AS T1 ON T2.StuID = T1.StuID WHERE T3.PetType = 'dog' AND T1.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(T1.PetID)  FROM Has_Pet AS T1  INNER JOIN Student AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID  WHERE T2.Sex = 'F' AND T3.PetType = 'dog'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*) FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*) FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE P.PetType = 'dog' AND S.Sex = 'F'
SELECT COUNT(*) FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE P.PetType = 'dog' AND S.Sex = 'F'
SELECT COUNT(T1.PetID)  FROM Pets AS T1  INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T2.StuID = T3.StuID  WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*)  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE S.Sex = 'F' AND P.PetType = 'dog'
SELECT COUNT(T1.PetID) FROM Has_Pet AS T2 INNER JOIN Pets AS T1 ON T2.PetID = T1.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.PetType = 'dog' AND T3.Sex = 'F'
SELECT COUNT(*) FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE P.PetType = 'dog' AND S.Sex = 'F'
SELECT COUNT(*) FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE S.Sex = 'F' AND P.PetType = 'dog'

SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;

SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;

SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog');
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT T3.Fname FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T2.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T2.Fname FROM Has_Pet AS T1 INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T3.PetType IN ('cat', 'dog')

SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT T3.Fname  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog')
SELECT DISTINCT T3.Fname  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType IN ('cat', 'dog')
SELECT DISTINCT T3.Fname  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType IN ('cat', 'dog')

SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID GROUP BY S.Fname HAVING COUNT(DISTINCT P.PetType) = 2 AND P.PetType IN ('cat', 'dog')
SELECT T1.Fname FROM Student AS T1 WHERE T1.StuID IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T2.StuID HAVING COUNT(DISTINCT T3.PetType) = 2)
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2 AND MAX(T3.PetType) IN ('cat', 'dog')
SELECT T1.Fname  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType IN ('cat', 'dog')  GROUP BY T1.StuID, T1.Fname  HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT T1.Fname FROM Student AS T1 WHERE T1.StuID IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T2.StuID HAVING COUNT(DISTINCT T3.PetType) = 2)
SELECT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID GROUP BY S.StuID HAVING COUNT(DISTINCT P.PetType) = 2
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T1.Fname HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT Fname FROM Student AS S WHERE StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog') GROUP BY HP.StuID HAVING COUNT(DISTINCT P.PetType) = 2)
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT T2.Fname  FROM Has_Pet AS T1  INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID  INNER JOIN Student AS T2 ON T1.StuID = T2.StuID  WHERE T3.PetType IN ('cat', 'dog')  GROUP BY T1.StuID  HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog') GROUP BY S.StuID HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2

SELECT DISTINCT T2.Fname FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID GROUP BY T2.StuID HAVING COUNT(DISTINCT T3.PetType) = 2 AND (MAX(T3.PetType) = 'dog' AND MIN(T3.PetType) = 'cat')
SELECT DISTINCT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID GROUP BY S.StuID HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2 AND MIN(T3.PetType) IN ('cat', 'dog')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT T3.Fname FROM Student AS T3 INNER JOIN Has_Pet AS T1 ON T3.StuID = T1.StuID INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID GROUP BY T3.StuID HAVING COUNT(DISTINCT T2.PetType) = 2
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog') GROUP BY T1.Fname HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2 AND MAX(T3.PetType) IN ('cat', 'dog')
SELECT Fname FROM Student WHERE StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID GROUP BY HP.StuID HAVING COUNT(DISTINCT P.PetType) = 2 AND MIN(P.PetType) IN ('cat', 'dog') AND MAX(P.PetType) IN ('cat', 'dog'))
SELECT DISTINCT T1.Fname  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  GROUP BY T1.StuID  HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT DISTINCT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID GROUP BY T1.StuID HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT T1.Fname  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType IN ('cat', 'dog')  GROUP BY T1.StuID, T1.Fname  HAVING COUNT(DISTINCT T3.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID, S.Fname  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID, S.Fname  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Has_Pet HP  INNER JOIN Pets P ON HP.PetID = P.PetID  INNER JOIN Student S ON HP.StuID = S.StuID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY HP.StuID  HAVING COUNT(DISTINCT P.PetType) = 2
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType IN ('cat', 'dog')  GROUP BY S.StuID  HAVING COUNT(DISTINCT P.PetType) = 2

SELECT T1.Major, T1.Age FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType <> 'cat'
SELECT S.Major, S.Age FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat' WHERE P.PetType IS NULL
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT S.Major, S.Age  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetType IS NULL
SELECT Major, Age FROM Student AS T1 WHERE NOT EXISTS (SELECT 1 FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T2.StuID = T1.StuID AND T3.PetType = 'cat')
SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT S.Major, S.Age FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat' WHERE P.PetID IS NULL
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType <> 'cat'
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat' WHERE T3.PetID IS NULL
SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID                          FROM Has_Pet AS T2                          INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID                          WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID                         FROM Has_Pet AS T2                         INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID                         WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID                          FROM Has_Pet AS T2                          INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID                          WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat'  WHERE T3.PetID IS NULL
SELECT T1.Major, T1.Age  FROM Student AS T1  LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat'  WHERE T3.PetID IS NULL
SELECT T1.Major, T1.Age  FROM Student AS T1  LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat'  WHERE T3.PetID IS NULL
SELECT T1.Major, T1.Age  FROM Student AS T1  LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat'  WHERE T3.PetID IS NULL
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')

SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType <> 'cat'
SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT T1.Major, T1.Age FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat' WHERE T3.PetID IS NULL
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT S.Major, S.Age FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat' WHERE P.PetType IS NULL
SELECT T1.Major, T1.Age FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID                          FROM Has_Pet AS T2                          INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID                          WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID                         FROM Has_Pet AS T2                         INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID                         WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT DISTINCT T3.Major, T3.Age  FROM Student AS T3  WHERE T3.StuID NOT IN (     SELECT T1.StuID      FROM Has_Pet AS T1      INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID      WHERE T2.PetType = 'cat' )
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
SELECT T1.Major, T1.Age FROM Student AS T1  LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat' WHERE T3.PetID IS NULL
SELECT T1.Major, T1.Age  FROM Student AS T1  WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Major, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType != 'cat'

SELECT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetID IS NULL
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'cat')
SELECT T1.StuID FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT StuID FROM Student AS T1 WHERE StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT H.StuID FROM Has_Pet AS H INNER JOIN Pets AS P ON H.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT S.StuID  FROM Student AS S  WHERE S.StuID NOT IN (     SELECT HP.StuID      FROM Has_Pet AS HP      INNER JOIN Pets AS P ON HP.PetID = P.PetID      WHERE P.PetType = 'cat' )
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT H.StuID FROM Has_Pet AS H INNER JOIN Pets AS P ON H.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT DISTINCT S.StuID  FROM Student AS S  WHERE S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT DISTINCT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetID IS NULL;
SELECT DISTINCT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetID IS NULL
SELECT T1.StuID FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT DISTINCT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetType IS NULL
SELECT DISTINCT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT DISTINCT S.StuID  FROM Student AS S  WHERE S.StuID NOT IN (     SELECT HP.StuID      FROM Has_Pet AS HP      INNER JOIN Pets AS P ON HP.PetID = P.PetID      WHERE P.PetType = 'cat' )
SELECT S.StuID FROM Student AS S WHERE NOT EXISTS (SELECT 1 FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE HP.StuID = S.StuID AND P.PetType = 'cat')

SELECT S.StuID FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat' WHERE P.PetID IS NULL
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT H.StuID FROM Has_Pet AS H INNER JOIN Pets AS P ON H.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT T1.StuID FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.StuID FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IS NULL OR T3.PetType != 'cat'
SELECT T1.StuID FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT DISTINCT S.StuID FROM Student AS S WHERE S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT DISTINCT S.StuID  FROM Student AS S  WHERE S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT S.StuID FROM Student AS S WHERE S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
SELECT T1.StuID FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID LEFT JOIN Pets AS T3 ON T2.PetID = T3.PetID AND T3.PetType = 'cat' WHERE T3.PetID IS NULL
SELECT DISTINCT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetID IS NULL
SELECT DISTINCT S.StuID  FROM Student AS S  LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID  LEFT JOIN Pets AS P ON HP.PetID = P.PetID AND P.PetType = 'cat'  WHERE P.PetType IS NULL
SELECT DISTINCT T1.StuID FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')

SELECT T1.Fname, T1.Age FROM Student AS T1 WHERE T1.StuID IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog') AND T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Fname, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType = 'dog'  AND T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat');
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND NOT EXISTS (SELECT 1 FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T4.StuID = T1.StuID AND T5.PetType = 'cat')
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog') AND T1.StuID NOT IN (SELECT StuID FROM Has_Pet AS T3 INNER JOIN Pets AS T4 ON T3.PetID = T4.PetID WHERE T4.PetType = 'cat')
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog') AND StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT T1.Fname, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType = 'dog'  AND T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat');
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND NOT EXISTS (SELECT 1 FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T4.StuID = T1.StuID AND T5.PetType = 'cat')
SELECT S.Fname, S.Age FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog' AND S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT T1.Fname, T1.Age FROM Student AS T1 WHERE T1.StuID IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog') AND NOT EXISTS (SELECT 1 FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T4.StuID = T1.StuID AND T5.PetType = 'cat')
SELECT T1.Fname, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType = 'dog'  AND T1.StuID NOT IN (SELECT T4.StuID FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T5.PetType = 'cat')
SELECT S.Fname, S.Age  FROM Student AS S  WHERE S.StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog')  AND S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP1 ON S.StuID = HP1.StuID  INNER JOIN Pets AS P1 ON HP1.PetID = P1.PetID  WHERE P1.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID                      FROM Has_Pet AS HP2                      INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID                      WHERE P2.PetType = 'cat')
SELECT S.Fname, S.Age  FROM Student AS S  JOIN Has_Pet AS HP ON S.StuID = HP.StuID  JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT S.Fname, S.Age  FROM Student AS S  WHERE S.StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog')  AND S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat');
SELECT T1.Fname, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType = 'dog' AND T1.StuID NOT IN (     SELECT T4.StuID      FROM Has_Pet AS T5      INNER JOIN Pets AS T6 ON T5.PetID = T6.PetID      WHERE T6.PetType = 'cat' )
SELECT T1.Fname, T1.Age  FROM Student AS T1  WHERE T1.StuID IN (SELECT T2.StuID                     FROM Has_Pet AS T2                     INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID                     WHERE T3.PetType = 'dog')  AND T1.StuID NOT IN (SELECT T4.StuID                       FROM Has_Pet AS T4                       INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID                       WHERE T5.PetType = 'cat');
SELECT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog' AND S.StuID NOT IN (     SELECT HP2.StuID      FROM Has_Pet AS HP2      INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID      WHERE P2.PetType = 'cat' )
SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')

SELECT Fname FROM Student WHERE StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog') AND StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog')) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND NOT EXISTS (SELECT 1 FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T4.StuID = T1.StuID AND T5.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND NOT EXISTS (SELECT 1 FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T4.StuID = T2.StuID AND T5.PetType = 'cat')
SELECT Fname FROM Student WHERE StuID IN (SELECT H1.StuID FROM Has_Pet AS H1 INNER JOIN Pets AS P1 ON H1.PetID = P1.PetID WHERE P1.PetType = 'dog') AND StuID NOT IN (SELECT H2.StuID FROM Has_Pet AS H2 INNER JOIN Pets AS P2 ON H2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT Fname FROM Student WHERE StuID IN (SELECT H.StuID FROM Has_Pet AS H INNER JOIN Pets AS P ON H.PetID = P.PetID WHERE P.PetType = 'dog') AND StuID NOT IN (SELECT H.StuID FROM Has_Pet AS H INNER JOIN Pets AS P ON H.PetID = P.PetID WHERE P.PetType = 'cat')
SELECT T1.Fname FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND NOT EXISTS (SELECT 1 FROM Has_Pet AS T4 INNER JOIN Pets AS T5 ON T4.PetID = T5.PetID WHERE T4.StuID = T1.StuID AND T5.PetType = 'cat')
SELECT DISTINCT T1.Fname  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType = 'dog'  AND T1.StuID NOT IN (SELECT T2.StuID FROM Has_Pet AS T2 INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat')
SELECT S.Fname FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog' AND NOT EXISTS (SELECT 1 FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE HP2.StuID = S.StuID AND P2.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT DISTINCT S.Fname FROM Student AS S WHERE S.StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog') AND S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat');
SELECT DISTINCT S.Fname  FROM Student AS S  WHERE S.StuID IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'dog')  AND S.StuID NOT IN (SELECT HP.StuID FROM Has_Pet AS HP INNER JOIN Pets AS P ON HP.PetID = P.PetID WHERE P.PetType = 'cat');
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (     SELECT HP2.StuID      FROM Has_Pet AS HP2      INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID      WHERE P2.PetType = 'cat' )
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')
SELECT DISTINCT S.Fname  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  INNER JOIN Pets AS P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet AS HP2 INNER JOIN Pets AS P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'cat')

SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)

SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);

SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;

SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID AS id, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1

SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS max_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS max_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT T1.PetType, AVG(T2.pet_age) AS average_age, MAX(T2.pet_age) AS maximum_age  FROM Pets AS T2  INNER JOIN Has_Pet AS T1 ON T1.PetID = T2.PetID  GROUP BY T1.PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age  FROM Pets  INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType;
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType

SELECT PetType, AVG(pet_age) AS Average_Age, MAX(pet_age) AS Max_Age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS max_age FROM Pets INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType
SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM Pets GROUP BY PetType
SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaximumAge FROM Pets GROUP BY PetType

SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType

SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType

SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID

SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 WHERE T1.StuID IN (SELECT StuID FROM Has_Pet)
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT S.Fname, S.Age FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID
SELECT DISTINCT S.Fname, S.Age  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID
SELECT DISTINCT T1.Fname, T1.Age FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID

SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T1.PetID FROM Pets AS T1 INNER JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT H.PetID FROM Student AS S INNER JOIN Has_Pet AS H ON S.StuID = H.StuID WHERE S.LName = 'Smith'
SELECT T3.PetID  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T1.LName = 'Smith'
SELECT HP.PetID FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT H.PetID FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T2 INNER JOIN Student AS T1 ON T2.StuID = T1.StuID WHERE T1.LName = 'Smith'
SELECT H.PetID FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'

SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT PetID FROM Has_Pet WHERE StuID = (SELECT StuID FROM Student WHERE LName = 'Smith')
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T3.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T2.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T3.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT HP.PetID FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID WHERE S.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT T1.PetID FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'
SELECT T3.PetID  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T1.LName = 'Smith'
SELECT T2.PetID  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  WHERE T1.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT H.PetID FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID WHERE S.LName = 'Smith'
SELECT T2.PetID FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'

SELECT T1.StuID, COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT S.StuID, COUNT(P.PetID) FROM Student AS S INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID INNER JOIN Pets AS P ON HP.PetID = P.PetID GROUP BY S.StuID
SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID GROUP BY T1.StuID
SELECT HP.StuID, COUNT(HP.PetID) FROM Has_Pet AS HP INNER JOIN Student AS S ON HP.StuID = S.StuID GROUP BY HP.StuID
SELECT T1.StuID, COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT T2.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID;
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID;
SELECT T1.StuID, COUNT(T2.PetID) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT H.StuID, COUNT(H.PetID) AS PetCount FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID GROUP BY H.StuID
SELECT T1.StuID, COUNT(T2.PetID) AS PetCount  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID
SELECT H.StuID, COUNT(P.PetID) AS PetCount  FROM Has_Pet AS H  INNER JOIN Pets AS P ON H.PetID = P.PetID  GROUP BY H.StuID
SELECT H.StuID, COUNT(H.PetID) AS PetCount  FROM Has_Pet AS H  INNER JOIN Pets AS P ON H.PetID = P.PetID  GROUP BY H.StuID
SELECT H.StuID, COUNT(H.PetID) AS pet_count  FROM Has_Pet AS H  INNER JOIN Student AS S ON H.StuID = S.StuID  GROUP BY H.StuID
SELECT H.StuID, COUNT(H.PetID) AS NumberOfPets  FROM Has_Pet AS H  INNER JOIN Student AS S ON H.StuID = S.StuID  GROUP BY H.StuID;
SELECT H.StuID, COUNT(H.PetID) AS NumberOfPets  FROM Has_Pet AS H  INNER JOIN Student AS S ON H.StuID = S.StuID  GROUP BY H.StuID;
SELECT T1.StuID, COUNT(T2.PetID) AS PetCount  FROM Has_Pet AS T1  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) AS pet_count  FROM Has_Pet AS T1  INNER JOIN Student AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID
SELECT H.StuID, COUNT(H.PetID) AS NumberOfPets  FROM Has_Pet AS H  INNER JOIN Student AS S ON H.StuID = S.StuID  GROUP BY H.StuID

SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T2.PetID) FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID
SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID
SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID
SELECT T1.StuID, COUNT(T1.PetID) FROM Has_Pet AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) AS pet_count  FROM Has_Pet AS T1  GROUP BY T1.StuID;
SELECT H.StuID, COUNT(H.PetID) AS PetCount FROM Has_Pet AS H INNER JOIN Student AS S ON H.StuID = S.StuID GROUP BY H.StuID
SELECT T1.StuID, COUNT(T1.PetID) AS pet_count  FROM Has_Pet AS T1  INNER JOIN Student AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T2.PetID) AS PetCount  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T2.PetID) AS PetCount  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T2.PetID) AS PetCount  FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) AS PetCount  FROM Has_Pet AS T1  INNER JOIN Student AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) AS PetCount  FROM Has_Pet AS T1  GROUP BY T1.StuID  HAVING COUNT(T1.PetID) > 0
SELECT T1.StuID, COUNT(T1.PetID) AS pet_count FROM Has_Pet AS T1 GROUP BY T1.StuID
SELECT T1.StuID, COUNT(T1.PetID) AS pet_count FROM Has_Pet AS T1 GROUP BY T1.StuID

SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 WHERE T1.StuID IN (SELECT T2.StuID FROM Has_Pet AS T2 GROUP BY T2.StuID HAVING COUNT(T2.PetID) > 1)
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT S.Fname, S.Sex  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  GROUP BY S.StuID  HAVING COUNT(HP.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT S.Fname, S.Sex  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  GROUP BY S.StuID  HAVING COUNT(HP.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1

SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 WHERE T1.StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 WHERE T1.StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 WHERE T1.StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT DISTINCT S.Fname, S.Sex  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  GROUP BY S.StuID  HAVING COUNT(HP.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.Fname, T1.Sex  HAVING COUNT(T2.PetID) > 1
SELECT S.Fname, S.Sex  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  GROUP BY HP.StuID  HAVING COUNT(HP.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT T1.Fname, T1.Sex  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  GROUP BY T1.StuID  HAVING COUNT(T2.PetID) > 1
SELECT S.Fname, S.Sex  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  GROUP BY HP.StuID  HAVING COUNT(HP.PetID) > 1
SELECT S.Fname, S.Sex  FROM Student AS S  INNER JOIN Has_Pet AS HP ON S.StuID = HP.StuID  GROUP BY S.StuID  HAVING COUNT(HP.PetID) > 1

SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T3.LName FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType = 'cat' AND T2.pet_age = 3
SELECT T3.LName FROM Student AS T3 INNER JOIN Has_Pet AS T2 ON T3.StuID = T2.StuID INNER JOIN Pets AS T1 ON T2.PetID = T1.PetID WHERE T1.PetType = 'cat' AND T1.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T2.PetType = 'cat' AND T2.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'
SELECT T3.LName FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID INNER JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T2.PetType = 'cat' AND T2.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T3.LName FROM Student AS T3 INNER JOIN Has_Pet AS T1 ON T3.StuID = T1.StuID INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'cat' AND T2.pet_age = 3
SELECT T2.LName FROM Has_Pet AS T1 INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T3.PetType = 'cat' AND T3.pet_age = 3

SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.pet_age = 3
SELECT LName FROM Student WHERE StuID IN (SELECT T1.StuID FROM Has_Pet AS T1 INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'cat' AND T2.pet_age = 3)
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Has_Pet AS T1 INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName  FROM Student AS T1  INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T2.LName FROM Student AS T2 INNER JOIN Has_Pet AS T1 ON T2.StuID = T1.StuID INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T1.LName FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3
SELECT T3.LName FROM Student AS T3 INNER JOIN Has_Pet AS T2 ON T3.StuID = T2.StuID INNER JOIN Pets AS T1 ON T2.PetID = T1.PetID WHERE T1.PetType = 'cat' AND T1.pet_age = 3
SELECT T3.LName FROM Has_Pet AS T1  INNER JOIN Pets AS T2 ON T1.PetID = T2.PetID  INNER JOIN Student AS T3 ON T1.StuID = T3.StuID  WHERE T2.PetType = 'cat' AND T2.pet_age = 3
SELECT T2.LName FROM Has_Pet AS T1 INNER JOIN Pets AS T3 ON T1.PetID = T3.PetID INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T3.pet_age = 3 AND T3.PetType = 'cat'

SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL;
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(T1.Age) FROM Student AS T1 WHERE T1.StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID IS NULL
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.PetID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)

SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL;
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS H ON S.StuID = H.StuID WHERE H.StuID IS NULL
SELECT AVG(S.Age) FROM Student S LEFT JOIN Has_Pet HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL;
SELECT AVG(S.Age) FROM Student S LEFT JOIN Has_Pet HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL;
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT AVG(S.Age) FROM Student AS S LEFT JOIN Has_Pet AS HP ON S.StuID = HP.StuID WHERE HP.StuID IS NULL
SELECT AVG(T1.Age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.PetID IS NULL

SELECT COUNT(DISTINCT ContId) FROM continents;
SELECT COUNT(DISTINCT ContId) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT ContId) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;

SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT ContId) FROM continents;
SELECT COUNT(DISTINCT ContId) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(ContId) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(DISTINCT Continent) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(DISTINCT ContId) FROM continents;

SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T2.ContId, T2.Continent, COUNT(T1.CountryId) FROM countries AS T1 INNER JOIN continents AS T2 ON T1.Continent = T2.ContId GROUP BY T2.ContId, T2.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT C.ContId, C.Continent, COUNT(Co.CountryId) FROM continents AS C INNER JOIN countries AS Co ON C.ContId = Co.Continent GROUP BY C.ContId, C.Continent
SELECT T2.ContId, T2.Continent, COUNT(T1.CountryId) FROM countries AS T1 INNER JOIN continents AS T2 ON T1.Continent = T2.ContId GROUP BY T2.ContId, T2.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T2.Continent, COUNT(T1.CountryId) AS CountryCount  FROM countries AS T1  INNER JOIN continents AS T2 ON T1.Continent = T2.ContId  GROUP BY T1.Continent
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS CountryCount  FROM countries  INNER JOIN continents ON countries.Continent = continents.ContId  GROUP BY continents.ContId, continents.Continent
SELECT C.ContId, C.Continent, COUNT(CN.CountryId) AS NumberOfCountries  FROM continents AS C  LEFT JOIN countries AS CN ON C.ContId = CN.Continent  GROUP BY C.ContId, C.Continent
SELECT c.ContId, c.Continent, COUNT(co.CountryId) AS CountryCount  FROM continents AS c  LEFT JOIN countries AS co ON c.ContId = co.Continent  GROUP BY c.ContId, c.Continent
SELECT C.ContId, C.Continent, COUNT(*) AS CountryCount  FROM countries AS C  INNER JOIN continents AS D ON C.Continent = D.ContId  GROUP BY C.ContId, C.Continent
SELECT C.ContId, C.Continent, COUNT(CN.CountryId) AS CountryCount  FROM continents AS C  LEFT JOIN countries AS CN ON C.ContId = CN.Continent  GROUP BY C.ContId, C.Continent
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS CountryCount  FROM countries  INNER JOIN continents ON countries.Continent = continents.ContId  GROUP BY continents.ContId, continents.Continent
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries  FROM countries  INNER JOIN continents ON countries.Continent = continents.ContId  GROUP BY continents.ContId, continents.Continent
SELECT T1.ContId, T2.Continent, COUNT(T1.CountryId) AS CountryCount  FROM countries AS T1  INNER JOIN continents AS T2 ON T1.Continent = T2.ContId  GROUP BY T1.Continent
SELECT C.ContId, C.Continent, COUNT(CN.CountryId) AS CountryCount  FROM continents AS C  INNER JOIN countries AS CN ON C.ContId = CN.Continent  GROUP BY C.ContId, C.Continent

SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.Continent = T2.Continent  GROUP BY T1.ContId, T1.Continent
SELECT C.ContId, C.Continent, COUNT(CN.CountryId) AS CountryCount  FROM continents AS C  LEFT JOIN countries AS CN ON C.ContId = CN.Continent  GROUP BY C.ContId, C.Continent
SELECT C.ContId, C.Continent, COUNT(Co.CountryId) AS CountryCount  FROM continents AS C  LEFT JOIN countries AS Co ON C.ContId = Co.Continent  GROUP BY C.ContId, C.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent
SELECT C.ContId, C.Continent, COUNT(CN.CountryId) AS CountryCount  FROM continents AS C  LEFT JOIN countries AS CN ON C.Continent = CN.Continent  GROUP BY C.ContId, C.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent
SELECT T1.ContId, T1.Continent, COUNT(T2.CountryId) AS CountryCount  FROM continents AS T1  LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent  GROUP BY T1.ContId, T1.Continent

SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(CountryId) FROM countries;
SELECT COUNT(CountryId) FROM countries;
SELECT COUNT(CountryId) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryName) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;

SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(CountryId) FROM countries;
SELECT COUNT(CountryId) FROM countries;
SELECT COUNT(CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryId) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryName) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryName) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryName) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(DISTINCT CountryName) FROM countries;

SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T2.FullName, T2.Id, COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.Id, T2.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T2.FullName, T2.Id, COUNT(T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName, T2.Id
SELECT T2.FullName, T2.Id, COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.MakeId) FROM car_makers AS T1 LEFT JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS model_count  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id
SELECT T1.Id, T1.FullName, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id

SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Maker = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Maker = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.Id, T1.FullName, COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.MakeId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.FullName, T1.Id, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT cm.Id, cm.FullName, COUNT(ml.Model) AS ModelCount  FROM car_makers AS cm  LEFT JOIN model_list AS ml ON cm.Id = ml.Maker  GROUP BY cm.Id, cm.FullName

SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T3 ON T1.Id = T3.MakeId INNER JOIN model_list AS T2 ON T3.Model = T2.Model WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM car_names AS T2 INNER JOIN cars_data AS T1 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT Model FROM car_names WHERE MakeId = (SELECT Id FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data))
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT Model FROM cars_data WHERE CAST(Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower IS NOT NULL AND T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data WHERE Horsepower IS NOT NULL)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model  FROM cars_data AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Model  WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.Horsepower = (SELECT MIN(CAST(T2.Horsepower AS INTEGER)) FROM cars_data AS T2)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM cars_data AS T1 WHERE T1.Horsepower = (SELECT MIN(T2.Horsepower) FROM cars_data AS T2)

SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE CAST(T2.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data WHERE Horsepower IS NOT NULL)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower = (SELECT MIN(CAST(T1.Horsepower AS INTEGER)) FROM cars_data AS T1)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Horsepower = (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)

SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM car_names AS T2 INNER JOIN cars_data AS T1 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM cars_data AS T1 WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT Model FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT DISTINCT T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM cars_data AS T1 WHERE T1.Weight < (SELECT AVG(T2.Weight) FROM cars_data AS T2)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM cars_data AS T1 WHERE T1.Weight < (SELECT AVG(T2.Weight) FROM cars_data AS T2)

SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))
SELECT T1.Model FROM cars_data AS T1 WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))
SELECT DISTINCT T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data));
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT Model FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data))

SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = 1970
SELECT DISTINCT T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker INNER JOIN car_names AS T3 ON T2.ModelId = T3.MakeId INNER JOIN cars_data AS T4 ON T3.MakeId = T4.Id WHERE T4.Year = 1970
SELECT DISTINCT T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T3 ON T1.Id = T3.Maker INNER JOIN car_names AS T4 ON T3.Model = T4.Model INNER JOIN cars_data AS T5 ON T4.MakeId = T5.Id WHERE T5.Year = 1970
SELECT DISTINCT T1.Maker FROM car_makers AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Year = 1970
SELECT DISTINCT T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = 1970
SELECT DISTINCT T1.Maker FROM car_makers AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Year = 1970
SELECT DISTINCT T3.FullName FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T1.Maker FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T1.Maker FROM cars_data AS T2 INNER JOIN car_names AS T3 ON T2.Id = T3.MakeId INNER JOIN car_makers AS T1 ON T3.Model = T1.Maker WHERE T2.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1  INNER JOIN model_list AS T2 ON T1.Model = T2.Model  INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id  WHERE T1.Year = 1970
SELECT DISTINCT cm.Maker  FROM cars_data AS cd  INNER JOIN car_names AS cn ON cd.Id = cn.MakeId  INNER JOIN car_makers AS cm ON cn.Model = cm.FullName  WHERE cd.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T4.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = 1970
SELECT DISTINCT T1.Maker FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = 1970
SELECT DISTINCT T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = 1970
SELECT DISTINCT T4.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = 1970

SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT M.Maker FROM cars_data AS C INNER JOIN car_names AS N ON C.Id = N.MakeId INNER JOIN car_makers AS M ON N.Model = M.Maker WHERE C.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = 1970
SELECT DISTINCT T3.FullName FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = 1970
SELECT DISTINCT T3.FullName FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = 1970
SELECT DISTINCT T1.FullName FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970
SELECT DISTINCT T3.FullName FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.FullName  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Year = 1970
SELECT DISTINCT T2.Maker  FROM cars_data AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId  WHERE T1.Year = 1970
SELECT DISTINCT T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = 1970
SELECT DISTINCT T4.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.MakeId = T3.Id WHERE T1.Year = 1970
SELECT DISTINCT T1.Maker FROM cars_data AS T2 INNER JOIN model_list AS T3 ON T2.Id = T3.ModelId INNER JOIN car_makers AS T1 ON T3.Maker = T1.Id WHERE T2.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = 1970
SELECT DISTINCT T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Id WHERE T1.Year = 1970
SELECT DISTINCT T2.Maker FROM cars_data AS T1 INNER JOIN car_makers AS T2 ON T1.Id = T2.Id WHERE T1.Year = 1970
SELECT DISTINCT T4.Maker FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T1.Year = 1970

SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, T1.Year  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Make = T3.Maker  WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Year = (SELECT MIN(Year) FROM cars_data);
SELECT T1.Make, T2.Year  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T2.Year  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Make, T1.Year  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Make, T1.Year FROM cars_data AS T1 INNER JOIN (SELECT MIN(Year) AS EarliestYear FROM cars_data) AS T2 ON T1.Year = T2.EarliestYear

SELECT T3.Maker, MIN(T1.Year) FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id
SELECT T1.Maker, T3.Year FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id  WHERE T3.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T4.Maker, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Maker, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Maker, T2.Year FROM car_makers AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Maker, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T1.Maker, T2.Year FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.Year = (SELECT MIN(Year) FROM cars_data)
SELECT T4.Maker, MIN(T3.Year) AS EarliestYear  FROM cars_data AS T3  INNER JOIN car_names AS T2 ON T3.Id = T2.MakeId  INNER JOIN model_list AS T1 ON T2.Model = T1.Model  GROUP BY T4.Maker  ORDER BY EarliestYear  LIMIT 1
SELECT T3.Maker, MIN(T1.Year) AS EarliestYear  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Year = (SELECT MIN(Year) FROM cars_data)  GROUP BY T3.Maker
SELECT T3.Maker, MIN(T1.Year) AS EarliestYear  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id  GROUP BY T3.Maker  HAVING MIN(T1.Year) = (SELECT MIN(Year) FROM cars_data)
SELECT T2.Maker, MIN(T1.Year)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  GROUP BY T2.Maker  HAVING MIN(T1.Year) = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, MIN(T1.Year)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  GROUP BY T3.Maker  HAVING MIN(T1.Year) = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, MIN(T1.Year) AS EarliestYear  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  GROUP BY T3.Maker  HAVING MIN(T1.Year) = (SELECT MIN(Year) FROM cars_data);
SELECT T2.Maker, MIN(T1.Year) AS EarliestYear  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T2.Maker  HAVING MIN(T1.Year) = (SELECT MIN(Year) FROM cars_data)
SELECT T3.Maker, MIN(T4.Year) FROM cars_data AS T4 INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId GROUP BY T3.Maker ORDER BY MIN(T4.Year) ASC LIMIT 1
SELECT T2.Make, MIN(T1.Year) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T2.Make ORDER BY MIN(T1.Year) ASC LIMIT 1
SELECT T3.Maker, MIN(T2.Year) AS EarliestYear  FROM cars_data AS T2  INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId  INNER JOIN car_makers AS T3 ON T1.Model = T3.Maker  GROUP BY T3.Maker  HAVING MIN(T2.Year) = (SELECT MIN(Year) FROM cars_data)

SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Maker = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM car_names AS T2 INNER JOIN cars_data AS T1 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Model WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Year > 1980
SELECT DISTINCT T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980

SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Model WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT M.Model  FROM cars_data AS C  INNER JOIN car_names AS CN ON C.Id = CN.MakeId  INNER JOIN model_list AS M ON CN.Model = M.Model  WHERE C.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year > 1980
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980

SELECT T3.Continent, COUNT(T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId INNER JOIN continents AS T3 ON T2.Continent = T3.ContId GROUP BY T3.Continent
SELECT T1.Continent, COUNT(T3.Maker) FROM continents AS T1 INNER JOIN countries AS T2 ON T1.ContId = T2.Continent INNER JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T2.Continent, COUNT(T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Continent
SELECT T3.Continent, COUNT(DISTINCT T2.Id) FROM car_makers AS T2 INNER JOIN countries AS T1 ON T2.Country = T1.CountryId INNER JOIN continents AS T3 ON T1.Continent = T3.ContId GROUP BY T3.Continent
SELECT T2.Continent, COUNT(T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Continent
SELECT T2.CountryName, COUNT(T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName
SELECT T3.Continent, COUNT(T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId INNER JOIN continents AS T3 ON T2.Continent = T3.ContId GROUP BY T3.Continent
SELECT T3.Continent, COUNT(T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId INNER JOIN continents AS T3 ON T2.Continent = T3.ContId GROUP BY T3.Continent
SELECT T1.Continent, COUNT(T2.Id) FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T2.Id) FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.Continent
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS MakerCount  FROM car_makers  INNER JOIN countries ON car_makers.Country = countries.CountryId  INNER JOIN continents ON countries.Continent = continents.ContId  GROUP BY continents.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Id) AS MakerCount  FROM car_makers AS CM  INNER JOIN countries AS CO ON CM.Country = CO.CountryId  INNER JOIN continents AS C ON CO.Continent = C.ContId  GROUP BY C.Continent
SELECT T4.Continent, COUNT(DISTINCT T1.Id) AS MakerCount  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  INNER JOIN continents AS T4 ON T2.Continent = T4.ContId  GROUP BY T4.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS MakerCount  FROM continents AS C  INNER JOIN countries AS CO ON C.ContId = CO.Continent  INNER JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent
SELECT T2.Continent, COUNT(T1.Id) AS MakerCount  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  INNER JOIN continents AS T3 ON T2.Continent = T3.ContId  GROUP BY T2.Continent
SELECT T3.Continent, COUNT(DISTINCT T2.Id) AS MakerCount  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  INNER JOIN continents AS T3 ON T2.Continent = T3.ContId  GROUP BY T3.Continent
SELECT c.CountryName, COUNT(DISTINCT cm.Maker) AS MakerCount  FROM car_makers AS cm  INNER JOIN countries AS c ON cm.Country = c.CountryId  GROUP BY c.CountryName
SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS MakerCount FROM car_makers AS CM INNER JOIN countries AS CO ON CM.Country = CO.CountryId INNER JOIN continents AS C ON CO.Continent = C.ContId GROUP BY C.Continent
SELECT T4.Continent, COUNT(DISTINCT T2.Maker) AS MakerCount  FROM car_makers AS T2  INNER JOIN countries AS T3 ON T2.Country = T3.CountryId  INNER JOIN continents AS T4 ON T3.Continent = T4.ContId  GROUP BY T4.Continent
SELECT T1.Continent, COUNT(DISTINCT T2.Maker) AS MakerCount  FROM continents AS T1  INNER JOIN countries AS T2 ON T1.ContId = T2.Continent  INNER JOIN car_makers AS T3 ON T2.CountryId = T3.Country  GROUP BY T1.Continent;

SELECT T1.Continent, COUNT(T3.Id) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.Continent = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T3.Id) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T3.Maker) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T3.Id) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T3.Id) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T2.Continent, COUNT(T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Continent
SELECT C.Continent, COUNT(M.Id) FROM continents AS C LEFT JOIN countries AS COUNTRY ON C.ContId = COUNTRY.Continent LEFT JOIN car_makers AS M ON COUNTRY.CountryId = M.Country GROUP BY C.Continent
SELECT T1.Continent, COUNT(T3.Id) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T2.Id) FROM continents AS T1 LEFT JOIN car_makers AS T2 ON T1.ContId = T2.Country GROUP BY T1.Continent
SELECT T1.Continent, COUNT(T3.Id) FROM continents AS T1 LEFT JOIN countries AS T2 ON T1.ContId = T2.Continent LEFT JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS NumberOfCarMakers  FROM continents AS C  INNER JOIN countries AS CO ON C.ContId = CO.Continent  INNER JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent;
SELECT C.Continent, COUNT(M.Id) AS MakerCount  FROM continents AS C  INNER JOIN countries AS Co ON C.ContId = Co.Continent  INNER JOIN car_makers AS M ON Co.CountryId = M.Country  GROUP BY C.Continent
SELECT T1.Continent, COUNT(DISTINCT T2.Maker) AS MakerCount  FROM continents AS T1  INNER JOIN car_makers AS T2 ON T1.ContId = T2.Country  GROUP BY T1.Continent
SELECT C.Continent, COUNT(M.Id) AS CarMakerCount  FROM continents AS C  INNER JOIN countries AS Co ON C.ContId = Co.Continent  INNER JOIN car_makers AS M ON Co.CountryId = M.Country  GROUP BY C.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS NumberOfCarMakers  FROM continents AS C  INNER JOIN countries AS CO ON C.ContId = CO.Continent  INNER JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent
SELECT T1.Continent, COUNT(T2.Id) AS MakerCount  FROM continents AS T1  LEFT JOIN car_makers AS T2 ON T1.ContId = T2.Country  GROUP BY T1.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Id) AS MakerCount  FROM continents AS C  INNER JOIN countries AS CO ON C.ContId = CO.Continent  INNER JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent
SELECT T3.Continent, COUNT(T2.Id) AS MakerCount  FROM car_makers AS T2  INNER JOIN countries AS T1 ON T2.Country = T1.CountryId  INNER JOIN continents AS T3 ON T1.Continent = T3.ContId  GROUP BY T3.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS MakerCount  FROM continents AS C  LEFT JOIN countries AS CO ON C.ContId = CO.Continent  LEFT JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent
SELECT C.Continent, COUNT(DISTINCT CM.Id) AS NumberOfCarMakers  FROM continents AS C  INNER JOIN countries AS CO ON C.ContId = CO.Continent  INNER JOIN car_makers AS CM ON CO.CountryId = CM.Country  GROUP BY C.Continent

SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Id) DESC LIMIT 1
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Maker) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(DISTINCT T1.Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS CM ON C.CountryId = CM.Country GROUP BY C.CountryName ORDER BY COUNT(CM.Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS CM ON C.CountryId = CM.Country GROUP BY C.CountryName ORDER BY COUNT(CM.Id) DESC LIMIT 1;
SELECT CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY CountryName ORDER BY COUNT(T2.Maker) DESC LIMIT 1
SELECT Country FROM (SELECT Country, COUNT(Id) AS MakerCount FROM car_makers GROUP BY Country) ORDER BY MakerCount DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Maker) DESC LIMIT 1
SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Maker) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Maker) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT countries.CountryName FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1
SELECT T2.CountryName FROM countries AS T2 INNER JOIN car_makers AS T1 ON T2.CountryId = T1.Country GROUP BY T2.CountryName ORDER BY COUNT(T1.Maker) DESC LIMIT 1
SELECT CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(T2.Id) = (SELECT MAX(MakerCount) FROM (SELECT COUNT(*) AS MakerCount FROM car_makers GROUP BY Country))
SELECT T2.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Maker) DESC LIMIT 1
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Id) DESC LIMIT 1

SELECT CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY CountryName ORDER BY COUNT(T2.Id) DESC LIMIT 1
SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS CM ON C.CountryId = CM.Country GROUP BY C.CountryName ORDER BY COUNT(CM.Id) DESC LIMIT 1
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Id) DESC LIMIT 1
SELECT c.CountryName FROM countries AS c INNER JOIN car_makers AS m ON c.CountryId = m.Country GROUP BY c.CountryId ORDER BY COUNT(m.Id) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryName ORDER BY COUNT(M.Id) DESC LIMIT 1
SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Maker) DESC LIMIT 1
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country GROUP BY C.CountryId ORDER BY COUNT(M.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY COUNT(T1.Maker) DESC LIMIT 1
SELECT C.CountryName  FROM car_makers AS CM  INNER JOIN countries AS C ON CM.Country = C.CountryId  GROUP BY C.CountryName  ORDER BY COUNT(CM.Id) DESC  LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Maker) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName ORDER BY COUNT(T2.Maker) DESC LIMIT 1

SELECT T2.FullName, COUNT(T1.MakeId) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id GROUP BY T2.FullName
SELECT T2.FullName, COUNT(T1.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id GROUP BY T2.FullName
SELECT T2.FullName, COUNT(T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT T1.FullName, COUNT(T2.MakeId) FROM car_makers AS T1 LEFT JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.FullName
SELECT T2.FullName, COUNT(T1.Model) AS ModelCount FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.FullName
SELECT COUNT(T1.ModelId), T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT COUNT(T1.Model) AS ModelCount, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT COUNT(T1.Model) AS ModelCount, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT T1.FullName, COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName
SELECT T1.FullName, COUNT(T2.MakeId) AS ModelCount  FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Maker = T2.Model  GROUP BY T1.FullName
SELECT COUNT(T2.ModelId) AS model_count, T1.FullName FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName
SELECT COUNT(T2.Make) AS model_count, T1.FullName  FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.FullName
SELECT COUNT(T1.ModelId) AS ModelCount, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT COUNT(T2.Model) AS model_count, T1.FullName FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName
SELECT COUNT(T2.Model) AS ModelCount, T1.FullName  FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.FullName
SELECT COUNT(T1.Model) AS ModelCount, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName
SELECT COUNT(T2.Model) AS model_count, T1.FullName FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName
SELECT COUNT(DISTINCT T1.Model) AS model_count, T2.FullName  FROM model_list AS T1  INNER JOIN car_names AS T3 ON T1.Model = T3.Model  INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id  GROUP BY T2.FullName
SELECT COUNT(T1.Model) AS ModelCount, T2.FullName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T2.FullName

SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS ModelCount FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.MakeId) FROM car_makers AS T1 LEFT JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.Model) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) FROM car_makers AS T1 LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName
SELECT T2.Id, T2.FullName, COUNT(T1.Model) AS ModelCount  FROM car_makers AS T2  LEFT JOIN model_list AS T1 ON T2.Id = T1.Maker  GROUP BY T2.Id, T2.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(DISTINCT T3.MakeId) AS ModelCount  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Maker = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS NumberOfModels  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.MakeId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.Model) AS ModelCount  FROM car_makers AS T1  LEFT JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.ModelId) AS ModelCount  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName
SELECT T1.Id, T1.FullName, COUNT(T2.MakeId) AS ModelCount  FROM car_makers AS T1  LEFT JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.Id, T1.FullName

SELECT T3.Accelerate FROM cars_data AS T3 INNER JOIN car_names AS T2 ON T3.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T1.MakeId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T1.MakeId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM cars_data AS T3 INNER JOIN car_names AS T2 ON T3.Id = T2.MakeId INNER JOIN model_list AS T1 ON T2.Model = T1.Model WHERE T1.Maker = (SELECT Id FROM car_makers WHERE FullName = 'amc') AND T2.Model = 'hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.ModelId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.ModelId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'

SELECT Accelerate FROM cars_data WHERE Id = (SELECT MakeId FROM car_names WHERE Make = 'amc hornet sportabout (sw)')
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T4.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T4 ON T2.Maker = T4.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet' AND T2.Model = 'sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.MakeId = T2.Maker INNER JOIN cars_data AS T3 ON T2.ModelId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T1.MakeId = T3.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'amc hornet sportabout (sw)'
SELECT T3.Accelerate  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T1.Make = 'amc hornet sportabout (sw)'
SELECT T2.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)'
SELECT T1.Accelerate FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout (sw)'

SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france');
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france');
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france');
SELECT COUNT(DISTINCT Id) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Id) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'

SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 WHERE T1.Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 WHERE T1.Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(*) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'
SELECT COUNT(DISTINCT T1.Maker) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france'

SELECT COUNT(DISTINCT T3.MakeId) FROM car_names AS T3 INNER JOIN car_makers AS T2 ON T3.Model = T2.Maker INNER JOIN countries AS T1 ON T2.Country = T1.CountryId WHERE T1.CountryName = 'usa'
SELECT COUNT(DISTINCT T2.Model) FROM model_list AS T2 INNER JOIN car_makers AS T1 ON T2.Maker = T1.Id INNER JOIN countries AS T3 ON T1.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(T1.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id INNER JOIN model_list AS T3 ON T2.Id = T3.Maker INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id INNER JOIN countries AS T5 ON T4.Country = T5.CountryId WHERE T5.CountryName = 'usa'
SELECT COUNT(DISTINCT T2.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = 'usa'
SELECT COUNT(DISTINCT T3.Make)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  INNER JOIN car_names AS T3 ON T1.Id = T3.MakeId  WHERE T2.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT ML.ModelId) FROM model_list AS ML INNER JOIN car_makers AS CM ON ML.Maker = CM.Id INNER JOIN countries AS C ON CM.Country = C.CountryId WHERE C.CountryName = 'usa'
SELECT COUNT(DISTINCT ML.Model)  FROM model_list AS ML  INNER JOIN car_makers AS CM ON ML.Maker = CM.Id  INNER JOIN countries AS C ON CM.Country = C.CountryId  WHERE C.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Make) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId INNER JOIN model_list AS T3 ON T1.Id = T3.Maker WHERE T2.CountryName = 'usa'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Country = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = '1'

SELECT COUNT(T2.Model) FROM model_list AS T2 INNER JOIN car_makers AS T1 ON T2.Maker = T1.Id WHERE T1.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Maker WHERE T2.Country = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Make) FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id INNER JOIN car_makers AS T3 ON T2.Id = T3.Id INNER JOIN countries AS T4 ON T3.Country = T4.CountryId WHERE T4.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id INNER JOIN countries AS T4 ON T3.Country = T4.CountryId WHERE T4.CountryName = 'United States'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(*) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Maker WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = (SELECT CountryId FROM countries WHERE CountryName = 'usa')
SELECT COUNT(DISTINCT T2.Model)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  INNER JOIN model_list AS T3 ON T1.Id = T3.Maker  INNER JOIN car_names AS T4 ON T3.ModelId = T4.Id  WHERE T2.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.MakeId = T2.Maker INNER JOIN countries AS T3 ON T3.Continent = (SELECT ContId FROM continents WHERE Continent = 'america') WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT ML.Model)  FROM model_list AS ML  INNER JOIN car_makers AS CM ON ML.Maker = CM.Id  INNER JOIN countries AS C ON CM.Country = C.CountryId  WHERE C.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Country = 'usa'
SELECT COUNT(DISTINCT T3.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model) FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T3.Model)  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model  WHERE T1.Country = '1' -- Assuming '1' corresponds to the United States
SELECT COUNT(DISTINCT T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa'
SELECT COUNT(DISTINCT T2.Model)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  INNER JOIN model_list AS T3 ON T1.Id = T3.Maker  WHERE T2.CountryName = 'usa'
SELECT COUNT(DISTINCT T1.Model)  FROM car_names AS T1  INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id  INNER JOIN countries AS T3 ON T2.Country = T3.CountryId  WHERE T3.CountryName = 'usa'

SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;

SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;

SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Year = 1974 AND Cylinders = 8;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Year = 1974 AND Cylinders = 8;

SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(T1.Weight) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 8 AND T1.Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Year = 1974 AND Cylinders = 8;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;

SELECT DISTINCT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Maker = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Make FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Make FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.FullName AS Maker, T2.Model AS Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T2.Maker, T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id

SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Maker = T2.Make
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Maker = T2.Model
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT DISTINCT T1.Maker, T2.Model  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId
SELECT T1.Make, T2.Model FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.MakeId = T2.Maker
SELECT T1.Maker, T2.Model FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId
SELECT T1.Maker, T2.Model  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker

SELECT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId, T1.CountryName
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId, T1.CountryName
SELECT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  INNER JOIN car_makers AS m ON c.CountryId = m.Country;
SELECT DISTINCT c.CountryName, c.CountryId  FROM countries AS c  INNER JOIN car_makers AS m ON c.CountryId = m.Country
SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT c.CountryName, c.CountryId  FROM countries AS c  INNER JOIN car_makers AS cm ON c.CountryId = cm.Country
SELECT DISTINCT c.CountryName, c.CountryId FROM countries AS c INNER JOIN car_makers AS m ON c.CountryId = m.Country
SELECT DISTINCT C.CountryName, C.CountryId  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country
SELECT DISTINCT c.CountryName, c.CountryId FROM countries AS c INNER JOIN car_makers AS m ON c.CountryId = m.Country
SELECT DISTINCT countries.CountryName, countries.CountryId  FROM car_makers  INNER JOIN countries ON car_makers.Country = countries.CountryId;
SELECT DISTINCT c.CountryName, c.CountryId  FROM countries AS c  INNER JOIN car_makers AS m ON c.CountryId = m.Country;
SELECT DISTINCT c.CountryName, c.CountryId  FROM countries AS c  INNER JOIN car_makers AS m  ON c.CountryId = m.Country;

SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT c.CountryId, c.CountryName FROM countries AS c INNER JOIN car_makers AS m ON c.CountryId = m.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country
SELECT DISTINCT countries.CountryName, countries.CountryId  FROM car_makers  INNER JOIN countries ON car_makers.Country = countries.CountryId;
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT c.CountryId, c.CountryName FROM countries AS c INNER JOIN car_makers AS m ON c.CountryId = m.Country
SELECT DISTINCT C.CountryName, CM.Id FROM car_makers AS CM INNER JOIN countries AS C ON CM.Country = C.CountryId
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country;
SELECT DISTINCT c.CountryId, c.CountryName FROM countries AS c INNER JOIN car_makers AS cm ON c.CountryId = cm.Country;
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  INNER JOIN car_makers AS m ON c.CountryId = m.Country
SELECT DISTINCT T1.CountryName, T1.CountryId FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country

SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > '150';
SELECT COUNT(*) FROM cars_data WHERE Horsepower > '150';
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > '150';
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > '150';
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;

SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > '150';
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;
SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150;

SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year

SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS average_weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS average_weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year

SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryName HAVING COUNT(M.Id) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryName HAVING COUNT(M.Maker) >= 3
SELECT c.CountryName  FROM countries AS c  INNER JOIN car_makers AS cm ON c.CountryId = cm.Country  WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY c.CountryId  HAVING COUNT(cm.Id) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryName HAVING COUNT(M.Maker) >= 3
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country INNER JOIN continents AS T3 ON T1.Continent = T3.ContId WHERE T3.Continent = 'europe' GROUP BY T1.CountryName HAVING COUNT(T2.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT T2.CountryName  FROM countries AS T2  INNER JOIN car_makers AS T1 ON T2.CountryId = T1.Country  WHERE T2.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY T2.CountryName  HAVING COUNT(T1.Id) >= 3
SELECT T1.CountryName FROM countries AS T1 INNER JOIN continents AS T2 ON T1.Continent = T2.ContId INNER JOIN car_makers AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING COUNT(T3.Id) >= 3
SELECT CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') GROUP BY CountryName HAVING COUNT(T2.Id) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryId HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN continents AS CT ON C.Continent = CT.ContId  INNER JOIN car_makers AS CM ON C.CountryId = CM.Country  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(CM.Id) >= 3
SELECT T1.CountryName  FROM countries AS T1  INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country  INNER JOIN continents AS T3 ON T1.Continent = T3.ContId  WHERE T3.Continent = 'europe'  GROUP BY T1.CountryName  HAVING COUNT(T2.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  INNER JOIN continents AS CT ON C.Continent = CT.ContId  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  INNER JOIN continents AS CT ON C.Continent = CT.ContId  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN continents AS Cont ON C.Continent = Cont.ContId  INNER JOIN car_makers AS M ON C.CountryId = M.Country  WHERE Cont.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  INNER JOIN continents AS CT ON C.Continent = CT.ContId  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  INNER JOIN continents AS CT ON C.Continent = CT.ContId  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  INNER JOIN continents AS CT ON C.Continent = CT.ContId  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Maker) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY C.CountryId  HAVING COUNT(M.Id) >= 3

SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') GROUP BY T1.CountryName HAVING COUNT(T2.Id) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') GROUP BY C.CountryName HAVING COUNT(DISTINCT M.Maker) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryId HAVING COUNT(M.Maker) >= 3
SELECT CountryName FROM countries AS C WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') AND C.CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) >= 3)
SELECT c.CountryName  FROM countries AS c  INNER JOIN car_makers AS cm ON c.CountryId = cm.Country  GROUP BY c.CountryId  HAVING COUNT(cm.Id) >= 3
SELECT T1.CountryName FROM countries AS T1 INNER JOIN continents AS T2 ON T1.Continent = T2.ContId INNER JOIN car_makers AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING COUNT(T3.Maker) >= 3
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') GROUP BY T1.CountryName HAVING COUNT(T2.Maker) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country WHERE C.Continent = 1 GROUP BY C.CountryName HAVING COUNT(M.Id) >= 3
SELECT DISTINCT c.CountryName  FROM countries AS c  INNER JOIN car_makers AS m ON c.CountryId = m.Country  WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY c.CountryId  HAVING COUNT(m.Maker) >= 3
SELECT DISTINCT c.CountryName  FROM countries AS c  INNER JOIN car_makers AS cm ON c.CountryId = cm.Country  WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY c.CountryId  HAVING COUNT(cm.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT DISTINCT C.CountryName  FROM car_makers AS CM  INNER JOIN countries AS C ON CM.Country = C.CountryId  WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY C.CountryName  HAVING COUNT(CM.Id) >= 3
SELECT DISTINCT c.CountryName  FROM countries AS c  INNER JOIN car_makers AS m ON c.CountryId = m.Country  WHERE c.Continent = 1 -- Assuming 1 corresponds to Europe GROUP BY c.CountryName  HAVING COUNT(m.Id) >= 3
SELECT T1.CountryName  FROM countries AS T1  INNER JOIN continents AS T2 ON T1.Continent = T2.ContId  INNER JOIN car_makers AS T3 ON T1.CountryId = T3.Country  WHERE T2.Continent = 'europe'  GROUP BY T1.CountryId  HAVING COUNT(T3.Id) >= 3
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(T2.Id) >= 3
SELECT C.CountryName FROM countries AS C INNER JOIN car_makers AS M ON C.CountryId = M.Country INNER JOIN continents AS CT ON C.Continent = CT.ContId WHERE CT.Continent = 'europe' GROUP BY C.CountryName HAVING COUNT(M.Id) >= 3
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  INNER JOIN continents AS CT ON C.Continent = CT.ContId  WHERE CT.Continent = 'europe'  GROUP BY C.CountryName  HAVING COUNT(M.Id) >= 3
SELECT DISTINCT T1.CountryName  FROM countries AS T1  INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country  INNER JOIN continents AS T3 ON T1.Continent = T3.ContId  WHERE T3.Continent = 'europe'  GROUP BY T1.CountryName  HAVING COUNT(T2.Id) >= 3
SELECT T1.CountryName FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryName HAVING COUNT(T2.Id) >= 3 AND T1.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')
SELECT C.CountryName  FROM countries AS C  INNER JOIN car_makers AS M ON C.CountryId = M.Country  WHERE C.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')  GROUP BY C.CountryName  HAVING COUNT(M.Maker) >= 3

SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT T1.Make, MAX(T2.Horsepower) FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3 GROUP BY T1.Make
SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT T1.Make, MAX(T2.Horsepower) FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3 GROUP BY T1.Make
SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3
SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT MAX(T1.Horsepower), T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Cylinders = 3 GROUP BY T3.Maker
SELECT MAX(T1.Horsepower), T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3 GROUP BY T2.Make  ORDER BY MAX(T1.Horsepower) DESC  LIMIT 1
SELECT T3.FullName, MAX(T1.Horsepower)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id  WHERE T1.Cylinders = 3  GROUP BY T3.FullName  ORDER BY MAX(T1.Horsepower) DESC  LIMIT 1
SELECT MAX(T1.Horsepower) AS MaxHorsepower, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make  ORDER BY MaxHorsepower DESC  LIMIT 1
SELECT MAX(T3.Horsepower) AS MaxHorsepower, T4.Maker  FROM cars_data AS T3  INNER JOIN car_names AS T2 ON T3.Id = T2.MakeId  INNER JOIN car_makers AS T4 ON T2.Model = T4.Maker  WHERE T3.Cylinders = 3
SELECT T2.Make, MAX(T1.Horsepower) AS MaxHorsepower  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make
SELECT MAX(T3.Horsepower) AS MaxHorsepower, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Cylinders = 3 GROUP BY T2.Make ORDER BY MaxHorsepower DESC LIMIT 1
SELECT T1.Maker, MAX(T2.Horsepower) AS MaxHorsepower  FROM cars_data AS T2  INNER JOIN car_names AS T3 ON T2.Id = T3.MakeId  INNER JOIN model_list AS T4 ON T3.Model = T4.Model  WHERE T2.Cylinders = 3  GROUP BY T1.Maker
SELECT MAX(T1.Horsepower) AS MaxHorsepower, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make
SELECT MAX(CAST(T1.Horsepower AS INTEGER)) AS MaxHorsepower, T3.FullName AS Maker  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T4 ON T2.Model = T4.Model  INNER JOIN car_makers AS T3 ON T4.Maker = T3.Id  WHERE T1.Cylinders = 3  GROUP BY T3.FullName
SELECT MAX(CAST(T1.Horsepower AS INTEGER)) AS MaxHorsepower, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3

SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT T1.Horsepower, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Cylinders = 3 GROUP BY T2.Make
SELECT MAX(T1.Horsepower), T2.Maker FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Cylinders = 3 GROUP BY T2.Maker
SELECT T2.Make, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make ORDER BY MAX(T1.Horsepower) DESC LIMIT 1
SELECT MAX(T1.Horsepower), T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 GROUP BY T2.Make ORDER BY MAX(T1.Horsepower) DESC LIMIT 1
SELECT T1.Make, MAX(T2.Horsepower) FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3
SELECT T1.Make, MAX(T2.Horsepower) FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId INNER JOIN model_list AS T3 ON T1.Model = T3.Model WHERE T2.Cylinders = 3 GROUP BY T1.Make ORDER BY MAX(T2.Horsepower) DESC LIMIT 1
SELECT T1.Make, MAX(T2.Horsepower) FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3
SELECT T1.Horsepower, T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T2.Make, MAX(T1.Horsepower)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make  ORDER BY MAX(T1.Horsepower) DESC  LIMIT 1
SELECT T3.Horsepower, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Cylinders = 3 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T1.Make, MAX(T2.Horsepower) AS MaxHorsepower  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Cylinders = 3  GROUP BY T1.Make  ORDER BY MaxHorsepower DESC  LIMIT 1
SELECT T2.Maker, MAX(T1.Horsepower) AS MaxHorsepower  FROM cars_data AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  WHERE T1.Cylinders = 3  GROUP BY T2.Maker  ORDER BY MaxHorsepower DESC  LIMIT 1
SELECT T1.Horsepower, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 3)
SELECT T1.Make, MAX(T2.Horsepower) AS MaxHorsepower  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Cylinders = 3  GROUP BY T1.Make  ORDER BY MaxHorsepower DESC  LIMIT 1
SELECT T2.Make, MAX(T1.Horsepower)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make  ORDER BY MAX(T1.Horsepower) DESC  LIMIT 1
SELECT T1.Maker, MAX(T2.Horsepower) AS MaxHorsepower  FROM cars_data AS T2  INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId  WHERE T2.Cylinders = 3  GROUP BY T1.Maker  ORDER BY MaxHorsepower DESC  LIMIT 1
SELECT T2.Make, MAX(T1.Horsepower) AS MaxHorsepower  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders = 3  GROUP BY T2.Make  ORDER BY MaxHorsepower DESC  LIMIT 1
SELECT T2.Maker, MAX(T1.Horsepower)  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Country = T3.Id  WHERE T1.Cylinders = 3  GROUP BY T2.Maker  ORDER BY MAX(T1.Horsepower) DESC  LIMIT 1

SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.MPG = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT Model FROM cars_data WHERE MPG = (SELECT MAX(MPG) FROM cars_data);
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.MPG DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(CAST(SUBSTR(MPG, 2, LENGTH(MPG) - 2) AS REAL)) FROM cars_data)
SELECT CN."Model" FROM car_names AS CN INNER JOIN cars_data AS CD ON CN."MakeId" = CD."Id" WHERE CAST(CD."MPG" AS REAL) = (SELECT MAX(CAST("MPG" AS REAL)) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE CAST(T2.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Model WHERE T2.MPG = (SELECT MAX(CAST(MPG AS INTEGER)) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE CAST(T2.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT Model FROM cars_data WHERE MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Make, T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(CAST(T1.MPG AS REAL)) FROM cars_data AS T1)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)

SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Model WHERE T2.MPG = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(SUBSTR(T1.MPG, 2, LENGTH(T1.MPG) - 2) AS REAL) = (SELECT MAX(CAST(SUBSTR(MPG, 2, LENGTH(MPG) - 2) AS REAL)) FROM cars_data)
SELECT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id ORDER BY T2.MPG DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY CAST(T1.MPG AS REAL) DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE CAST(T2.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data);
SELECT T1.Model FROM cars_data AS T2 INNER JOIN car_names AS T1 ON T2.Id = T1.MakeId WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(CAST(T3.MPG AS INTEGER)) FROM cars_data AS T3)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.MPG = (SELECT MAX(MPG) FROM cars_data)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.MPG AS REAL) = (SELECT MAX(CAST(MPG AS REAL)) FROM cars_data)

SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980
SELECT AVG(CAST(Horsepower AS INTEGER)) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980 AND Horsepower IS NOT NULL
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;

SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE "Year" < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980
SELECT AVG(CAST(Horsepower AS REAL)) FROM cars_data WHERE Year < 1980

SELECT AVG(CD.Edispl)  FROM cars_data AS CD  INNER JOIN car_names AS CN ON CD.Id = CN.MakeId  WHERE CN.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(cars_data.Edispl) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(Edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo')
SELECT AVG(cars_data.Edispl) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Model = 'volvo'
SELECT AVG(T3.Edispl) FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T1.Model = 'volvo'
SELECT AVG(T4.Edispl) FROM cars_data AS T4 INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId INNER JOIN model_list AS T2 ON T3.Model = T2.Model WHERE T2.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'
SELECT AVG(Edispl) FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T2.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Model = 'volvo'
SELECT AVG(T3.Edispl) FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T1.Model = 'volvo'
SELECT AVG(T2.Edispl) FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T1.Model = 'volvo'
SELECT AVG(T4.Edispl) FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T2.Model = 'volvo'
SELECT AVG(Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'

SELECT AVG(Edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo')
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T2.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo')
SELECT AVG(T3.Edispl) FROM car_names AS T1 INNER JOIN cars_data AS T3 ON T1.MakeId = T3.Id INNER JOIN model_list AS T2 ON T1.Model = T2.Model WHERE T1.Make = 'volvo'
SELECT AVG(T2.Edispl) FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T1.Model = 'volvo'
SELECT AVG(T4.Edispl) FROM cars_data AS T4 INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId INNER JOIN model_list AS T2 ON T3.Model = T2.Model INNER JOIN car_makers AS T1 ON T2.Maker = T1.Id WHERE T1.Maker = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make LIKE '%volvo%'
SELECT AVG(Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo'
SELECT AVG(Edispl) FROM cars_data WHERE Id IN (SELECT T1.Maker FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName LIKE '%Volvo%')
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make LIKE '%volvo%'
SELECT AVG(T3.Edispl) FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.Model = T2.Model  INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id  WHERE T3.Maker = 'volvo'
SELECT AVG(Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE FullName = 'Volvo')
SELECT AVG(T4.Edispl)  FROM cars_data AS T4  INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId  INNER JOIN model_list AS T2 ON T3.Model = T2.Model  WHERE T2.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo')
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Model = 'volvo'
SELECT AVG(T4.Edispl) FROM cars_data AS T4 INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId INNER JOIN model_list AS T2 ON T3.Model = T2.Model WHERE T2.Model = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo'
SELECT AVG(T3.Edispl) FROM cars_data AS T3 INNER JOIN car_names AS T2 ON T3.Id = T2.MakeId INNER JOIN model_list AS T1 ON T2.Model = T1.Model WHERE T1.Model = 'volvo'
SELECT AVG(Edispl) FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id WHERE T3.Maker = 'volvo'
SELECT AVG(CD.Edispl)  FROM car_names AS CN  INNER JOIN model_list AS ML ON CN.Model = ML.Model  INNER JOIN cars_data AS CD ON ML.ModelId = CD.Id  WHERE CN.Make = 'volvo'
SELECT AVG(T1.Edispl) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'volvo'

SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) AS MaxAccelerate FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) AS MaxAccelerate FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) AS MaxAccelerate FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) AS Max_Accelerate FROM cars_data GROUP BY Cylinders

SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT MAX(Accelerate) FROM cars_data GROUP BY Cylinders;
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders;
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders

SELECT T1.Model, COUNT(T2.MakeId) AS MakeCount FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model GROUP BY T1.Model ORDER BY MakeCount DESC LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T3.Maker) FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T2.MakeId = T3.Id GROUP BY T1.Model ORDER BY COUNT(DISTINCT T3.Maker) DESC LIMIT 1
SELECT T2.Model, COUNT(DISTINCT T1.Make) FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model GROUP BY T2.Model ORDER BY COUNT(DISTINCT T1.Make) DESC LIMIT 1
SELECT T2.Model, COUNT(DISTINCT T1.Make) FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model GROUP BY T2.Model ORDER BY COUNT(DISTINCT T1.Make) DESC LIMIT 1
SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT Make) DESC LIMIT 1
SELECT Model, COUNT(DISTINCT Make) AS MakeCount FROM car_names GROUP BY Model ORDER BY MakeCount DESC LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS MakeCount FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model GROUP BY T1.Model ORDER BY MakeCount DESC LIMIT 1
SELECT Model, COUNT(DISTINCT Maker) AS version_count FROM model_list GROUP BY Model ORDER BY version_count DESC LIMIT 1
SELECT Model, COUNT(Make) FROM car_names GROUP BY Model ORDER BY COUNT(Make) DESC LIMIT 1
SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT Make) DESC LIMIT 1
SELECT T2.Model, COUNT(DISTINCT T1.Make) AS MakeCount  FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.MakeId = T2.ModelId  GROUP BY T2.Model  ORDER BY MakeCount DESC  LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T2.Model, COUNT(DISTINCT T1.Make) AS MakeCount  FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.MakeId = T2.ModelId  GROUP BY T2.Model  ORDER BY MakeCount DESC  LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.ModelId = T2.MakeId  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS MakeCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY MakeCount DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.ModelId = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.Make) AS version_count  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY version_count DESC  LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1

SELECT Model, COUNT(DISTINCT Make) FROM car_names GROUP BY Model ORDER BY COUNT(DISTINCT Make) DESC LIMIT 1
SELECT Model, COUNT(*) AS VersionCount FROM car_names GROUP BY Model ORDER BY VersionCount DESC LIMIT 1
SELECT Model, COUNT(ModelId) AS version_count FROM model_list GROUP BY Model ORDER BY version_count DESC LIMIT 1
SELECT Model, COUNT(DISTINCT MakeId) AS VersionCount FROM car_names GROUP BY Model ORDER BY VersionCount DESC LIMIT 1
SELECT Model, COUNT(*) AS version_count FROM car_names GROUP BY Model ORDER BY version_count DESC LIMIT 1
SELECT Model, COUNT(Make) AS VersionCount FROM car_names GROUP BY Model ORDER BY VersionCount DESC LIMIT 1
SELECT T2.Model, COUNT(DISTINCT T1.Id) AS VersionCount FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T2.Model ORDER BY VersionCount DESC LIMIT 1
SELECT T1.Model, COUNT(T2.MakeId) AS VersionCount FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model GROUP BY T1.Model ORDER BY VersionCount DESC LIMIT 1
SELECT Model, COUNT(*) FROM model_list GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1
SELECT Model, COUNT(DISTINCT Make) AS VersionCount FROM car_names GROUP BY Model ORDER BY VersionCount DESC LIMIT 1
SELECT T1.Model, COUNT(T2.MakeId) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T2.Model, COUNT(DISTINCT T1.Make) AS VersionCount  FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.Model = T2.Model  GROUP BY T2.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.Model) AS version_count  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY version_count DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.ModelId) AS VersionCount  FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.MakeId = T2.Maker  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1
SELECT T1.Model, COUNT(T2.Make) AS version_count FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model GROUP BY T1.Model ORDER BY version_count DESC LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Id) AS version_count  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  GROUP BY T1.Model  ORDER BY version_count DESC  LIMIT 1
SELECT T1.Model, COUNT(DISTINCT T2.Make) AS VersionCount  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  GROUP BY T1.Model  ORDER BY VersionCount DESC  LIMIT 1;
SELECT Model, COUNT(*) AS version_count FROM model_list GROUP BY Model ORDER BY version_count DESC LIMIT 1
SELECT Model, COUNT(*) as version_count FROM model_list GROUP BY Model ORDER BY version_count DESC LIMIT 1

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;

SELECT COUNT(Id) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;

SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(Id) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;

SELECT COUNT(T2.ModelId) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(T2.Model) FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Maker = T2.Model WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(ModelId) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(T2.Model) FROM model_list AS T2 INNER JOIN car_makers AS T1 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(T1.ModelId) FROM model_list AS T1 WHERE T1.Maker = (SELECT T2.Id FROM car_makers AS T2 WHERE T2.FullName = 'American Motor Company')
SELECT COUNT(T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.ModelId) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Make) FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(*) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(M.Model)  FROM model_list AS M  INNER JOIN car_makers AS C ON M.Maker = C.Id  WHERE C.FullName = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(DISTINCT T2.Model)  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(*) FROM car_names WHERE MakeId = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(DISTINCT M.Model)  FROM model_list AS M  INNER JOIN car_makers AS CM ON M.Maker = CM.Id  WHERE CM.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'

SELECT COUNT(*) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(T1.Model) FROM model_list AS T1 WHERE T1.Maker = (SELECT Id FROM car_makers WHERE Maker = 'American Motor Company')
SELECT COUNT(*) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(*) FROM car_names AS CN INNER JOIN model_list AS ML ON CN.Model = ML.Model WHERE ML.Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(T1.ModelId) FROM model_list AS T1 WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(T2.MakeId) FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(T2.MakeId) FROM car_names AS T2 INNER JOIN car_makers AS T1 ON T2.MakeId = T1.Id WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Id = T2.Country INNER JOIN car_names AS T3 ON T2.CountryId = T3.MakeId INNER JOIN model_list AS T4 ON T3.MakeId = T4.Maker WHERE T1.Maker = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(T1.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(T2.Model) FROM car_makers AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.FullName = 'American Motor Company'
SELECT COUNT(DISTINCT T2.Model) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'American Motor Company'
SELECT COUNT(*) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Maker = 'amc'
SELECT COUNT(*) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')
SELECT COUNT(DISTINCT T2.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'

SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Maker = T2.Model GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName  HAVING COUNT(T2.Model) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.Id  HAVING COUNT(T2.Make) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  GROUP BY T1.Id  HAVING COUNT(T2.Model) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.FullName, T1.Id  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.FullName  HAVING COUNT(T2.ModelId) > 3

SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) > 3
SELECT T1.Maker, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.Id, T1.FullName FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName HAVING COUNT(T2.ModelId) > 3
SELECT T1.Maker, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Maker, T1.Id HAVING COUNT(T2.ModelId) > 3
SELECT T1.Id, T1.FullName FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.FullName HAVING COUNT(T2.Model) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) > 3
SELECT T1.Maker, T1.Id  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Maker, T1.Id  HAVING COUNT(T2.ModelId) > 3
SELECT T1.FullName, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) > 3
SELECT T1.Maker, T1.Id FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.Model) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) > 3
SELECT T2.Id, T2.Maker FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id GROUP BY T1.Maker HAVING COUNT(T1.Model) > 3
SELECT T2.Id, T2.FullName FROM (SELECT Maker, COUNT(ModelId) AS ModelCount FROM model_list GROUP BY Maker HAVING COUNT(ModelId) > 3) AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Maker
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.Model) > 3
SELECT T2.Id, T2.FullName  FROM car_makers AS T2  INNER JOIN (      SELECT Maker, COUNT(*) AS ModelCount      FROM model_list      GROUP BY Maker      HAVING COUNT(*) > 3  ) AS T1 ON T1.Maker = T2.Id;
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.ModelId) > 3
SELECT T2.Id, T2.FullName  FROM car_makers AS T2  INNER JOIN model_list AS T1 ON T2.Maker = T1.Model  GROUP BY T2.Id, T2.FullName  HAVING COUNT(T1.Model) > 3
SELECT T1.Id, T2.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T2.Maker HAVING COUNT(T2.Model) > 3

SELECT DISTINCT T1.Model  FROM model_list AS T1  LEFT JOIN car_makers AS T2 ON T1.Maker = T2.Id  LEFT JOIN cars_data AS T3 ON T1.Model = T3.Model  WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T1.Model = T3.Id WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id INNER JOIN car_makers AS T4 ON T1.Maker = T4.Id WHERE T4.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T2.Model  FROM model_list AS T2  LEFT JOIN car_makers AS T1 ON T2.Maker = T1.Id  LEFT JOIN car_names AS T4 ON T2.Model = T4.Model  LEFT JOIN cars_data AS T3 ON T4.MakeId = T3.Id  WHERE T1.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.ModelId = T2.MakeId  INNER JOIN cars_data AS T3 ON T2.Model = T3.Model  INNER JOIN car_makers AS T4 ON T1.Maker = T4.Id  WHERE T4.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Make FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.Model = T2.Model  INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id  INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id  WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id INNER JOIN cars_data AS T3 ON T1.Id = T3.Id WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T2.Id = T3.Id WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T2.Model FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id WHERE T3.FullName = 'General Motors' OR T1.Weight > 3500
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.MakeId = T2.Maker INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Weight > 3500
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM model_list AS T4 INNER JOIN cars_data AS T3 ON T4.Maker = T3.Id WHERE T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM cars_data AS T4 INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId WHERE T4.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM cars_data AS T4 INNER JOIN model_list AS T3 ON T4.Id = T3.ModelId WHERE T4.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM cars_data AS T3 WHERE T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.ModelId = T2.Model INNER JOIN car_makers AS T3 ON T2.MakeId = T3.Id WHERE T3.FullName = 'General Motors' UNION SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.ModelId = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM cars_data AS T3 WHERE T3.Weight > 3500
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Weight > 3500
SELECT DISTINCT T3.Model FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T2.Model = T3.Model  WHERE T1.FullName = 'General Motors' OR T3.Weight > 3500

SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T1.ModelId = T3.Id WHERE T2.Maker = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT CN.Model  FROM car_names AS CN  LEFT JOIN car_makers AS CM ON CN.MakeId = CM.Id  LEFT JOIN cars_data AS CD ON CN.Id = CD.Id  WHERE CM.FullName = 'General Motors' OR CD.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 WHERE T1.Maker = (SELECT Id FROM car_makers WHERE FullName = 'General Motors') OR T1.Model IN (SELECT Model FROM cars_data WHERE Weight > 3500)
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id INNER JOIN car_makers AS T3 ON T2.Id = T3.Id WHERE T3.FullName = 'General Motors' OR T2.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T1.Model = T3.Id WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T1.Model = T3.Model WHERE T2.Maker = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Maker LEFT JOIN cars_data AS T3 ON T1.MakeId = T3.Id WHERE T2.FullName = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T1.Model = T3.Model WHERE T2.Maker = 'General Motors' OR T3.Weight > 3500
SELECT DISTINCT T1.Model FROM car_names AS T1  INNER JOIN model_list AS T2 ON T1.Model = T2.Model  INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id  INNER JOIN cars_data AS T4 ON T1.Id = T4.Id  WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500
SELECT DISTINCT T3.Model FROM model_list AS T3 INNER JOIN car_makers AS T2 ON T3.Maker = T2.Id INNER JOIN car_names AS T1 ON T3.Model = T1.Model INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T2.FullName = 'General Motors' OR T4.Weight > 3500
SELECT DISTINCT CN.Model  FROM car_names AS CN  INNER JOIN cars_data AS CD ON CN.MakeId = CD.Id  INNER JOIN car_makers AS CM ON CN.Model = CM.Maker  WHERE CM.FullName = 'General Motors' OR CD.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1  INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id  WHERE T2.Maker = 'General Motors'  UNION  SELECT DISTINCT T3.Model FROM model_list AS T3  INNER JOIN cars_data AS T4 ON T3.Model = T4.Model  WHERE T4.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Id WHERE T2.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Maker = 'General Motors' UNION SELECT DISTINCT T3.Model FROM model_list AS T3 INNER JOIN cars_data AS T4 ON T3.Model = T4.Id WHERE T4.Weight > 3500
SELECT DISTINCT M.Model  FROM model_list AS M  INNER JOIN car_makers AS CM ON M.Maker = CM.Id  WHERE CM.FullName = 'General Motors'  UNION  SELECT DISTINCT M.Model  FROM model_list AS M  INNER JOIN cars_data AS C ON M.Maker = C.Id  WHERE C.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM cars_data AS T4 INNER JOIN model_list AS T3 ON T4.Id = T3.MakeId WHERE T4.Weight > 3500
SELECT DISTINCT T1.Model  FROM car_names AS T1  INNER JOIN car_makers AS T2 ON T1.MakeId = T2.Id  WHERE T2.FullName = 'General Motors'  UNION  SELECT DISTINCT T3.Model  FROM cars_data AS T4  INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId  WHERE T4.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.FullName = 'General Motors' UNION SELECT DISTINCT T3.Model FROM cars_data AS T4 INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId WHERE T4.Weight > 3500
SELECT DISTINCT T1.Model FROM model_list AS T1  INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id  WHERE T2.FullName = 'General Motors'  UNION  SELECT DISTINCT T3.Model FROM cars_data AS T4  INNER JOIN car_names AS T3 ON T4.Id = T3.MakeId  WHERE T4.Weight > 3500

SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000

SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000 GROUP BY Year HAVING COUNT(CASE WHEN Weight < 4000 THEN 1 END) > 0 AND COUNT(CASE WHEN Weight > 3000 THEN 1 END) > 0
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000 GROUP BY Year HAVING COUNT(CASE WHEN Weight < 4000 THEN 1 END) > 0 AND COUNT(CASE WHEN Weight > 3000 THEN 1 END) > 0
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000 GROUP BY Year HAVING COUNT(CASE WHEN Weight < 4000 THEN 1 END) > 0 AND COUNT(CASE WHEN Weight > 3000 THEN 1 END) > 0
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000
SELECT DISTINCT `Year` FROM `cars_data` WHERE `Weight` < 4000 AND `Weight` > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000 GROUP BY Year HAVING COUNT(DISTINCT CASE WHEN Weight < 4000 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Weight > 3000 THEN 1 END) > 0
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000)
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT Year FROM cars_data WHERE Weight > 3000)
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT Year FROM cars_data WHERE Weight > 3000)
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000)
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT Year FROM cars_data WHERE Weight > 3000)
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000 GROUP BY Year HAVING COUNT(CASE WHEN Weight < 4000 THEN 1 END) > 0 AND COUNT(CASE WHEN Weight > 3000 THEN 1 END) > 0
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000)

SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
SELECT Horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT T1.Horsepower FROM cars_data AS T1 WHERE T1.Accelerate = (SELECT MAX(T2.Accelerate) FROM cars_data AS T2)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)

SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)

SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T2.Model = 'volvo'  ORDER BY T1.Accelerate ASC  LIMIT 1
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo') ORDER BY Accelerate ASC LIMIT 1)
SELECT C.Cylinders FROM cars_data AS C INNER JOIN car_names AS CN ON C.Id = CN.MakeId INNER JOIN model_list AS ML ON CN.Model = ML.Model WHERE ML.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') ORDER BY C.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' AND T1.Accelerate = (SELECT MIN(T1.Accelerate) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo')
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE FullName = 'Volvo') ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo')  ORDER BY T1.Accelerate ASC  LIMIT 1
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = 'volvo' ORDER BY Accelerate ASC LIMIT 1)
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') ORDER BY Accelerate ASC LIMIT 1)
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT Id FROM car_names INNER JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'volvo') ORDER BY Accelerate ASC LIMIT 1)
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo') ORDER BY Accelerate ASC LIMIT 1)
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Model = 'volvo' AND T1.Accelerate = (SELECT MIN(T3.Accelerate) FROM cars_data AS T3 INNER JOIN model_list AS T4 ON T3.Id = T4.Maker WHERE T4.Model = 'volvo')
SELECT T3.Cylinders FROM cars_data AS T3 INNER JOIN car_names AS T2 ON T3.Id = T2.MakeId INNER JOIN model_list AS T1 ON T2.Model = T1.Model WHERE T1.Model = 'volvo' AND T3.Accelerate = (SELECT MIN(T4.Accelerate) FROM cars_data AS T4 INNER JOIN car_names AS T5 ON T4.Id = T5.MakeId INNER JOIN model_list AS T6 ON T5.Model = T6.Model WHERE T6.Model = 'volvo')
SELECT Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM model_list WHERE Model = 'volvo') ORDER BY T1.Accelerate ASC LIMIT 1
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo') ORDER BY Accelerate ASC LIMIT 1)
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT Id FROM car_names WHERE Model = 'volvo') ORDER BY Accelerate ASC LIMIT 1)

SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make LIKE 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Accelerate = (SELECT MIN(Accelerate) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Model = 'volvo'))
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT CD.Cylinders  FROM cars_data AS CD  INNER JOIN car_names AS CN ON CD.Id = CN.MakeId  INNER JOIN model_list AS ML ON CN.Model = ML.Model  INNER JOIN car_makers AS CM ON ML.Maker = CM.Id  WHERE CM.Maker = 'volvo'  ORDER BY CD.Accelerate ASC  LIMIT 1
SELECT Cylinders FROM cars_data WHERE Id = (SELECT T1.Id FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1)
SELECT Cylinders FROM cars_data AS T1 WHERE T1.Id IN (SELECT MakeId FROM car_names WHERE Make LIKE 'volvo%') ORDER BY Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make LIKE 'volvo' ORDER BY T1.Accelerate ASC LIMIT 1
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo'))) ORDER BY Accelerate ASC LIMIT 1)
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' AND T1.Accelerate = (SELECT MIN(T3.Accelerate) FROM cars_data AS T3 INNER JOIN car_names AS T4 ON T3.Id = T4.MakeId WHERE T4.Model = 'volvo')
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'volvo' ORDER BY Accelerate ASC LIMIT 1)
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T3.Maker = 'volvo' AND T1.Accelerate = (SELECT MIN(T4.Accelerate) FROM cars_data AS T4 INNER JOIN car_names AS T5 ON T4.Id = T5.MakeId INNER JOIN car_makers AS T6 ON T5.Model = T6.Maker WHERE T6.Maker = 'volvo')
SELECT Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') AND T1.Accelerate = (SELECT MIN(T4.Accelerate) FROM cars_data AS T4 INNER JOIN car_names AS T5 ON T4.Id = T5.MakeId WHERE T5.Model = T2.Model)
SELECT Cylinders FROM cars_data WHERE Id = (SELECT Id FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model LIKE 'volvo') ORDER BY Accelerate ASC LIMIT 1)
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') AND T1.Accelerate = (SELECT MIN(T4.Accelerate) FROM cars_data AS T4 INNER JOIN car_names AS T5 ON T4.Id = T5.MakeId INNER JOIN model_list AS T6 ON T5.Model = T6.Model WHERE T6.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo'))
SELECT Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') AND T1.Accelerate = (SELECT MIN(Accelerate) FROM cars_data AS T4 INNER JOIN car_names AS T5 ON T4.Id = T5.MakeId INNER JOIN model_list AS T6 ON T5.Model = T6.Model WHERE T6.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo'))
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') AND T1.Accelerate = (SELECT MIN(T4.Accelerate) FROM cars_data AS T4 INNER JOIN car_names AS T5 ON T4.Id = T5.MakeId INNER JOIN model_list AS T6 ON T5.Model = T6.Model WHERE T6.Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo'))
SELECT T1.Cylinders FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make LIKE 'volvo' AND T1.Accelerate = (SELECT MIN(T3.Accelerate) FROM cars_data AS T3 INNER JOIN car_names AS T4 ON T3.Id = T4.MakeId WHERE T4.Make LIKE 'volvo')

SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data) LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data))
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);

SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data));
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data) LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Accelerate) FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data))
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data));

SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(*) > 2
SELECT COUNT(DISTINCT `Country`) FROM `car_makers` GROUP BY `Country` HAVING COUNT(`Id`) > 2
SELECT COUNT(DISTINCT T2.CountryId) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryId HAVING COUNT(T1.Id) > 2
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Maker) > 2)
SELECT COUNT(DISTINCT T1.CountryId) FROM countries AS T1 INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(T2.Id) > 2
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(DISTINCT Id) > 2);
SELECT COUNT(*) FROM (SELECT `Country` FROM `car_makers` GROUP BY `Country` HAVING COUNT(`Id`) > 2) AS `Counts`
SELECT COUNT(DISTINCT countries.CountryId) FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) > 2
SELECT COUNT(*) FROM (SELECT `Country` FROM `car_makers` GROUP BY `Country` HAVING COUNT(*) > 2);
SELECT COUNT(DISTINCT T2.CountryId)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  GROUP BY T2.CountryId  HAVING COUNT(T1.Id) > 2
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(*) > 2
SELECT COUNT(*) FROM (SELECT CountryId FROM car_makers GROUP BY CountryId HAVING COUNT(*) > 2) AS T
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(*) > 2
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Maker) > 2)
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2) AS T
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Maker) > 2) AS T;
SELECT COUNT(*) FROM (SELECT CountryId FROM car_makers GROUP BY CountryId HAVING COUNT(Maker) > 2) AS T1
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(*) > 2
SELECT COUNT(DISTINCT T1.Country)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  GROUP BY T1.Country  HAVING COUNT(T1.Id) > 2

SELECT COUNT(DISTINCT T2.CountryId) FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryId HAVING COUNT(T1.Id) > 2
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2
SELECT COUNT(DISTINCT `Country`) FROM `car_makers` GROUP BY `Country` HAVING COUNT(`Maker`) > 2
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(*) > 2;
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2);
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2
SELECT COUNT(*) FROM (SELECT `Country`, COUNT(`Maker`) as `maker_count` FROM `car_makers` GROUP BY `Country` HAVING `maker_count` > 2)
SELECT COUNT(*) FROM (SELECT T2.Country, COUNT(T1.Maker) AS MakerCount FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Country HAVING MakerCount > 2)
SELECT COUNT(DISTINCT Country) FROM car_makers GROUP BY Country HAVING COUNT(Maker) > 2
SELECT COUNT(*) FROM (SELECT `Country`, COUNT(`Maker`) AS `maker_count` FROM `car_makers` INNER JOIN `countries` ON `car_makers`.`Country` = `countries`.`CountryId` GROUP BY `Country` HAVING `maker_count` > 2)
SELECT COUNT(*) FROM (SELECT Country, COUNT(*) AS MakerCount FROM car_makers GROUP BY Country HAVING COUNT(*) > 2) AS CountryCount
SELECT COUNT(DISTINCT T2.CountryName)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  GROUP BY T2.CountryName  HAVING COUNT(T1.Maker) > 2
SELECT COUNT(*) FROM (SELECT T1.Country FROM car_makers AS T1 GROUP BY T1.Country HAVING COUNT(T1.Maker) > 2) AS T2
SELECT COUNT(*) FROM (SELECT Country, COUNT(*) as MakerCount FROM car_makers GROUP BY Country HAVING COUNT(*) > 2) AS CountryMakers
SELECT COUNT(*) FROM (SELECT Country, COUNT(*) as MakerCount FROM car_makers GROUP BY Country HAVING MakerCount > 2);
SELECT COUNT(*) FROM (SELECT countries.CountryId FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) > 2) AS CountryCount
SELECT COUNT(*) FROM (SELECT Country, COUNT(Maker) AS MakerCount FROM car_makers GROUP BY Country HAVING COUNT(Maker) > 2) AS Subquery
SELECT COUNT(*) FROM (SELECT Country, COUNT(*) as MakerCount FROM car_makers GROUP BY Country HAVING MakerCount > 2) AS CountryCount
SELECT COUNT(DISTINCT T2.CountryId)  FROM car_makers AS T1  INNER JOIN countries AS T2 ON T1.Country = T2.CountryId  GROUP BY T2.CountryId  HAVING COUNT(T1.Id) > 2
SELECT COUNT(DISTINCT C.CountryId)  FROM car_makers AS M  INNER JOIN countries AS C ON M.Country = C.CountryId  GROUP BY C.CountryId  HAVING COUNT(M.Id) > 2

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;

SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY CAST(T2.Horsepower AS INTEGER) DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1
SELECT Model FROM cars_data WHERE Cylinders = 4 AND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1
SELECT Model FROM cars_data WHERE Cylinders = 4 AND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 AND T2.Horsepower = (SELECT MAX(T2.Horsepower) FROM cars_data AS T2 WHERE T2.Cylinders = 4)
SELECT Model FROM cars_data WHERE Cylinders = 4 AND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4);
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY CAST(T1.Horsepower AS INTEGER) DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(CAST(T1.Horsepower AS INTEGER)) FROM cars_data AS T1 WHERE T1.Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower IS NOT NULL ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 AND T2.Horsepower = (SELECT MAX(T3.Horsepower) FROM cars_data AS T3 WHERE T3.Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T1.Model FROM cars_data AS T1 WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(T2.Horsepower) FROM cars_data AS T2 WHERE T2.Cylinders = 4)

SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY CAST(T1.Horsepower AS INTEGER) DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY CAST(Horsepower AS INTEGER) DESC LIMIT 1;
SELECT `Model` FROM `cars_data` WHERE `Cylinders` = 4 ORDER BY CAST(`Horsepower` AS INTEGER) DESC LIMIT 1
SELECT T1.Model  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Cylinders = 4 AND T2.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 AND T2.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY CAST(Horsepower AS INTEGER) DESC LIMIT 1;
SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower IS NOT NULL ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower IS NOT NULL ORDER BY CAST(T1.Horsepower AS INTEGER) DESC LIMIT 1
SELECT T2.Model, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 GROUP BY T2.Model ORDER BY MAX(T1.Horsepower) DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND CAST(T1.Horsepower AS INTEGER) = (SELECT MAX(CAST(Horsepower AS INTEGER)) FROM cars_data WHERE Cylinders = 4)
SELECT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Id WHERE T2.Cylinders = 4 ORDER BY CAST(T2.Horsepower AS INTEGER) DESC LIMIT 1
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T1.Model FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(T3.Horsepower) FROM cars_data AS T3 WHERE T3.Cylinders = 4)
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 AND T1.Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT Model FROM cars_data WHERE Cylinders = 4 AND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 4)
SELECT T2.Model, MAX(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 4 GROUP BY T2.Model ORDER BY MAX(T1.Horsepower) DESC LIMIT 1

SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T2.Cylinders <= 3
SELECT T2.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T3.MakeId, T3.Make FROM cars_data AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.ModelId INNER JOIN car_names AS T3 ON T2.Model = T3.Model WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T2.Cylinders <= 3
SELECT T2.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.MakeId, T2.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE CAST(T1.Horsepower AS INTEGER) > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T1.Cylinders <= 3
SELECT T3.MakeId, T3.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T2.Cylinders <= 3
SELECT T1.MakeId, T3.Maker FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Maker = T3.Maker WHERE T1.Horsepower > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE CAST(T2.Horsepower AS INTEGER) > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data) AND T2.Cylinders <= 3
SELECT T1.Id, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)  AND T1.Cylinders <= 3
SELECT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)  AND T2.Cylinders <= 3
SELECT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T2.Cylinders <= 3
SELECT T1.Id, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Horsepower > (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)  AND T1.Cylinders <= 3
SELECT T2.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.Id, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T2.Cylinders <= 3
SELECT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Horsepower > (SELECT MIN(CAST(T2.Horsepower AS INTEGER)) FROM cars_data AS T2)  AND T2.Cylinders <= 3
SELECT T1.Id AS MakeId, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3
SELECT T1.Id, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3

SELECT cn.MakeId, cn.Make  FROM car_names AS cn  INNER JOIN cars_data AS cd ON cn.MakeId = cd.Id  WHERE cd.Cylinders < 4 AND cd.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower != (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders < 4
SELECT T1.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders < 4 AND T1.Horsepower NOT IN (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders < 4 AND T2.Horsepower < (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders < 4 AND T1.Horsepower < (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)
SELECT T1.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders < 4 AND T1.Horsepower NOT IN (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.MakeId, T2.Make FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders < 4 AND CAST(T1.Horsepower AS REAL) < (SELECT MIN(CAST(Horsepower AS REAL)) FROM cars_data)
SELECT T3.MakeId, T3.Make FROM car_names AS T3 INNER JOIN cars_data AS T1 ON T3.MakeId = T1.Id WHERE T1.Cylinders < 4 AND T1.Horsepower < (SELECT MIN(Horsepower) FROM cars_data)
SELECT T2.MakeId, T2.Make FROM car_names AS T2 INNER JOIN cars_data AS T1 ON T2.Model = T1.Model WHERE T1.Cylinders < 4 AND T1.Horsepower NOT IN (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower < (SELECT MIN(Horsepower) FROM cars_data) AND T2.Cylinders < 4
SELECT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Cylinders < 4 AND T2.Horsepower != (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.Id, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Horsepower != (SELECT MIN(Horsepower) FROM cars_data)  AND T1.Cylinders < 4
SELECT T1.Id, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders < 4 AND T1.Horsepower != (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Cylinders < 4 AND T2.Horsepower <> (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.MakeId, T1.Make FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders < 4 AND T2.Horsepower != (SELECT MIN(Horsepower) FROM cars_data)
SELECT T1.Id, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders < 4 AND T1.Horsepower <> (SELECT MIN(Horsepower) FROM cars_data)
SELECT DISTINCT T1.MakeId, T1.Make  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Cylinders < 4 AND T2.Horsepower != (SELECT MIN(Horsepower) FROM cars_data)
SELECT DISTINCT T2.MakeId, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Horsepower < (SELECT MIN(CAST(Horsepower AS INTEGER)) FROM cars_data)  AND T1.Cylinders < 4;
SELECT T2.MakeId, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders < 4 AND CAST(T1.Horsepower AS REAL) > (SELECT MIN(CAST(Horsepower AS REAL)) FROM cars_data)
SELECT T1.MakeId, T2.Make  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Cylinders < 4 AND T1.Horsepower NOT IN (SELECT MIN(Horsepower) FROM cars_data)

SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980

SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980;
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS INTEGER)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(CAST(MPG AS REAL)) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980

SELECT T1.Model FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T4.Weight < 3500 AND T3.FullName <> 'Ford Motor Company'
SELECT T1.Model FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id  WHERE T3.Weight < 3500 AND T2.MakeId NOT IN (SELECT Id FROM car_makers WHERE FullName = 'Ford Motor Company')
SELECT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id INNER JOIN car_makers AS T4 ON T1.Maker = T4.Id WHERE T3.Weight < 3500 AND T4.FullName != 'Ford Motor Company'
SELECT T1.Model  FROM model_list AS T1  INNER JOIN cars_data AS T2 ON T1.ModelId = T2.Id  WHERE T2.Weight < 3500 AND T1.Maker NOT IN (SELECT T3.Maker FROM car_makers AS T3 WHERE T3.FullName = 'Ford Motor Company')
SELECT T1.Model FROM car_names AS T1 INNER JOIN model_list AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id INNER JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T4.Weight < 3500 AND T3.FullName <> 'Ford Motor Company'
SELECT T1.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T3.Id = T2.Model WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT M.Model FROM cars_data AS C INNER JOIN car_names AS M ON C.Id = M.MakeId WHERE C.Weight < 3500 AND M.Make != 'Ford Motor Company'
SELECT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Weight < 3500 AND T1.Maker NOT IN (SELECT Id FROM car_makers WHERE FullName = 'Ford Motor Company')
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT T1.Model FROM model_list AS T1 INNER JOIN cars_data AS T2 ON T1.Model = T2.Model INNER JOIN car_makers AS T3 ON T1.Maker = T3.Id WHERE T2.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Make = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Make = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName <> 'Ford Motor Company'
SELECT DISTINCT T3.Model FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T1.Weight < 3500 AND T4.FullName != 'Ford Motor Company'
SELECT DISTINCT T3.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T1.Weight < 3500 AND T4.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Make = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T1.Model FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T1.Weight < 3500 AND T4.FullName != 'Ford Motor Company'
SELECT T1.Model FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T3.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'

SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id INNER JOIN car_makers AS T4 ON T1.Maker = T4.Id WHERE T3.Weight < 3500 AND T4.FullName <> 'Ford Motor Company'
SELECT DISTINCT T1.Model  FROM model_list AS T1  INNER JOIN car_names AS T2 ON T1.Model = T2.Model  INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id  WHERE T3.Weight < 3500 AND T1.Maker NOT IN (SELECT Id FROM car_makers WHERE Maker = 'Ford')
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < 3500 AND T1.Make NOT IN (SELECT T3.Make FROM car_makers AS T3 WHERE T3.FullName = 'Ford Motor Company')
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Maker = T3.Id WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T1.Model  FROM car_names AS T1  INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id  WHERE T2.Weight < 3500 AND T1.MakeId NOT IN (SELECT Id FROM car_makers WHERE Maker = 'ford')
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN model_list AS T3 ON T2.Model = T3.Model INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T1.Weight < 3500 AND T4.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.MakeId = T3.Id WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T1.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < 3500 AND T1.MakeId NOT IN (SELECT T3.Maker FROM model_list AS T3 INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T4.Maker = 'Ford Motor Company')
SELECT DISTINCT T1.Model FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model INNER JOIN cars_data AS T3 ON T2.MakeId = T3.Id INNER JOIN car_makers AS T4 ON T1.Maker = T4.Id WHERE T3.Weight < 3500 AND T4.Maker != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T3.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName <> 'Ford Motor Company'
SELECT DISTINCT T3.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T3.Model  FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker  WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Country = T3.Country WHERE T1.Weight < 3500 AND T3.Maker != (SELECT Id FROM car_makers WHERE Maker = 'Ford')
SELECT DISTINCT T3.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.Model = T3.Maker WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T3.Id = T2.MakeId WHERE T1.Weight < 3500 AND T3.FullName != 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId INNER JOIN car_makers AS T3 ON T2.MakeId = T3.Id WHERE T1.Weight < 3500 AND T3.FullName <> 'Ford Motor Company'
SELECT DISTINCT T2.Model FROM cars_data AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T2.Model = T3.Model  INNER JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T1.Weight < 3500 AND T4.FullName != 'Ford Motor Company'
SELECT DISTINCT CN.Model FROM cars_data AS CD  INNER JOIN car_names AS CN ON CD.Id = CN.MakeId  INNER JOIN car_makers AS CM ON CN.Model = CM.Maker  WHERE CD.Weight < 3500 AND CM.Maker != 'ford'

SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT c.CountryName FROM countries AS c LEFT JOIN car_makers AS m ON c.CountryId = m.Country WHERE m.Country IS NULL
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS m ON c.CountryId = m.Country  WHERE m.Country IS NULL;
SELECT CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Country IS NULL
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)
SELECT c.CountryName FROM countries AS c LEFT JOIN car_makers AS m ON c.CountryId = m.Country WHERE m.Id IS NULL
SELECT CountryName FROM countries AS c LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country GROUP BY CountryName HAVING COUNT(cm.Id) = 0
SELECT DISTINCT CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT DISTINCT T1.CountryName  FROM countries AS T1  LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country  WHERE T2.Country IS NULL
SELECT c.CountryName FROM countries AS c LEFT JOIN car_makers AS m ON c.CountryId = m.Country WHERE m.Country IS NULL
SELECT T1.CountryName  FROM countries AS T1  LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country  WHERE T2.Maker IS NULL
SELECT C.CountryName  FROM countries AS C  LEFT JOIN car_makers AS M ON C.CountryId = M.Country  WHERE M.Id IS NULL;
SELECT C.CountryName  FROM countries AS C  LEFT JOIN car_makers AS CM ON C.CountryId = CM.Country  WHERE CM.Country IS NULL;
SELECT C.CountryName FROM countries AS C LEFT JOIN car_makers AS M ON C.CountryId = M.Country WHERE M.Country IS NULL
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)
SELECT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT DISTINCT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id IS NULL

SELECT c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.Country WHERE cm.Country IS NULL
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries AS C LEFT JOIN car_makers AS CM ON C.CountryId = CM.Country WHERE CM.Country IS NULL
SELECT c.CountryName FROM countries AS c LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country WHERE cm.Country IS NULL
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
SELECT c.CountryName FROM countries AS c LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country WHERE cm.Country IS NULL
SELECT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT CountryName FROM countries WHERE NOT EXISTS (SELECT 1 FROM car_makers WHERE countries.CountryId = car_makers.Country);
SELECT CountryName FROM countries AS C LEFT JOIN car_makers AS M ON C.CountryId = M.Country WHERE M.Country IS NULL
SELECT CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  WHERE cm.Country IS NULL
SELECT DISTINCT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT C.CountryName  FROM countries AS C  LEFT JOIN car_makers AS CM ON C.CountryId = CM.Country  WHERE CM.Country IS NULL;
SELECT CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT DISTINCT T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL
SELECT c.CountryName FROM countries AS c LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country GROUP BY c.CountryId HAVING COUNT(cm.Id) = 0
SELECT C.CountryName  FROM countries AS C  LEFT JOIN car_makers AS M ON C.CountryId = M.Country  WHERE M.Country IS NULL
SELECT DISTINCT c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS m ON c.CountryId = m.Country  WHERE m.Maker IS NULL;
SELECT DISTINCT T1.CountryName  FROM countries AS T1  LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country  WHERE T2.Country IS NULL
SELECT CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Country IS NULL

SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.Model) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Maker = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.ModelId) >= 2 AND (SELECT COUNT(DISTINCT Maker) FROM car_makers) > 3
SELECT Id, Maker FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(ModelId) >= 2) AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  WHERE T1.Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Model) >= 2)  AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.ModelId) >= 2 AND COUNT(DISTINCT T1.Id) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 WHERE T1.Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(ModelId) >= 2) AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id, T1.Maker HAVING COUNT(T2.ModelId) >= 2
SELECT T1.Id, T1.Maker FROM car_makers AS T1 WHERE T1.Id IN (SELECT T2.Maker FROM model_list AS T2 WHERE T2.Maker = T1.Id GROUP BY T2.Maker HAVING COUNT(T2.ModelId) >= 2) AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT Id, Maker FROM car_makers WHERE Maker IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Model) >= 2) AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 WHERE T1.Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Model) >= 2) AND (SELECT COUNT(*) FROM car_makers) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2 AND COUNT(DISTINCT T1.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT cm.Id, cm.Maker  FROM car_makers AS cm  INNER JOIN model_list AS ml ON cm.Id = ml.Maker  GROUP BY cm.Id, cm.Maker  HAVING COUNT(ml.ModelId) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2 AND COUNT(DISTINCT T1.Id) > 3
SELECT cm.Id, cm.Maker  FROM car_makers AS cm  INNER JOIN model_list AS ml ON cm.Id = ml.Maker  GROUP BY cm.Id, cm.Maker  HAVING COUNT(ml.Model) >= 2 AND COUNT(DISTINCT cm.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.ModelId) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.FullName  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id  HAVING COUNT(T2.Model) >= 2 AND (SELECT COUNT(DISTINCT Id) FROM car_makers) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2 AND (SELECT COUNT(DISTINCT T3.Id) FROM car_makers AS T3) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2 AND COUNT(T1.Id) > 3

SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model  INNER JOIN cars_data AS T4 ON T3.MakeId = T4.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(T4.Id) > 3
SELECT DISTINCT CM.Id, CM.Maker  FROM car_makers AS CM  INNER JOIN model_list AS ML ON CM.Id = ML.Maker  INNER JOIN car_names AS CN ON ML.Maker = CN.MakeId  INNER JOIN cars_data AS CD ON CN.MakeId = CD.Id  GROUP BY CM.Id, CM.Maker  HAVING COUNT(DISTINCT ML.Model) >= 2 AND COUNT(CD.Id) > 3
SELECT T1.Id, T1.Maker FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker INNER JOIN cars_data AS T3 ON T1.Id = T3.Id GROUP BY T1.Id, T1.Maker HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(DISTINCT T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS M ON T1.Id = M.Maker  INNER JOIN (SELECT N.Model, COUNT(*) AS CarCount              FROM cars_data AS C              INNER JOIN car_names AS N ON C.Id = N.MakeId              GROUP BY N.Model              HAVING COUNT(*) > 3) AS CarCounts ON M.Model = CarCounts.Model  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT M.Model) >= 2
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(DISTINCT T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(T3.Id) > 3
SELECT cm.Id, cm.Maker  FROM car_makers AS cm  INNER JOIN car_names AS cn ON cm.Maker = cn.Make  INNER JOIN cars_data AS cd ON cm.Country = cd.Id  GROUP BY cm.Id, cm.Maker  HAVING COUNT(DISTINCT cn.Model) >= 2 AND COUNT(cd.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(DISTINCT T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(T3.Make) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN car_names AS T3 ON T2.Model = T3.Model  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(DISTINCT T3.MakeId) > 3
SELECT T1.Id, T1.FullName  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id, T1.FullName  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(T3.Id) > 3
SELECT T1.Id, T1.FullName  FROM car_makers AS T1  INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId  INNER JOIN model_list AS T3 ON T1.Id = T3.Maker  GROUP BY T1.Id, T1.FullName  HAVING COUNT(DISTINCT T3.Model) >= 2 AND COUNT(T2.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T1.Id = T3.Id  GROUP BY T1.Id  HAVING COUNT(DISTINCT T2.Model) >= 2 AND COUNT(DISTINCT T3.Id) > 3
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN (      SELECT MakeId, COUNT(DISTINCT Model) AS model_count      FROM car_names      GROUP BY MakeId      HAVING model_count >= 2  ) AS T2 ON T1.Id = T2.MakeId  INNER JOIN (      SELECT Id, COUNT(*) AS car_count      FROM cars_data      GROUP BY Id      HAVING car_count > 3  ) AS T3 ON T1.Id = T3.Id;
SELECT T1.Id, T1.Maker  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T2.ModelId = T3.Id  GROUP BY T1.Id, T1.Maker  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(T3.Id) > 3
SELECT T1.Id, T2.Maker  FROM car_makers AS T2  INNER JOIN model_list AS T1 ON T1.Maker = T2.Id  GROUP BY T2.Id  HAVING COUNT(DISTINCT T1.ModelId) >= 2 AND COUNT(DISTINCT T1.ModelId) > 3
SELECT T1.Id, T1.FullName  FROM car_makers AS T1  INNER JOIN model_list AS T2 ON T1.Id = T2.Maker  INNER JOIN cars_data AS T3 ON T2.ModelId = T3.Id  GROUP BY T1.Id, T1.FullName  HAVING COUNT(DISTINCT T2.ModelId) >= 2 AND COUNT(T3.Id) > 3

SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN model_list AS ml ON cm.Id = ml.Maker  WHERE (SELECT COUNT(*) FROM car_makers WHERE Country = c.CountryId) > 3 OR ml.Model = 'fiat';
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN model_list AS ml ON cm.Id = ml.Maker  GROUP BY c.CountryId  HAVING COUNT(DISTINCT cm.Id) > 3 OR SUM(ml.Model = 'fiat') > 0
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  GROUP BY c.CountryId  HAVING COUNT(cm.Id) > 3 OR         c.CountryId IN (SELECT cm.Country                         FROM car_makers AS cm                         INNER JOIN car_names AS cn ON cm.Id = cn.MakeId                         INNER JOIN model_list AS ml ON cn.Model = ml.Model                         WHERE ml.Model = 'fiat')
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3 UNION SELECT Country FROM car_makers INNER JOIN car_names ON car_names.Model = car_makers.Maker WHERE car_names.Make = 'fiat')
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 3 UNION SELECT T1.Country FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T2.Model = 'fiat')
SELECT CountryId, CountryName FROM countries WHERE EXISTS (SELECT 1 FROM car_makers WHERE countries.CountryId = car_makers.Country GROUP BY car_makers.Country HAVING COUNT(Maker) > 3) OR EXISTS (SELECT 1 FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker WHERE countries.CountryId = car_makers.Country AND model_list.Model = 'fiat')
SELECT T1.CountryId, T1.CountryName  FROM countries AS T1  LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country  LEFT JOIN model_list AS T3 ON T2.Id = T3.Maker  GROUP BY T1.CountryId  HAVING COUNT(DISTINCT T2.Id) > 3 OR COUNT(DISTINCT CASE WHEN T3.Model = 'fiat' THEN T3.Model END) > 0
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 3) UNION SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT CM.Country FROM car_makers AS CM INNER JOIN car_names AS CN ON CM.Maker = CN.Make WHERE CN.Model = 'fiat')
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 LEFT JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId, T1.CountryName HAVING COUNT(T2.Id) > 3 OR T1.CountryId IN (SELECT T3.Country FROM car_names AS T4 INNER JOIN car_makers AS T3 ON T4.MakeId = T3.Id WHERE T4.Model = 'fiat')
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN car_names AS cn ON cm.Maker IN (SELECT m.Maker FROM model_list AS m WHERE m.Model = 'fiat')  GROUP BY c.CountryId  HAVING COUNT(DISTINCT cm.Id) > 3 OR COUNT(DISTINCT cn.Model) > 0;
SELECT DISTINCT T1.CountryId, T1.CountryName  FROM countries AS T1  INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country  GROUP BY T1.CountryId  HAVING COUNT(T2.Id) > 3  UNION  SELECT DISTINCT T1.CountryId, T1.CountryName  FROM countries AS T1  INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country  INNER JOIN model_list AS T3 ON T2.Id = T3.Maker  WHERE T3.Model = 'fiat'
SELECT DISTINCT T1.CountryId, T1.CountryName  FROM countries AS T1  WHERE T1.CountryId IN (      SELECT T2.Country      FROM car_makers AS T2      GROUP BY T2.Country      HAVING COUNT(T2.Id) > 3  )  OR T1.CountryId IN (      SELECT T3.Country      FROM car_makers AS T3      INNER JOIN model_list AS T4 ON T3.Maker = T4.Maker      WHERE T4.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT Maker.Country      FROM car_makers AS Maker      GROUP BY Maker.Country      HAVING COUNT(Maker.Id) > 3 )  OR C.CountryId IN (     SELECT M.Country      FROM car_names AS N      INNER JOIN car_makers AS M ON N.Model = 'fiat'      GROUP BY M.Country );
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT Maker.Country      FROM car_makers AS Maker      GROUP BY Maker.Country      HAVING COUNT(Maker.Id) > 3 )  OR C.CountryId IN (     SELECT DISTINCT M.Country      FROM car_names AS N      INNER JOIN model_list AS M ON N.Model = M.Model      INNER JOIN car_makers AS Maker ON M.Maker = Maker.Id      WHERE N.Make = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN car_makers AS M ON C.CountryId = M.Country  GROUP BY C.CountryId, C.CountryName  HAVING COUNT(M.Id) > 3  UNION  SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN car_names AS N ON C.CountryId = (SELECT Maker FROM car_makers WHERE Id = (SELECT Maker FROM model_list WHERE Model = 'fiat'))
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN car_makers AS CM ON C.CountryId = CM.Country  GROUP BY C.CountryId  HAVING COUNT(CM.Id) > 3  UNION  SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN car_makers AS CM ON C.CountryId = CM.Country  JOIN car_names AS CN ON CM.Maker = CN.Model  JOIN model_list AS ML ON CN.Model = ML.Model  WHERE ML.Model = 'fiat'
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN car_makers AS M ON C.CountryId = M.Country  GROUP BY C.CountryId  HAVING COUNT(M.Id) > 3  UNION  SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN model_list AS ML ON C.CountryId = ML.Maker  WHERE ML.Model = 'fiat'
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT Maker.Country      FROM car_makers AS Maker      GROUP BY Maker.Country      HAVING COUNT(Maker.Id) > 3 )  OR C.CountryId IN (     SELECT M.Maker      FROM model_list AS M      WHERE M.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  INNER JOIN car_makers AS CM ON C.CountryId = CM.Country  GROUP BY C.CountryId, C.CountryName  HAVING COUNT(CM.Id) > 3  UNION  SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  INNER JOIN car_makers AS CM ON C.CountryId = CM.Country  INNER JOIN car_names AS CN ON CM.Id = CN.MakeId  INNER JOIN model_list AS ML ON CN.Model = ML.Model  WHERE ML.Model = 'fiat'
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT M.Country      FROM car_makers AS M      GROUP BY M.Country      HAVING COUNT(M.Id) > 3 )  UNION  SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  JOIN car_makers AS M ON C.CountryId = M.Country  JOIN car_names AS N ON M.Maker = N.Model  WHERE N.Model = 'fiat'

SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN model_list AS ml ON cm.Maker = ml.Model  GROUP BY c.CountryId  HAVING COUNT(cm.Country) > 3 OR MAX(ml.Model) = 'fiat';
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS m ON c.CountryId = m.Country  LEFT JOIN car_names AS n ON m.Id = n.MakeId  GROUP BY c.CountryId, c.CountryName  HAVING COUNT(DISTINCT m.Id) > 3 OR COUNT(CASE WHEN n.Model = 'fiat' THEN 1 END) > 0
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN car_names AS cn ON cm.Id = cn.MakeId  GROUP BY c.CountryId, c.CountryName  HAVING COUNT(cm.Id) > 3 OR SUM(CASE WHEN cn.Make LIKE 'fiat%' THEN 1 ELSE 0 END) > 0
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 3) OR CountryId IN (SELECT Country FROM car_makers WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'fiat'))
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN model_list AS ml ON cm.Id = ml.Maker  LEFT JOIN car_names AS cn ON ml.Model = cn.Model  GROUP BY c.CountryId, c.CountryName  HAVING COUNT(DISTINCT cm.Id) > 3 OR COUNT(CASE WHEN cn.Model = 'fiat' THEN 1 END) > 0
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.CountryId = cm.Country  LEFT JOIN model_list AS ml ON cm.Id = ml.Maker  LEFT JOIN car_names AS cn ON ml.Model = cn.Model  GROUP BY c.CountryId  HAVING COUNT(cm.Id) > 3 OR SUM(CASE WHEN cn.Model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT DISTINCT T1.CountryId, T1.CountryName FROM countries AS T1 WHERE T1.CountryId IN (SELECT T2.CountryId FROM car_makers AS T2 GROUP BY T2.Country HAVING COUNT(T2.Id) > 3) OR T1.CountryId IN (SELECT T3.CountryId FROM car_names AS T4 INNER JOIN model_list AS T5 ON T4.Model = T5.Model INNER JOIN car_makers AS T6 ON T6.Maker = T5.Maker WHERE T5.Model = 'fiat')
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  WHERE c.CountryId IN (     SELECT cm.Country      FROM car_makers AS cm      GROUP BY cm.Country      HAVING COUNT(*) > 3 ) OR c.CountryId IN (     SELECT cm.Country      FROM car_makers AS cm      INNER JOIN car_names AS cn ON cm.Id = cn.Model      WHERE cn.Model = 'fiat' );
SELECT DISTINCT `CountryId`, `CountryName` FROM `countries` WHERE `CountryId` IN (SELECT `Country` FROM `car_makers` GROUP BY `Country` HAVING COUNT(`Id`) > 3) UNION SELECT DISTINCT `CountryId`, `CountryName` FROM `countries` WHERE `CountryId` IN (SELECT `Country` FROM `car_makers` WHERE `Maker` IN (SELECT `Maker` FROM `model_list` WHERE `Model` = 'fiat'))
SELECT CountryId, CountryName FROM countries WHERE EXISTS (SELECT 1 FROM car_makers WHERE countries.CountryId = car_makers.Country GROUP BY Country HAVING COUNT(DISTINCT Id) > 3) OR EXISTS (SELECT 1 FROM car_makers AS CM INNER JOIN model_list AS ML ON CM.Id = ML.Maker WHERE ML.Model = 'fiat' AND countries.CountryId = CM.Country)
SELECT DISTINCT c.CountryId, c.CountryName  FROM countries AS c  WHERE c.CountryId IN (     SELECT Maker.Country      FROM car_makers AS Maker      GROUP BY Maker.Country      HAVING COUNT(Maker.Id) > 3 )  OR c.CountryId IN (     SELECT cm.Country      FROM car_makers AS cm      INNER JOIN model_list AS ml ON cm.Id = ml.Maker      WHERE ml.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT Maker.Country      FROM car_makers AS Maker      GROUP BY Maker.Country      HAVING COUNT(Maker.Id) > 3 )  OR C.CountryId IN (     SELECT DISTINCT M.Country      FROM car_makers AS M      INNER JOIN car_names AS CN ON M.Id = CN.MakeId      INNER JOIN model_list AS ML ON CN.Model = ML.Model      WHERE ML.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT CM.Country      FROM car_makers AS CM      GROUP BY CM.Country      HAVING COUNT(CM.Id) > 3 )  OR C.CountryId IN (     SELECT ML.Maker      FROM model_list AS ML      WHERE ML.Model = 'fiat' )
SELECT DISTINCT T1.CountryId, T1.CountryName  FROM countries AS T1  WHERE T1.CountryId IN (     SELECT Country      FROM car_makers      GROUP BY Country      HAVING COUNT(*) > 3 )  OR T1.CountryId IN (     SELECT T2.Country      FROM car_makers AS T2      INNER JOIN model_list AS T3 ON T2.Id = T3.Maker      WHERE T3.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT Country      FROM car_makers      GROUP BY Country      HAVING COUNT(*) > 3 )  OR C.CountryId IN (     SELECT CM.Country      FROM car_makers AS CM      INNER JOIN model_list AS ML ON CM.Maker = ML.Maker      INNER JOIN car_names AS CN ON ML.Model = CN.Model      WHERE CN.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT CM.Country      FROM car_makers AS CM      GROUP BY CM.Country      HAVING COUNT(CM.Id) > 3 )  OR C.CountryId IN (     SELECT CM.Country      FROM car_makers AS CM      INNER JOIN car_names AS CN ON CM.Maker = CN.Model      INNER JOIN model_list AS ML ON CN.Model = ML.Model      WHERE ML.Model = 'fiat' )
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT Country      FROM car_makers      GROUP BY Country      HAVING COUNT(*) > 3 )  OR C.CountryId IN (     SELECT DISTINCT CM.Country      FROM car_makers AS CM      INNER JOIN model_list AS ML ON CM.Id = ML.Maker      WHERE ML.Model = 'fiat' );
SELECT DISTINCT T1.CountryId, T1.CountryName  FROM countries AS T1  WHERE T1.CountryId IN      (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)  OR T1.CountryId IN      (SELECT T3.Country FROM car_makers AS T2       INNER JOIN model_list AS T3 ON T2.Id = T3.Maker       WHERE T3.Model = 'fiat')
SELECT DISTINCT T1.CountryId, T2.CountryName  FROM countries AS T1  INNER JOIN car_makers AS T2 ON T1.CountryId = T2.Country  GROUP BY T1.CountryId  HAVING COUNT(T2.Maker) > 3  UNION  SELECT DISTINCT T3.CountryId, T4.CountryName  FROM car_names AS T3  INNER JOIN car_makers AS T4 ON T3.MakeId = T4.Id  INNER JOIN countries AS T5 ON T4.Country = T5.CountryId  WHERE T3.Model = 'fiat'
SELECT DISTINCT C.CountryId, C.CountryName  FROM countries AS C  WHERE C.CountryId IN (     SELECT M.Country      FROM car_makers AS M      GROUP BY M.Country      HAVING COUNT(M.Maker) > 3 )  OR C.CountryId IN (     SELECT CM.Country      FROM car_names AS CN      INNER JOIN car_makers AS CM ON CN.MakeId = CM.Id      WHERE CN.Model = 'fiat' )

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table
SELECT * FROM table

SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;

SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(DISTINCT Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(Employee_ID) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;

SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT T1.Name FROM employee AS T1 ORDER BY T1.Age ASC
SELECT T1.Name FROM employee AS T1 ORDER BY T1.Age ASC
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC;

SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC;

SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT COUNT(Employee_ID) FROM employee GROUP BY City;
SELECT City, COUNT(*) FROM employee GROUP BY City
SELECT City, COUNT(*) FROM employee GROUP BY City
SELECT City, COUNT(*) FROM employee GROUP BY City
SELECT City, COUNT(*) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City;
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City;
SELECT City, COUNT(*) as number_of_employees FROM employee GROUP BY City;
SELECT City, COUNT(*) AS NumberOfEmployees FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City
SELECT City, COUNT(*) AS number_of_employees FROM employee GROUP BY City
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City

SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City;
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(*) FROM employee GROUP BY City;
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City;
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City
SELECT City, COUNT(*) as Employee_Count FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City;
SELECT City, COUNT(*) AS employee_count FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City;
SELECT City, COUNT(*) AS Employee_Count FROM employee GROUP BY City
SELECT City, COUNT(*) AS employee_count FROM employee GROUP BY City;

SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1

SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City  FROM employee  WHERE Age < 30  GROUP BY City  HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1

SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS number_of_shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location

SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(*) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(Shop_ID) FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Shop_Count FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS shop_count FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Shop_Count FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location
SELECT Location, COUNT(*) AS Shop_Count FROM shop GROUP BY Location

SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)

SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)

SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;

SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop;
SELECT MIN(Number_products), MAX(Number_products) FROM shop
SELECT MIN(Number_products), MAX(Number_products) FROM shop
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;

SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT T1.Name, T1.Location, T1.District FROM shop AS T1 ORDER BY T1.Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC

SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC

SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT T1.Name FROM shop AS T1 WHERE T1.Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)

SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)

SELECT T1.Name FROM employee AS T1 INNER JOIN (SELECT Employee_ID, COUNT(Year_awarded) AS Award_Count FROM evaluation GROUP BY Employee_ID) AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Award_Count DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS Award_Count FROM evaluation GROUP BY Employee_ID) AS T1 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.Award_Count DESC LIMIT 1
SELECT T1.Name FROM employee AS T1 INNER JOIN (SELECT Employee_ID, COUNT(*) AS Award_Count FROM evaluation GROUP BY Employee_ID ORDER BY Award_Count DESC LIMIT 1) AS T2 ON T1.Employee_ID = T2.Employee_ID
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT e.Name FROM employee AS e INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID) AS ev ON e.Employee_ID = ev.Employee_ID WHERE ev.award_count = (SELECT MAX(award_count) FROM (SELECT COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID))
SELECT E.Name FROM employee AS E INNER JOIN evaluation AS V ON E.Employee_ID = V.Employee_ID GROUP BY E.Employee_ID ORDER BY COUNT(V.Year_awarded) DESC LIMIT 1
SELECT E.Name FROM employee AS E INNER JOIN (SELECT Employee_ID, COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID) AS A ON E.Employee_ID = A.Employee_ID WHERE A.AwardCount = (SELECT MAX(AwardCount) FROM (SELECT Employee_ID, COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID))
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(T2.Year_awarded) DESC LIMIT 1
SELECT E.Name FROM employee AS E INNER JOIN (SELECT Employee_ID, COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID) AS EvalCount ON E.Employee_ID = EvalCount.Employee_ID WHERE AwardCount = (SELECT MAX(AwardCount) FROM (SELECT COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID))
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Name ORDER BY COUNT(T2.Year_awarded) DESC LIMIT 1
SELECT e.Name  FROM employee AS e  INNER JOIN (     SELECT Employee_ID, COUNT(*) AS award_count      FROM evaluation      GROUP BY Employee_ID      ORDER BY award_count DESC      LIMIT 1 ) AS award_summary ON e.Employee_ID = award_summary.Employee_ID

SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID ORDER BY AwardCount DESC LIMIT 1) AS T1 ON T1.Employee_ID = T2.Employee_ID
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Name ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS Award_Count FROM evaluation GROUP BY Employee_ID ORDER BY Award_Count DESC LIMIT 1) AS T1 ON T1.Employee_ID = T2.Employee_ID
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(T1.Year_awarded) DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS Award_Count FROM evaluation GROUP BY Employee_ID ORDER BY Award_Count DESC LIMIT 1) AS T1 ON T1.Employee_ID = T2.Employee_ID
SELECT E.Name FROM employee AS E INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID ORDER BY award_count DESC LIMIT 1) AS A ON E.Employee_ID = A.Employee_ID
SELECT T1.Name FROM employee AS T1 INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID) AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.award_count = (SELECT MAX(award_count) FROM (SELECT COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID))
SELECT T2.Name  FROM evaluation AS T1  INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Employee_ID  ORDER BY COUNT(T1.Year_awarded) DESC  LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID) AS T1 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.award_count DESC LIMIT 1
SELECT T2.Name  FROM employee AS T2  INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count              FROM evaluation              GROUP BY Employee_ID) AS T1  ON T1.Employee_ID = T2.Employee_ID  ORDER BY T1.award_count DESC  LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID ORDER BY award_count DESC LIMIT 1) AS T1 ON T2.Employee_ID = T1.Employee_ID
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID) AS T1 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.AwardCount DESC LIMIT 1
SELECT T2.Name FROM employee AS T2 INNER JOIN (SELECT Employee_ID, COUNT(*) AS award_count FROM evaluation GROUP BY Employee_ID) AS T1 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.award_count DESC LIMIT 1
SELECT E.Name FROM employee AS E INNER JOIN (SELECT Employee_ID, COUNT(*) AS AwardCount FROM evaluation GROUP BY Employee_ID ORDER BY AwardCount DESC LIMIT 1) AS A ON E.Employee_ID = A.Employee_ID
SELECT T1.Name FROM employee AS T1 INNER JOIN (SELECT Employee_ID, COUNT(*) AS Award_Count FROM evaluation GROUP BY Employee_ID ORDER BY Award_Count DESC LIMIT 1) AS T2 ON T1.Employee_ID = T2.Employee_ID

SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.Bonus DESC LIMIT 1
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT E.Name FROM employee AS E INNER JOIN evaluation AS EV ON E.Employee_ID = EV.Employee_ID WHERE EV.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT E.Name FROM employee AS E INNER JOIN evaluation AS Eval ON E.Employee_ID = Eval.Employee_ID WHERE Eval.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)

SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT E.Name FROM employee AS E INNER JOIN evaluation AS EV ON E.Employee_ID = EV.Employee_ID WHERE EV.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name  FROM evaluation AS T1  INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID  WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM employee AS T2 INNER JOIN evaluation AS T1 ON T2.Employee_ID = T1.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)
SELECT T2.Name FROM evaluation AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Bonus = (SELECT MAX(Bonus) FROM evaluation)

SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);
SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT T2.Employee_ID FROM evaluation AS T2)
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT e.Name  FROM employee AS e  LEFT JOIN evaluation AS ev ON e.Employee_ID = ev.Employee_ID  WHERE ev.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT T2.Employee_ID FROM evaluation AS T2)
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL

SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT T2.Employee_ID FROM evaluation AS T2)
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 WHERE T1.Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
SELECT e.Name FROM employee AS e LEFT JOIN evaluation AS ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT DISTINCT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM employee AS T1 LEFT JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Employee_ID IS NULL

SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name  FROM shop AS T2  INNER JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID  GROUP BY T2.Shop_ID  HAVING COUNT(T1.Employee_ID) = (SELECT MAX(emp_count) FROM (SELECT COUNT(T1.Employee_ID) AS emp_count FROM hiring AS T1 GROUP BY T1.Shop_ID))
SELECT T3.Name FROM shop AS T3 INNER JOIN hiring AS T2 ON T3.Shop_ID = T2.Shop_ID GROUP BY T3.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN (SELECT Shop_ID, COUNT(Employee_ID) AS Employee_Count FROM hiring GROUP BY Shop_ID) AS T1 ON T1.Shop_ID = T2.Shop_ID ORDER BY Employee_Count DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID, T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID, T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN (SELECT Shop_ID, COUNT(Employee_ID) AS employee_count FROM hiring GROUP BY Shop_ID) AS T1 ON T1.Shop_ID = T2.Shop_ID ORDER BY T1.employee_count DESC LIMIT 1

SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID, T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN (SELECT Shop_ID, COUNT(Employee_ID) AS Employee_Count FROM hiring GROUP BY Shop_ID) AS T1 ON T1.Shop_ID = T2.Shop_ID ORDER BY T1.Employee_Count DESC LIMIT 1
SELECT Name FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM hiring GROUP BY Shop_ID ORDER BY COUNT(Employee_ID) DESC LIMIT 1)
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN (SELECT Shop_ID, COUNT(Employee_ID) AS EmployeeCount FROM hiring GROUP BY Shop_ID) AS T1 ON T1.Shop_ID = T2.Shop_ID ORDER BY T1.EmployeeCount DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T2.Name FROM shop AS T2 INNER JOIN hiring AS T1 ON T2.Shop_ID = T1.Shop_ID GROUP BY T2.Name ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1
SELECT T1.Name FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID, T1.Name ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1

SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT DISTINCT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT DISTINCT s.Name FROM shop AS s LEFT JOIN hiring AS h ON s.Shop_ID = h.Shop_ID WHERE h.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT S.Name FROM shop AS S LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID WHERE H.Employee_ID IS NULL
SELECT S.Name FROM shop AS S LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID WHERE H.Shop_ID IS NULL

SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Shop_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT S.Name FROM shop AS S LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID WHERE H.Employee_ID IS NULL
SELECT DISTINCT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT DISTINCT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT DISTINCT S.Name FROM shop AS S LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID WHERE H.Employee_ID IS NULL;
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL
SELECT S.Name FROM shop AS S LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID WHERE H.Employee_ID IS NULL
SELECT T1.Name FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Employee_ID IS NULL

SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.Employee_ID) AS Employee_Count  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name;
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  INNER JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Number_of_Employees FROM shop AS S LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  INNER JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT shop.Name, COUNT(hiring.Employee_ID) AS Number_of_Employees  FROM shop  INNER JOIN hiring ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Name;
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Number_of_Employees  FROM shop AS S  INNER JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name

SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID
SELECT T2.Name, COUNT(T1.Employee_ID) FROM hiring AS T1 INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T1.Name, COUNT(T2.Employee_ID) AS Number_of_Employees  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Employee_ID) AS Employee_Count  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Employee_ID) AS Number_of_Employees  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Employee_ID) AS Number_of_Employees  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Shop_ID;
SELECT T1.Name, COUNT(T2.Employee_ID) AS Number_of_Employees  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name;
SELECT T1.Name, COUNT(T2.Employee_ID) AS Employee_Count  FROM shop AS T1  LEFT JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Shop_ID, T1.Name
SELECT T2.Name, COUNT(T1.Employee_ID) AS Employee_Count  FROM hiring AS T1  INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T2.Name
SELECT T2.Name, COUNT(T1.Employee_ID) AS employee_count  FROM hiring AS T1  INNER JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T2.Shop_ID, T2.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Number_of_Employees  FROM shop AS S  LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Name
SELECT S.Name, COUNT(H.Employee_ID) AS Employee_Count  FROM shop AS S  LEFT JOIN hiring AS H ON S.Shop_ID = H.Shop_ID  GROUP BY S.Shop_ID, S.Name;

SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;

SELECT SUM("Bonus") FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;
SELECT SUM(Bonus) FROM evaluation;

SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring
SELECT * FROM hiring;

SELECT * FROM hiring;
SELECT * FROM hiring
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring
SELECT * FROM hiring AS H INNER JOIN employee AS E ON H.Employee_ID = E.Employee_ID INNER JOIN shop AS S ON H.Shop_ID = S.Shop_ID
SELECT * FROM hiring AS T1 INNER JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID INNER JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT * FROM hiring;

SELECT District FROM shop GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN Shop_ID END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN Shop_ID END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT district FROM shop GROUP BY district HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT `District` FROM `shop` GROUP BY `District` HAVING COUNT(DISTINCT CASE WHEN `Number_products` < 3000 THEN `Shop_ID` END) > 0 AND COUNT(DISTINCT CASE WHEN `Number_products` > 10000 THEN `Shop_ID` END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN Shop_ID END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN Shop_ID END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.District IN (SELECT T2.District FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.District IN (SELECT DISTINCT T2.District FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT T1.District  FROM shop AS T1  INNER JOIN shop AS T2 ON T1.District = T2.District  WHERE T1.Number_products < 3000 AND T2.Number_products > 10000
SELECT DISTINCT T1.District FROM shop AS T1 WHERE T1.Number_products < 3000 AND T1.Shop_ID IN (SELECT T2.Shop_ID FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.District IN (SELECT T2.District FROM shop AS T2 WHERE T2.Number_products > 10000);
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.Shop_ID IN (SELECT T2.Shop_ID FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT DISTINCT District FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM shop WHERE Number_products < 3000) AND Shop_ID IN (SELECT Shop_ID FROM shop WHERE Number_products > 10000)

SELECT District FROM shop GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN Shop_ID END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN Shop_ID END) > 0
SELECT District  FROM shop  GROUP BY District  HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0  AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN 1 WHEN Number_products > 10000 THEN 1 END) = 2
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT `District` FROM `shop` GROUP BY `District` HAVING COUNT(CASE WHEN `Number_products` < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN `Number_products` > 10000 THEN 1 END) > 0
SELECT `District` FROM `shop` GROUP BY `District` HAVING COUNT(CASE WHEN `Number_products` < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN `Number_products` > 10000 THEN 1 END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(DISTINCT CASE WHEN Number_products < 3000 THEN Shop_ID END) > 0 AND COUNT(DISTINCT CASE WHEN Number_products > 10000 THEN Shop_ID END) > 0
SELECT District FROM shop GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.District IN (SELECT DISTINCT T2.District FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.District IN (SELECT T2.District FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.Shop_ID IN (SELECT T2.Shop_ID FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT District FROM shop WHERE Number_products < 3000 OR Number_products > 10000 GROUP BY District HAVING COUNT(CASE WHEN Number_products < 3000 THEN 1 END) > 0 AND COUNT(CASE WHEN Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.District IN (SELECT T2.District FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  INTERSECT  SELECT DISTINCT T2.District  FROM shop AS T2  WHERE T2.Number_products > 10000
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.Shop_ID IN (SELECT T2.Shop_ID FROM shop AS T2 WHERE T2.Number_products > 10000)
SELECT DISTINCT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT DISTINCT District FROM shop WHERE Number_products > 10000
SELECT DISTINCT T1.District FROM shop AS T1 WHERE T1.Number_products < 3000    OR T1.Number_products > 10000 GROUP BY T1.District HAVING COUNT(CASE WHEN T1.Number_products < 3000 THEN 1 END) > 0    AND COUNT(CASE WHEN T1.Number_products > 10000 THEN 1 END) > 0
SELECT DISTINCT T1.District  FROM shop AS T1  WHERE T1.Number_products < 3000  AND T1.Shop_ID IN (SELECT T2.Shop_ID FROM shop AS T2 WHERE T2.Number_products > 10000)

SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;

SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;
SELECT COUNT(DISTINCT Location) FROM shop;

SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(DISTINCT Document_ID) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;

SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(Document_ID) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;

SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents

SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents
SELECT Document_ID, Document_Name, Document_Description FROM Documents

SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'

SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT T1.Document_Name, T1.Template_ID FROM Documents AS T1 WHERE T1.Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT D.Document_Name, D.Template_ID FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE D.Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'

SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV';
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT T1.Document_ID, T1.Template_ID, T1.Document_Description FROM Documents AS T1 WHERE T1.Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT D.Document_ID, D.Template_ID, D.Document_Description  FROM Documents AS D  WHERE D.Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'

SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV';
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV';
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'

SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Template_ID IS NOT NULL
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT Template_ID) FROM Documents WHERE Template_ID IS NOT NULL;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents WHERE Template_ID IS NOT NULL;
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T2.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1
SELECT COUNT(DISTINCT T2.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents
SELECT COUNT(DISTINCT T2.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID

SELECT COUNT(DISTINCT Template_ID) FROM Templates WHERE Template_ID IN (SELECT DISTINCT Template_ID FROM Documents)
SELECT COUNT(DISTINCT T.Template_ID) FROM Templates AS T WHERE T.Template_ID IN (SELECT DISTINCT D.Template_ID FROM Documents AS D)
SELECT COUNT(DISTINCT Template_ID) FROM Documents WHERE Template_ID IS NOT NULL;
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT T.Template_ID) FROM Templates T INNER JOIN Documents D ON T.Template_ID = D.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT COUNT(DISTINCT Template_ID) FROM Documents WHERE Template_ID IS NOT NULL;
SELECT COUNT(DISTINCT Template_ID) FROM Documents WHERE Template_ID IS NOT NULL;
SELECT COUNT(DISTINCT T1.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID

SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'

SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT'
SELECT COUNT(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT')
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  INNER JOIN Ref_Template_Types AS R ON T.Template_Type_Code = R.Template_Type_Code  WHERE R.Template_Type_Code = 'PPT'
SELECT COUNT(DISTINCT D.Document_ID)  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'PPT'

SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT Template_ID, COUNT(Document_ID) FROM Documents GROUP BY Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT Template_ID, COUNT(Document_ID) FROM Documents GROUP BY Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID;
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS document_count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T1.Document_ID) AS Number_of_Documents  FROM Documents AS T1  GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID;
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS Document_Count FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(T2.Document_ID) AS document_count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID

SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID;
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents WHERE Template_ID IS NOT NULL GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID;
SELECT T1.Template_ID, COUNT(T1.Document_ID) AS Usage_Count  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID;
SELECT T1.Template_ID, COUNT(T1.Template_ID) AS usage_count  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID
SELECT Template_ID, COUNT(*) AS usage_count FROM Documents GROUP BY Template_ID
SELECT T1.Template_ID, COUNT(T1.Document_ID) AS usage_count FROM Documents AS T1 GROUP BY T1.Template_ID
SELECT Template_ID, COUNT(*) AS usage_count FROM Documents GROUP BY Template_ID
SELECT Template_ID, COUNT(*) AS usage_count FROM Documents GROUP BY Template_ID
SELECT T1.Template_ID, COUNT(*) AS usage_count FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
SELECT T1.Template_ID, COUNT(*) AS Usage_Count FROM Documents AS T1 GROUP BY T1.Template_ID
SELECT Template_ID, COUNT(*) AS usage_count FROM Documents GROUP BY Template_ID;
SELECT T1.Template_ID, COUNT(*) AS Usage_Count  FROM Documents AS T1  GROUP BY T1.Template_ID;

SELECT T1.Template_ID, T2.Template_Type_Code FROM Templates AS T2 INNER JOIN Documents AS T1 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T2.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
SELECT T3.Template_ID, T3.Template_Type_Code FROM Templates AS T3 INNER JOIN Documents AS T2 ON T3.Template_ID = T2.Template_ID GROUP BY T3.Template_ID, T3.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1;
SELECT T3.Template_ID, T3.Template_Type_Code FROM Templates AS T3 INNER JOIN Documents AS T1 ON T3.Template_ID = T1.Template_ID GROUP BY T3.Template_ID, T3.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T2.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Templates AS T2  INNER JOIN Documents AS T1 ON T2.Template_ID = T1.Template_ID  GROUP BY T2.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Templates AS T2  INNER JOIN Documents AS T1 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1

SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code FROM Templates AS T2 INNER JOIN Documents AS T1 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_ID, T2.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1;
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_ID, T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN (SELECT Template_ID, COUNT(*) AS doc_count              FROM Documents              GROUP BY Template_ID              ORDER BY doc_count DESC              LIMIT 1) AS T2  ON T1.Template_ID = T2.Template_ID
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T2.Template_ID, T2.Template_Type_Code  FROM Templates AS T2  INNER JOIN (SELECT Template_ID, COUNT(*) AS Document_Count              FROM Documents              GROUP BY Template_ID              ORDER BY Document_Count DESC              LIMIT 1) AS T1  ON T1.Template_ID = T2.Template_ID

SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T1 GROUP BY T1.Template_ID HAVING COUNT(*) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID  FROM Documents AS T1  GROUP BY T1.Template_ID  HAVING COUNT(T1.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID  HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T1.Document_ID) > 1
SELECT T2.Template_ID FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_ID HAVING COUNT(T1.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T1.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T2 INNER JOIN Templates AS T1 ON T2.Template_ID = T1.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1

SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T1 GROUP BY T1.Template_ID HAVING COUNT(T1.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T1.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT DISTINCT T1.Template_ID  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID  HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Document_ID) > 1
SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T1.Document_ID) > 1

SELECT T.Template_ID FROM Templates AS T LEFT JOIN Documents AS D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T.Template_ID FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T.Template_ID FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL
SELECT T.Template_ID FROM Templates AS T LEFT JOIN Documents AS D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT DISTINCT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL

SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T.Template_ID FROM Templates AS T LEFT JOIN Documents AS D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 WHERE T1.Template_ID NOT IN (SELECT DISTINCT T2.Template_ID FROM Documents AS T2 WHERE T2.Template_ID IS NOT NULL)
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL

SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(DISTINCT Template_ID) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(DISTINCT Template_ID) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(DISTINCT Template_ID) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(DISTINCT Template_ID) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(DISTINCT Template_ID) FROM Templates;

SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(Template_ID) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;

SELECT T1.Template_ID, T1.Version_Number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates

SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT T1.Template_ID, T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT T1.Template_ID, T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT T1.Template_ID, T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates

SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates

SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Templates;
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;

SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');

SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')

SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';

SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'CV');
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(T1.Template_ID) FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = 'CV'
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';

SELECT T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT T1.version_number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.version_number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT T1.Version_Number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT version_number, Template_Type_Code FROM Templates WHERE version_number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5

SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT version_number, Template_Type_Code FROM Templates WHERE version_number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number > 5
SELECT version_number, Template_Type_Code FROM Templates WHERE version_number > 5;
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;
SELECT version_number, Template_Type_Code FROM Templates WHERE version_number > 5

SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS template_count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS NumberOfTemplates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Number_of_Templates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS NumberOfTemplates  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code

SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code, COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Template_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT Template_Type_Code, COUNT(*) as Template_Count FROM Templates GROUP BY Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Template_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code;
SELECT T1.Template_Type_Code, COUNT(T1.Template_ID) AS Template_Count  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Template_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T1.Template_ID) AS Template_Count  FROM Templates AS T1  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Template_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Template_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS Template_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS template_count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code;

SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code, COUNT(*) AS Template_Count FROM Templates GROUP BY Template_Type_Code ORDER BY Template_Count DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T2 INNER JOIN Ref_Template_Types AS T1 ON T2.Template_Type_Code = T1.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Template_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code  FROM Templates AS T1  GROUP BY T1.Template_Type_Code  ORDER BY COUNT(T1.Template_ID) DESC  LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) AS TemplateCount  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  ORDER BY TemplateCount DESC  LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Template_ID) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Template_ID) DESC  LIMIT 1
SELECT T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 GROUP BY T1.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T2 INNER JOIN Ref_Template_Types AS T1 ON T2.Template_Type_Code = T1.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;

SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3
SELECT T1.Template_Type_Code  FROM Templates AS T1  GROUP BY T1.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T1.Template_ID) < 3
SELECT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3
SELECT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Templates AS T2  INNER JOIN Ref_Template_Types AS T1 ON T2.Template_Type_Code = T1.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3

SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T2.Template_Type_Code FROM Ref_Template_Types AS T2 LEFT JOIN Templates AS T1 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T2.Template_Type_Code HAVING COUNT(T1.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Templates AS T1  GROUP BY T1.Template_Type_Code  HAVING COUNT(*) < 3
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
SELECT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3
SELECT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3
SELECT DISTINCT T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  HAVING COUNT(T1.Template_ID) < 3

SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates) LIMIT 1
SELECT MIN(T1.Version_Number), T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY MIN(T1.Version_Number) ASC LIMIT 1
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT MIN(T1.Version_Number), T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2  ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  ORDER BY MIN(T1.Version_Number) ASC  LIMIT 1
SELECT MIN(T1.Version_Number), T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY MIN(T1.Version_Number) ASC LIMIT 1
SELECT Template_Type_Code FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT MIN(T1.Version_Number), T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY MIN(T1.Version_Number) ASC LIMIT 1
SELECT T1.Version_Number, T1.Template_Type_Code  FROM Templates AS T1  WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT MIN(Version_Number), Template_Type_Code FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates) GROUP BY Template_Type_Code
SELECT T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) ASC LIMIT 1
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) LIMIT 1
SELECT T1.Version_Number, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT Template_Type_Code, MIN(Version_Number)  FROM Templates  GROUP BY Template_Type_Code  ORDER BY MIN(Version_Number)  LIMIT 1
SELECT T1.Version_Number, T1.Template_Type_Code  FROM Templates AS T1  WHERE T1.Version_Number = (SELECT MIN(T2.Version_Number) FROM Templates AS T2)
SELECT T1.Version_Number, T1.Template_Type_Code  FROM Templates AS T1  WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT MIN(T1.Version_Number) AS Smallest_Version, T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T2.Template_Type_Code  ORDER BY MIN(T1.Version_Number) ASC  LIMIT 1
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates);
SELECT MIN(Version_Number), Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) LIMIT 1

SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) ASC LIMIT 1
SELECT T2.Template_Type_Code, MIN(T1.Version_Number) FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY MIN(T1.Version_Number) ASC LIMIT 1
SELECT T1.Version_Number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT T1.Version_Number, T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates) LIMIT 1
SELECT T1.Template_Type_Code, MIN(T1.Version_Number) FROM Templates AS T1 GROUP BY T1.Template_Type_Code ORDER BY MIN(T1.Version_Number) ASC LIMIT 1
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) LIMIT 1
SELECT T1.Template_Type_Code, MIN(T1.Version_Number) FROM Templates AS T1 GROUP BY T1.Template_Type_Code
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) ASC LIMIT 1
SELECT Template_Type_Code, MIN(Version_Number) AS Lowest_Version FROM Templates GROUP BY Template_Type_Code ORDER BY Lowest_Version ASC LIMIT 1
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) LIMIT 1
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) LIMIT 1
SELECT T1.Version_Number, T2.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) ASC LIMIT 1
SELECT MIN(Version_Number) AS lowest_version, Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY lowest_version LIMIT 1
SELECT T1.Version_Number, T1.Template_Type_Code  FROM Templates AS T1  WHERE T1.Version_Number = (SELECT MIN(T2.Version_Number) FROM Templates AS T2)
SELECT T1.Version_Number, T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T1.Version_Number = (SELECT MIN(Version_Number) FROM Templates);
SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code ORDER BY MIN(Version_Number) LIMIT 1
SELECT Template_Type_Code, Version_Number FROM Templates WHERE Version_Number = (SELECT MIN(Version_Number) FROM Templates)

SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T4.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T4 ON T2.Template_Type_Code = T4.Template_Type_Code WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T1.Document_Name = 'Data base'
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T1.Document_Name = 'Data base'
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'
SELECT T3.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code  WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T3.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code  WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'

SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = 'Data base'
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_Name = 'Data base'
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T1.Document_Name = 'Data base'

SELECT T2.Document_Name FROM Documents AS T2 INNER JOIN Templates AS T1 ON T2.Template_ID = T1.Template_ID WHERE T1.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT D.Document_Name FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT T1.Document_Name  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK';
SELECT T1.Document_Name  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Template_Type_Code = 'BK'

SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T2.Document_Name FROM Documents AS T2 INNER JOIN Templates AS T1 ON T2.Template_ID = T1.Template_ID WHERE T1.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT Document_Name FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')
SELECT D.Document_Name FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT T1.Document_Name  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT D.Document_Name FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'BK'
SELECT T1.Document_Name FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'
SELECT D.Document_Name  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  WHERE T.Template_Type_Code = 'BK'

SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T2.Template_Type_Code, COUNT(T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T2.Template_Type_Code, COUNT(T1.Document_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T2.Template_Type_Code, COUNT(T1.Document_ID) AS Document_Count  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code  GROUP BY T2.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code;
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code;
SELECT T2.Template_Type_Code, COUNT(T1.Document_ID) AS Document_Count  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code

SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T3.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T3.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T3.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(D.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS D ON T2.Template_ID = D.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code;
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code;
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS document_count  FROM Ref_Template_Types AS T1  LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID  GROUP BY T1.Template_Type_Code;
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code

SELECT T.Template_Type_Code, COUNT(D.Document_ID) FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID GROUP BY T.Template_Type_Code ORDER BY COUNT(D.Document_ID) DESC LIMIT 1
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code GROUP BY T3.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
SELECT T.Template_Type_Code, COUNT(*) AS Document_Count FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID GROUP BY T.Template_Type_Code ORDER BY Document_Count DESC LIMIT 1
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T3.Template_Type_Code FROM Ref_Template_Types AS T3 INNER JOIN Templates AS T1 ON T3.Template_Type_Code = T1.Template_Type_Code INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T3.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY Document_Count DESC LIMIT 1
SELECT T.Template_Type_Code FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID GROUP BY T.Template_Type_Code ORDER BY COUNT(D.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) AS Document_Count FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY Document_Count DESC LIMIT 1
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1

SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T3.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code GROUP BY T3.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY COUNT(T1.Template_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T2.Template_Type_Code FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T.Template_Type_Code FROM Documents AS D INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID GROUP BY T.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T3.Document_ID) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T3.Document_ID) DESC LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T1.Document_ID) DESC  LIMIT 1
SELECT T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T2.Template_Type_Code  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1

SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Templates.Template_Type_Code FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID)
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code NOT IN (SELECT DISTINCT T2.Template_ID FROM Documents AS T2 INNER JOIN Templates AS T1 ON T2.Template_ID = T1.Template_ID)
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Code IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T3.Document_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID  WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code NOT IN (SELECT T3.Template_Type_Code FROM Documents AS T2 INNER JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID)
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Documents)
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  WHERE T3.Document_ID IS NULL
SELECT DISTINCT T1.Template_Type_Code  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Code IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID  WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  WHERE T3.Template_ID IS NULL
SELECT T1.Template_Type_Code  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Template_ID IS NULL
SELECT DISTINCT T1.Template_Type_Code  FROM Templates AS T1  LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  WHERE T2.Document_ID IS NULL

SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code NOT IN (SELECT DISTINCT T2.Template_Type_Code FROM Templates AS T2 INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID)
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T3.Document_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Documents)
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID WHERE T2.Document_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  WHERE T2.Template_ID IS NULL AND T3.Document_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_ID IS NULL
SELECT DISTINCT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  WHERE T2.Template_ID IS NULL AND T3.Document_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID  WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  WHERE T3.Document_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID  WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID  WHERE T2.Template_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  WHERE T3.Document_ID IS NULL
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  WHERE T1.Template_Type_Code NOT IN (SELECT DISTINCT T2.Template_ID FROM Documents AS T2)

SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types

SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types

SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'

SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'

SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'

SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'

SELECT DISTINCT T3.Template_Type_Description FROM Ref_Template_Types AS T3 INNER JOIN Templates AS T2 ON T3.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T1 ON T2.Template_ID = T1.Template_ID
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
SELECT DISTINCT T2.Template_Type_Description FROM Templates AS T1 INNER JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT DISTINCT T2.Template_Type_Description  FROM Ref_Template_Types AS T2  INNER JOIN Templates AS T1 ON T2.Template_Type_Code = T1.Template_Type_Code  INNER JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID
SELECT DISTINCT T2.Template_Type_Description FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID
SELECT DISTINCT T3.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 WHERE T1.Template_Type_Code IN (SELECT T2.Template_Type_Code FROM Templates AS T2 INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID)
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Document_ID
SELECT DISTINCT T1.Template_Type_Description  FROM Ref_Template_Types AS T1  INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID;
SELECT DISTINCT T3.Template_Type_Description  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T3.Template_Type_Description  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT RT.Template_Type_Description  FROM Templates AS T  INNER JOIN Documents AS D ON T.Template_ID = D.Template_ID  INNER JOIN Ref_Template_Types AS RT ON T.Template_Type_Code = RT.Template_Type_Code
SELECT DISTINCT T3.Template_Type_Description  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT RTT.Template_Type_Description  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  INNER JOIN Ref_Template_Types AS RTT ON T.Template_Type_Code = RTT.Template_Type_Code
SELECT DISTINCT T2.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
SELECT DISTINCT T3.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T3.Template_Type_Description  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT RTT.Template_Type_Description  FROM Documents AS D  INNER JOIN Templates AS T ON D.Template_ID = T.Template_ID  INNER JOIN Ref_Template_Types AS RTT ON T.Template_Type_Code = RTT.Template_Type_Code

SELECT DISTINCT T1.Template_Type_Description FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T2.Template_Details FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T2.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
SELECT DISTINCT T2.Template_Type_Description FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID
SELECT DISTINCT T3.Template_Type_Description FROM Ref_Template_Types AS T3 INNER JOIN Templates AS T2 ON T3.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T1 ON T2.Template_ID = T1.Template_ID
SELECT DISTINCT T3.Template_Type_Description FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T1.Template_Type_Description FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T3.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T2.Template_Details FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T2.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T4.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT RT.Template_Type_Description  FROM Templates AS T  INNER JOIN Documents AS D ON T.Template_ID = D.Template_ID  INNER JOIN Ref_Template_Types AS RT ON T.Template_Type_Code = RT.Template_Type_Code
SELECT DISTINCT T1.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T2.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T2.Template_Type_Description  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  INNER JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code
SELECT DISTINCT T2.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T2.Template_Details FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T2.Template_Type_Description  FROM Documents AS T1  INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
SELECT DISTINCT T1.Template_Type_Description  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID

SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 WHERE T1.Template_Type_Code IN (SELECT T2.Template_Type_Code FROM Ref_Template_Types AS T2 WHERE T2.Template_Type_Description = 'Presentation')
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2  ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2  ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Ref_Template_Types AS T2  ON T1.Template_Type_Code = T2.Template_Type_Code  WHERE T2.Template_Type_Description = 'Presentation'
SELECT T2.Template_ID FROM Templates AS T2 INNER JOIN Ref_Template_Types AS T1 ON T2.Template_Type_Code = T1.Template_Type_Code WHERE T1.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T2.Template_ID  FROM Templates AS T2  INNER JOIN Ref_Template_Types AS T1  ON T2.Template_Type_Code = T1.Template_Type_Code  WHERE T1.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'

SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT Template_ID FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation');
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T.Template_ID FROM Templates AS T INNER JOIN Ref_Template_Types AS R ON T.Template_Type_Code = R.Template_Type_Code WHERE R.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT Template_ID FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation');
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT Template_ID FROM Templates WHERE Template_Details = 'Presentation'
SELECT Template_ID FROM Templates WHERE Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'
SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'

SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;

SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(Paragraph_ID) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;
SELECT COUNT(*) FROM Paragraphs;

SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = 'Summer Show')
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T2.Paragraph_ID)  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')
SELECT COUNT(P.Paragraph_ID) FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID)  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'

SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = 'Summer Show')
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')
SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')
SELECT COUNT(*) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(T1.Paragraph_ID) FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Summer Show'
SELECT COUNT(P.Paragraph_ID) FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE D.Document_Name = 'Summer Show'
SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')
SELECT COUNT(T2.Paragraph_ID) FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Summer Show'

SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea '
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea'
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea '
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea '
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT Paragraph_ID, Document_ID, Paragraph_Text FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea ';

SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Other_Details, Paragraph_ID, Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Other_Details, Document_ID, Paragraph_ID, Paragraph_Text FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Paragraph_ID, Paragraph_Text, Other_Details, Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Paragraph_ID, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Other_Details, Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Paragraph_ID, Document_ID, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT Paragraph_ID, Document_ID, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT Paragraph_ID, Document_ID, Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'
SELECT Paragraph_Text, Paragraph_ID, Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea %'

SELECT T2.Paragraph_ID, T2.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = 'Welcome to NY')
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = 'Welcome to NY')
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T2.Paragraph_ID, T2.Paragraph_Text  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT T2.Paragraph_ID, T2.Paragraph_Text  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'

SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T3.Paragraph_ID, T3.Paragraph_Text FROM Paragraphs AS T3 INNER JOIN Documents AS T2 ON T3.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT T3.Paragraph_ID, T3.Paragraph_Text FROM Paragraphs AS T3 INNER JOIN Documents AS T2 ON T3.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT T2.Paragraph_ID, T2.Paragraph_Text  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT P.Paragraph_ID, P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Welcome to NY'
SELECT T2.Paragraph_ID, T2.Paragraph_Text  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Welcome to NY'
SELECT T1.Paragraph_ID, T1.Paragraph_Text  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Document_Name = 'Welcome to NY'

SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT T2.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'

SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T3.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T3 ON T1.Document_ID = T3.Document_ID WHERE T1.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Customer reviews')
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T2.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T3.Paragraph_Text FROM Paragraphs AS T3 INNER JOIN Documents AS T2 ON T3.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Customer reviews'
SELECT T1.Paragraph_Text FROM Paragraphs AS T1 WHERE T1.Document_ID = (SELECT T2.Document_ID FROM Documents AS T2 WHERE T2.Document_Name = 'Customer reviews')
SELECT P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text FROM Paragraphs AS P INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Customer reviews'
SELECT P.Paragraph_Text  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  WHERE D.Document_Name = 'Customer reviews'

SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS T1  LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  ORDER BY T1.Document_ID;
SELECT P.Document_ID, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  GROUP BY P.Document_ID  ORDER BY P.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS T1  LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  ORDER BY T1.Document_ID
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS Paragraph_Count  FROM Documents AS T1  LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  ORDER BY T1.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS num_paragraphs  FROM Documents AS T1  LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  ORDER BY T1.Document_ID
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;

SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT D.Document_ID, COUNT(P.Paragraph_ID) FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY D.Document_ID
SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT Document_ID, COUNT(Paragraph_ID) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT T1.Document_ID, COUNT(T2.Paragraph_ID) AS NumberOfParagraphs FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY T1.Document_ID
SELECT D.Template_ID, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID
SELECT P.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs  FROM Paragraphs AS P  INNER JOIN Documents AS D ON P.Document_ID = D.Document_ID  GROUP BY P.Document_ID  ORDER BY P.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID;
SELECT T2.Document_ID, COUNT(T1.Paragraph_ID) AS Paragraph_Count  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T2.Document_ID  ORDER BY T2.Document_ID

SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) AS Paragraph_Count FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) AS Number_of_Paragraphs FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_Text) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name

SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) AS Paragraph_Count FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name;
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS T1  LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS NumberOfParagraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS Number_of_Paragraphs  FROM Documents AS D  LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID, D.Document_Name;

SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2

SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) >= 2

SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T2.Document_ID, T2.Document_Name FROM Documents AS T2 INNER JOIN Paragraphs AS T1 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID, T2.Document_Name ORDER BY COUNT(T1.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  HAVING COUNT(T2.Paragraph_ID) = (SELECT MAX(ParagraphCount) FROM (SELECT COUNT(Paragraph_ID) AS ParagraphCount FROM Paragraphs GROUP BY Document_ID))
SELECT T2.Document_ID, T2.Document_Name FROM Documents AS T2 INNER JOIN (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID) AS T1 ON T1.Document_ID = T2.Document_ID ORDER BY T1.Paragraph_Count DESC LIMIT 1
SELECT T2.Document_ID, T2.Document_Name FROM Documents AS T2 INNER JOIN Paragraphs AS T1 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID, T2.Document_Name ORDER BY COUNT(T1.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T2.Document_ID, T2.Document_Name FROM Documents AS T2 INNER JOIN Paragraphs AS T1 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID, T2.Document_Name ORDER BY COUNT(T1.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T2.Document_ID, T2.Document_Name  ORDER BY COUNT(T1.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T2.Document_ID, T2.Document_Name  ORDER BY COUNT(T1.Paragraph_ID) DESC  LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T2.Document_ID, T2.Document_Name  ORDER BY COUNT(T1.Paragraph_ID) DESC  LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T2.Document_ID, T2.Document_Name  ORDER BY COUNT(T1.Paragraph_ID) DESC  LIMIT 1

SELECT D.Document_ID, D.Document_Name  FROM Documents AS D  INNER JOIN (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count              FROM Paragraphs              GROUP BY Document_ID              ORDER BY Paragraph_Count DESC              LIMIT 1) AS P  ON D.Document_ID = P.Document_ID;
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T2.Document_ID, T2.Document_Name FROM Documents AS T2 INNER JOIN (SELECT Document_ID, COUNT(*) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count DESC LIMIT 1) AS T1 ON T2.Document_ID = T1.Document_ID
SELECT T2.Document_ID, T2.Document_Name  FROM Documents AS T2  INNER JOIN (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count              FROM Paragraphs              GROUP BY Document_ID) AS T1  ON T2.Document_ID = T1.Document_ID  WHERE T1.Paragraph_Count = (SELECT MAX(Paragraph_Count)                              FROM (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count                                    FROM Paragraphs                                    GROUP BY Document_ID))
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Documents AS T2  INNER JOIN Paragraphs AS T1 ON T2.Document_ID = T1.Document_ID  GROUP BY T2.Document_ID  ORDER BY COUNT(T1.Paragraph_ID) DESC  LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Documents AS T2  INNER JOIN Paragraphs AS T1 ON T2.Document_ID = T1.Document_ID  GROUP BY T2.Document_ID, T2.Document_Name  ORDER BY COUNT(T1.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T2.Document_ID, T2.Document_Name  FROM Documents AS T2  INNER JOIN (SELECT Document_ID, COUNT(*) AS Paragraph_Count              FROM Paragraphs              GROUP BY Document_ID) AS T1  ON T2.Document_ID = T1.Document_ID  ORDER BY T1.Paragraph_Count DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN (SELECT Document_ID, COUNT(*) AS Paragraph_Count              FROM Paragraphs              GROUP BY Document_ID              ORDER BY Paragraph_Count DESC              LIMIT 1) AS T2  ON T1.Document_ID = T2.Document_ID
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID, T1.Document_Name  ORDER BY COUNT(T2.Paragraph_ID) DESC  LIMIT 1
SELECT T1.Document_ID, T1.Document_Name FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name ORDER BY COUNT(T2.Paragraph_ID) DESC LIMIT 1

SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) ASC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1
SELECT Document_ID FROM (SELECT Document_ID, COUNT(*) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count ASC LIMIT 1)
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1
SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1;
SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1
SELECT Document_ID FROM (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count ASC LIMIT 1)
SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID ORDER BY COUNT(T1.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN (SELECT Document_ID, COUNT(*) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID) AS T2 ON T1.Document_ID = T2.Document_ID ORDER BY T2.Paragraph_Count ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T1.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1

SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1
SELECT Document_ID FROM Documents WHERE Document_ID = (SELECT P.Document_ID FROM Paragraphs AS P GROUP BY P.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1)
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) ASC LIMIT 1;
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN (SELECT Document_ID, COUNT(*) as Paragraph_Count FROM Paragraphs GROUP BY Document_ID) AS T2 ON T1.Document_ID = T2.Document_ID ORDER BY T2.Paragraph_Count ASC LIMIT 1
SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1
SELECT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY COUNT(P.Paragraph_ID) ASC LIMIT 1
SELECT Document_ID FROM (SELECT Document_ID, COUNT(Paragraph_ID) AS Paragraph_Count FROM Paragraphs GROUP BY Document_ID ORDER BY Paragraph_Count ASC LIMIT 1)
SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_Text) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID ORDER BY COUNT(T1.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID ORDER BY COUNT(T1.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(T2.Paragraph_ID) ASC LIMIT 1

SELECT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents D INNER JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_Text) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2
SELECT D.Document_ID  FROM Documents AS D  INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT T2.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID HAVING COUNT(T1.Paragraph_ID) BETWEEN 1 AND 2

SELECT D.Document_ID FROM Documents AS D LEFT JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_Text) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents AS D INNER JOIN (SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2) AS P ON D.Document_ID = P.Document_ID
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 LEFT JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Paragraphs AS T1 GROUP BY T1.Document_ID HAVING COUNT(T1.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T2.Document_ID  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T2.Document_ID  HAVING COUNT(T1.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2
SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) BETWEEN 1 AND 2

SELECT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland')
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' OR Paragraph_Text = 'Ireland';
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' OR Paragraph_Text = 'Ireland';
SELECT T1.Document_ID  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T2.Paragraph_Text) = 2;
SELECT DISTINCT T1.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland');
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland');
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil' OR Paragraph_Text = 'Ireland';
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland');
SELECT DISTINCT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY Document_ID HAVING COUNT(DISTINCT Paragraph_Text) = 2
SELECT DISTINCT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT T2.Document_ID  FROM Paragraphs AS T1  INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')
SELECT DISTINCT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland');

SELECT DISTINCT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text LIKE '%Brazil%' AND P.Paragraph_Text LIKE '%Ireland%'
SELECT DISTINCT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text LIKE '%Brazil%' AND P.Paragraph_Text LIKE '%Ireland%'
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY Document_ID HAVING COUNT(DISTINCT Paragraph_Text) = 2
SELECT DISTINCT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text LIKE '%Brazil%' AND P.Paragraph_Text LIKE '%Ireland%'
SELECT DISTINCT D.Document_ID FROM Documents AS D INNER JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text LIKE '%Brazil%' AND P.Paragraph_Text LIKE '%Ireland%'
SELECT T2.Document_ID FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY T2.Document_ID HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2
SELECT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY T1.Document_ID HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2
SELECT DISTINCT T1.Document_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY T1.Document_ID HAVING COUNT(DISTINCT T2.Paragraph_Text) = 2
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Brazil%' AND Paragraph_Text LIKE '%Ireland%'
SELECT T1.Document_ID  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T2.Paragraph_Text) = 2
SELECT Document_ID  FROM Paragraphs  WHERE Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY Document_ID  HAVING COUNT(DISTINCT Paragraph_Text) = 2
SELECT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2
SELECT T1.Template_ID FROM Documents AS T1 INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY T1.Template_ID HAVING COUNT(DISTINCT T2.Paragraph_Text) = 2
SELECT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY T1.Document_ID HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2
SELECT DISTINCT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2
SELECT DISTINCT P1.Document_ID  FROM Paragraphs AS P1  INNER JOIN Paragraphs AS P2 ON P1.Document_ID = P2.Document_ID  WHERE P1.Paragraph_Text = 'Brazil' AND P2.Paragraph_Text = 'Ireland'
SELECT DISTINCT P1.Document_ID  FROM Paragraphs AS P1  WHERE P1.Paragraph_Text = 'Brazil'  INTERSECT  SELECT DISTINCT P2.Document_ID  FROM Paragraphs AS P2  WHERE P2.Paragraph_Text = 'Ireland'
SELECT DISTINCT D.Document_ID  FROM Paragraphs AS P1  INNER JOIN Documents AS D ON P1.Document_ID = D.Document_ID  WHERE P1.Paragraph_Text = 'Brazil'  AND D.Document_ID IN (     SELECT P2.Document_ID      FROM Paragraphs AS P2      WHERE P2.Paragraph_Text = 'Ireland' )
SELECT DISTINCT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2
SELECT DISTINCT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T1.Paragraph_Text) = 2

SELECT COUNT(*) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(Teacher_ID) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;

SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(Teacher_ID) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;

SELECT T1.Name FROM teacher AS T1 ORDER BY T1.Age ASC
SELECT T1.Name FROM teacher AS T1 ORDER BY T1.Age ASC
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT T1.Name FROM teacher AS T1 ORDER BY T1.Age ASC
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY CAST(Age AS INTEGER) ASC
SELECT Name FROM teacher ORDER BY CAST(Age AS INTEGER) ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY CAST(Age AS INTEGER) ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC

SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC
SELECT T1.Name FROM teacher AS T1 ORDER BY CAST(T1.Age AS INTEGER) ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC

SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT T1.Age, T1.Hometown FROM teacher AS T1
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;

SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT T1.Age, T1.Hometown FROM teacher AS T1
SELECT Age, Hometown FROM teacher
SELECT T1.Age, T1.Hometown FROM teacher AS T1
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher;
SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher
SELECT Age, Hometown FROM teacher;

SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT T1.Name FROM teacher AS T1 WHERE T1.Hometown <> 'Little Lever Urban District'
SELECT T1.Name FROM teacher AS T1 WHERE T1.Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';

SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT T1.Name FROM teacher AS T1 WHERE T1.Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT T1.Name FROM teacher AS T1 WHERE T1.Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'

SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33')
SELECT Name FROM teacher WHERE Age IN ('32', '33')
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33')
SELECT Name FROM teacher WHERE Age IN ('32', '33')
SELECT Name FROM teacher WHERE Age IN ('32', '33');

SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT T1.Name FROM teacher AS T1 WHERE T1.Age IN ('32', '33')
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33')
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33');
SELECT Name FROM teacher WHERE Age IN ('32', '33')

SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE CAST(Age AS INTEGER) = (SELECT MIN(CAST(Age AS INTEGER)) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(CAST(Age AS INTEGER)) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(CAST(Age AS INTEGER)) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)

SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE CAST(Age AS INTEGER) = (SELECT MIN(CAST(Age AS INTEGER)) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher ORDER BY CAST(Age AS INTEGER) ASC LIMIT 1;
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE CAST(Age AS INTEGER) = (SELECT MIN(CAST(Age AS INTEGER)) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher) LIMIT 1;
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(CAST(T2.Age AS INTEGER)) FROM teacher AS T2)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(CAST(Age AS INTEGER)) FROM teacher);
SELECT DISTINCT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
SELECT T1.Hometown FROM teacher AS T1 WHERE T1.Age = (SELECT MIN(T2.Age) FROM teacher AS T2)
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)

SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT T1.Hometown, COUNT(T1.Teacher_ID) FROM teacher AS T1 GROUP BY T1.Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown;
SELECT T1.Hometown, COUNT(T1.Teacher_ID) FROM teacher AS T1 GROUP BY T1.Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT hometown, COUNT(*) FROM teacher GROUP BY hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Number_of_Teachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Number_of_Teachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Number_of_Teachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS NumberOfTeachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS number_of_teachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) AS Number_of_Teachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Number_of_Teachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS NumberOfTeachers FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Number_of_Teachers FROM teacher GROUP BY Hometown

SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
SELECT T1.Hometown, COUNT(T1.Teacher_ID) FROM teacher AS T1 GROUP BY T1.Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT Hometown, COUNT(*) AS Teacher_Count FROM teacher GROUP BY Hometown
SELECT "Hometown", COUNT(*) AS "Teacher_Count" FROM teacher GROUP BY "Hometown"

SELECT Hometown FROM (SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown) ORDER BY count DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(hometown) DESC LIMIT 1;
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown ORDER BY COUNT(T1.Hometown) DESC LIMIT 1

SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown, COUNT(Hometown) AS count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(Hometown) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(DISTINCT Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2

SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT DISTINCT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT T1.Hometown FROM teacher AS T1 GROUP BY T1.Hometown HAVING COUNT(T1.Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2

SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T2.Name, T3.Course FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T2.Name, T1.Course FROM teacher AS T2 INNER JOIN course_arrange AS T3 ON T2.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T1 ON T3.Course_ID = T1.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T2.Name, T1.Course  FROM course AS T1  INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID  INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course_ID FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID
SELECT T1.Name, T3.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID

SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID

SELECT T2.Name, T3.Course FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID ORDER BY T2.Name ASC
SELECT T3.Name, T1.Course FROM teacher AS T3 INNER JOIN course_arrange AS T2 ON T3.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T1 ON T2.Course_ID = T1.Course_ID ORDER BY T3.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T2.Name, T3.Course FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID ORDER BY T2.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T2.Name, T3.Course FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID ORDER BY T2.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID  ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC

SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T2.Name, T1.Course FROM teacher AS T2 INNER JOIN course_arrange AS T3 ON T2.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T1 ON T3.Course_ID = T1.Course_ID ORDER BY T2.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T2.Name, T3.Course FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID ORDER BY T2.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T2.Name, T1.Course FROM course AS T1 INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID ORDER BY T2.Name ASC
SELECT T1.Name, T3.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID  ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID  ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID  ORDER BY T1.Name ASC
SELECT T1.Name, T2.Course  FROM teacher AS T1  INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID  INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID  ORDER BY T1.Name ASC
SELECT T1.Name, T3.Course FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC

SELECT T3.Name FROM teacher AS T3 INNER JOIN course_arrange AS T2 ON T3.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T1 ON T2.Course_ID = T1.Course_ID WHERE T1.Course = 'Math'
SELECT T3.Name FROM teacher AS T3 INNER JOIN course_arrange AS T1 ON T3.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Course = 'Math'
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T3.Name FROM teacher AS T3 INNER JOIN course_arrange AS T2 ON T3.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T1 ON T2.Course_ID = T1.Course_ID WHERE T1.Course = 'Math'
SELECT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT T3.Name FROM teacher AS T3 INNER JOIN course_arrange AS T2 ON T3.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T1 ON T2.Course_ID = T1.Course_ID WHERE T1.Course = 'Math'
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T2.Name FROM course AS T1 INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID WHERE T1.Course = 'Math'
SELECT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT T2.Name  FROM course AS T1  INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID  INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID  WHERE T1.Course = 'Math'
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T3.Name FROM teacher AS T3 INNER JOIN course_arrange AS T2 ON T3.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T1 ON T2.Course_ID = T1.Course_ID WHERE T1.Course = 'Math'
SELECT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T2.Name FROM course AS T1 INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID WHERE T1.Course = 'Math'
SELECT T2.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'

SELECT DISTINCT T2.Name FROM course AS T1 INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID WHERE T1.Course = 'Math'
SELECT DISTINCT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT DISTINCT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'
SELECT DISTINCT T3.Name  FROM course AS T1  INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID  INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID  WHERE T1.Course = 'Math'
SELECT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT DISTINCT T3.Name FROM course AS T1 INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Course = 'Math'
SELECT DISTINCT T2.Name  FROM teacher AS T2  INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID  INNER JOIN course AS T3 ON T1.Course_ID = T3.Course_ID  WHERE T3.Course = 'Math'
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID  WHERE T3.Course = 'Math'
SELECT T3.Name  FROM course AS T1  INNER JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID  INNER JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID  WHERE T1.Course = 'Math'
SELECT DISTINCT T2.Name  FROM course AS T1  INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID  INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID  WHERE T1.Course = 'Math'
SELECT DISTINCT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID  WHERE T3.Course = 'Math'
SELECT DISTINCT T2.Name  FROM course AS T1  INNER JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID  INNER JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID  WHERE T1.Course = 'Math'
SELECT DISTINCT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID  WHERE T3.Course = 'Math'

SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS NumberOfCourses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Number_of_Courses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Number_of_Courses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS NumberOfCourses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS NumberOfCourses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name;
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID, T1.Name;
SELECT T1.Name, COUNT(T2.Course_ID) AS NumberOfCourses FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(DISTINCT T2.Course_ID) AS NumberOfCourses  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name

SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(DISTINCT T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(DISTINCT T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name
SELECT T1.Name, COUNT(DISTINCT T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID, T1.Name
SELECT T1.Name, COUNT(T2.Course_ID) AS Course_Count  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name;

SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID GROUP BY T2.Name HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T3.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT DISTINCT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(T2.Course_ID) >= 2
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Course_ID) >= 2
SELECT T2.Name  FROM course_arrange AS T1  INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T2.Teacher_ID, T2.Name  HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT DISTINCT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name  HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name  HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Course_ID) >= 2

SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT T2.Name FROM course_arrange AS T1 INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(T1.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(T1.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID INNER JOIN course AS T3 ON T2.Course_ID = T3.Course_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T3.Course_ID) >= 2
SELECT DISTINCT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(T1.Course_ID) >= 2
SELECT T2.Name FROM teacher AS T2 INNER JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID GROUP BY T2.Name HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(T2.Course_ID) >= 2
SELECT T3.Name  FROM course_arrange AS T1  INNER JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(DISTINCT T1.Course_ID) >= 2
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(T2.Course_ID) >= 2
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID, T1.Name  HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT T1.Name FROM teacher AS T1 INNER JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Course_ID) >= 2
SELECT DISTINCT T2.Name  FROM course_arrange AS T1  INNER JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID, T2.Name  HAVING COUNT(DISTINCT T1.Course_ID) >= 2

SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T2.Name FROM teacher AS T2 LEFT JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID WHERE T1.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL

SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID LEFT JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Course_ID IS NULL
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT DISTINCT T3.Name  FROM course AS T1  LEFT JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID  INNER JOIN teacher AS T3 ON T1.Course_ID = T2.Course_ID  WHERE T2.Course_ID IS NULL;
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT DISTINCT T1.Name  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  WHERE T2.Course_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Course_ID IS NULL
SELECT T1.Name  FROM teacher AS T1  WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)
SELECT DISTINCT T1.Name  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  WHERE T2.Teacher_ID IS NULL
SELECT DISTINCT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID LEFT JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T2.Course_ID IS NULL
SELECT DISTINCT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL

SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(ID) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;

SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT T1.Name FROM visitor AS T1 WHERE T1.Level_of_membership > 4 ORDER BY T1.Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT T1.Name FROM visitor AS T1 WHERE T1.Level_of_membership > 4 ORDER BY T1.Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC

SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;

SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC;
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC;
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC;
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC;
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC;
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC

SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT T1.Museum_ID, T1.Name FROM museum AS T1 WHERE T1.Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);

SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009';
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'

SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'

SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT T1.Name FROM museum AS T1 WHERE T1.Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT T1.Name FROM museum AS T1 WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010');
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT T1.Name FROM museum AS T1 WHERE T1.Num_of_Staff > (SELECT MIN(T2.Num_of_Staff) FROM museum AS T2 WHERE T2.Open_Year > '2010')
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010')
SELECT T1.Name  FROM museum AS T1  WHERE T1.Num_of_Staff > (SELECT MIN(T2.Num_of_Staff)                            FROM museum AS T2                            WHERE T2.Open_Year > '2010')

SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 WHERE T1.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(Museum_ID) > 1)
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.visitor_ID IN (SELECT visitor_ID FROM visit GROUP BY Museum_ID, visitor_ID HAVING COUNT(*) > 1)
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 WHERE T1.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(Museum_ID) > 1)
SELECT T2.ID, T2.Name, T2.Age FROM visitor AS T2 WHERE T2.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(Museum_ID) > 1)
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T2.visitor_ID HAVING COUNT(T2.Museum_ID) > 1
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID HAVING COUNT(T2.Museum_ID) > 1
SELECT T2.ID, T2.Name, T2.Age FROM visitor AS T2 WHERE T2.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(Museum_ID) > 1)
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID, T1.Name, T1.Age HAVING COUNT(T2.visitor_ID) > 1
SELECT T1.ID, T1.Name, T1.Age FROM visitor AS T1 WHERE T1.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(Museum_ID) > 1)
SELECT T2.ID, T2.Name, T2.Age FROM visitor AS T2 WHERE T2.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(Museum_ID) > 1)
SELECT DISTINCT T1.ID, T1.Name, T2.Age  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T2.visitor_ID, T2.Museum_ID  HAVING COUNT(T2.Museum_ID) > 1
SELECT T2.ID, T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN (     SELECT visitor_ID      FROM visit      GROUP BY visitor_ID      HAVING COUNT(Museum_ID) > 1 ) AS T1 ON T2.ID = T1.visitor_ID
SELECT DISTINCT T1.ID, T2.Name, T2.Age  FROM visit AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  GROUP BY T1.visitor_ID, T1.Museum_ID  HAVING COUNT(*) > 1
SELECT T1.ID, T1.Name, T1.Age  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T2.visitor_ID  HAVING COUNT(T2.Museum_ID) > 1
SELECT T1.ID, T1.Name, T1.Age  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.ID  HAVING COUNT(T2.Museum_ID) > 1;
SELECT T1.ID, T1.Name, T1.Age  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T2.visitor_ID  HAVING COUNT(T2.Museum_ID) > 1
SELECT T2.ID, T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN (SELECT Museum_ID, visitor_ID, COUNT(*) AS VisitCount              FROM visit              GROUP BY visitor_ID              HAVING COUNT(*) > 1) AS T1  ON T2.ID = T1.visitor_ID
SELECT T2.ID, T2.Name, T2.Age  FROM visit AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  GROUP BY T1.visitor_ID, T1.Museum_ID  HAVING COUNT(T1.Museum_ID) > 1;
SELECT DISTINCT V.ID, V.Name, V.Age  FROM visitor AS V  INNER JOIN visit AS VI ON V.ID = VI.visitor_ID  GROUP BY VI.visitor_ID  HAVING COUNT(VI.Museum_ID) > 1
SELECT T1.ID, T1.Name, T1.Age  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T2.visitor_ID  HAVING COUNT(T2.Museum_ID) > 1

SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS TotalSpent FROM visit GROUP BY visitor_ID ORDER BY TotalSpent DESC LIMIT 1) AS T2 ON T1.ID = T2.visitor_ID
SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS Total_Spent FROM visit GROUP BY visitor_ID ORDER BY Total_Spent DESC LIMIT 1) AS T2 ON T1.ID = T2.visitor_ID
SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID ORDER BY total_spent DESC LIMIT 1) AS T2 ON T1.ID = T2.visitor_ID
SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID ORDER BY SUM(T2.Total_spent) DESC LIMIT 1
SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS total_spending FROM visit GROUP BY visitor_ID) AS T2 ON T1.ID = T2.visitor_ID WHERE T2.total_spending = (SELECT MAX(total_spending) FROM (SELECT SUM(Total_spent) AS total_spending FROM visit GROUP BY visitor_ID))
SELECT T2.ID, T2.Name, T2.Level_of_membership FROM visitor AS T2 INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID GROUP BY T1.visitor_ID ORDER BY SUM(T1.Total_spent) DESC LIMIT 1
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.ID, T1.Name, T1.Level_of_membership  HAVING SUM(T2.Total_spent) = (SELECT MAX(Total_Spent) FROM (SELECT SUM(Total_spent) AS Total_Spent FROM visit GROUP BY visitor_ID))
SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS Total_Spent FROM visit GROUP BY visitor_ID ORDER BY Total_Spent DESC LIMIT 1) AS T2 ON T1.ID = T2.visitor_ID
SELECT T1.ID, T1.Name, T1.Level_of_membership FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID, T1.Name, T1.Level_of_membership ORDER BY SUM(T2.Total_spent) DESC LIMIT 1
SELECT v.ID, v.Name, v.Level_of_membership FROM visitor v WHERE v.ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING SUM(Total_spent) = (SELECT MAX(TotalSpent) FROM (SELECT SUM(Total_spent) AS TotalSpent FROM visit GROUP BY visitor_ID)))
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.ID  HAVING SUM(T2.Total_spent) = (SELECT MAX(TotalSpent)                                 FROM (SELECT SUM(Total_spent) AS TotalSpent                                       FROM visit                                       GROUP BY visitor_ID));
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN (      SELECT visitor_ID, SUM(Total_spent) AS total_spent      FROM visit      GROUP BY visitor_ID  ) AS T2 ON T1.ID = T2.visitor_ID  WHERE T2.total_spent = (SELECT MAX(total_spent) FROM (SELECT SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID))
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN (      SELECT visitor_ID, SUM(Total_spent) AS total_spent      FROM visit      GROUP BY visitor_ID  ) AS T2 ON T1.ID = T2.visitor_ID  WHERE T2.total_spent = (SELECT MAX(total_spent) FROM (SELECT SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID))
SELECT T2.ID, T2.Name, T2.Level_of_membership  FROM visitor AS T2  INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS total_spent              FROM visit              GROUP BY visitor_ID) AS T1  ON T2.ID = T1.visitor_ID  ORDER BY T1.total_spent DESC  LIMIT 1
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  GROUP BY T1.ID, T1.Name, T1.Level_of_membership  HAVING SUM(T2.Total_spent) = (SELECT MAX(total_spent) FROM (SELECT SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID))
SELECT T2.ID, T2.Name, T2.Level_of_membership  FROM visit AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  GROUP BY T1.visitor_ID  ORDER BY SUM(T1.Total_spent) DESC  LIMIT 1
SELECT T2.ID, T2.Name, T2.Level_of_membership  FROM visitor AS T2  INNER JOIN (      SELECT visitor_ID, SUM(Total_spent) AS total_spent      FROM visit      GROUP BY visitor_ID  ) AS T1  ON T2.ID = T1.visitor_ID  WHERE total_spent = (SELECT MAX(total_spent) FROM (SELECT SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID))
SELECT T2.ID, T2.Name, T2.Level_of_membership  FROM (SELECT visitor_ID, SUM(Total_spent) AS total_spent        FROM visit        GROUP BY visitor_ID) AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  ORDER BY total_spent DESC  LIMIT 1
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN (     SELECT visitor_ID, SUM(Total_spent) AS TotalSpent      FROM visit      GROUP BY visitor_ID      HAVING TotalSpent = (SELECT MAX(TotalSpent) FROM (         SELECT SUM(Total_spent) AS TotalSpent          FROM visit          GROUP BY visitor_ID     )) ) AS T2 ON T1.ID = T2.visitor_ID
SELECT T1.ID, T1.Name, T1.Level_of_membership  FROM visitor AS T1  INNER JOIN (SELECT visitor_ID, SUM(Total_spent) AS total_spent              FROM visit              GROUP BY visitor_ID) AS T2  ON T1.ID = T2.visitor_ID  WHERE total_spent = (SELECT MAX(total_spent) FROM (SELECT SUM(Total_spent) AS total_spent FROM visit GROUP BY visitor_ID))

SELECT T2.Museum_ID, T2.Name FROM museum AS T2 INNER JOIN visit AS T1 ON T2.Museum_ID = T1.Museum_ID GROUP BY T2.Museum_ID, T2.Name ORDER BY COUNT(T1.visitor_ID) DESC LIMIT 1
SELECT T1.Museum_ID, T1.Name FROM museum AS T1 INNER JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID, T1.Name ORDER BY COUNT(T2.Num_of_Ticket) DESC LIMIT 1
SELECT T1.Museum_ID, T2.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID, T2.Name ORDER BY COUNT(T1.visitor_ID) DESC LIMIT 1
SELECT T1.Museum_ID, T2.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID, T2.Name ORDER BY COUNT(T1.visitor_ID) DESC LIMIT 1
SELECT T1.Museum_ID, T2.Name FROM museum AS T2 INNER JOIN visit AS T1 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(T1.visitor_ID) DESC LIMIT 1
SELECT T2.Museum_ID, T2.Name FROM museum AS T2 INNER JOIN (SELECT Museum_ID, COUNT(*) AS Visit_Count FROM visit GROUP BY Museum_ID ORDER BY Visit_Count DESC LIMIT 1) AS T1 ON T2.Museum_ID = T1.Museum_ID
SELECT T1.Museum_ID, T1.Name FROM museum AS T1 INNER JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID, T1.Name ORDER BY COUNT(T2.visitor_ID) DESC LIMIT 1
SELECT T1.Museum_ID, T1.Name FROM museum AS T1 INNER JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(T2.visitor_ID) DESC LIMIT 1
SELECT T1.Museum_ID, T1.Name FROM museum AS T1 INNER JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID, T1.Name ORDER BY COUNT(T2.visitor_ID) DESC LIMIT 1
SELECT T2.Museum_ID, T2.Name FROM museum AS T2 INNER JOIN visit AS T1 ON T2.Museum_ID = T1.Museum_ID GROUP BY T2.Museum_ID, T2.Name ORDER BY COUNT(T1.visitor_ID) DESC LIMIT 1
SELECT T1.Museum_ID, T2.Name  FROM visit AS T1  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T1.Museum_ID  HAVING COUNT(T1.visitor_ID) = (SELECT MAX(visit_count) FROM (SELECT COUNT(visitor_ID) AS visit_count FROM visit GROUP BY Museum_ID))
SELECT T1.Museum_ID, T1.Name  FROM museum AS T1  INNER JOIN (SELECT Museum_ID, COUNT(*) AS visit_count              FROM visit              GROUP BY Museum_ID) AS T2  ON T1.Museum_ID = T2.Museum_ID  ORDER BY T2.visit_count DESC  LIMIT 1
SELECT T1.Museum_ID, T1.Name  FROM museum AS T1  INNER JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T1.Museum_ID, T1.Name  ORDER BY COUNT(T2.visitor_ID) DESC  LIMIT 1
SELECT T2.Museum_ID, T2.Name  FROM museum AS T2  INNER JOIN (SELECT Museum_ID, COUNT(*) AS visit_count              FROM visit              GROUP BY Museum_ID              ORDER BY visit_count DESC              LIMIT 1) AS T1  ON T2.Museum_ID = T1.Museum_ID
SELECT T2.Museum_ID, T2.Name  FROM museum AS T2  INNER JOIN (     SELECT Museum_ID, COUNT(*) AS visit_count      FROM visit      GROUP BY Museum_ID      ORDER BY visit_count DESC      LIMIT 1 ) AS T1 ON T2.Museum_ID = T1.Museum_ID
SELECT T2.Museum_ID, T2.Name  FROM museum AS T2  INNER JOIN (SELECT Museum_ID, COUNT(*) AS visit_count              FROM visit              GROUP BY Museum_ID              ORDER BY visit_count DESC              LIMIT 1) AS T1  ON T2.Museum_ID = T1.Museum_ID
SELECT T2.Museum_ID, T2.Name  FROM visit AS T1  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T2.Museum_ID, T2.Name  ORDER BY COUNT(T1.visitor_ID) DESC  LIMIT 1
SELECT T1.Museum_ID, T2.Name  FROM visit AS T1  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T1.Museum_ID  ORDER BY COUNT(T1.visitor_ID) DESC  LIMIT 1
SELECT T2.Museum_ID, T2.Name  FROM visit AS T1  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T2.Museum_ID, T2.Name  ORDER BY COUNT(T1.visitor_ID) DESC  LIMIT 1
SELECT T1.Museum_ID, T2.Name  FROM visit AS T1  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  GROUP BY T1.Museum_ID  ORDER BY COUNT(T1.Num_of_Ticket) DESC  LIMIT 1

SELECT T1.Name FROM museum AS T1 WHERE T1.Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT T1.Name FROM museum AS T1 WHERE T1.Museum_ID NOT IN (SELECT Museum_ID FROM visit)
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT m.Name FROM museum m LEFT JOIN visit v ON m.Museum_ID = v.Museum_ID WHERE v.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT M.Name FROM museum AS M LEFT JOIN visit AS V ON M.Museum_ID = V.Museum_ID WHERE V.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL
SELECT M.Name FROM museum AS M LEFT JOIN visit AS V ON M.Museum_ID = V.Museum_ID WHERE V.Museum_ID IS NULL
SELECT M.Name FROM museum AS M LEFT JOIN visit AS V ON M.Museum_ID = V.Museum_ID WHERE V.visitor_ID IS NULL
SELECT M.Name FROM museum AS M LEFT JOIN visit AS V ON M.Museum_ID = V.Museum_ID WHERE V.Museum_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.visitor_ID IS NULL
SELECT T1.Name FROM museum AS T1 LEFT JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Museum_ID IS NULL

SELECT T2.Name, T2.Age FROM visitor AS T2 INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age FROM visitor AS T2 WHERE T2.ID = (SELECT T1.visitor_ID FROM visit AS T1 ORDER BY T1.Num_of_Ticket DESC LIMIT 1)
SELECT T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age FROM visitor AS T2 INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age FROM visitor AS T2 INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age FROM visitor AS T2 INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T1.Name, T1.Age FROM visitor AS T1 WHERE T1.ID = (SELECT visitor_ID FROM visit ORDER BY Num_of_Ticket DESC LIMIT 1)
SELECT T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT T2.Name, T2.Age FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT V.Name, V.Age  FROM visit AS T1  INNER JOIN visitor AS V ON T1.visitor_ID = V.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age  FROM visit AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age  FROM visit AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN visit AS T1 ON T2.ID = T1.visitor_ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T1.Name, T1.Age FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T2.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age  FROM visit AS T1  INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT V.Name, V.Age  FROM visitor AS V  INNER JOIN visit AS T ON V.ID = T.visitor_ID  WHERE T.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)
SELECT T2.Name, T2.Age  FROM visitor AS T2  INNER JOIN visit AS T1 ON T1.visitor_ID = T2.ID  WHERE T1.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)

SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS max_tickets FROM visit;
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS max_tickets FROM visit
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit;
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit;
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit;
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Max_Tickets FROM visit;
SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS max_tickets FROM visit;
SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS max_tickets FROM visit
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Max_Tickets FROM visit;
SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS max_tickets FROM visit
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Maximum_Tickets FROM visit
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Max_Tickets FROM visit;
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Maximum_Tickets FROM visit;
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Maximum_Tickets FROM visit;
SELECT AVG(Num_of_Ticket) AS average_tickets, MAX(Num_of_Ticket) AS maximum_tickets FROM visit;

SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T3.Total_spent)  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  WHERE T1.Level_of_membership = 1
SELECT SUM(T2.Total_spent) FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Level_of_membership = 1
SELECT SUM(T2.Total_spent)  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  WHERE T1.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T2.Total_spent) FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T2.Total_spent) FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
SELECT SUM(T2.Total_spent) FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Level_of_membership = 1
SELECT SUM(T1.Total_spent) FROM visit AS T1 INNER JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1

SELECT DISTINCT T2.Name FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year < '2009' AND T1.visitor_ID IN (SELECT visitor_ID FROM visit AS T3 INNER JOIN museum AS T4 ON T3.Museum_ID = T4.Museum_ID WHERE T4.Open_Year > '2011' GROUP BY T3.visitor_ID HAVING COUNT(DISTINCT T4.Museum_ID) > 0)
SELECT DISTINCT T3.Name  FROM visitor AS T3  INNER JOIN visit AS T2 ON T3.ID = T2.visitor_ID  INNER JOIN museum AS T1 ON T2.Museum_ID = T1.Museum_ID  WHERE T1.Open_Year < '2009' OR T1.Open_Year > '2011'  GROUP BY T3.ID  HAVING COUNT(CASE WHEN T1.Open_Year < '2009' THEN 1 END) > 0     AND COUNT(CASE WHEN T1.Open_Year > '2011' THEN 1 END) > 0
SELECT T1.Name  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID  WHERE T3.Open_Year < '2009' OR T3.Open_Year > '2011'  GROUP BY T1.ID  HAVING COUNT(DISTINCT CASE WHEN T3.Open_Year < '2009' THEN 'before_2009' WHEN T3.Open_Year > '2011' THEN 'after_2011' END) = 2;
SELECT DISTINCT T1.Name FROM visitor AS T1 INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year < '2009' OR T3.Open_Year > '2011' GROUP BY T1.ID HAVING COUNT(DISTINCT CASE WHEN T3.Open_Year < '2009' THEN T3.Museum_ID END) > 0 AND COUNT(DISTINCT CASE WHEN T3.Open_Year > '2011' THEN T3.Museum_ID END) > 0
SELECT DISTINCT T3.Name  FROM visitor AS T3  INNER JOIN visit AS T1 ON T3.ID = T1.visitor_ID  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  WHERE T2.Open_Year < '2009'  AND T1.visitor_ID IN (SELECT T1.visitor_ID                        FROM visit AS T1                        INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID                        WHERE T2.Open_Year > '2011')
SELECT DISTINCT T1.Name  FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID  WHERE T3.Open_Year < '2009' OR T3.Open_Year > '2011'  GROUP BY T1.Name  HAVING COUNT(DISTINCT CASE WHEN T3.Open_Year < '2009' THEN T3.Museum_ID END) > 0     AND COUNT(DISTINCT CASE WHEN T3.Open_Year > '2011' THEN T3.Museum_ID END) > 0
SELECT DISTINCT T3.Name  FROM visitor AS T3  INNER JOIN visit AS T1 ON T1.visitor_ID = T3.ID  INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID  WHERE T2.Open_Year < '2009'  AND T2.Museum_ID IN (SELECT T1.Museum_ID FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year > '2011')
SELECT DISTINCT T3.Name  FROM visitor AS T3  INNER JOIN visit AS T2 ON T3.ID = T2.visitor_ID  INNER JOIN museum AS T1 ON T2.Museum_ID = T1.Museum_ID  WHERE T1.Open_Year < '2009' AND T2.Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > '2011')
SELECT DISTINCT T3.Name  FROM visitor AS T3  INNER JOIN visit AS T2 ON T3.ID = T2.visitor_ID  INNER JOIN museum AS T1 ON T2.Museum_ID = T1.Museum_ID  WHERE T1.Open_Year < '2009' OR T1.Open_Year > '2011'  GROUP BY T3.ID  HAVING COUNT(DISTINCT CASE WHEN T1.Open_Year < '2009' THEN 1 END) > 0  AND COUNT(DISTINCT CASE WHEN T1.Open_Year > '2011' THEN 1 END) > 0
SELECT DISTINCT T1.Name FROM visitor AS T1 INNER JOIN visit AS T3 ON T1.ID = T3.visitor_ID INNER JOIN museum AS T2 ON T3.Museum_ID = T2.Museum_ID WHERE T1.ID IN (SELECT T1.ID FROM visitor AS T1 INNER JOIN visit AS T3 ON T1.ID = T3.visitor_ID INNER JOIN museum AS T2 ON T3.Museum_ID = T2.Museum_ID WHERE T2.Open_Year < '2009' OR T2.Open_Year > '2011' GROUP BY T1.ID HAVING COUNT(DISTINCT CASE WHEN T2.Open_Year < '2009' THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN T2.Open_Year > '2011' THEN 1 END) > 0)
SELECT DISTINCT T3.Name  FROM visitor AS T3  WHERE T3.ID IN (     SELECT T1.visitor_ID      FROM visit AS T1      INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID      WHERE T2.Open_Year < '2009' )  AND T3.ID IN (     SELECT T1.visitor_ID      FROM visit AS T1      INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID      WHERE T2.Open_Year > '2011' )
SELECT DISTINCT V.Name FROM visitor AS V INNER JOIN visit AS VI1 ON V.ID = VI1.visitor_ID INNER JOIN museum AS M1 ON VI1.Museum_ID = M1.Museum_ID INNER JOIN visit AS VI2 ON V.ID = VI2.visitor_ID INNER JOIN museum AS M2 ON VI2.Museum_ID = M2.Museum_ID WHERE M1.Open_Year < '2009' AND M2.Open_Year > '2011'
SELECT DISTINCT v.Name  FROM visitor AS v  INNER JOIN visit AS vi1 ON v.ID = vi1.visitor_ID  INNER JOIN museum AS m1 ON vi1.Museum_ID = m1.Museum_ID  INNER JOIN visit AS vi2 ON v.ID = vi2.visitor_ID  INNER JOIN museum AS m2 ON vi2.Museum_ID = m2.Museum_ID  WHERE m1.Open_Year < '2009' AND m2.Open_Year > '2011'
SELECT DISTINCT T1.Name FROM visitor AS T1  INNER JOIN visit AS T2 ON T1.ID = T2.visitor_ID  INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID  WHERE T3.Open_Year < '2009'  AND T2.visitor_ID IN (     SELECT T4.visitor_ID FROM visit AS T4      INNER JOIN museum AS T5 ON T4.Museum_ID = T5.Museum_ID      WHERE T5.Open_Year > '2011' )
SELECT DISTINCT v.Name  FROM visitor AS v  INNER JOIN visit AS vi ON v.ID = vi.visitor_ID  INNER JOIN museum AS m ON vi.Museum_ID = m.Museum_ID  WHERE m.Open_Year < '2009'  AND v.ID IN (     SELECT vi2.visitor_ID      FROM visit AS vi2      INNER JOIN museum AS m2 ON vi2.Museum_ID = m2.Museum_ID      WHERE m2.Open_Year > '2011' )
SELECT DISTINCT V.Name  FROM visitor AS V  WHERE V.ID IN (     SELECT DISTINCT V1.visitor_ID      FROM visit AS VT1      INNER JOIN museum AS M1 ON VT1.Museum_ID = M1.Museum_ID      WHERE M1.Open_Year < '2009' ) AND V.ID IN (     SELECT DISTINCT V2.visitor_ID      FROM visit AS VT2      INNER JOIN museum AS M2 ON VT2.Museum_ID = M2.Museum_ID      WHERE M2.Open_Year > '2011' )
SELECT DISTINCT v.Name  FROM visitor AS v  JOIN visit AS vi1 ON v.ID = vi1.visitor_ID  JOIN museum AS m1 ON vi1.Museum_ID = m1.Museum_ID  JOIN visit AS vi2 ON v.ID = vi2.visitor_ID  JOIN museum AS m2 ON vi2.Museum_ID = m2.Museum_ID  WHERE m1.Open_Year < '2009' AND m2.Open_Year > '2011'
SELECT DISTINCT V.Name  FROM visitor AS V  INNER JOIN visit AS VI1 ON V.ID = VI1.visitor_ID  INNER JOIN museum AS M1 ON VI1.Museum_ID = M1.Museum_ID  INNER JOIN visit AS VI2 ON V.ID = VI2.visitor_ID  INNER JOIN museum AS M2 ON VI2.Museum_ID = M2.Museum_ID  WHERE M1.Open_Year < '2009' AND M2.Open_Year > '2011'
SELECT DISTINCT V.Name  FROM visitor AS V  JOIN visit AS VI ON V.ID = VI.visitor_ID  WHERE VI.Museum_ID IN (SELECT M.Museum_ID FROM museum AS M WHERE M.Open_Year < '2009')  AND VI.Museum_ID IN (SELECT M.Museum_ID FROM museum AS M WHERE M.Open_Year > '2011')
SELECT DISTINCT V.Name  FROM visitor AS V  INNER JOIN visit AS VI1 ON V.ID = VI1.visitor_ID  INNER JOIN museum AS M1 ON VI1.Museum_ID = M1.Museum_ID  INNER JOIN visit AS VI2 ON V.ID = VI2.visitor_ID  INNER JOIN museum AS M2 ON VI2.Museum_ID = M2.Museum_ID  WHERE M1.Open_Year < '2009' AND M2.Open_Year > '2011'

SELECT COUNT(DISTINCT visitor.ID) FROM visitor WHERE visitor.ID NOT IN (SELECT visitor_ID FROM visit INNER JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > '2010')
SELECT COUNT(DISTINCT ID) FROM visitor WHERE ID NOT IN (SELECT DISTINCT T1.visitor_ID FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year > '2010')
SELECT COUNT(DISTINCT V.visitor_ID)  FROM visitor AS V  LEFT JOIN visit AS Vi ON V.ID = Vi.visitor_ID  LEFT JOIN museum AS M ON Vi.Museum_ID = M.Museum_ID AND M.Open_Year > '2010'  WHERE M.Museum_ID IS NULL;
SELECT COUNT(DISTINCT V.ID) FROM visitor AS V LEFT JOIN visit AS T1 ON V.ID = T1.visitor_ID LEFT JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year <= '2010' OR T2.Open_Year IS NULL;
SELECT COUNT(DISTINCT ID) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit INNER JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > '2010')
SELECT COUNT(DISTINCT v.ID) FROM visitor AS v WHERE v.ID NOT IN (SELECT DISTINCT v2.visitor_ID FROM visit AS v2 INNER JOIN museum AS m ON v2.Museum_ID = m.Museum_ID WHERE m.Open_Year > '2010')
SELECT COUNT(DISTINCT T1.ID) FROM visitor AS T1 WHERE T1.ID NOT IN (SELECT T2.visitor_ID FROM visit AS T2 INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > '2010')
SELECT COUNT(DISTINCT v.ID) FROM visitor AS v LEFT JOIN visit AS vi ON v.ID = vi.visitor_ID LEFT JOIN museum AS m ON vi.Museum_ID = m.Museum_ID AND m.Open_Year > '2010' WHERE m.Museum_ID IS NULL
SELECT COUNT(DISTINCT ID) FROM visitor WHERE ID NOT IN (SELECT DISTINCT visitor_ID FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Open_Year > '2010')
SELECT COUNT(DISTINCT V.visitor_ID) FROM visit AS V LEFT JOIN museum AS M ON V.Museum_ID = M.Museum_ID AND M.Open_Year > 2010 WHERE M.Museum_ID IS NULL;
SELECT COUNT(*) FROM visitor WHERE ID NOT IN (SELECT DISTINCT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > '2010'))
SELECT COUNT(*) FROM visitor AS V LEFT JOIN visit AS Vi ON V.ID = Vi.visitor_ID LEFT JOIN museum AS M ON Vi.Museum_ID = M.Museum_ID WHERE M.Open_Year <= 2010 OR M.Museum_ID IS NULL
SELECT COUNT(DISTINCT T1.ID)  FROM visitor AS T1  WHERE T1.ID NOT IN (     SELECT T2.visitor_ID      FROM visit AS T2      INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID      WHERE T3.Open_Year > '2010' )
SELECT COUNT(*) FROM visitor WHERE ID NOT IN (SELECT DISTINCT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > '2010'))
SELECT COUNT(DISTINCT T1.ID) FROM visitor AS T1 WHERE T1.ID NOT IN (SELECT T2.visitor_ID FROM visit AS T2 INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > '2010')
SELECT COUNT(DISTINCT V.ID)  FROM visitor AS V  LEFT JOIN visit AS Vi ON V.ID = Vi.visitor_ID  WHERE V.ID NOT IN (SELECT DISTINCT Vi.visitor_ID                     FROM visit AS Vi                     INNER JOIN museum AS M ON Vi.Museum_ID = M.Museum_ID                     WHERE M.Open_Year > 2010)
SELECT COUNT(DISTINCT T1.ID) FROM visitor AS T1 WHERE T1.ID NOT IN (SELECT T2.visitor_ID FROM visit AS T2 INNER JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > '2010')
SELECT COUNT(*) FROM visitor WHERE ID NOT IN (SELECT DISTINCT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > '2010'))
SELECT COUNT(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit INNER JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year > '2010')
SELECT COUNT(*) FROM visitor WHERE ID NOT IN (SELECT DISTINCT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > '2010'))

SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE CAST(Open_Year AS INTEGER) > 2013 OR CAST(Open_Year AS INTEGER) < 2008
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008'
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';
SELECT COUNT(*) FROM museum WHERE Open_Year > '2013' OR Open_Year < '2008';

SELECT COUNT(*) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;

SELECT COUNT(*) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(player_id) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(DISTINCT player_id) FROM players;
SELECT COUNT(DISTINCT player_id) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(DISTINCT player_id) FROM players;
SELECT COUNT(*) FROM players;

SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;

SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;

SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';

SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'

SELECT AVG(age) FROM (     SELECT winner_age AS age FROM matches     UNION ALL     SELECT loser_age AS age FROM matches )
SELECT (AVG(winner_age) + AVG(loser_age)) / 2 AS average_age FROM matches;
SELECT (AVG(winner_age) + AVG(loser_age)) / 2 AS average_age FROM matches;
SELECT AVG(age) FROM (SELECT (2023 - STRFTIME('%Y', players.birth_date)) AS age FROM matches INNER JOIN players ON matches.winner_id = players.player_id UNION ALL SELECT (2023 - STRFTIME('%Y', players.birth_date)) AS age FROM matches INNER JOIN players ON matches.loser_id = players.player_id)
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(age) FROM (SELECT loser_age AS age FROM matches UNION ALL SELECT winner_age AS age FROM matches)
SELECT AVG(age) FROM (SELECT (STRFTIME('%Y', 'now') - STRFTIME('%Y', P1.birth_date)) AS age FROM matches AS M INNER JOIN players AS P1 ON M.winner_id = P1.player_id UNION ALL SELECT (STRFTIME('%Y', 'now') - STRFTIME('%Y', P2.birth_date)) AS age FROM matches AS M INNER JOIN players AS P2 ON M.loser_id = P2.player_id)
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT (AVG(loser_age) + AVG(winner_age)) / 2 AS average_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(T1.age) AS avg_winner_age, AVG(T2.age) AS avg_loser_age  FROM (SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', birth_date) AS age FROM players AS T1 INNER JOIN matches AS T3 ON T1.player_id = T3.winner_id) AS T1,      (SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', birth_date) AS age FROM players AS T2 INNER JOIN matches AS T4 ON T2.player_id = T4.loser_id) AS T2
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(T1.age) AS avg_winner_age, AVG(T2.age) AS avg_loser_age  FROM (SELECT winner_id, (strftime('%Y', 'now') - strftime('%Y', birth_date)) AS age FROM players INNER JOIN matches ON players.player_id = matches.winner_id) AS T1,      (SELECT loser_id, (strftime('%Y', 'now') - strftime('%Y', birth_date)) AS age FROM players INNER JOIN matches ON players.player_id = matches.loser_id) AS T2
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT (AVG(WinnerAge) + AVG(LoserAge)) / 2 AS AverageAge FROM (SELECT AVG(p1.age) AS WinnerAge FROM matches m INNER JOIN players p1 ON m.winner_id = p1.player_id UNION ALL SELECT AVG(p2.age) AS LoserAge FROM matches m INNER JOIN players p2 ON m.loser_id = p2.player_id)
SELECT AVG(winner_age) AS avg_winner_age, AVG(loser_age) AS avg_loser_age  FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches

SELECT      AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.birth_date)) AS avg_winner_age,     AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.birth_date)) AS avg_loser_age  FROM      matches AS M  INNER JOIN      players AS T1 ON T1.player_id = M.winner_id  INNER JOIN      players AS T2 ON T2.player_id = M.loser_id
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(T2.winner_age) AS average_winner_age, AVG(T3.loser_age) AS average_loser_age FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN players AS T3 ON T1.loser_id = T3.player_id
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(winner_age) AS avg_winner_age, AVG(loser_age) AS avg_loser_age FROM matches;
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(P1.winner_age) AS average_winner_age, AVG(P2.loser_age) AS average_loser_age  FROM matches AS T1  INNER JOIN players AS P1 ON T1.winner_id = P1.player_id  INNER JOIN players AS P2 ON T1.loser_id = P2.player_id
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(T1.loser_age) AS average_loser_age, AVG(T2.winner_age) AS average_winner_age  FROM matches AS T INNER JOIN players AS T1 ON T.loser_id = T1.player_id  INNER JOIN players AS T2 ON T.winner_id = T2.player_id
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(T1.loser_age) AS average_loser_age, AVG(T2.winner_age) AS average_winner_age  FROM matches AS T1  INNER JOIN matches AS T2 ON T1.match_num = T2.match_num
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches
SELECT AVG(T1.winner_age) AS average_winner_age, AVG(T2.loser_age) AS average_loser_age  FROM matches AS M  INNER JOIN players AS T1 ON M.winner_id = T1.player_id  INNER JOIN players AS T2 ON M.loser_id = T2.player_id

SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(T2.ranking) FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id
SELECT AVG(winner_rank) FROM matches
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches;

SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(T1.winner_rank) FROM matches AS T2 INNER JOIN players AS T1 ON T2.winner_id = T1.player_id
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches
SELECT AVG(winner_rank) FROM matches
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches WHERE winner_rank IS NOT NULL;

SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches
SELECT MAX(loser_rank) FROM matches
SELECT MIN(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches
SELECT MAX(loser_rank) FROM matches
SELECT MAX(loser_rank) FROM matches
SELECT MAX(loser_rank) FROM matches;

SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(T2.ranking) FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.loser_id = T2.player_id
SELECT MIN(loser_rank) FROM matches WHERE loser_rank IS NOT NULL;
SELECT MIN(loser_rank) FROM matches
SELECT MIN(loser_rank) FROM matches;
SELECT MIN(loser_rank) FROM matches

SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;

SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;

SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches WHERE loser_name IS NOT NULL;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;

SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;

SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT T1.tourney_name FROM matches AS T1 GROUP BY T1.tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT DISTINCT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10

SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT T1.tourney_name FROM matches AS T1 GROUP BY T1.tourney_name HAVING COUNT(T1.match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(tourney_name) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_id FROM matches GROUP BY tourney_id HAVING COUNT(match_num) > 10
SELECT DISTINCT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT T1.tourney_name FROM matches AS T1 GROUP BY T1.tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT T1.tourney_name  FROM matches AS T1  GROUP BY T1.tourney_name  HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10

SELECT DISTINCT T3.first_name, T3.last_name  FROM matches AS T1  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T3.player_id  HAVING COUNT(DISTINCT T1.year) = 2;
SELECT DISTINCT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT T1.winner_name  FROM matches AS T1  WHERE STRFTIME('%Y', T1.tourney_date) IN ('2013', '2016')  GROUP BY T1.winner_name  HAVING COUNT(DISTINCT STRFTIME('%Y', T1.tourney_date)) = 2
SELECT DISTINCT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.year IN (2013, 2016) GROUP BY T1.winner_id HAVING COUNT(DISTINCT T1.year) = 2
SELECT `winner_name` FROM `matches` WHERE `year` IN (2013, 2016) GROUP BY `winner_name` HAVING COUNT(DISTINCT `year`) = 2
SELECT winner_name  FROM matches  WHERE year IN (2013, 2016)  GROUP BY winner_name  HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT T3.first_name, T3.last_name  FROM players AS T3  INNER JOIN matches AS T1 ON T3.player_id = T1.winner_id  WHERE STRFTIME('%Y', T1.tourney_date) IN ('2013', '2016')  GROUP BY T3.player_id  HAVING COUNT(DISTINCT STRFTIME('%Y', T1.tourney_date)) = 2
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2;
SELECT T1.winner_name FROM matches AS T1 WHERE T1.year IN (2013, 2016) GROUP BY T1.winner_name HAVING COUNT(DISTINCT T1.year) = 2
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT DISTINCT T1.winner_name  FROM matches AS T1  WHERE T1.year IN (2013, 2016)  GROUP BY T1.winner_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT DISTINCT P.first_name, P.last_name  FROM matches AS M1  INNER JOIN matches AS M2 ON M1.winner_id = M2.winner_id  INNER JOIN players AS P ON M1.winner_id = P.player_id  WHERE M1.year = 2013 AND M2.year = 2016
SELECT DISTINCT P.first_name, P.last_name FROM players AS P INNER JOIN matches AS M ON P.player_id = M.winner_id WHERE M.year IN (2013, 2016) GROUP BY M.winner_id HAVING COUNT(DISTINCT M.year) = 2
SELECT DISTINCT P.first_name, P.last_name  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.year = 2013  AND M1.winner_id IN (SELECT winner_id FROM matches WHERE year = 2016)
SELECT DISTINCT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE STRFTIME('%Y', T1.tourney_date) IN ('2013', '2016')  GROUP BY T2.player_id  HAVING COUNT(DISTINCT STRFTIME('%Y', T1.tourney_date)) = 2
SELECT DISTINCT T1.winner_name  FROM matches AS T1  WHERE T1.year IN (2013, 2016)  GROUP BY T1.winner_name  HAVING COUNT(DISTINCT T1.year) = 2
SELECT DISTINCT T1.winner_name  FROM matches AS T1  WHERE T1.year IN (2013, 2016)  GROUP BY T1.winner_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT DISTINCT P1.first_name || ' ' || P1.last_name AS winner_name  FROM matches AS M1  INNER JOIN players AS P1 ON M1.winner_id = P1.player_id  WHERE M1.year = 2013  AND M1.winner_id IN (SELECT winner_id FROM matches WHERE year = 2016)
SELECT DISTINCT P.first_name || ' ' || P.last_name AS winner_name FROM matches AS M INNER JOIN players AS P ON M.winner_id = P.player_id WHERE M.year IN (2013, 2016) GROUP BY M.winner_id HAVING COUNT(DISTINCT M.year) = 2
SELECT DISTINCT T1.winner_name  FROM matches AS T1  WHERE T1.year IN (2013, 2016)  GROUP BY T1.winner_name  HAVING COUNT(DISTINCT T1.year) = 2;

SELECT DISTINCT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE STRFTIME('%Y', T1.tourney_date) IN ('2013', '2016')  GROUP BY T1.winner_id  HAVING COUNT(DISTINCT STRFTIME('%Y', T1.tourney_date)) = 2
SELECT T1.winner_id FROM matches AS T1 WHERE T1.year IN (2013, 2016) GROUP BY T1.winner_id HAVING COUNT(DISTINCT T1.year) = 2
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_id HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT winner_id FROM matches WHERE year = 2013 INTERSECT SELECT DISTINCT winner_id FROM matches WHERE year = 2016
SELECT T3.last_name, T3.first_name  FROM matches AS T1  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T3.player_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT T2.last_name, T2.first_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.year) = 2
SELECT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT P.first_name || ' ' || P.last_name AS player_name  FROM players AS P  WHERE P.player_id IN (     SELECT winner_id      FROM matches      WHERE year = 2013 ) AND P.player_id IN (     SELECT winner_id      FROM matches      WHERE year = 2016 )
SELECT DISTINCT T1.first_name, T1.last_name  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.year IN (2013, 2016)  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.year) = 2
SELECT DISTINCT P.first_name, P.last_name  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.year = 2013  AND P.player_id IN (SELECT winner_id FROM matches WHERE year = 2016)
SELECT DISTINCT P.first_name, P.last_name  FROM players AS P  WHERE P.player_id IN (     SELECT winner_id      FROM matches      WHERE year = 2013 )  AND P.player_id IN (     SELECT winner_id      FROM matches      WHERE year = 2016 )
SELECT DISTINCT P.first_name || ' ' || P.last_name AS player_name  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.year IN (2013, 2016)  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.year) = 2
SELECT DISTINCT P.first_name, P.last_name  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.year = 2013  AND M1.winner_id IN (SELECT winner_id FROM matches WHERE year = 2016)
SELECT DISTINCT P.first_name || ' ' || P.last_name AS player_name  FROM matches AS M1  INNER JOIN players AS P ON M1.winner_id = P.player_id  WHERE M1.year IN (2013, 2016)  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.year) = 2
SELECT DISTINCT P.first_name || ' ' || P.last_name AS player_name  FROM matches M  INNER JOIN players P ON M.winner_id = P.player_id  WHERE M.year IN (2013, 2016)  GROUP BY M.winner_id  HAVING COUNT(DISTINCT M.year) = 2
SELECT DISTINCT T1.first_name, T1.last_name  FROM players AS T1  WHERE T1.player_id IN (     SELECT winner_id FROM matches WHERE year = 2013 ) AND T1.player_id IN (     SELECT winner_id FROM matches WHERE year = 2016 )
SELECT DISTINCT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.year IN (2013, 2016)  GROUP BY T1.winner_id  HAVING COUNT(DISTINCT T1.year) = 2

SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE STRFTIME('%Y', tourney_date) IN ('2013', '2016');
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(match_num) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE STRFTIME('%Y', tourney_date) IN ('2013', '2016')
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);

SELECT COUNT(*) FROM matches WHERE STRFTIME('%Y', tourney_date) IN ('2013', '2016');
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE STRFTIME('%Y', tourney_date) IN ('2013', '2016');
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE STRFTIME('%Y', tourney_date) IN ('2013', '2016');
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);

SELECT T1.country_code, T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY T1.player_id HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT P.country_code, P.first_name  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  WHERE M.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M.tourney_name) = 2
SELECT DISTINCT T2.country_code, T2.first_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.winner_id IN (SELECT winner_id FROM matches WHERE tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY winner_id HAVING COUNT(DISTINCT tourney_name) = 2)
SELECT T1.country_code, T1.first_name  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT DISTINCT T1.country_code, T1.first_name  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  JOIN matches AS T3 ON T1.player_id = T3.winner_id  WHERE T2.tourney_name = 'WTA Championships' AND T3.tourney_name = 'Australian Open'
SELECT T1.country_code, T1.first_name  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.winner_id IN (     SELECT T2.winner_id      FROM matches AS T2      WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')      GROUP BY T2.winner_id      HAVING COUNT(DISTINCT T2.tourney_name) = 2 )
SELECT T1.country_code, T1.first_name FROM players AS T1 WHERE T1.player_id IN (SELECT winner_id FROM matches WHERE tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY winner_id HAVING COUNT(DISTINCT tourney_name) = 2)
SELECT DISTINCT T3.country_code, T3.first_name  FROM (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships') AS T1  INNER JOIN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open') AS T2  ON T1.winner_id = T2.winner_id  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id
SELECT T1.country_code, T1.first_name FROM players AS T1 WHERE T1.player_id IN (SELECT winner_id FROM matches WHERE tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY winner_id HAVING COUNT(DISTINCT tourney_name) = 2)
SELECT DISTINCT T3.country_code, T3.first_name  FROM matches AS T1  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id  WHERE T1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T3.player_id  HAVING COUNT(DISTINCT T1.tourney_name) = 2
SELECT DISTINCT T1.country_code, T1.first_name  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT DISTINCT T2.country_code, T2.first_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T2.player_id  HAVING COUNT(DISTINCT T1.tourney_name) = 2
SELECT DISTINCT T2.country_code, T2.first_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.winner_id  HAVING COUNT(DISTINCT T1.tourney_name) = 2
SELECT DISTINCT P.country_code, P.first_name  FROM players AS P  INNER JOIN matches AS M ON P.player_id = M.winner_id  WHERE M.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY M.winner_id  HAVING COUNT(DISTINCT M.tourney_name) = 2
SELECT DISTINCT P.country_code, P.first_name  FROM players AS P  JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.tourney_name) = 2
SELECT DISTINCT P.country_code, P.first_name  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  WHERE M.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY M.winner_id  HAVING COUNT(DISTINCT M.tourney_name) = 2
SELECT DISTINCT T1.country_code, T1.first_name  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT DISTINCT P.country_code, P.first_name  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name = 'WTA Championships'  AND M1.winner_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')
SELECT DISTINCT P.country_code, P.first_name  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.tourney_name) = 2
SELECT DISTINCT P.country_code, P.first_name  FROM players AS P  JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name = 'WTA Championships'  AND P.player_id IN (SELECT M2.winner_id FROM matches AS M2 WHERE M2.tourney_name = 'Australian Open')

SELECT DISTINCT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  INNER JOIN matches AS T3 ON T1.player_id = T3.winner_id  WHERE T2.tourney_name = 'WTA Championships'  AND T3.tourney_name = 'Australian Open'
SELECT T1.first_name, T1.country_code FROM players AS T1 WHERE T1.player_id IN (SELECT winner_id FROM matches WHERE tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY winner_id HAVING COUNT(DISTINCT tourney_name) = 2)
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT DISTINCT P.first_name, P.country_code FROM players AS P INNER JOIN matches AS M1 ON P.player_id = M1.winner_id INNER JOIN matches AS M2 ON P.player_id = M2.winner_id WHERE M1.tourney_name = 'WTA Championships' AND M2.tourney_name = 'Australian Open'
SELECT P.first_name, P.country_code  FROM players AS P  INNER JOIN matches AS M ON P.player_id = M.winner_id  WHERE M.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M.tourney_name) = 2
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  INNER JOIN matches AS M2 ON P.player_id = M2.winner_id  WHERE M1.tourney_name = 'WTA Championships'  AND M2.tourney_name = 'Australian Open'
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY T1.player_id HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT DISTINCT T1.first_name, T1.country_code FROM players AS T1 WHERE T1.player_id IN (SELECT winner_id FROM matches WHERE tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY winner_id HAVING COUNT(DISTINCT tourney_name) = 2)
SELECT DISTINCT p.first_name, p.country_code  FROM players AS p  JOIN matches AS m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'WTA Championships'  JOIN matches AS m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'Australian Open';
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.tourney_name) = 2
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  WHERE P.player_id IN (     SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships' ) AND P.player_id IN (     SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' )
SELECT DISTINCT P.first_name, P.country_code FROM players AS P INNER JOIN matches AS M1 ON P.player_id = M1.winner_id INNER JOIN matches AS M2 ON P.player_id = M2.winner_id WHERE M1.tourney_name = 'WTA Championships' AND M2.tourney_name = 'Australian Open'
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.tourney_name) = 2
SELECT DISTINCT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY T1.player_id  HAVING COUNT(DISTINCT T2.tourney_name) = 2
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M1.tourney_name) = 2
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  WHERE P.player_id IN (     SELECT winner_id      FROM matches      WHERE tourney_name = 'WTA Championships' )  AND P.player_id IN (     SELECT winner_id      FROM matches      WHERE tourney_name = 'Australian Open' )
SELECT DISTINCT P.first_name, P.country_code  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  WHERE M.tourney_name IN ('WTA Championships', 'Australian Open')  GROUP BY P.player_id  HAVING COUNT(DISTINCT M.tourney_name) = 2
SELECT DISTINCT T1.first_name, T1.country_code  FROM players AS T1  WHERE T1.player_id IN (     SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships' ) AND T1.player_id IN (     SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' )
SELECT DISTINCT P.first_name, P.country_code  FROM players AS P  INNER JOIN matches AS M1 ON P.player_id = M1.winner_id  WHERE M1.tourney_name = 'WTA Championships' AND P.player_id IN (     SELECT M2.winner_id      FROM matches AS M2      WHERE M2.tourney_name = 'Australian Open' )

SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MAX(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code  FROM players  WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)

SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MAX(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)

SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC
SELECT first_name, last_name FROM players ORDER BY birth_date ASC

SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT first_name, last_name FROM players ORDER BY birth_date
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT first_name, last_name FROM players ORDER BY birth_date
SELECT first_name, last_name FROM players ORDER BY birth_date
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM players AS T1 ORDER BY T1.birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date ASC
SELECT T1.first_name || ' ' || T1.last_name AS full_name FROM players AS T1 ORDER BY T1.birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date ASC

SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC

SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT T1.first_name || ' ' || T1.last_name FROM players AS T1 WHERE T1.hand = 'L' ORDER BY T1.birth_date ASC
SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC

SELECT first_name, country_code FROM players WHERE player_id = (SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1)
SELECT T2.first_name, T2.country_code FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T1.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code  FROM players AS T1  WHERE T1.player_id = (SELECT T2.player_id                        FROM (SELECT player_id, COUNT(tours) AS tour_count                              FROM rankings                              GROUP BY player_id) AS T2                        ORDER BY tour_count DESC                        LIMIT 1)
WITH TourCounts AS (SELECT player_id, COUNT(tours) AS tour_count FROM rankings GROUP BY player_id) SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN TourCounts AS T2 ON T1.player_id = T2.player_id  WHERE T2.tour_count = (SELECT MAX(tour_count) FROM TourCounts);
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code FROM players AS T1 WHERE player_id = (SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1)
SELECT T1.first_name, T1.country_code FROM players AS T1 WHERE player_id = (SELECT T2.player_id FROM rankings AS T2 ORDER BY T2.tours DESC LIMIT 1)
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T2.first_name, T2.country_code  FROM players AS T2  INNER JOIN (     SELECT player_id, SUM(tours) AS total_tours      FROM rankings      GROUP BY player_id      ORDER BY total_tours DESC      LIMIT 1 ) AS T1 ON T1.player_id = T2.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id
SELECT T2.first_name, T2.country_code  FROM rankings AS T1  INNER JOIN players AS T2 ON T1.player_id = T2.player_id  WHERE T1.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, COUNT(*) AS tour_count              FROM rankings              GROUP BY player_id) AS T2  ON T1.player_id = T2.player_id  WHERE T2.tour_count = (SELECT MAX(tour_count) FROM (SELECT COUNT(*) AS tour_count                                                        FROM rankings                                                        GROUP BY player_id))
SELECT T2.first_name, T2.country_code  FROM rankings AS T1  INNER JOIN players AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.player_id  ORDER BY SUM(T1.tours) DESC  LIMIT 1
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.player_id  ORDER BY COUNT(T2.tours) DESC  LIMIT 1
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, COUNT(tours) AS tour_count              FROM rankings              GROUP BY player_id              ORDER BY tour_count DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id;
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id) AS T2  ON T1.player_id = T2.player_id  WHERE T2.total_tours = (SELECT MAX(total_tours) FROM (SELECT SUM(tours) AS total_tours FROM rankings GROUP BY player_id))
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id

SELECT T1.first_name, T1.country_code FROM players AS T1 WHERE player_id = (SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1)
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T2.first_name, T2.country_code FROM players AS T2 INNER JOIN (SELECT player_id, SUM(tours) AS total_tours FROM rankings GROUP BY player_id ORDER BY total_tours DESC LIMIT 1) AS T1 ON T2.player_id = T1.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id) AS T2  ON T1.player_id = T2.player_id  WHERE T2.total_tours = (SELECT MAX(total_tours) FROM (SELECT player_id, SUM(tours) AS total_tours FROM rankings GROUP BY player_id))
SELECT T1.first_name, T1.country_code FROM players AS T1 WHERE T1.player_id = (SELECT T2.player_id FROM rankings AS T2 ORDER BY T2.tours DESC LIMIT 1)
SELECT first_name, country_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY SUM(tours) DESC LIMIT 1);
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN (SELECT player_id, COUNT(tours) AS tour_count FROM rankings GROUP BY player_id ORDER BY tour_count DESC LIMIT 1) AS T2 ON T1.player_id = T2.player_id
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id) AS T2  ON T1.player_id = T2.player_id  WHERE T2.total_tours = (SELECT MAX(total_tours) FROM (SELECT SUM(tours) AS total_tours FROM rankings GROUP BY player_id))
SELECT P.first_name, P.country_code  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE R.tours = (SELECT MAX(tours) FROM rankings)
SELECT P.first_name, P.country_code  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE R.tours = (SELECT MAX(tours) FROM rankings)
SELECT T2.first_name, T2.country_code  FROM players AS T2  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T1  ON T2.player_id = T1.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  WHERE T2.tours = (SELECT MAX(tours) FROM rankings)
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id
SELECT T2.first_name, T2.country_code  FROM players AS T2  INNER JOIN (SELECT player_id, SUM(tours) AS total_tours              FROM rankings              GROUP BY player_id              ORDER BY total_tours DESC              LIMIT 1) AS T1  ON T1.player_id = T2.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN (SELECT player_id, COUNT(tours) AS tour_count              FROM rankings              GROUP BY player_id              ORDER BY tour_count DESC              LIMIT 1) AS T2  ON T1.player_id = T2.player_id
SELECT T1.first_name, T1.country_code  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  WHERE T2.tours = (SELECT MAX(tours) FROM rankings);

SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1

SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count  FROM matches  GROUP BY year  ORDER BY match_count DESC  LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count  FROM matches  GROUP BY year  ORDER BY match_count DESC  LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1

WITH MostWins AS (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 ) SELECT T1.winner_name, T2.ranking_points  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_id IN (SELECT winner_id FROM MostWins);
SELECT T2.first_name, T2.last_name, T3.ranking_points FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id GROUP BY T2.player_id ORDER BY COUNT(T1.winner_id) DESC LIMIT 1
SELECT T2.first_name, T2.last_name, T3.ranking_points FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T1.winner_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T2.first_name, T2.last_name, T3.ranking_points  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T1.winner_id = T3.player_id  GROUP BY T1.winner_id  HAVING COUNT(*) = (SELECT MAX(win_count) FROM (SELECT COUNT(*) AS win_count FROM matches GROUP BY winner_id))
SELECT P.first_name, P.last_name, R.ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE P.player_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.first_name, T1.last_name, T2.winner_rank_points  FROM players AS T1  INNER JOIN (SELECT winner_id, COUNT(*) AS win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1) AS T2  ON T1.player_id = T2.winner_id
SELECT T2.first_name, T2.last_name, T3.ranking_points  FROM players AS T2  INNER JOIN matches AS T1 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T2.player_id = (SELECT winner_id                        FROM matches                        GROUP BY winner_id                        ORDER BY COUNT(*) DESC                        LIMIT 1)
SELECT T1.first_name, T1.last_name, T2.ranking_points FROM players AS T1 INNER JOIN (SELECT winner_id, COUNT(*) AS win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1) AS T2 ON T1.player_id = T2.winner_id
SELECT T1.winner_name, T2.ranking_points FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id GROUP BY T1.winner_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.first_name, T2.last_name, T2.rank_points  FROM (SELECT winner_id, COUNT(*) AS win_count        FROM matches        GROUP BY winner_id        ORDER BY win_count DESC        LIMIT 1) AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id
SELECT T1.winner_name, T2.ranking_points  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  GROUP BY T1.winner_name  ORDER BY COUNT(T1.winner_name) DESC  LIMIT 1
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY M.winner_id  ORDER BY COUNT(M.winner_id) DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name, SUM(T1.winner_rank_points) AS total_rank_points  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  GROUP BY T1.winner_id  HAVING COUNT(T1.winner_id) = (SELECT MAX(win_count) FROM (SELECT COUNT(winner_id) AS win_count FROM matches GROUP BY winner_id))
SELECT T1.first_name, T1.last_name, SUM(T2.winner_rank_points) AS rank_points  FROM matches AS T2  INNER JOIN players AS T1 ON T2.winner_id = T1.player_id  GROUP BY T2.winner_id  HAVING COUNT(*) = (SELECT MAX(win_count) FROM (SELECT COUNT(*) AS win_count FROM matches GROUP BY winner_id))
SELECT T1.first_name, T1.last_name, T2.ranking_points  FROM players AS T1  INNER JOIN (SELECT winner_id, COUNT(*) AS win_count              FROM matches              GROUP BY winner_id              ORDER BY win_count DESC              LIMIT 1) AS T3  ON T1.player_id = T3.winner_id  INNER JOIN rankings AS T2  ON T1.player_id = T2.player_id  ORDER BY T2.ranking_date DESC  LIMIT 1
SELECT T1.first_name, T1.last_name, SUM(T2.winner_rank_points) AS rank_points FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id GROUP BY T1.player_id HAVING COUNT(T2.winner_id) = (     SELECT MAX(win_count) FROM (         SELECT COUNT(winner_id) AS win_count         FROM matches         GROUP BY winner_id     ) )
SELECT P.first_name, P.last_name, R.ranking_points  FROM players AS P  JOIN rankings AS R ON P.player_id = R.player_id  JOIN (SELECT winner_id, COUNT(*) AS win_count        FROM matches        GROUP BY winner_id        ORDER BY win_count DESC        LIMIT 1) AS W ON P.player_id = W.winner_id
SELECT T2.last_name, T1.winner_rank_points  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  GROUP BY T1.winner_id  ORDER BY COUNT(T1.winner_id) DESC  LIMIT 1
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY M.winner_id  ORDER BY COUNT(M.winner_id) DESC  LIMIT 1
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM (SELECT winner_id, COUNT(*) AS win_count        FROM matches        GROUP BY winner_id        ORDER BY win_count DESC        LIMIT 1) AS W  INNER JOIN players AS P ON W.winner_id = P.player_id  INNER JOIN rankings AS R ON R.player_id = W.winner_id

SELECT players.last_name, players.first_name, rankings.ranking_points  FROM players  INNER JOIN rankings ON players.player_id = rankings.player_id  WHERE players.player_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )  ORDER BY ranking_date DESC  LIMIT 1
SELECT T2.first_name, T2.last_name, T3.ranking_points  FROM (SELECT winner_id, COUNT(winner_id) AS match_count FROM matches GROUP BY winner_id ORDER BY match_count DESC LIMIT 1) AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id
SELECT P.first_name, P.last_name, R.ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE P.player_id = (SELECT winner_id                       FROM (SELECT winner_id, COUNT(*) AS match_count                             FROM matches                             GROUP BY winner_id                             ORDER BY COUNT(*) DESC                             LIMIT 1))
SELECT T1.winner_name, T2.ranking_points  FROM (SELECT winner_name, COUNT(*) as match_count        FROM matches        GROUP BY winner_name        ORDER BY match_count DESC        LIMIT 1) AS T1  INNER JOIN players AS T3 ON T1.winner_name = T3.first_name || ' ' || T3.last_name  INNER JOIN rankings AS T2 ON T3.player_id = T2.player_id  ORDER BY T2.ranking_date DESC LIMIT 1
SELECT M.winner_name, R.ranking_points  FROM matches AS M  INNER JOIN rankings AS R ON M.winner_id = R.player_id  GROUP BY M.winner_id  HAVING COUNT(*) = (SELECT MAX(match_count) FROM (SELECT winner_id, COUNT(*) AS match_count FROM matches GROUP BY winner_id))
SELECT T1.winner_name, T2.ranking_points  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.winner_name, T2.ranking_points FROM (SELECT winner_id, COUNT(*) as wins FROM matches GROUP BY winner_id ORDER BY wins DESC LIMIT 1) AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM players AS P  INNER JOIN (SELECT winner_id, COUNT(*) AS match_count              FROM matches              GROUP BY winner_id              ORDER BY match_count DESC              LIMIT 1) AS M ON P.player_id = M.winner_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE R.ranking_date = (SELECT MAX(ranking_date) FROM rankings WHERE player_id = M.winner_id)
SELECT P.name, R.ranking_points  FROM players AS P  JOIN rankings AS R ON P.player_id = R.player_id  WHERE P.player_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT R.winner_name, R.ranking_points FROM rankings AS R INNER JOIN (SELECT winner_id, COUNT(*) AS match_count FROM matches GROUP BY winner_id ORDER BY match_count DESC LIMIT 1) AS M ON R.player_id = M.winner_id
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  INNER JOIN (SELECT winner_id, COUNT(*) AS match_count              FROM matches              GROUP BY winner_id              ORDER BY match_count DESC LIMIT 1) AS W ON M.winner_id = W.winner_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  ORDER BY R.ranking_date DESC LIMIT 1
SELECT T1.winner_name, T2.ranking_points  FROM matches AS T1  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id  INNER JOIN rankings AS T2 ON T3.player_id = T2.player_id  GROUP BY T1.winner_id  ORDER BY COUNT(T1.winner_id) DESC  LIMIT 1
SELECT T1.winner_name, T2.ranking_points  FROM (SELECT winner_id, COUNT(*) AS match_count        FROM matches        GROUP BY winner_id        ORDER BY match_count DESC        LIMIT 1) AS T3  INNER JOIN players AS T1 ON T3.winner_id = T1.player_id  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  ORDER BY T2.ranking_date DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name, T1.winner_rank_points  FROM (SELECT winner_id, COUNT(*) AS match_count        FROM matches        GROUP BY winner_id        ORDER BY match_count DESC        LIMIT 1) AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id
SELECT T2.first_name || ' ' || T2.last_name AS winner_name, T3.ranking_points  FROM (SELECT winner_id, COUNT(*) AS match_count        FROM matches        GROUP BY winner_id        ORDER BY match_count DESC        LIMIT 1) AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T1.winner_id = T3.player_id  ORDER BY T3.ranking_date DESC  LIMIT 1
SELECT T1.winner_id, COUNT(*) AS match_count, T2.ranking_points  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  GROUP BY T1.winner_id  ORDER BY match_count DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name, T3.ranking_points  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  GROUP BY T1.winner_id  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM (SELECT winner_id, COUNT(*) AS win_count        FROM matches        GROUP BY winner_id        ORDER BY win_count DESC        LIMIT 1) AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  ORDER BY R.ranking_date DESC  LIMIT 1
SELECT P.first_name || ' ' || P.last_name AS winner_name, R.ranking_points  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY M.winner_id  ORDER BY COUNT(M.match_num) DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name, T3.ranking_points  FROM (SELECT winner_id, COUNT(*) AS match_count        FROM matches        GROUP BY winner_id        ORDER BY match_count DESC        LIMIT 1) AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  ORDER BY T3.ranking_date DESC  LIMIT 1

SELECT T1.winner_name  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T2.ranking_points DESC  LIMIT 1;
SELECT T2.first_name, T2.last_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T1.winner_rank_points DESC LIMIT 1
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T1.winner_rank_points = (SELECT MAX(T3.ranking_points)                               FROM rankings AS T3                               INNER JOIN matches AS T4 ON T3.player_id = T4.winner_id                               WHERE T4.tourney_name = 'Australian Open')
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T2.winner_name FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' AND T2.ranking_points = (SELECT MAX(ranking_points) FROM rankings)
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T3.ranking_points = (SELECT MAX(ranking_points) FROM rankings WHERE player_id = T2.player_id)
SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T1.winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T3.ranking_points DESC LIMIT 1
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T2.first_name, T2.last_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T1.winner_name  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T2.ranking_points = (SELECT MAX(ranking_points) FROM rankings WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open'))
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T1.winner_rank_points DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' AND T1.winner_rank_points = (     SELECT MAX(winner_rank_points)     FROM matches     WHERE tourney_name = 'Australian Open' )
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

SELECT T1.winner_name FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1
SELECT T1.winner_name FROM matches AS T1 WHERE T1.tourney_name = 'Australian Open' AND T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T1.winner_name FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1
SELECT winner_name FROM matches INNER JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T3.ranking_points DESC LIMIT 1
SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T1.winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches INNER JOIN rankings ON matches.winner_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1
SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T3.ranking_points DESC LIMIT 1
SELECT T1.winner_name FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1
SELECT T1.winner_name FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1
SELECT T1.first_name, T1.last_name  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  INNER JOIN matches AS T3 ON T1.player_id = T3.winner_id  WHERE T3.tourney_name = 'Australian Open'  ORDER BY T2.ranking_points DESC  LIMIT 1
SELECT T1.winner_name  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T2.ranking_points DESC  LIMIT 1
SELECT T3.first_name || ' ' || T3.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'Australian Open'  AND T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T1.winner_name  FROM matches AS T2  INNER JOIN players AS T1 ON T2.winner_id = T1.player_id  INNER JOIN rankings AS T3 ON T1.player_id = T3.player_id  WHERE T2.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T1.winner_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT T2.first_name || ' ' || T2.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T1.winner_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')
SELECT T3.first_name || ' ' || T3.last_name AS winner_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  WHERE T1.tourney_name = 'Australian Open'  ORDER BY T3.ranking_points DESC  LIMIT 1

SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT T1.winner_name, T2.loser_name  FROM matches AS M  INNER JOIN players AS T1 ON M.winner_id = T1.player_id  INNER JOIN players AS T2 ON M.loser_id = T2.player_id  WHERE M.minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.first_name AS winner_first_name, T1.last_name AS winner_last_name, T2.first_name AS loser_first_name, T2.last_name AS loser_last_name FROM matches AS M INNER JOIN players AS T1 ON M.winner_id = T1.player_id INNER JOIN players AS T2 ON M.loser_id = T2.player_id WHERE M.minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.winner_name, T2.loser_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.loser_id = T2.player_id WHERE T1.minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)

SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT W.first_name || ' ' || W.last_name AS winner_name, L.first_name || ' ' || L.last_name AS loser_name FROM matches AS M INNER JOIN players AS W ON M.winner_id = W.player_id INNER JOIN players AS L ON M.loser_id = L.player_id WHERE M.minutes = (SELECT MAX(minutes) FROM matches)
SELECT T2.name AS winner_name, T3.name AS loser_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN players AS T3 ON T1.loser_id = T3.player_id WHERE T1.minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT T1.winner_name, T2.loser_name  FROM matches AS M  INNER JOIN players AS T1 ON M.winner_id = T1.player_id  INNER JOIN players AS T2 ON M.loser_id = T2.player_id  WHERE M.minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.winner_name, T1.loser_name  FROM matches AS T  INNER JOIN players AS T1 ON T.winner_id = T1.player_id  INNER JOIN players AS T2 ON T.loser_id = T2.player_id  WHERE T.minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.winner_name, T2.loser_name  FROM matches AS M  INNER JOIN players AS T1 ON M.winner_id = T1.player_id  INNER JOIN players AS T2 ON M.loser_id = T2.player_id  WHERE M.minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT T1.winner_name, T1.loser_name  FROM matches AS T2  INNER JOIN players AS T1 ON T2.winner_id = T1.player_id OR T2.loser_id = T1.player_id  WHERE T2.minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.winner_name, T2.last_name AS loser_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.loser_id = T2.player_id  WHERE T1.minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.winner_name, T2.loser_name  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN players AS T3 ON T1.loser_id = T3.player_id  WHERE T1.minutes = (SELECT MAX(minutes) FROM matches)
SELECT T1.first_name AS winner_first_name, T1.last_name AS winner_last_name, T2.first_name AS loser_first_name, T2.last_name AS loser_last_name  FROM matches AS M  INNER JOIN players AS T1 ON M.winner_id = T1.player_id  INNER JOIN players AS T2 ON M.loser_id = T2.player_id  WHERE M.minutes = (SELECT MAX(minutes) FROM matches);

SELECT T2.first_name, AVG(T1.ranking) FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T2.first_name, AVG(T1.ranking) FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name
SELECT T2.first_name, AVG(T1.ranking) FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM rankings INNER JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T2.first_name, AVG(T1.ranking) AS average_ranking  FROM rankings AS T1  INNER JOIN players AS T2 ON T1.player_id = T2.player_id  GROUP BY T2.first_name
SELECT P.first_name, AVG(R.ranking) AS average_ranking  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY P.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.player_id, T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name, T1.player_id
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T2.first_name, AVG(T1.ranking) AS average_ranking  FROM rankings AS T1  INNER JOIN players AS T2 ON T1.player_id = T2.player_id  GROUP BY T2.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name

SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, AVG(T2.ranking) AS average_ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name

SELECT T2.first_name, SUM(T1.ranking_points) FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T2.first_name, SUM(T1.ranking_points) FROM rankings AS T1 INNER JOIN players AS T2 ON T1.player_id = T2.player_id GROUP BY T2.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT P.first_name, SUM(R.ranking_points) AS total_ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY P.player_id, P.first_name
SELECT P.first_name, SUM(R.ranking_points) AS total_ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY P.player_id, P.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.player_id, T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT P.first_name, SUM(R.ranking_points) AS total_ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY P.player_id, P.first_name
SELECT P.first_name, SUM(R.ranking_points) AS total_ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY P.player_id, P.first_name
SELECT P.first_name, SUM(R.ranking_points) AS total_ranking_points  FROM players AS P  INNER JOIN rankings AS R ON P.player_id = R.player_id  GROUP BY P.player_id
SELECT T2.first_name, SUM(T1.ranking_points) AS total_ranking_points  FROM rankings AS T1  INNER JOIN players AS T2 ON T1.player_id = T2.player_id  GROUP BY T2.first_name

SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  GROUP BY T1.first_name

SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code

SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code

SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1

SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;

SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50

SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50

SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date

SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(tours) AS total_tours FROM rankings GROUP BY ranking_date

SELECT year, COUNT(*) FROM matches GROUP BY year;
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) FROM matches GROUP BY STRFTIME('%Y', tourney_date)
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year

SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(match_num) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year;
SELECT STRFTIME('%Y', tourney_date) AS year, COUNT(*) AS match_count FROM matches GROUP BY year

SELECT T2.first_name, T2.last_name, T1.winner_rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T2.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T1.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank FROM matches AS T2 INNER JOIN players AS T1 ON T2.winner_id = T1.player_id ORDER BY T1.birth_date DESC LIMIT 3
SELECT T3.first_name, T3.last_name, T3.ranking FROM matches AS T1 INNER JOIN players AS T3 ON T1.winner_id = T3.player_id ORDER BY T3.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T1.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T2.rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T1.ranking FROM matches AS T3 INNER JOIN players AS T2 ON T3.winner_id = T2.player_id INNER JOIN rankings AS T1 ON T3.winner_id = T1.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T2.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T1.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name || ' ' || T1.last_name AS winner_name, T2.ranking  FROM matches AS M  INNER JOIN players AS T1 ON M.winner_id = T1.player_id  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name || ' ' || T1.last_name AS winner_name, T2.winner_rank  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank FROM matches AS T2  INNER JOIN players AS T1 ON T2.winner_id = T1.player_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking  FROM players AS T1  INNER JOIN matches AS T3 ON T1.player_id = T3.winner_id  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name || ' ' || T1.last_name AS winner_name, T2.winner_rank  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.winner_name, T2.ranking  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  ORDER BY T2.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T1.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3

SELECT T2.first_name, T2.last_name, T3.ranking  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id  ORDER BY T2.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T1.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T1.winner_rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T1.winner_name, T2.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T1.ranking FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T1.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking FROM players AS T1 INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T1.player_id IN (SELECT winner_id FROM matches) ORDER BY T1.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T1.winner_rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T1.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T1.winner_rank FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T2.first_name, T2.last_name, T3.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id INNER JOIN rankings AS T3 ON T2.player_id = T3.player_id ORDER BY T2.birth_date DESC LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking  FROM players AS T1  INNER JOIN matches AS T3 ON T1.player_id = T3.winner_id  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name || ' ' || T1.last_name AS winner_name, T2.ranking  FROM players AS T1  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  INNER JOIN matches AS T3 ON T2.player_id = T3.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T2.first_name, T2.last_name, T1.winner_rank  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  ORDER BY T2.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T2.first_name, T2.last_name, T1.winner_rank  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  ORDER BY T2.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.ranking  FROM matches AS T3  INNER JOIN players AS T1 ON T3.winner_id = T1.player_id  INNER JOIN rankings AS T2 ON T1.player_id = T2.player_id  ORDER BY STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.birth_date) ASC  LIMIT 3
SELECT T1.winner_name, T2.ranking FROM matches AS T1 INNER JOIN players AS T3 ON T1.winner_id = T3.player_id INNER JOIN rankings AS T2 ON T3.player_id = T2.player_id ORDER BY T3.birth_date DESC LIMIT 3
SELECT T1.first_name || ' ' || T1.last_name AS winner_name, T2.winner_rank  FROM matches AS T2  INNER JOIN players AS T1 ON T2.winner_id = T1.player_id  ORDER BY T1.birth_date DESC  LIMIT 3
SELECT T1.first_name, T1.last_name, T2.winner_rank  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  ORDER BY T1.birth_date DESC  LIMIT 3

SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'L' AND T1.tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT M.winner_id)  FROM matches AS M  INNER JOIN players AS P ON M.winner_id = P.player_id  WHERE M.tourney_name = 'WTA Championships' AND P.hand = 'L'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 WHERE T1.tourney_name = 'WTA Championships' AND T1.winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id)  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id)  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_name)  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id)  FROM matches AS T1  WHERE T1.tourney_name = 'WTA Championships' AND T1.winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id)  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id)  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'

SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'L' AND T1.tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches AS M INNER JOIN players AS P ON M.winner_id = P.player_id WHERE P.hand = 'L' AND M.tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'L' AND T1.tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id)  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T2.hand = 'L' AND T1.tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'

SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id INNER JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE T3.ranking_points = (SELECT MAX(ranking_points) FROM rankings)
SELECT T2.first_name, T2.country_code, T2.birth_date FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date FROM players AS T2 WHERE T2.player_id = (SELECT T1.winner_id FROM matches AS T1 ORDER BY T1.winner_rank_points DESC LIMIT 1)
SELECT T2.first_name, T2.country_code, T2.birth_date FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT P.first_name, P.country_code, P.birth_date  FROM players AS P  INNER JOIN matches AS M ON P.player_id = M.winner_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE R.ranking_points = (SELECT MAX(ranking_points) FROM rankings)
SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_rank_points = (SELECT MAX(T3.ranking_points) FROM rankings AS T3 INNER JOIN matches AS T4 ON T3.player_id = T4.winner_id)
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  WHERE T1.player_id = (SELECT T2.winner_id                        FROM matches AS T2                        INNER JOIN rankings AS T3 ON T2.winner_id = T3.player_id                        ORDER BY T3.ranking_points DESC                        LIMIT 1)
SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT P.first_name, P.country_code, P.birth_date  FROM players AS P  INNER JOIN matches AS M ON P.player_id = M.winner_id  INNER JOIN rankings AS R ON P.player_id = R.player_id  WHERE R.ranking_points = (SELECT MAX(ranking_points) FROM rankings)
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T3.first_name, T3.country_code, T3.birth_date  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  INNER JOIN players AS T3 ON T1.winner_id = T3.player_id  WHERE T2.ranking_points = (SELECT MAX(ranking_points) FROM rankings)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM players AS T2  INNER JOIN matches AS T1 ON T2.player_id = T1.winner_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T3.first_name, T1.country_code, T3.birth_date  FROM matches AS T1  INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id  INNER JOIN players AS T3 ON T2.player_id = T3.player_id  WHERE T2.ranking_points = (SELECT MAX(ranking_points) FROM rankings)

SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN (SELECT winner_id, SUM(winner_rank_points) AS total_points FROM matches GROUP BY winner_id ORDER BY total_points DESC LIMIT 1) AS T2 ON T1.player_id = T2.winner_id
SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date FROM players AS T2 INNER JOIN matches AS T1 ON T1.winner_id = T2.player_id WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY SUM(winner_rank_points) DESC LIMIT 1)
SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 WHERE player_id = (SELECT winner_id FROM matches ORDER BY winner_rank_points DESC LIMIT 1)
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN (     SELECT winner_id, SUM(winner_rank_points) AS total_points      FROM matches      GROUP BY winner_id  ) AS T2 ON T1.player_id = T2.winner_id  WHERE T2.total_points = (SELECT MAX(total_points) FROM (     SELECT SUM(winner_rank_points) AS total_points      FROM matches      GROUP BY winner_id  ))
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM players AS T2  INNER JOIN (SELECT winner_id, SUM(winner_rank_points) AS total_points              FROM matches              GROUP BY winner_id              ORDER BY total_points DESC              LIMIT 1) AS T1  ON T1.winner_id = T2.player_id
SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 WHERE player_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY SUM(winner_rank_points) DESC LIMIT 1)
SELECT T1.first_name, T1.country_code, T2.birth_date FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT p.first_name, p.country_code, p.birth_date  FROM players AS p  INNER JOIN (SELECT winner_id, SUM(winner_rank_points) AS total_points              FROM matches              GROUP BY winner_id              ORDER BY total_points DESC              LIMIT 1) AS m  ON p.player_id = m.winner_id
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN (SELECT winner_id, SUM(winner_rank_points) AS total_points              FROM matches              GROUP BY winner_id              ORDER BY total_points DESC              LIMIT 1) AS T2  ON T1.player_id = T2.winner_id
SELECT P.first_name, P.country_code, P.birth_date  FROM players AS P  INNER JOIN (     SELECT winner_id, SUM(winner_rank_points) AS total_points      FROM matches      GROUP BY winner_id      ORDER BY total_points DESC      LIMIT 1 ) AS M ON P.player_id = M.winner_id
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN (SELECT winner_id, SUM(winner_rank_points) AS total_points              FROM matches              GROUP BY winner_id              ORDER BY total_points DESC              LIMIT 1) AS T2  ON T1.player_id = T2.winner_id;
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM players AS T2  INNER JOIN (     SELECT winner_id, SUM(winner_rank_points) AS total_rank_points      FROM matches      GROUP BY winner_id      ORDER BY total_rank_points DESC      LIMIT 1 ) AS T1 ON T2.player_id = T1.winner_id
SELECT P.first_name, P.country_code, P.birth_date  FROM players AS P  WHERE P.player_id = (SELECT M.winner_id                       FROM matches AS M                       ORDER BY M.winner_rank_points DESC                       LIMIT 1)
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN (      SELECT winner_id, SUM(winner_rank_points) AS total_points      FROM matches      GROUP BY winner_id      ORDER BY total_points DESC      LIMIT 1  ) AS T2  ON T1.player_id = T2.winner_id
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T2.first_name, T2.country_code, T2.birth_date  FROM matches AS T1  INNER JOIN players AS T2 ON T1.winner_id = T2.player_id  WHERE T1.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN (      SELECT winner_id, SUM(winner_rank_points) AS total_points      FROM matches      GROUP BY winner_id  ) AS T2 ON T1.player_id = T2.winner_id  ORDER BY T2.total_points DESC  LIMIT 1
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  INNER JOIN (      SELECT winner_id, SUM(winner_rank_points) AS total_points      FROM matches      GROUP BY winner_id      ORDER BY total_points DESC      LIMIT 1  ) AS T2 ON T1.player_id = T2.winner_id

SELECT COUNT(player_id), hand FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players WHERE hand IS NOT NULL GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS number_of_players FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand

SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand

SELECT COUNT(id) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';

SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name, tonnage FROM ship ORDER BY name DESC

SELECT name, date, result FROM battle
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle;
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle
SELECT name, date, result FROM battle;

SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id
SELECT MAX(T1.killed) AS max_death_toll, MIN(T1.killed) AS min_death_toll FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id INNER JOIN battle AS T3 ON T2.lost_in_battle = T3.id GROUP BY T3.name
SELECT MAX(killed), MIN(killed) FROM death;
SELECT MAX(killed), MIN(killed) FROM death;
SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id
SELECT MAX(killed) AS max_deaths, MIN(killed) AS min_deaths FROM death GROUP BY caused_by_ship_id
SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id
SELECT T1.id, MAX(T1.killed) AS max_killed, MIN(T1.killed) AS min_killed FROM death AS T1 GROUP BY T1.id
SELECT id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY id
SELECT MAX(killed), MIN(killed) FROM death;
SELECT battle.id, MAX(death.killed) AS max_death_toll, MIN(death.killed) AS min_death_toll FROM death INNER JOIN battle ON death.id = battle.id GROUP BY battle.id
SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death;
SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death
SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death
SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY id;
SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id
SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id
SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death
SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death
SELECT caused_by_ship_id, MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id

SELECT AVG(injured) FROM death WHERE injured IS NOT NULL;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death WHERE injured IS NOT NULL;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death WHERE injured IS NOT NULL;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;
SELECT AVG(injured) FROM death;

SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.injured, T1.killed FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.injured, T2.killed FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT D.killed, D.injured FROM ship AS S INNER JOIN death AS D ON S.id = D.caused_by_ship_id WHERE S.tonnage = 't'
SELECT T1.killed, T1.injured  FROM death AS T1  INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  WHERE T2.tonnage = 't'
SELECT D.killed, D.injured  FROM death AS D  INNER JOIN ship AS S ON D.caused_by_ship_id = S.id  WHERE S.tonnage = 't'
SELECT D.killed, D.injured  FROM death AS D  INNER JOIN ship AS S ON D.caused_by_ship_id = S.id  WHERE S.tonnage = 't'
SELECT D.killed, D.injured  FROM death AS D  INNER JOIN ship AS S ON D.caused_by_ship_id = S.id  WHERE S.tonnage = 't'
SELECT T1.killed, T1.injured FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'
SELECT T1.killed, T1.injured  FROM death AS T1  INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  WHERE T2.tonnage = 't'
SELECT D.killed, D.injured  FROM ship AS S  INNER JOIN death AS D ON S.id = D.caused_by_ship_id  WHERE S.tonnage = 't'
SELECT T1.killed, T1.injured  FROM death AS T1  INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  WHERE T2.tonnage = 't'
SELECT T2.killed, T2.injured  FROM ship AS T1  INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id  WHERE T1.tonnage = 't'

SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril';
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril';
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril';
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril';
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril';
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril';
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'

SELECT DISTINCT T3.id, T3.name FROM battle AS T3 INNER JOIN ship AS T2 ON T3.id = T2.lost_in_battle INNER JOIN death AS T1 ON T2.id = T1.caused_by_ship_id WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T2.id, T2.name FROM battle AS T2 INNER JOIN ship AS T1 ON T2.id = T1.lost_in_battle WHERE T1.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle INNER JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T2.id, T2.name  FROM ship AS T1  INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id  WHERE T1.ship_type = 'Brig'
SELECT DISTINCT T3.id, T3.name FROM battle AS T3 INNER JOIN death AS T2 ON T3.id = T2.caused_by_ship_id INNER JOIN ship AS T1 ON T2.caused_by_ship_id = T1.id WHERE T1.ship_type = 'Brig'
SELECT DISTINCT T3.id, T3.name FROM battle AS T3 INNER JOIN death AS T2 ON T3.id = T2.caused_by_ship_id INNER JOIN ship AS T1 ON T2.caused_by_ship_id = T1.id WHERE T1.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id INNER JOIN ship AS T3 ON T2.caused_by_ship_id = T3.id WHERE T3.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name  FROM battle AS T1  INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.ship_type = 'Brig'
SELECT DISTINCT T3.id, T3.name  FROM ship AS T1  INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id  WHERE T1.ship_type = 'Brig'
SELECT DISTINCT T2.id, T2.name FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T1.ship_type = 'Brig'
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'

SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.lost_in_battle GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.lost_in_battle GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T3.id, T3.name FROM battle AS T3 INNER JOIN death AS T1 ON T3.id = T1.caused_by_ship_id GROUP BY T3.id, T3.name HAVING SUM(T1.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.lost_in_battle GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle INNER JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T3.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name  FROM battle AS T1  INNER JOIN death AS T2 ON T1.id = T2.lost_in_battle  GROUP BY T1.id, T1.name  HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T1.id, T1.name FROM battle AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10
SELECT T2.id, T2.name  FROM battle AS T2  INNER JOIN (     SELECT caused_by_ship_id, SUM(killed) AS total_killed      FROM death      GROUP BY caused_by_ship_id      HAVING total_killed > 10 ) AS T1 ON T2.id = T1.caused_by_ship_id
SELECT T1.id, T1.name  FROM battle AS T1  INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id  GROUP BY T1.id, T1.name  HAVING SUM(T2.killed) > 10
SELECT T3.id, T3.name FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id INNER JOIN battle AS T3 ON T2.lost_in_battle = T3.id GROUP BY T3.id, T3.name HAVING SUM(T1.killed) > 10
SELECT T2.id, T2.name  FROM battle AS T2  INNER JOIN (SELECT caused_by_ship_id, SUM(killed) AS total_killed              FROM death              GROUP BY caused_by_ship_id              HAVING total_killed > 10) AS T1  ON T1.caused_by_ship_id = T2.id
SELECT T2.id, T2.name  FROM battle AS T2  INNER JOIN (SELECT caused_by_ship_id, SUM(killed) AS total_killed              FROM death              GROUP BY caused_by_ship_id              HAVING total_killed > 10) AS T1  ON T1.caused_by_ship_id = T2.id
SELECT T1.id, T1.name  FROM battle AS T1  INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id  GROUP BY T1.id, T1.name  HAVING SUM(T2.killed) > 10
SELECT T2.id, T2.name  FROM battle AS T2  INNER JOIN (SELECT caused_by_ship_id, SUM(killed) AS total_killed              FROM death              GROUP BY caused_by_ship_id              HAVING total_killed > 10) AS T1  ON T2.id = T1.caused_by_ship_id

SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T2.id, T2.name FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id, T2.name ORDER BY SUM(T1.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T2.id, T2.name FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id, T2.name ORDER BY SUM(T1.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN (SELECT caused_by_ship_id, SUM(injured) AS total_injuries FROM death GROUP BY caused_by_ship_id) AS T2 ON T1.id = T2.caused_by_ship_id ORDER BY total_injuries DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN (SELECT caused_by_ship_id, SUM(injured) AS total_injuries FROM death GROUP BY caused_by_ship_id ORDER BY total_injuries DESC LIMIT 1) AS T2 ON T1.id = T2.caused_by_ship_id
SELECT T1.id, T1.name  FROM ship AS T1  INNER JOIN (SELECT caused_by_ship_id, SUM(injured) AS total_injuries              FROM death              GROUP BY caused_by_ship_id              ORDER BY total_injuries DESC              LIMIT 1) AS T2  ON T1.id = T2.caused_by_ship_id
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T2.id, T2.name  FROM ship AS T2  INNER JOIN (SELECT caused_by_ship_id, SUM(injured) AS total_injuries              FROM death              GROUP BY caused_by_ship_id              ORDER BY total_injuries DESC              LIMIT 1) AS T1  ON T1.caused_by_ship_id = T2.id
SELECT T2.id, T2.name FROM death AS T1 INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id, T2.name ORDER BY SUM(T1.injured) DESC LIMIT 1
SELECT T2.id, T2.name  FROM ship AS T2  INNER JOIN death AS T1 ON T1.caused_by_ship_id = T2.id  GROUP BY T2.id, T2.name  ORDER BY SUM(T1.injured) DESC  LIMIT 1
SELECT T1.id, T1.name  FROM ship AS T1  INNER JOIN (SELECT caused_by_ship_id, SUM(injured) AS total_injuries              FROM death              GROUP BY caused_by_ship_id) AS T2  ON T1.id = T2.caused_by_ship_id  ORDER BY T2.total_injuries DESC  LIMIT 1
SELECT T1.caused_by_ship_id, T2.name  FROM death AS T1  INNER JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id  GROUP BY T1.caused_by_ship_id, T2.name  ORDER BY SUM(T1.injured) DESC  LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T1.id, T1.name FROM ship AS T1 INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT T2.id, T2.name FROM ship AS T2 INNER JOIN (SELECT caused_by_ship_id, SUM(injured) AS total_injuries FROM death GROUP BY caused_by_ship_id) AS T1 ON T1.caused_by_ship_id = T2.id ORDER BY total_injuries DESC LIMIT 1

SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'

SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT COUNT(DISTINCT result) FROM battle;

SELECT COUNT(*) FROM battle AS B WHERE NOT EXISTS (SELECT 1 FROM ship AS S WHERE S.lost_in_battle = B.id AND S.tonnage = '225')
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 WHERE T1.id NOT IN (SELECT DISTINCT T2.lost_in_battle FROM ship AS T2 WHERE T2.tonnage = '225')
SELECT COUNT(T1.id) FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.tonnage != '225' OR T2.tonnage IS NULL
SELECT COUNT(DISTINCT B.id) FROM battle AS B LEFT JOIN death AS D ON B.id = D.battle_id LEFT JOIN ship AS S ON D.caused_by_ship_id = S.id AND S.tonnage = '225' WHERE S.id IS NULL
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 WHERE NOT EXISTS (SELECT 1 FROM ship AS T2 WHERE T2.lost_in_battle = T1.id AND T2.tonnage = '225')
SELECT COUNT(*) FROM battle AS T1 WHERE NOT EXISTS (SELECT 1 FROM ship AS T2 WHERE T2.lost_in_battle = T1.id AND T2.tonnage = '225');
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle AND T2.tonnage = '225' WHERE T2.id IS NULL
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 WHERE NOT EXISTS (SELECT 1 FROM ship AS T2 WHERE T2.lost_in_battle = T1.id AND T2.tonnage = '225')
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle AND T2.tonnage = '225' WHERE T2.id IS NULL
SELECT COUNT(*) FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle AND T2.tonnage = '225' WHERE T2.id IS NULL;
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = '225')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT DISTINCT lost_in_battle FROM ship WHERE tonnage = '225')
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.tonnage != '225' OR T2.tonnage IS NULL
SELECT COUNT(DISTINCT T1.id)  FROM battle AS T1  WHERE T1.id NOT IN (     SELECT T2.lost_in_battle      FROM ship AS T2      WHERE T2.tonnage = '225' )
SELECT COUNT(DISTINCT T1.id)  FROM battle AS T1  WHERE T1.id NOT IN (     SELECT DISTINCT T3.lost_in_battle      FROM ship AS T2      INNER JOIN death AS T3 ON T2.id = T3.caused_by_ship_id      WHERE T2.tonnage = '225' )
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle AND T2.tonnage = '225' GROUP BY T1.id HAVING COUNT(T2.id) = 0
SELECT COUNT(DISTINCT T1.id) FROM battle AS T1 WHERE T1.id NOT IN (SELECT DISTINCT T2.lost_in_battle FROM ship AS T3 INNER JOIN death AS T2 ON T3.id = T2.caused_by_ship_id WHERE T3.tonnage = '225')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT DISTINCT lost_in_battle FROM ship INNER JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = '225')
SELECT COUNT(DISTINCT T1.id)  FROM battle AS T1  LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle AND T2.tonnage = '225'  GROUP BY T1.id  HAVING COUNT(T2.id) = 0
SELECT COUNT(DISTINCT B.id)  FROM battle AS B  WHERE NOT EXISTS (     SELECT 1      FROM death AS D      INNER JOIN ship AS S ON D.caused_by_ship_id = S.id      WHERE D.date IS NOT NULL AND S.tonnage = '225' AND D.business_id = B.id )

SELECT T3.name, T3.date FROM ship AS T1 INNER JOIN battle AS T3 ON T1.lost_in_battle = T3.id WHERE T1.name IN ('Lettice', 'HMS Atalanta') GROUP BY T3.name, T3.date HAVING COUNT(DISTINCT T1.name) = 2
SELECT T2.name, T2.date FROM battle AS T2 INNER JOIN ship AS T1 ON T1.lost_in_battle = T2.id WHERE T1.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' OR T2.name = 'HMS Atalanta'
SELECT T2.name, T2.date FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T1.name IN ('Lettice', 'HMS Atalanta') GROUP BY T2.name, T2.date HAVING COUNT(DISTINCT T1.name) = 2
SELECT T3.name, T3.date FROM battle AS T3 INNER JOIN ship AS T2 ON T3.id = T2.lost_in_battle INNER JOIN death AS T1 ON T2.id = T1.caused_by_ship_id WHERE T2.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name IN ('Lettice', 'HMS Atalanta')
SELECT T3.name, T3.date FROM battle AS T3 INNER JOIN ship AS T2 ON T3.id = T2.lost_in_battle WHERE T2.name IN ('Lettice', 'HMS Atalanta')
SELECT T2.name, T2.date FROM battle AS T2 INNER JOIN ship AS T1 ON T1.lost_in_battle = T2.id WHERE T1.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date FROM battle AS T1 WHERE T1.id IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.name IN ('Lettice', 'HMS Atalanta'))
SELECT DISTINCT B.name, B.date  FROM battle AS B  INNER JOIN death AS D ON B.id = D.lost_in_battle  INNER JOIN ship AS S ON D.caused_by_ship_id = S.id  WHERE S.name IN ('Lettice', 'HMS Atalanta')  GROUP BY B.id  HAVING COUNT(DISTINCT S.name) = 2
SELECT B.name, B.date  FROM ship AS S  INNER JOIN battle AS B ON S.lost_in_battle = B.id  WHERE S.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date  FROM battle AS T1  INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.name IN ('Lettice', 'HMS Atalanta')  GROUP BY T1.id  HAVING COUNT(DISTINCT T2.name) = 2
SELECT T2.name, T2.date  FROM ship AS T1  INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id  WHERE T1.name IN ('Lettice', 'HMS Atalanta')  GROUP BY T2.id  HAVING COUNT(T1.name) = 2
SELECT DISTINCT B.name, B.date  FROM ship AS S  INNER JOIN battle AS B ON S.lost_in_battle = B.id  WHERE S.name IN ('Lettice', 'HMS Atalanta')
SELECT T2.name, T2.date  FROM ship AS T1  INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id  WHERE T1.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date  FROM battle AS T1  INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.name IN ('Lettice', 'HMS Atalanta')
SELECT T1.name, T1.date  FROM battle AS T1  INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.name IN ('Lettice', 'HMS Atalanta')
SELECT DISTINCT B.name, B.date  FROM battle AS B  JOIN death AS D ON B.id = D.caused_by_ship_id  JOIN ship AS S ON D.caused_by_ship_id = S.id  WHERE S.name IN ('Lettice', 'HMS Atalanta')  GROUP BY B.id  HAVING COUNT(DISTINCT S.name) = 2
SELECT T3.name, T3.date  FROM ship AS T1  INNER JOIN death AS T2 ON T1.id = T2.caused_by_ship_id  INNER JOIN battle AS T3 ON T1.lost_in_battle = T3.id  WHERE T1.name IN ('Lettice', 'HMS Atalanta')

SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel');
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel' AND T2.id IS NULL
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.id IS NULL AND T2.location = 'English Channel'
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.location = 'English Channel' AND T2.id IS NULL
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.id IS NULL OR T2.location != 'English Channel'
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  WHERE T1.id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  WHERE T1.id NOT IN (SELECT DISTINCT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.location != 'English Channel' OR T2.location IS NULL
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  LEFT JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.id IS NULL AND T2.location = 'English Channel'
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  WHERE T1.id NOT IN (SELECT T2.lost_in_battle FROM ship AS T2 WHERE T2.location = 'English Channel')
SELECT T1.name, T1.result, T1.bulgarian_commander  FROM battle AS T1  INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.location = 'English Channel' AND T2.lost_in_battle IS NULL
SELECT b.name, b.result, b.bulgarian_commander  FROM battle AS b  LEFT JOIN death AS d ON b.id = d.caused_by_ship_id  LEFT JOIN ship AS s ON d.caused_by_ship_id = s.id  WHERE s.id IS NULL AND s.location = 'English Channel'

SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'
SELECT note FROM death WHERE note LIKE '%East%'

SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses
SELECT line_1, line_2 FROM Addresses
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;

SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses
SELECT line_1, line_2 FROM Addresses
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;
SELECT line_1, line_2 FROM Addresses;

SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;

SELECT COUNT(DISTINCT course_id) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(DISTINCT course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(course_id) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;
SELECT COUNT(*) FROM Courses;

SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';

SELECT course_description FROM Courses WHERE course_name LIKE '%math%'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%'
SELECT course_description FROM Courses WHERE course_name LIKE '%math%'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math'
SELECT course_description FROM Courses WHERE course_name = 'math'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%'
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%'

SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';

SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_name, T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_name, T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT D.department_id, D.department_name FROM Departments AS D INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id GROUP BY D.department_id, D.department_name ORDER BY COUNT(DP.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name, T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_name, T2.department_id  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT D.department_name, D.department_id  FROM Degree_Programs AS DP  INNER JOIN Departments AS D ON DP.department_id = D.department_id  GROUP BY D.department_id  ORDER BY COUNT(DP.degree_program_id) DESC  LIMIT 1
SELECT T1.department_name, T1.department_id  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_id, T1.department_name  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T2.department_name, T2.department_id  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T1.department_name, T1.department_id  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_name, T1.department_id  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T1.department_name, T1.department_id  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_id, T1.department_name  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T1.department_name, T1.department_id  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_id, T1.department_name  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T1.department_name, T1.department_id  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_name, T1.department_id  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T2.department_name, T2.department_id  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1

SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT D.department_name, D.department_id FROM Departments AS D INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id GROUP BY D.department_id ORDER BY COUNT(DP.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT D.department_id, D.department_name  FROM Departments AS D  INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id  GROUP BY D.department_id, D.department_name  ORDER BY COUNT(DP.degree_program_id) DESC  LIMIT 1
SELECT T1.department_id, T1.department_name FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id, T1.department_name ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T1.department_name, T1.department_id FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.degree_program_id) DESC LIMIT 1
SELECT T2.department_name, T2.department_id FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(T1.degree_program_id) DESC LIMIT 1
SELECT T1.department_id, T1.department_name  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_id, T1.department_name  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T1.department_id, T1.department_name  FROM Departments AS T1  INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_id  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2  ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_name, T2.department_id  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_id  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1
SELECT T2.department_id, T2.department_name  FROM Degree_Programs AS T1  INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id  GROUP BY T2.department_id, T2.department_name  ORDER BY COUNT(T1.degree_program_id) DESC  LIMIT 1

SELECT COUNT(DISTINCT department_id) FROM Degree_Programs WHERE department_id IS NOT NULL;
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs WHERE degree_program_id IS NOT NULL;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs WHERE department_id IS NOT NULL;
SELECT COUNT(DISTINCT D.department_id) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs WHERE department_id IS NOT NULL;
SELECT COUNT(DISTINCT D.department_id) FROM Departments AS D INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id
SELECT COUNT(DISTINCT T1.department_name) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id;
SELECT COUNT(DISTINCT D.department_id) FROM Departments D INNER JOIN Degree_Programs DP ON D.department_id = DP.department_id
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
SELECT COUNT(DISTINCT D.department_id) FROM Departments AS D INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id
SELECT COUNT(DISTINCT T1.department_id) FROM Degree_Programs AS T1
SELECT COUNT(DISTINCT D.department_id) FROM Departments AS D INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 INNER JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id

SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs WHERE department_id IS NOT NULL;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
SELECT COUNT(DISTINCT T1.department_id) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT D.department_id) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id
SELECT COUNT(DISTINCT D.department_id) FROM Departments AS D INNER JOIN Degree_Programs AS DP ON D.department_id = DP.department_id;
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
SELECT COUNT(DISTINCT T1.department_id) FROM Degree_Programs AS T1

SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs

SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs

SELECT COUNT(T1.degree_program_id) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_description = 'engineering');
SELECT COUNT(*) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(T1.degree_program_id) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(DP.degree_program_id) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(DISTINCT T1.degree_program_id) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')

SELECT COUNT(degree_program_id) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');
SELECT COUNT(DP.degree_program_id) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');
SELECT COUNT(T1.degree_program_id) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs AS T1 WHERE T1.department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_description = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');
SELECT COUNT(*) FROM Degree_Programs WHERE department_id IN (SELECT department_id FROM Departments WHERE department_name = 'engineering');
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs AS DP INNER JOIN Departments AS D ON DP.department_id = D.department_id WHERE D.department_name = 'engineering'
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering');
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')
SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')

SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;

SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections;
SELECT section_name, section_description FROM Sections

SELECT T1.course_id, T1.course_name FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id, T1.course_name HAVING COUNT(T2.section_id) <= 2
SELECT C.course_name, C.course_id FROM Courses AS C LEFT JOIN Sections AS S ON C.course_id = S.course_id GROUP BY C.course_id, C.course_name HAVING COUNT(S.section_id) <= 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id, T1.course_name HAVING COUNT(T2.section_id) <= 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) <= 2
SELECT course_id, course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(section_id) <= 2)
SELECT T1.course_id, T1.course_name FROM Courses AS T1 INNER JOIN (SELECT course_id, COUNT(section_id) AS section_count FROM Sections GROUP BY course_id HAVING COUNT(section_id) <= 2) AS T2 ON T1.course_id = T2.course_id
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id, T1.course_name HAVING COUNT(T2.section_id) <= 2
SELECT T1.course_name, T1.course_id FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) <= 2
SELECT C.course_id, C.course_name FROM Courses AS C LEFT JOIN Sections AS S ON C.course_id = S.course_id GROUP BY C.course_id HAVING COUNT(S.section_id) <= 2
SELECT T1.course_name, T1.course_id FROM Courses AS T1 WHERE T1.course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(section_id) <= 2)
SELECT T1.course_name, T1.course_id  FROM Courses AS T1  INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id, T1.course_name  HAVING COUNT(T2.section_id) <= 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id, T1.course_name  HAVING COUNT(T2.section_id) <= 2
SELECT C.course_id, C.course_name  FROM Courses AS C  INNER JOIN (SELECT course_id, COUNT(section_id) AS section_count              FROM Sections              GROUP BY course_id              HAVING COUNT(section_id) <= 2) AS S  ON C.course_id = S.course_id
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) <= 2
SELECT C.course_id, C.course_name  FROM Courses AS C  LEFT JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id  HAVING COUNT(S.section_id) <= 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) <= 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id, T1.course_name  HAVING COUNT(T2.section_id) <= 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) <= 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id, T1.course_name  HAVING COUNT(T2.section_id) <= 2
SELECT C.course_id, C.course_name  FROM Courses AS C  INNER JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id, C.course_name  HAVING COUNT(S.section_id) <= 2

SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) < 2
SELECT C.course_id, C.course_name FROM Courses AS C LEFT JOIN Sections AS S ON C.course_id = S.course_id GROUP BY C.course_id, C.course_name HAVING COUNT(S.section_id) < 2
SELECT course_id, course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id, T1.course_name HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name FROM Courses AS T1 LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) < 2
SELECT C.course_id, C.course_name  FROM Courses AS C  LEFT JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id  HAVING COUNT(S.section_id) < 2
SELECT C.course_id, C.course_name  FROM Courses AS C  LEFT JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id, C.course_name  HAVING COUNT(S.section_id) < 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) < 2
SELECT C.course_id, C.course_name  FROM Courses AS C  LEFT JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id, C.course_name  HAVING COUNT(S.section_id) < 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) < 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id  HAVING COUNT(T2.section_id) < 2
SELECT C.course_id, C.course_name  FROM Courses AS C  LEFT JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id  HAVING COUNT(S.section_id) < 2
SELECT T1.course_id, T1.course_name  FROM Courses AS T1  LEFT JOIN Sections AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_id, T1.course_name  HAVING COUNT(T2.section_id) < 2
SELECT C.course_id, C.course_name  FROM Courses AS C  LEFT JOIN Sections AS S ON C.course_id = S.course_id  GROUP BY C.course_id  HAVING COUNT(S.section_id) < 2

SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT DISTINCT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;

SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC;
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT DISTINCT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM Sections ORDER BY section_name DESC

SELECT T2.semester_name, T2.semester_id FROM Student_Enrolment AS T1 INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.semester_name, T2.semester_id FROM Semesters AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name FROM Semesters AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1;
SELECT T2.semester_name, T2.semester_id FROM Semesters AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name FROM Student_Enrolment AS T1 INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name FROM Student_Enrolment AS T1 INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id, T2.semester_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.semester_name, T2.semester_id FROM Student_Enrolment AS T1 INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name FROM Semesters AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id, T2.semester_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1;
SELECT T2.semester_name, T2.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT S.semester_id, S.semester_name  FROM Semesters AS S  INNER JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id  GROUP BY S.semester_id  ORDER BY COUNT(SE.student_enrolment_id) DESC  LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.semester_name, T2.semester_id FROM Student_Enrolment AS T1 INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id, T2.semester_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.semester_name, T2.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.semester_name, T2.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1

SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T1.semester_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1;
SELECT S.semester_id, S.semester_name  FROM Semesters AS S  INNER JOIN (SELECT semester_id, COUNT(student_enrolment_id) AS student_count              FROM Student_Enrolment              GROUP BY semester_id) AS counts  ON S.semester_id = counts.semester_id  ORDER BY counts.student_count DESC  LIMIT 1;
SELECT T1.semester_id, T1.semester_name FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT S.semester_id, S.semester_name  FROM Semesters AS S  INNER JOIN (SELECT semester_id, COUNT(student_id) AS student_count              FROM Student_Enrolment              GROUP BY semester_id) AS SE  ON S.semester_id = SE.semester_id  WHERE SE.student_count = (SELECT MAX(student_count)                            FROM (SELECT semester_id, COUNT(student_id) AS student_count                                  FROM Student_Enrolment                                  GROUP BY semester_id) AS SE);
SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT S1.semester_id, S1.semester_name FROM Semesters AS S1 INNER JOIN Student_Enrolment AS SE ON S1.semester_id = SE.semester_id GROUP BY S1.semester_id, S1.semester_name ORDER BY COUNT(SE.student_id) DESC LIMIT 1
SELECT T2.semester_name, T2.semester_id FROM Semesters AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.semester_id = T2.semester_id GROUP BY T2.semester_id ORDER BY COUNT(T1.student_enrolment_id) DESC
SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT S.semester_name, S.semester_id  FROM Semesters AS S  JOIN (SELECT semester_id, COUNT(student_id) AS student_count        FROM Student_Enrolment        GROUP BY semester_id        ORDER BY student_count DESC        LIMIT 1) AS E  ON S.semester_id = E.semester_id
SELECT S.semester_id, S.semester_name FROM Student_Enrolment AS SE INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id GROUP BY S.semester_id, S.semester_name ORDER BY COUNT(SE.student_enrolment_id) DESC LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM (SELECT T1.semester_id, COUNT(T1.student_enrolment_id) AS student_count        FROM Student_Enrolment AS T1        GROUP BY T1.semester_id) AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  WHERE T1.student_count = (SELECT MAX(student_count) FROM (SELECT COUNT(student_enrolment_id) AS student_count                                                           FROM Student_Enrolment                                                           GROUP BY semester_id) AS T3)
SELECT T1.semester_name, T1.semester_id  FROM Semesters AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T1.semester_id, T1.semester_name  HAVING COUNT(T2.student_enrolment_id) = (SELECT MAX(student_count)                                             FROM (SELECT COUNT(T3.student_enrolment_id) AS student_count                                                   FROM Student_Enrolment AS T3                                                   GROUP BY T3.semester_id))
SELECT T1.semester_id, T1.semester_name FROM Semesters AS T1 INNER JOIN (SELECT semester_id, COUNT(student_enrolment_id) AS student_count FROM Student_Enrolment GROUP BY semester_id) AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_count = (SELECT MAX(student_count) FROM (SELECT semester_id, COUNT(student_enrolment_id) AS student_count FROM Student_Enrolment GROUP BY semester_id))
WITH StudentCount AS (     SELECT S.semester_id, S.semester_name, COUNT(SE.student_id) AS student_count     FROM Semesters AS S     LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id     GROUP BY S.semester_id, S.semester_name ) SELECT semester_id, semester_name FROM (     SELECT semester_id, semester_name,             ROW_NUMBER() OVER (PARTITION BY semester_id ORDER BY student_count DESC) AS rn     FROM StudentCount ) AS RankedSemesters WHERE rn = 1;
SELECT T1.semester_id, T1.semester_name  FROM Semesters AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T1.semester_id  HAVING COUNT(T2.student_enrolment_id) = (     SELECT MAX(student_count)      FROM (         SELECT COUNT(T3.student_enrolment_id) AS student_count          FROM Student_Enrolment AS T3          GROUP BY T3.semester_id     ) )
SELECT semester_name, semester_id  FROM (     SELECT S.semester_name, S.semester_id, COUNT(SE.student_enrolment_id) AS student_count,            ROW_NUMBER() OVER (PARTITION BY S.semester_id ORDER BY COUNT(SE.student_enrolment_id) DESC) AS rank     FROM Semesters AS S     LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id     GROUP BY S.semester_id ) AS ranked WHERE rank = 1;
SELECT semester_id, semester_name  FROM (      SELECT S.semester_id, S.semester_name, COUNT(SE.student_id) AS student_count,             ROW_NUMBER() OVER (PARTITION BY S.semester_id ORDER BY COUNT(SE.student_id) DESC) AS rn      FROM Semesters AS S      LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id      GROUP BY S.semester_id, S.semester_name  ) AS ranked  WHERE rn = 1;
SELECT T1.semester_id, T1.semester_name  FROM Semesters AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T1.semester_id  ORDER BY COUNT(T2.student_enrolment_id) DESC  LIMIT 1
SELECT T2.semester_id, T2.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  GROUP BY T2.semester_id, T2.semester_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T1.semester_id, T2.semester_name  FROM (SELECT semester_id, COUNT(student_id) AS student_count        FROM Student_Enrolment        GROUP BY semester_id) AS T1  INNER JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id  WHERE T1.student_count = (SELECT MAX(student_count) FROM (SELECT COUNT(student_id) AS student_count                                                            FROM Student_Enrolment                                                            GROUP BY semester_id) AS T3)

SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.student_id, T2.semester_id HAVING COUNT(T3.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  GROUP BY T1.student_id, T2.semester_id  HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT first_name, middle_name, last_name, student_id FROM Students AS S WHERE student_id IN (SELECT student_id FROM Student_Enrolment GROUP BY student_id, semester_id HAVING COUNT(DISTINCT degree_program_id) = 2)
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.student_id HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.student_id, T2.semester_id HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  INNER JOIN Semesters AS T4 ON T2.semester_id = T4.semester_id  GROUP BY T1.student_id, T1.first_name, T1.middle_name, T1.last_name, T2.semester_id  HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  GROUP BY T1.student_id, T2.semester_id  HAVING COUNT(DISTINCT T3.degree_program_id) = 2
WITH EnrolledStudents AS (     SELECT student_id     FROM Student_Enrolment     GROUP BY student_id, semester_id     HAVING COUNT(degree_program_id) = 2 ) SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name FROM EnrolledStudents AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id;
SELECT S.first_name, S.middle_name, S.last_name, S.student_id FROM Students AS S INNER JOIN Student_Enrolment AS E ON S.student_id = E.student_id INNER JOIN Degree_Programs AS D ON E.degree_program_id = D.degree_program_id GROUP BY S.student_id, E.semester_id HAVING COUNT(D.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id, T2.semester_id HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  GROUP BY T1.student_id, T2.semester_id  HAVING COUNT(T3.degree_program_id) = 2
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  INNER JOIN Student_Enrolment_Courses AS SEC ON SE.student_enrolment_id = SEC.student_enrolment_id  GROUP BY S.student_id, SE.semester_id  HAVING COUNT(DISTINCT SEC.course_id) = 2;
SELECT S.first_name, S.middle_name, S.last_name, S.student_id  FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id GROUP BY S.student_id HAVING COUNT(DP.degree_program_id) = 2
SELECT S.first_name, S.middle_name, S.last_name, S.student_id  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id, T2.semester_id  HAVING COUNT(T2.degree_program_id) = 2
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id, T2.semester_id HAVING COUNT(T3.course_id) = 2
SELECT S.first_name, S.middle_name, S.last_name, S.student_id  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY SE.semester_id, S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  HAVING COUNT(T2.degree_program_id) = 2
SELECT S.first_name, S.middle_name, S.last_name, S.student_id FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id GROUP BY S.student_id, SE.semester_id HAVING COUNT(DP.degree_program_id) = 2
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id, T2.semester_id  HAVING COUNT(DISTINCT T2.degree_program_id) = 2

SELECT S.student_id, S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id GROUP BY S.student_id, S.first_name, S.middle_name, S.last_name, SE.semester_id HAVING COUNT(DP.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id  GROUP BY T1.student_id, T1.first_name, T1.middle_name, T1.last_name, T2.semester_id  HAVING COUNT(DISTINCT T3.course_id) = 2;
SELECT S.first_name, S.middle_name, S.last_name, S.student_id FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id GROUP BY S.student_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT first_name, middle_name, last_name, student_id FROM Students WHERE student_id IN (SELECT T1.student_id FROM Student_Enrolment AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id GROUP BY T1.student_id, T1.semester_id HAVING COUNT(T2.student_course_id) = 2)
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id HAVING COUNT(DISTINCT T3.course_id) = 2
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  GROUP BY S.student_id, SE.semester_id  HAVING COUNT(DISTINCT DP.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  GROUP BY T1.student_id, T2.semester_id  HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT first_name, middle_name, last_name, student_id FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment GROUP BY student_id, semester_id HAVING COUNT(DISTINCT degree_program_id) = 2)
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 WHERE T1.student_id IN (SELECT T2.student_id FROM Student_Enrolment AS T2 INNER JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T2.student_enrolment_id, T2.semester_id HAVING COUNT(DISTINCT T3.course_id) = 2)
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  GROUP BY T1.student_id  HAVING COUNT(DISTINCT T2.degree_program_id) = 2;
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  GROUP BY S.student_id, SE.semester_id  HAVING COUNT(DP.degree_program_id) = 2
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id, T1.first_name, T1.middle_name, T1.last_name, T2.semester_id  HAVING COUNT(DISTINCT T2.degree_program_id) = 2
SELECT T1.student_id, T2.first_name, T2.middle_name, T2.last_name  FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id, T1.semester_id  HAVING COUNT(T1.degree_program_id) = 2
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT S.student_id, S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id GROUP BY S.student_id HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT S.student_id, S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2
SELECT S.first_name, S.middle_name, S.last_name, S.student_id  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  HAVING COUNT(DISTINCT SE.degree_program_id) = 2

SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 WHERE T1.student_id IN (SELECT T2.student_id FROM Student_Enrolment AS T2 WHERE T2.degree_program_id IN (SELECT T3.degree_program_id FROM Degree_Programs AS T3 WHERE T3.degree_summary_name = 'Bachelor'))
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  WHERE DP.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  WHERE DP.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  WHERE DP.degree_summary_name = 'Bachelor'

SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT S.first_name, S.middle_name, S.last_name FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'
SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT SE.student_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor')
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name = 'Bachelor'

SELECT T2.degree_summary_name, COUNT(T1.student_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY enrollment_count DESC LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_enrolment_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY enrollment_count DESC LIMIT 1
SELECT DP.degree_summary_name, COUNT(SE.student_enrolment_id) FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id GROUP BY DP.degree_summary_name ORDER BY COUNT(SE.student_enrolment_id) DESC LIMIT 1
SELECT T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T2.degree_summary_name FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT DP.degree_summary_name FROM Degree_Programs AS DP INNER JOIN Student_Enrolment AS SE ON DP.degree_program_id = SE.degree_program_id GROUP BY DP.degree_summary_name ORDER BY COUNT(SE.student_id) DESC LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY enrollment_count DESC LIMIT 1
SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT DP.degree_summary_name FROM Degree_Programs AS DP INNER JOIN Student_Enrolment AS SE ON DP.degree_program_id = SE.degree_program_id GROUP BY DP.degree_summary_name ORDER BY COUNT(SE.student_id) DESC LIMIT 1
SELECT degree_summary_name FROM (SELECT DP.degree_summary_name, COUNT(SE.student_id) AS enrollment_count FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id INNER JOIN Students AS S ON SE.student_id = S.student_id GROUP BY DP.degree_summary_name ORDER BY enrollment_count DESC LIMIT 1)
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_enrolment_id) AS enrollment_count  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_enrolment_id) AS enrollment_count  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY enrollment_count DESC  LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_enrolment_id) AS enrollment_count  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY enrollment_count DESC  LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_id) AS student_count  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY student_count DESC  LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_id) AS student_count  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY student_count DESC  LIMIT 1
SELECT T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT DP.degree_summary_name, COUNT(SE.student_id) AS student_count  FROM Student_Enrolment AS SE  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  GROUP BY DP.degree_summary_name  ORDER BY student_count DESC  LIMIT 1
SELECT T3.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T1.degree_program_id = T3.degree_program_id GROUP BY T3.degree_summary_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1

SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T1.degree_summary_name, COUNT(T2.student_enrolment_id) FROM Degree_Programs AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1;
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Students AS T3 ON T2.student_id = T3.student_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T3.student_id) DESC LIMIT 1
SELECT DP.degree_summary_name FROM Degree_Programs AS DP INNER JOIN Student_Enrolment AS SE ON DP.degree_program_id = SE.degree_program_id GROUP BY DP.degree_summary_name ORDER BY COUNT(SE.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Students AS T3 ON T2.student_id = T3.student_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T3.student_id) DESC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Students AS T3 ON T2.student_id = T3.student_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T3.student_id) DESC LIMIT 1
SELECT T1.degree_summary_name, COUNT(T2.student_id) AS enrollment_count FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY enrollment_count DESC LIMIT 1
SELECT T2.degree_summary_name, COUNT(T1.student_enrolment_id) AS student_count FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY student_count DESC LIMIT 1
SELECT DP.degree_summary_name FROM Degree_Programs AS DP INNER JOIN Student_Enrolment AS SE ON DP.degree_program_id = SE.degree_program_id GROUP BY DP.degree_summary_name ORDER BY COUNT(SE.student_id) DESC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T3.degree_summary_name  FROM Degree_Programs AS T3  INNER JOIN Student_Enrolment AS T2 ON T3.degree_program_id = T2.degree_program_id  INNER JOIN Students AS T1 ON T2.student_id = T1.student_id  GROUP BY T3.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1;
SELECT T3.degree_summary_name FROM Degree_Programs AS T3 INNER JOIN Student_Enrolment_Courses AS T1 ON T3.degree_program_id = T1.course_id INNER JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id GROUP BY T3.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.degree_summary_name FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T2.degree_program_id = T1.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T1.degree_summary_name  FROM Degree_Programs AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T1.degree_summary_name  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT T3.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T1.degree_program_id = T3.degree_program_id  GROUP BY T3.degree_summary_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T3.degree_summary_name  FROM Degree_Programs AS T3  INNER JOIN Student_Enrolment AS T1 ON T3.degree_program_id = T1.degree_program_id  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  GROUP BY T3.degree_summary_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1

SELECT T2.degree_program_id, T2.degree_summary_description FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T2.degree_program_id = T1.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id, T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT DP.degree_program_id, DP.degree_summary_description  FROM Degree_Programs AS DP  INNER JOIN (SELECT degree_program_id              FROM Student_Enrolment              GROUP BY degree_program_id              ORDER BY COUNT(student_enrolment_id) DESC              LIMIT 1) AS S  ON DP.degree_program_id = S.degree_program_id;
SELECT T2.degree_program_id, T2.degree_summary_name FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_description FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_description FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_description FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_description  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_description  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T3.degree_program_id, T3.degree_summary_description  FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T1.degree_program_id = T3.degree_program_id  GROUP BY T3.degree_program_id, T3.degree_summary_description  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name  FROM Degree_Programs AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T1.degree_program_id, T1.degree_summary_name  ORDER BY COUNT(T2.student_enrolment_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T3.degree_program_id, T3.degree_summary_description  FROM Degree_Programs AS T3  INNER JOIN Student_Enrolment AS T2 ON T3.degree_program_id = T2.degree_program_id  INNER JOIN Students AS T1 ON T2.student_id = T1.student_id  GROUP BY T3.degree_program_id, T3.degree_summary_description  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_description  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_description  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_description  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_description  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1

SELECT T2.degree_program_id, T2.degree_summary_description FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_program_id, T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id, T2.degree_summary_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT DP.degree_program_id, DP.degree_summary_name FROM Degree_Programs AS DP INNER JOIN Student_Enrolment AS SE ON DP.degree_program_id = SE.degree_program_id GROUP BY DP.degree_program_id ORDER BY COUNT(SE.student_enrolment_id) DESC LIMIT 1;
SELECT T2.degree_program_id, T2.degree_summary_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_program_id, T2.degree_summary_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_description FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id, T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1;
SELECT T2.degree_program_id, T2.degree_summary_name FROM Degree_Programs AS T2 INNER JOIN Student_Enrolment AS T1 ON T2.degree_program_id = T1.degree_program_id INNER JOIN Students AS T3 ON T1.student_id = T3.student_id GROUP BY T2.degree_program_id ORDER BY COUNT(T3.student_id) DESC LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id, T1.degree_summary_name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT DP.degree_program_id, DP.degree_summary_description FROM Degree_Programs AS DP INNER JOIN (SELECT degree_program_id, COUNT(student_id) AS student_count FROM Student_Enrolment GROUP BY degree_program_id ORDER BY student_count DESC LIMIT 1) AS SE ON DP.degree_program_id = SE.degree_program_id
SELECT DP.degree_program_id, DP.degree_summary_name  FROM Degree_Programs AS DP  INNER JOIN (      SELECT student_enrolment.degree_program_id, COUNT(*) AS student_count      FROM Student_Enrolment AS student_enrolment      GROUP BY student_enrolment.degree_program_id      ORDER BY student_count DESC      LIMIT 1 ) AS Enrolled ON DP.degree_program_id = Enrolled.degree_program_id
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_name  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_name  FROM Degree_Programs AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T1.degree_program_id, T1.degree_summary_name  ORDER BY COUNT(T2.student_enrolment_id) DESC  LIMIT 1
SELECT T3.degree_program_id, T3.degree_summary_description  FROM Student_Enrolment AS T1  INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id  INNER JOIN Degree_Programs AS T3 ON T2.course_id = T3.degree_program_id  GROUP BY T3.degree_program_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Degree_Programs AS T2  INNER JOIN (SELECT degree_program_id, COUNT(student_id) AS student_count              FROM Student_Enrolment              GROUP BY degree_program_id              ORDER BY student_count DESC              LIMIT 1) AS T1  ON T1.degree_program_id = T2.degree_program_id
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_description  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T2.degree_program_id, T2.degree_summary_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T2.degree_program_id, T2.degree_summary_name  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T1.degree_program_id, T1.degree_summary_description  FROM Degree_Programs AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id  GROUP BY T1.degree_program_id, T1.degree_summary_description  ORDER BY COUNT(T2.student_enrolment_id) DESC  LIMIT 1

SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS enrollment_count  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY enrollment_count DESC  LIMIT 1
SELECT T1.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT T1.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS number_of_enrollments  FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS enrollment_count FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT S.student_id, S.first_name, S.middle_name, S.last_name, COUNT(SE.student_enrolment_id) AS number_of_enrollments  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS enrollment_count  FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  GROUP BY T2.student_id  ORDER BY enrollment_count DESC  LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS enrollment_count FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS number_of_enrollments FROM Student_Enrolment AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY number_of_enrollments DESC LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY number_of_enrollments DESC LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id, T1.first_name, T1.middle_name, T1.last_name ORDER BY number_of_enrollments DESC LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS number_of_enrollments  FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  GROUP BY T2.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT S.student_id, S.first_name, S.middle_name, S.last_name, COUNT(SE.student_enrolment_id) AS number_of_enrollments  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1;
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1;
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY number_of_enrollments DESC LIMIT 1

SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS enrollment_count FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_enrolment_id) AS enrollment_count FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id GROUP BY S.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS enrollment_count FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS enrollment_count FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_enrolment_id) AS num_enrollments FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id GROUP BY S.student_id ORDER BY num_enrollments DESC LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(E.student_enrolment_id)  FROM Students AS S  INNER JOIN Student_Enrolment AS E ON S.student_id = E.student_id  GROUP BY S.student_id  ORDER BY COUNT(E.student_enrolment_id) DESC  LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_enrolment_id) AS enrollment_count FROM Students AS S INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id GROUP BY S.student_id ORDER BY enrollment_count DESC LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_enrolment_id) AS number_of_enrollments  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_enrolment_id) AS num_enrollments  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  ORDER BY num_enrollments DESC  LIMIT 1
SELECT S.first_name, S.middle_name, S.last_name, S.student_id, COUNT(SE.student_enrolment_id) AS number_of_enrollments  FROM Students AS S  INNER JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  GROUP BY S.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY COUNT(T2.student_enrolment_id) DESC  LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id ORDER BY number_of_enrollments DESC LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1;
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY number_of_enrollments DESC LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS num_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY num_enrollments DESC  LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  HAVING COUNT(T2.student_enrolment_id) = (SELECT MAX(enrollment_count) FROM (SELECT COUNT(student_enrolment_id) AS enrollment_count FROM Student_Enrolment GROUP BY student_id))
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1
SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS number_of_enrollments  FROM Students AS T1  INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  GROUP BY T1.student_id  ORDER BY number_of_enrollments DESC  LIMIT 1

SELECT T2.semester_name FROM Semesters AS T2 LEFT JOIN Student_Enrolment AS T1 ON T2.semester_id = T1.semester_id WHERE T1.student_enrolment_id IS NULL
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment);
SELECT semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.semester_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT S1.semester_name FROM Semesters AS S1 LEFT JOIN Student_Enrolment AS SE ON S1.semester_id = SE.semester_id WHERE SE.semester_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS E ON S.semester_id = E.semester_id WHERE E.student_enrolment_id IS NULL
SELECT S.semester_name  FROM Semesters AS S  LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id  WHERE SE.student_id IS NULL;
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.semester_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL

SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT S.semester_name  FROM Semesters AS S  LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id  WHERE SE.semester_id IS NULL;
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT T1.semester_name FROM Semesters AS T1 WHERE T1.semester_id NOT IN (SELECT T2.semester_id FROM Student_Enrolment AS T2)
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_id IS NULL;
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL
SELECT S.semester_name FROM Semesters AS S LEFT JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id WHERE SE.student_enrolment_id IS NULL

SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment_Courses AS T3 ON T2.section_id = T3.student_course_id INNER JOIN Student_Enrolment AS T4 ON T3.student_enrolment_id = T4.student_enrolment_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id;
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id;
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id;
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name FROM Student_Enrolment_Courses SEC INNER JOIN Courses C ON SEC.course_id = C.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id

SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
SELECT DISTINCT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id;
SELECT DISTINCT T1.course_name  FROM Courses AS T1  INNER JOIN Student_Enrolment_Courses AS T2  ON T1.course_id = T2.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id  INNER JOIN Student_Enrolment AS SE ON SEC.student_enrolment_id = SE.student_enrolment_id;
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT T2.course_name  FROM Courses AS T2  INNER JOIN Student_Enrolment_Courses AS T1 ON T2.course_id = T1.course_id
SELECT DISTINCT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id
SELECT DISTINCT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id

SELECT T2.course_name FROM Courses AS T2 INNER JOIN Student_Enrolment_Courses AS T1 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id GROUP BY C.course_id ORDER BY COUNT(SEC.student_course_id) DESC LIMIT 1
SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 INNER JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(T1.student_course_id) DESC LIMIT 1
SELECT T2.course_name FROM Courses AS T2 INNER JOIN Student_Enrolment_Courses AS T1 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN (SELECT course_id, COUNT(student_course_id) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id) AS E ON C.course_id = E.course_id WHERE E.enrollment_count = (SELECT MAX(enrollment_count) FROM (SELECT COUNT(student_course_id) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id))
SELECT C.course_name FROM Courses AS C INNER JOIN (SELECT course_id, COUNT(*) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY enrollment_count DESC LIMIT 1) AS E ON C.course_id = E.course_id
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_course_id) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_course_id) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.course_name ORDER BY COUNT(T3.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id GROUP BY C.course_id ORDER BY COUNT(SEC.student_course_id) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT T2.course_name FROM Courses AS T2 INNER JOIN Student_Enrolment_Courses AS T1 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment AS T3 ON T1.student_enrolment_id = T3.student_enrolment_id GROUP BY T2.course_id ORDER BY COUNT(T3.student_enrolment_id) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1  INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id  INNER JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id  GROUP BY T1.course_name  ORDER BY COUNT(T3.student_enrolment_id) DESC  LIMIT 1
SELECT T2.course_name  FROM Student_Enrolment_Courses AS T1  INNER JOIN Courses AS T2 ON T1.course_id = T2.course_id  GROUP BY T2.course_id  ORDER BY COUNT(T1.student_enrolment_id) DESC  LIMIT 1
SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 INNER JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_course_id) DESC LIMIT 1
SELECT C.course_name  FROM Student_Enrolment_Courses SEC  INNER JOIN Courses C ON SEC.course_id = C.course_id  GROUP BY SEC.course_id  ORDER BY COUNT(SEC.student_enrolment_id) DESC  LIMIT 1
SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 INNER JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT T2.course_name  FROM Courses AS T2  INNER JOIN Student_Enrolment_Courses AS T1 ON T2.course_id = T1.course_id  GROUP BY T2.course_name  ORDER BY COUNT(T1.student_course_id) DESC  LIMIT 1
SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 INNER JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN (SELECT student_course_id, COUNT(*) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY enrollment_count DESC LIMIT 1) AS E ON C.course_id = E.student_course_id

SELECT C.course_name FROM Courses AS C INNER JOIN (SELECT course_id, COUNT(student_course_id) AS enrollment_count FROM Student_Enrolment_Courses GROUP BY course_id) AS E ON C.course_id = E.course_id ORDER BY E.enrollment_count DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN Sections AS S ON C.course_id = S.course_id INNER JOIN Student_Enrolment_Courses AS SEC ON S.section_id = SEC.student_course_id INNER JOIN Student_Enrolment AS E ON SEC.student_enrolment_id = E.student_enrolment_id GROUP BY C.course_id ORDER BY COUNT(E.student_id) DESC LIMIT 1
SELECT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id  GROUP BY C.course_id  ORDER BY COUNT(SEC.student_course_id) DESC  LIMIT 1;
SELECT C.course_name FROM Courses AS C INNER JOIN (SELECT course_id, COUNT(student_enrolment_id) AS student_count FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY student_count DESC LIMIT 1) AS E ON C.course_id = E.course_id
SELECT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id GROUP BY SEC.course_id ORDER BY COUNT(SEC.student_enrolment_id) DESC LIMIT 1
SELECT T3.course_name FROM Courses AS T3 INNER JOIN Student_Enrolment_Courses AS T2 ON T3.course_id = T2.course_id INNER JOIN Student_Enrolment AS T1 ON T2.student_enrolment_id = T1.student_enrolment_id GROUP BY T3.course_name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T2.course_name FROM Courses AS T2 INNER JOIN Student_Enrolment_Courses AS T1 ON T1.course_id = T2.course_id GROUP BY T2.course_name ORDER BY COUNT(T1.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id GROUP BY C.course_id ORDER BY COUNT(SEC.student_course_id) DESC LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id GROUP BY C.course_id ORDER BY COUNT(SEC.student_course_id) DESC LIMIT 1;
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.course_name ORDER BY COUNT(T3.student_enrolment_id) DESC LIMIT 1
SELECT C.course_name  FROM Student_Enrolment_Courses SEC  INNER JOIN Student_Enrolment SE ON SEC.student_enrolment_id = SE.student_enrolment_id  INNER JOIN Courses C ON SEC.course_id = C.course_id  GROUP BY SEC.course_id  ORDER BY COUNT(SEC.student_enrolment_id) DESC  LIMIT 1
SELECT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id  GROUP BY C.course_id  ORDER BY COUNT(SEC.student_enrolment_id) DESC  LIMIT 1
SELECT C.course_name FROM Courses AS C INNER JOIN Student_Enrolment AS SE ON C.course_id = SE.course_id GROUP BY C.course_id ORDER BY COUNT(SE.student_enrolment_id) DESC LIMIT 1
SELECT T1.course_name  FROM Courses AS T1  INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id  GROUP BY T1.course_name  ORDER BY COUNT(T2.student_enrolment_id) DESC  LIMIT 1
SELECT C.course_name  FROM Courses AS C  INNER JOIN Student_Enrolment_Courses AS SEC ON C.course_id = SEC.course_id  GROUP BY C.course_id, C.course_name  ORDER BY COUNT(SEC.student_course_id) DESC  LIMIT 1
SELECT C.course_name  FROM Student_Enrolment_Courses AS SEC  INNER JOIN Courses AS C ON SEC.course_id = C.course_id  GROUP BY SEC.course_id  ORDER BY COUNT(SEC.student_course_id) DESC  LIMIT 1
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY COUNT(T2.student_course_id) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id INNER JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.course_name ORDER BY COUNT(T3.student_id) DESC LIMIT 1
SELECT C.course_name  FROM Courses AS C  INNER JOIN (     SELECT SEC.course_id, COUNT(SE.student_enrolment_id) AS student_count      FROM Student_Enrolment_Courses AS SEC      INNER JOIN Student_Enrolment AS SE ON SEC.student_enrolment_id = SE.student_enrolment_id      GROUP BY SEC.course_id      ORDER BY student_count DESC      LIMIT 1 ) AS EnrolledCourses ON C.course_id = EnrolledCourses.course_id

SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment);
SELECT T1.last_name FROM Students AS T1 WHERE T1.current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  WHERE A.state_province_county = 'North Carolina'  AND S.student_id NOT IN (SELECT student_id FROM Student_Enrolment);
SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment);
SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND NOT EXISTS (SELECT 1 FROM Student_Enrolment AS T3 WHERE T3.student_id = T1.student_id)
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT DISTINCT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT T1.last_name  FROM Students AS T1  WHERE T1.current_address_id IN (SELECT T2.address_id FROM Addresses AS T2 WHERE T2.state_province_county = 'North Carolina')  AND T1.student_id NOT IN (SELECT T3.student_id FROM Student_Enrolment AS T3)
SELECT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  LEFT JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id  WHERE T2.state_province_county = 'North Carolina' AND T3.student_enrolment_id IS NULL
SELECT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  LEFT JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id  WHERE T2.state_province_county = 'North Carolina' AND T3.student_enrolment_id IS NULL
SELECT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  LEFT JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id  WHERE T2.state_province_county = 'North Carolina' AND T3.student_id IS NULL
SELECT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.state_province_county = 'North Carolina'  AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.state_province_county = 'North Carolina'  AND NOT EXISTS (SELECT 1 FROM Student_Enrolment AS T3 WHERE T3.student_id = T1.student_id)

SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IS NOT NULL)
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND NOT EXISTS (SELECT 1 FROM Student_Enrolment WHERE student_id = Students.student_id)
SELECT T1.last_name FROM Students AS T1  WHERE T1.permanent_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina')  AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment);
SELECT last_name FROM Students AS S WHERE S.current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND S.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND NOT EXISTS (SELECT 1 FROM Student_Enrolment WHERE student_id = Students.student_id)
SELECT S.last_name FROM Students AS S INNER JOIN Addresses AS A ON S.current_address_id = A.address_id WHERE A.state_province_county = 'North Carolina' AND S.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id LEFT JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id WHERE T2.state_province_county = 'North Carolina' AND T3.degree_program_id IS NULL
SELECT S.last_name FROM Students AS S WHERE S.current_address_id IN (SELECT A.address_id FROM Addresses AS A WHERE A.state_province_county = 'North Carolina') AND S.student_id NOT IN (SELECT SE.student_id FROM Student_Enrolment AS SE)
SELECT DISTINCT T1.last_name FROM Students AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Addresses AS T3 ON T1.current_address_id = T3.address_id OR T1.permanent_address_id = T3.address_id WHERE T3.state_province_county = 'North Carolina' AND T2.student_id IS NULL
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id OR S.permanent_address_id = A.address_id  WHERE A.state_province_county = 'North Carolina'  AND S.student_id NOT IN (SELECT SE.student_id FROM Student_Enrolment AS SE)
SELECT DISTINCT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id OR T1.permanent_address_id = T2.address_id  WHERE T2.state_province_county = 'North Carolina'  AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT DISTINCT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT DISTINCT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.last_name  FROM Students AS T1  WHERE T1.current_address_id IN (SELECT T2.address_id FROM Addresses AS T2 WHERE T2.state_province_county = 'North Carolina')  AND T1.student_id NOT IN (SELECT T3.student_id FROM Student_Enrolment AS T3)
SELECT DISTINCT S.last_name  FROM Students AS S  WHERE S.permanent_address_id IN (SELECT A.address_id FROM Addresses AS A WHERE A.state_province_county = 'North Carolina')  AND S.student_id NOT IN (SELECT SE.student_id FROM Student_Enrolment AS SE)
SELECT DISTINCT S.last_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id  LEFT JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id  WHERE A.state_province_county = 'North Carolina' AND SE.student_enrolment_id IS NULL
SELECT DISTINCT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  LEFT JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id  WHERE T2.state_province_county = 'North Carolina' AND T3.student_enrolment_id IS NULL
SELECT T1.last_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.state_province_county = 'North Carolina'  AND T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment)

SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id, T1.transcript_date HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(student_course_id) >= 2)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(student_course_id) >= 2)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id IN (SELECT T2.transcript_id FROM Transcript_Contents AS T2 GROUP BY T2.transcript_id HAVING COUNT(T2.student_course_id) >= 2)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T2.transcript_id, T2.transcript_date  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T2.transcript_id  HAVING COUNT(T1.student_course_id) >= 2
SELECT T2.transcript_id, T2.transcript_date  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T1.student_course_id) >= 2
SELECT T2.transcript_id, T2.transcript_date  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T1.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_date, T1.transcript_id  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2

SELECT T.transcript_id, T.transcript_date  FROM Transcripts AS T  INNER JOIN Transcript_Contents AS TC ON T.transcript_id = TC.transcript_id  GROUP BY T.transcript_id  HAVING COUNT(TC.student_course_id) >= 2
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(student_course_id) >= 2)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(student_course_id) >= 2)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2
SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(student_course_id) >= 2)
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T2.transcript_id, T2.transcript_date  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T2.transcript_id  HAVING COUNT(T1.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id, T1.transcript_date  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_date, T1.transcript_id  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) >= 2

SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'

SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'

SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Students ORDER BY date_first_registered ASC LIMIT 1)
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)

SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Students ORDER BY date_first_registered ASC LIMIT 1)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)

SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Students ORDER BY date_first_registered ASC LIMIT 1)
SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Students ORDER BY date_first_registered ASC LIMIT 1)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Students ORDER BY date_first_registered ASC LIMIT 1)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE student_id = (SELECT student_id FROM Students ORDER BY date_first_registered ASC LIMIT 1)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  WHERE T1.date_first_registered = (SELECT MIN(T2.date_first_registered) FROM Students AS T2)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students)

SELECT T1.first_name FROM Students AS T1 WHERE T1.permanent_address_id <> T1.current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT T1.first_name FROM Students AS T1 WHERE T1.permanent_address_id <> T1.current_address_id
SELECT S.first_name FROM Students AS S INNER JOIN Addresses AS PA ON S.permanent_address_id = PA.address_id INNER JOIN Addresses AS CA ON S.current_address_id = CA.address_id WHERE PA.line_1 <> CA.line_1 OR PA.line_2 <> CA.line_2 OR PA.city <> CA.city OR PA.state_province_county <> CA.state_province_county OR PA.zip_postcode <> CA.zip_postcode OR PA.country <> CA.country
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT T1.first_name FROM Students AS T1 WHERE T1.permanent_address_id <> T1.current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id
SELECT first_name FROM Students WHERE permanent_address_id != current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS PA ON S.permanent_address_id = PA.address_id  INNER JOIN Addresses AS CA ON S.current_address_id = CA.address_id  WHERE PA.line_1 != CA.line_1 OR PA.line_2 != CA.line_2 OR PA.line_3 != CA.line_3 OR PA.city != CA.city OR PA.state_province_county != CA.state_province_county OR PA.zip_postcode != CA.zip_postcode OR PA.country != CA.country
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id != current_address_id;
SELECT T1.first_name FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  INNER JOIN Addresses AS T3 ON T1.current_address_id = T3.address_id  WHERE T2.line_1 != T3.line_1 OR T2.city != T3.city OR T2.state_province_county != T3.state_province_county OR T2.zip_postcode != T3.zip_postcode
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;

SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id != current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE permanent_address_id != current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT DISTINCT first_name FROM Students WHERE permanent_address_id != current_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id
SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id;

SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3, T1.city, T1.state_province_county, T1.zip_postcode, T1.country FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id GROUP BY A.address_id ORDER BY COUNT(S.student_id) DESC LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3, T1.city, T1.state_province_county, T1.zip_postcode  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id  GROUP BY T1.address_id  HAVING COUNT(T2.student_id) = (SELECT MAX(student_count) FROM (SELECT COUNT(student_id) AS student_count FROM Students GROUP BY current_address_id))
SELECT A.address_id, A.line_1, A.line_2, A.line_3  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id  GROUP BY A.address_id  ORDER BY COUNT(S.student_id) DESC  LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id GROUP BY A.address_id ORDER BY COUNT(S.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id GROUP BY A.address_id ORDER BY COUNT(S.student_id) DESC LIMIT 1;
SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3 FROM Addresses AS T2 INNER JOIN Students AS T1 ON T1.current_address_id = T2.address_id GROUP BY T2.address_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode  FROM Addresses AS A  WHERE A.address_id = (SELECT S.current_address_id                        FROM Students AS S                        GROUP BY S.current_address_id                        ORDER BY COUNT(S.student_id) DESC                        LIMIT 1)
SELECT A.address_id, A.line_1, A.line_2, A.line_3  FROM Addresses AS A  INNER JOIN (SELECT current_address_id, COUNT(student_id) AS student_count              FROM Students              GROUP BY current_address_id              ORDER BY student_count DESC              LIMIT 1) AS S  ON A.address_id = S.current_address_id;
SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id GROUP BY A.address_id, A.line_1, A.line_2, A.line_3 ORDER BY COUNT(S.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2, A.line_3  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id  GROUP BY A.address_id  HAVING COUNT(S.student_id) = (     SELECT MAX(student_count)      FROM (         SELECT COUNT(S1.student_id) AS student_count          FROM Addresses AS A1          INNER JOIN Students AS S1 ON A1.address_id = S1.current_address_id          GROUP BY A1.address_id     ) )
SELECT A.address_id, A.line_1, A.line_2, A.line_3  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id  GROUP BY A.address_id  ORDER BY COUNT(S.student_id) DESC  LIMIT 1
SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3  FROM Addresses AS T2  INNER JOIN (SELECT permanent_address_id, COUNT(*) as student_count              FROM Students              GROUP BY permanent_address_id              ORDER BY student_count DESC              LIMIT 1) AS T1  ON T1.permanent_address_id = T2.address_id
SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3 FROM Addresses AS T2 INNER JOIN (     SELECT current_address_id, COUNT(*) AS student_count     FROM Students     GROUP BY current_address_id     ORDER BY student_count DESC     LIMIT 1 ) AS T1 ON T2.address_id = T1.current_address_id
SELECT A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode, A.country  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.permanent_address_id  GROUP BY A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode, A.country  ORDER BY COUNT(S.student_id) DESC  LIMIT 1
SELECT A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode, A.country  FROM Addresses AS A  INNER JOIN (SELECT current_address_id, COUNT(*) AS student_count              FROM Students              GROUP BY current_address_id              ORDER BY student_count DESC              LIMIT 1) AS S  ON A.address_id = S.current_address_id
SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3, T1.city, T1.state_province_county, T1.zip_postcode, T1.country  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id OR T1.address_id = T2.current_address_id  GROUP BY T1.address_id  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  GROUP BY T2.address_id, T2.line_1, T2.line_2, T2.line_3  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT A.address_id, A.line_1, A.line_2, A.line_3, A.city, A.state_province_county, A.zip_postcode, A.country  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id  GROUP BY A.address_id  ORDER BY COUNT(S.student_id) DESC  LIMIT 1
SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3 FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id GROUP BY T2.address_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1

SELECT A.address_id, A.line_1, A.line_2  FROM Addresses A  INNER JOIN (SELECT current_address_id, COUNT(*) AS student_count              FROM Students              GROUP BY current_address_id              ORDER BY student_count DESC              LIMIT 1) AS S  ON A.address_id = S.current_address_id
SELECT T1.address_id, T1.line_1, T1.line_2 FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id GROUP BY T1.address_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2  FROM Addresses A  JOIN Students S ON A.address_id = S.current_address_id  GROUP BY A.address_id, A.line_1, A.line_2  ORDER BY COUNT(S.student_id) DESC  LIMIT 1;
SELECT T2.address_id, T2.line_1, T2.line_2 FROM Addresses AS T2 INNER JOIN Students AS T1 ON T1.current_address_id = T2.address_id OR T1.permanent_address_id = T2.address_id GROUP BY T2.address_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2 FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id GROUP BY A.address_id ORDER BY COUNT(S.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.permanent_address_id  GROUP BY A.address_id  ORDER BY COUNT(S.student_id) DESC  LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2 FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.permanent_address_id OR T1.address_id = T2.current_address_id GROUP BY T1.address_id, T1.line_1, T1.line_2 ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id  GROUP BY A.address_id, A.line_1, A.line_2  ORDER BY COUNT(S.student_id) DESC  LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2 FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id GROUP BY T1.address_id, T1.line_1, T1.line_2 ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT A.address_id, A.line_1, A.line_2 FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY COUNT(S.student_id) DESC LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id  GROUP BY T1.address_id  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id  GROUP BY T1.address_id  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT A.address_id, A.line_1, A.line_2  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id  GROUP BY A.address_id  ORDER BY COUNT(S.student_id) DESC  LIMIT 1
SELECT A.address_id, A.line_1, A.line_2  FROM Addresses AS A  INNER JOIN (SELECT current_address_id, COUNT(*) AS student_count              FROM Students              GROUP BY current_address_id              ORDER BY student_count DESC              LIMIT 1) AS S  ON A.address_id = S.current_address_id;
SELECT T1.address_id, T1.line_1, T1.line_2  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id  GROUP BY T1.address_id  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT T2.address_id, T2.line_1, T2.line_2  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  GROUP BY T2.address_id, T2.line_1, T2.line_2  HAVING COUNT(T1.student_id) = (SELECT MAX(student_count)                                   FROM (SELECT COUNT(*) AS student_count                                         FROM Students                                         GROUP BY current_address_id))
SELECT T3.address_id, T3.line_1, T3.line_2  FROM Addresses AS T3  INNER JOIN Students AS T1 ON T1.current_address_id = T3.address_id OR T1.permanent_address_id = T3.address_id  GROUP BY T3.address_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T1.address_id, T2.line_1, T2.line_2  FROM Addresses AS T2  INNER JOIN Students AS T1 ON T1.current_address_id = T2.address_id  GROUP BY T2.address_id  ORDER BY COUNT(T1.student_id) DESC  LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id  GROUP BY T1.address_id  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT T1.address_id, T1.line_1, T1.line_2  FROM Addresses AS T1  INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id  GROUP BY T1.address_id  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1

SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT STRFTIME('%Y-%m-%d', AVG(STRFTIME('%s', `transcript_date`))) AS average_transcript_date FROM `Transcripts`
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(STRFTIME('%Y-%m-%d', transcript_date)) FROM Transcripts;
SELECT DATETIME(AVG(JULIANDAY(transcript_date)), 'unixepoch') AS average_transcript_print_date FROM Transcripts
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(STRFTIME('%s', transcript_date)) FROM Transcripts
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts
SELECT AVG(transcript_date) FROM Transcripts;

SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT DATETIME(AVG(STRFTIME('%s', transcript_date)), 'unixepoch') AS average_transcript_date FROM Transcripts
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(STRFTIME('%s', transcript_date)) FROM Transcripts;
SELECT AVG(STRFTIME('%s', transcript_date)) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts;
SELECT AVG(STRFTIME('%s', transcript_date)) FROM Transcripts;
SELECT AVG(transcript_date) FROM Transcripts

SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts);
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts);
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_id = (SELECT transcript_id FROM Transcripts ORDER BY transcript_date ASC LIMIT 1)

SELECT T1.transcript_date, T1.other_details FROM Transcripts AS T1 WHERE T1.transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT T1.transcript_date, T1.other_details FROM Transcripts AS T1 WHERE T1.transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT `transcript_date`, `other_details` FROM `Transcripts` WHERE `transcript_date` = (SELECT MIN(`transcript_date`) FROM `Transcripts`)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts);
SELECT * FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts WHERE transcript_date IS NOT NULL)
SELECT transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT `transcript_date`, `other_details` FROM `Transcripts` WHERE `transcript_date` = (SELECT MIN(`transcript_date`) FROM `Transcripts`)
SELECT transcript_id, transcript_date, other_details FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts)
SELECT `transcript_date`, `other_details` FROM `Transcripts` WHERE `transcript_date` = (SELECT MIN(`transcript_date`) FROM `Transcripts`)
SELECT MIN(transcript_date) AS earliest_date, other_details FROM Transcripts;
SELECT MIN(transcript_date) AS earliest_date, other_details FROM Transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date, other_details FROM Transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date, other_details FROM Transcripts
SELECT * FROM Transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM Transcripts);
SELECT MIN(transcript_date) AS earliest_transcript_date, other_details FROM Transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date, other_details FROM Transcripts
SELECT MIN(transcript_date) AS earliest_date, transcript_id, other_details FROM Transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date, other_details FROM Transcripts
SELECT T1.transcript_date, T1.transcript_id, T1.other_details  FROM Transcripts AS T1  WHERE T1.transcript_date = (SELECT MIN(T2.transcript_date) FROM Transcripts AS T2)

SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;

SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(transcript_id) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;
SELECT COUNT(*) FROM Transcripts;

SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;

SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;
SELECT MAX(transcript_date) FROM Transcripts;

SELECT student_course_id, COUNT(transcript_id) AS enrollment_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY enrollment_count DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) as occurrence_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY occurrence_count DESC LIMIT 1;
SELECT student_course_id, COUNT(*) AS count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1
SELECT student_course_id, COUNT(*) FROM Transcript_Contents GROUP BY student_course_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS transcript_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY transcript_count DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) FROM Transcript_Contents GROUP BY student_course_id ORDER BY COUNT(transcript_id) DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS transcript_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY transcript_count DESC LIMIT 1
SELECT student_course_id, COUNT(*) as count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1
SELECT T1.student_course_id, COUNT(T1.student_course_id) AS enrollment_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY enrollment_count DESC  LIMIT 1
SELECT T1.student_course_id, COUNT(DISTINCT T2.transcript_id) AS transcript_count  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.student_course_id  ORDER BY transcript_count DESC  LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1
SELECT T1.student_course_id, COUNT(DISTINCT T1.transcript_id) AS occurrence_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY occurrence_count DESC  LIMIT 1
SELECT T1.student_course_id, COUNT(*) AS occurrence_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY occurrence_count DESC  LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS occurrence_count  FROM Transcript_Contents  GROUP BY student_course_id  HAVING occurrence_count = (SELECT MAX(occurrence_count)                             FROM (SELECT COUNT(transcript_id) AS occurrence_count                                   FROM Transcript_Contents                                   GROUP BY student_course_id))
SELECT student_course_id, COUNT(transcript_id) AS enrollment_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY enrollment_count DESC LIMIT 1
SELECT student_course_id, COUNT(*) AS occurrence_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY occurrence_count DESC LIMIT 1
SELECT T1.student_course_id, COUNT(T1.student_course_id) AS enrollment_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  HAVING COUNT(T1.student_course_id) = (SELECT MAX(enrollment_count)                                         FROM (SELECT COUNT(student_course_id) AS enrollment_count                                               FROM Transcript_Contents                                               GROUP BY student_course_id));
SELECT T1.student_course_id, COUNT(T1.transcript_id) AS transcript_count  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.student_course_id  ORDER BY transcript_count DESC  LIMIT 1

SELECT T1.student_course_id, COUNT(T1.transcript_id) AS count FROM Transcript_Contents AS T1 INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.student_course_id ORDER BY count DESC LIMIT 1
SELECT T2.student_course_id, COUNT(T1.transcript_id) AS max_count FROM Transcript_Contents AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.student_course_id ORDER BY max_count DESC LIMIT 1
SELECT student_enrolment_id, course_count FROM (SELECT T2.student_enrolment_id, COUNT(T1.student_course_id) AS course_count FROM Transcript_Contents AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T1.student_course_id) AS T3 ORDER BY course_count DESC LIMIT 1
SELECT student_course_id, COUNT(*) AS max_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY max_count DESC LIMIT 1
SELECT T2.student_course_id, COUNT(T1.transcript_id) AS course_count  FROM Transcript_Contents AS T1  INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id  GROUP BY T1.student_course_id  ORDER BY course_count DESC  LIMIT 1
SELECT T2.student_course_id, COUNT(T1.transcript_id) AS max_count FROM Transcript_Contents AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.student_course_id ORDER BY max_count DESC LIMIT 1
SELECT T1.student_course_id, COUNT(T1.transcript_id) AS course_count FROM Transcript_Contents AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T1.student_course_id ORDER BY course_count DESC LIMIT 1
SELECT student_course_id, COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1
SELECT T1.student_course_id, COUNT(T1.student_course_id) AS course_count FROM Transcript_Contents AS T1 INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.student_course_id ORDER BY course_count DESC LIMIT 1
WITH CourseCounts AS (SELECT student_course_id, COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id) SELECT student_course_id, count FROM CourseCounts WHERE count = (SELECT MAX(count) FROM CourseCounts)
SELECT T1.student_course_id, COUNT(*) AS course_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY course_count DESC  LIMIT 1
SELECT T1.student_course_id, COUNT(*) AS course_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY course_count DESC  LIMIT 1
SELECT T1.course_id, COUNT(DISTINCT T2.transcript_id) AS max_count  FROM Student_Enrolment_Courses AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.student_course_id = T2.student_course_id  GROUP BY T1.course_id  ORDER BY max_count DESC  LIMIT 1
SELECT T1.course_id, COUNT(T1.student_course_id) AS course_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY course_count DESC  LIMIT 1
SELECT T1.student_course_id, COUNT(*) AS course_count FROM Transcript_Contents AS T1 INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.student_course_id ORDER BY course_count DESC LIMIT 1
SELECT student_course_id, COUNT(*) as course_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY course_count DESC LIMIT 1
SELECT T2.student_course_id, COUNT(T1.transcript_id) AS course_count  FROM Transcript_Contents AS T1  INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id  GROUP BY T2.course_id  ORDER BY course_count DESC  LIMIT 1
SELECT T1.student_course_id, COUNT(T1.transcript_id) AS occurrence_count  FROM Transcript_Contents AS T1  INNER JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.student_course_id  ORDER BY occurrence_count DESC  LIMIT 1
SELECT T1.student_course_id, COUNT(T1.student_course_id) AS course_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY course_count DESC  LIMIT 1
SELECT T2.student_course_id, COUNT(T1.student_course_id) AS course_count FROM Transcript_Contents AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.course_id ORDER BY course_count DESC LIMIT 1

SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 WHERE T1.transcript_id = (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id, T1.transcript_date ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T.transcript_id, T.transcript_date FROM Transcripts AS T WHERE T.transcript_id = (SELECT TC.transcript_id FROM Transcript_Contents AS TC GROUP BY TC.transcript_id ORDER BY COUNT(*) ASC LIMIT 1)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1) AS T2 ON T1.transcript_id = T2.transcript_id
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN (SELECT transcript_id FROM (SELECT transcript_id, COUNT(*) AS count FROM Transcript_Contents GROUP BY transcript_id ORDER BY count ASC LIMIT 1)) AS T2 ON T1.transcript_id = T2.transcript_id
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.transcript_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN (SELECT transcript_id, COUNT(*) AS result_count              FROM Transcript_Contents              GROUP BY transcript_id) AS T2  ON T1.transcript_id = T2.transcript_id  WHERE T2.result_count = (SELECT MIN(result_count)                            FROM (SELECT COUNT(*) AS result_count                                  FROM Transcript_Contents                                  GROUP BY transcript_id))
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  HAVING COUNT(T2.student_course_id) = (SELECT MIN(count) FROM (SELECT COUNT(*) as count FROM Transcript_Contents GROUP BY transcript_id))
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN (SELECT student_course_id, COUNT(*) AS result_count              FROM Transcript_Contents              GROUP BY student_course_id              ORDER BY result_count ASC              LIMIT 1) AS T2  ON T1.transcript_id = T2.student_course_id
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN (SELECT transcript_id, COUNT(*) AS result_count              FROM Transcript_Contents              GROUP BY transcript_id              ORDER BY result_count ASC              LIMIT 1) AS T2  ON T1.transcript_id = T2.transcript_id;
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT transcript_id, transcript_date FROM Transcripts GROUP BY transcript_id ORDER BY COUNT(transcript_id) ASC LIMIT 1
SELECT transcript_id, transcript_date  FROM Transcripts  ORDER BY (SELECT COUNT(*) FROM Transcript_Contents WHERE Transcript_Contents.transcript_id = Transcripts.transcript_id) ASC  LIMIT 1

SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 WHERE T1.transcript_id = (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN (SELECT transcript_id, COUNT(*) AS result_count FROM Transcript_Contents GROUP BY transcript_id ORDER BY result_count ASC LIMIT 1) AS T2 ON T1.transcript_id = T2.transcript_id
SELECT T1.transcript_date, T1.transcript_id  FROM Transcripts AS T1  LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 INNER JOIN (SELECT transcript_id FROM (SELECT transcript_id, COUNT(student_course_id) AS result_count FROM Transcript_Contents GROUP BY transcript_id) AS T ORDER BY result_count ASC LIMIT 1) AS T2 ON T1.transcript_id = T2.transcript_id
SELECT T.transcript_id, T.transcript_date FROM Transcripts AS T INNER JOIN Transcript_Contents AS TC ON T.transcript_id = TC.transcript_id GROUP BY T.transcript_id ORDER BY COUNT(TC.student_course_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1;
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN (SELECT transcript_id, COUNT(*) as result_count              FROM Transcript_Contents              GROUP BY transcript_id              ORDER BY result_count ASC              LIMIT 1) AS T2  ON T1.transcript_id = T2.transcript_id
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.transcript_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN (SELECT transcript_id, COUNT(*) AS result_count FROM Transcript_Contents GROUP BY transcript_id) AS T2 ON T1.transcript_id = T2.transcript_id ORDER BY T2.result_count ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.transcript_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  LEFT JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(T2.student_course_id) ASC LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T.transcript_id, T.transcript_date  FROM Transcripts AS T  INNER JOIN Transcript_Contents AS TC ON T.transcript_id = TC.transcript_id  GROUP BY T.transcript_id  ORDER BY COUNT(TC.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1
SELECT T1.transcript_id, T1.transcript_date  FROM Transcripts AS T1  INNER JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(T2.student_course_id) ASC  LIMIT 1

SELECT T3.semester_name  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  INNER JOIN Semesters AS T3 ON T1.semester_id = T3.semester_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T3.semester_name  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T3.semester_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Semesters AS T3 ON T1.semester_id = T3.semester_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T3.semester_name HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT SE.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY SE.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT DISTINCT T3.semester_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Semesters AS T3 ON T1.semester_id = T3.semester_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor')
SELECT T3.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Semesters AS T3 ON T1.semester_id = T3.semester_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T3.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT SE.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY SE.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT T3.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Semesters AS T3 ON T1.semester_id = T3.semester_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T3.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Master', 'Bachelor')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_summary_name) = 2
SELECT S.semester_id FROM Semesters AS S INNER JOIN Student_Enrolment AS SE ON S.semester_id = SE.semester_id INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY S.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1  INNER JOIN Students AS T2 ON T1.student_id = T2.student_id  INNER JOIN Degree_Programs AS T3 ON T1.degree_program_id = T3.degree_program_id  WHERE T3.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT CASE WHEN T3.degree_summary_name = 'Master' THEN T2.student_id END) > 0     AND COUNT(DISTINCT CASE WHEN T3.degree_summary_name = 'Bachelor' THEN T2.student_id END) > 0;
SELECT T2.semester_name FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT S.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY S.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT S.semester_id  FROM Student_Enrolment AS SE  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id  WHERE DP.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY S.semester_id  HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT DISTINCT S.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY S.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT S.semester_id  FROM Student_Enrolment AS SE  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id  WHERE DP.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY S.semester_id  HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT DISTINCT T1.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT DISTINCT S.semester_id  FROM Student_Enrolment AS S  INNER JOIN Degree_Programs AS D ON S.degree_program_id = D.degree_program_id  WHERE D.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY S.semester_id  HAVING COUNT(DISTINCT D.degree_summary_name) = 2
SELECT S.semester_id FROM Student_Enrolment AS SE  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id  WHERE DP.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY S.semester_id  HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT S.semester_id  FROM Student_Enrolment AS SE  INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id  INNER JOIN Semesters AS S ON SE.semester_id = S.semester_id  WHERE DP.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY S.semester_id  HAVING COUNT(DISTINCT DP.degree_summary_name) = 2

SELECT SE.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY SE.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT SE.semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY SE.semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Master', 'Bachelor')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Masters', 'Bachelor') GROUP BY semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2)
SELECT T1.semester_id FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id  FROM Student_Enrolment AS T1 INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT semester_id FROM Student_Enrolment AS SE INNER JOIN Degree_Programs AS DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY semester_id HAVING COUNT(DISTINCT DP.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT DISTINCT T1.semester_id  FROM Student_Enrolment AS T2  INNER JOIN Degree_Programs AS T1 ON T2.degree_program_id = T1.degree_program_id  WHERE T1.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T2.semester_id  HAVING COUNT(DISTINCT T1.degree_summary_name) = 2
SELECT T1.semester_id FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2
SELECT T1.semester_id  FROM Student_Enrolment AS T1  INNER JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id  WHERE T2.degree_summary_name IN ('Master', 'Bachelor')  GROUP BY T1.semester_id  HAVING COUNT(DISTINCT T2.degree_summary_name) = 2;

SELECT COUNT(DISTINCT T1.address_id) FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT A.address_id) FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id;
SELECT COUNT(DISTINCT Addresses.address_id) FROM Students INNER JOIN Addresses ON Students.current_address_id = Addresses.address_id
SELECT COUNT(DISTINCT A.address_id) FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT S.current_address_id) FROM Students AS S INNER JOIN Addresses AS A ON A.address_id = S.current_address_id
SELECT COUNT(DISTINCT A.address_id) FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id
SELECT COUNT(DISTINCT T2.address_id) FROM Addresses AS T2 INNER JOIN Students AS T1 ON T1.current_address_id = T2.address_id
SELECT COUNT(DISTINCT A.address_id) FROM Students AS S INNER JOIN Addresses AS A ON S.current_address_id = A.address_id
SELECT COUNT(DISTINCT current_address_id) FROM Students
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT current_address_id) FROM Students
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT current_address_id) FROM Students
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT A.address_id) FROM Students AS S INNER JOIN Addresses AS A ON S.current_address_id = A.address_id
SELECT COUNT(DISTINCT current_address_id) FROM Students;
SELECT COUNT(DISTINCT A.address_id) FROM Students AS S INNER JOIN Addresses AS A ON S.current_address_id = A.address_id

SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id
SELECT DISTINCT T1.address_id, T1.line_1, T1.line_2, T1.city, T1.state_province_county, T1.zip_postcode, T1.country FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id
SELECT DISTINCT T1.* FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id
SELECT DISTINCT A.address_id FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id
SELECT DISTINCT T1.line_1, T1.line_2, T1.city, T1.state_province_county, T1.zip_postcode, T1.country FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id
SELECT DISTINCT T1.* FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id
SELECT DISTINCT T1.line_1, T1.line_2, T1.line_3, T1.city, T1.state_province_county, T1.zip_postcode, T1.country FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id
SELECT DISTINCT T1.* FROM Addresses AS T1 INNER JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.permanent_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.permanent_address_id OR A.address_id = S.current_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.permanent_address_id OR A.address_id = S.current_address_id
SELECT DISTINCT A.line_1, A.line_2, A.city, A.state_province_county, A.zip_postcode, A.country  FROM Addresses AS A  INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id
SELECT DISTINCT A.state_province_county, A.city, A.line_1, A.line_2, A.line_3, A.zip_postcode  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id
SELECT DISTINCT A.* FROM Addresses AS A  WHERE A.address_id IN (SELECT S.current_address_id FROM Students AS S)     OR A.address_id IN (SELECT S.permanent_address_id FROM Students AS S);
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.permanent_address_id
SELECT DISTINCT A.* FROM Addresses AS A INNER JOIN Students AS S ON A.address_id = S.current_address_id OR A.address_id = S.permanent_address_id

SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, email_address DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT * FROM Students ORDER BY last_name DESC;
SELECT * FROM Students ORDER BY last_name DESC;
SELECT * FROM Students ORDER BY last_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC
SELECT * FROM Students ORDER BY last_name DESC
SELECT * FROM Students ORDER BY last_name DESC;
SELECT * FROM Students ORDER BY last_name DESC;
SELECT student_id, first_name, middle_name, last_name, email_address, cell_mobile_number, date_first_registered, date_left, permanent_address_id FROM Students ORDER BY last_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC
SELECT first_name, last_name, cell_mobile_number, email_address FROM Students ORDER BY last_name DESC, first_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT student_id, first_name, middle_name, last_name, email_address, cell_mobile_number, date_first_registered, date_left, current_address_id, permanent_address_id FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC

SELECT other_student_details FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC;
SELECT other_student_details FROM Students ORDER BY last_name DESC, first_name DESC
SELECT first_name, last_name, middle_name, ssn, email_address, cell_mobile_number, date_first_registered, date_left, current_address_id, permanent_address_id, other_student_details FROM Students ORDER BY last_name DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC;
SELECT other_student_details FROM Students ORDER BY last_name DESC;
SELECT other_student_details FROM Students ORDER BY last_name DESC;
SELECT other_student_details FROM Students ORDER BY last_name DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC;
SELECT T1.other_student_details FROM Students AS T1 ORDER BY T1.last_name DESC
SELECT other_student_details FROM Students ORDER BY other_student_details DESC
SELECT other_student_details FROM Students ORDER BY other_student_details DESC
SELECT other_student_details, first_name, middle_name, last_name FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT other_student_details FROM Students ORDER BY other_student_details DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC, first_name DESC
SELECT * FROM Students ORDER BY last_name DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC, first_name DESC
SELECT other_student_details FROM Students ORDER BY last_name DESC
SELECT other_student_details FROM Students ORDER BY other_student_details DESC

SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h'
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h'
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT section_id, section_description, section_name FROM Sections WHERE section_name = 'h'
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT section_description, section_name, other_details FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';
SELECT * FROM Sections WHERE section_name = 'h';

SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h';
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'
SELECT section_description FROM Sections WHERE section_name = 'h'

SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT S.first_name FROM Students AS S INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id  WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582'
SELECT DISTINCT first_name FROM Students AS S INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id WHERE A.country = 'Haiti' UNION SELECT DISTINCT first_name FROM Students WHERE cell_mobile_number = '09700166582'
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id  WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582'
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id  WHERE A.country = 'Haiti'  UNION  SELECT DISTINCT first_name  FROM Students  WHERE cell_mobile_number = '09700166582';
SELECT DISTINCT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' UNION SELECT DISTINCT T1.first_name FROM Students AS T1 WHERE T1.cell_mobile_number = '09700166582'
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  WHERE A.country = 'Haiti'     OR S.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  LEFT JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti'     OR T1.cell_mobile_number = '09700166582'

SELECT first_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT T1.first_name FROM Students AS T1 WHERE T1.current_address_id IN (SELECT T2.address_id FROM Addresses AS T2 WHERE T2.country = 'Haiti') OR T1.cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  LEFT JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' UNION SELECT DISTINCT T1.first_name FROM Students AS T1 WHERE T1.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.permanent_address_id = A.address_id  WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id  WHERE T2.country = 'Haiti'     OR T1.cell_mobile_number = '09700166582'
SELECT DISTINCT first_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'
SELECT DISTINCT T1.first_name  FROM Students AS T1  INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id  WHERE T2.country = 'Haiti'     OR T1.cell_mobile_number = '09700166582';
SELECT DISTINCT S.first_name  FROM Students AS S  INNER JOIN Addresses AS A ON S.current_address_id = A.address_id  WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582'

SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC

SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC
SELECT Title FROM Cartoon ORDER BY Title ASC

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT T1.Title FROM Cartoon AS T1 WHERE T1.Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'

SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';

SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';

SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date

SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC;
SELECT T1.Title, T1.Directed_by FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel ORDER BY T2.Air_Date ASC
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT C.Title, C.Directed_by  FROM Cartoon AS C  INNER JOIN TV_series AS T ON C.Channel = T.Channel  ORDER BY T.Air_Date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Written_by = 'Ben Jones' OR Written_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT DISTINCT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT DISTINCT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
SELECT DISTINCT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT DISTINCT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')

SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1
SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1;
SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1
SELECT Country, COUNT(*) AS Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1
SELECT Country, COUNT(*) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1
SELECT Country, COUNT(*) AS Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1
SELECT Country, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1
SELECT Country, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1
SELECT Country, COUNT(id) AS NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1
SELECT Country, COUNT(*) AS Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1
SELECT Country, COUNT(id) AS number_of_channels FROM TV_Channel GROUP BY Country ORDER BY number_of_channels DESC LIMIT 1

SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1
SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1
SELECT Country, COUNT(id) AS ChannelCount FROM TV_Channel GROUP BY Country ORDER BY ChannelCount DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1;
SELECT Country, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Country ORDER BY channel_count DESC LIMIT 1
SELECT Country, COUNT(*) AS channel_count FROM TV_Channel GROUP BY Country ORDER BY channel_count DESC LIMIT 1
SELECT Country, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Country ORDER BY ChannelCount DESC LIMIT 1
SELECT Country, COUNT(*) AS channel_count FROM TV_Channel GROUP BY Country ORDER BY channel_count DESC LIMIT 1
SELECT Country, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1
SELECT Country, COUNT(*) as channel_count FROM TV_Channel GROUP BY Country ORDER BY channel_count DESC LIMIT 1
SELECT Country, COUNT(id) AS ChannelCount FROM TV_Channel GROUP BY Country ORDER BY ChannelCount DESC LIMIT 1
SELECT Country, COUNT(*) AS channel_count FROM TV_Channel GROUP BY Country ORDER BY channel_count DESC LIMIT 1

SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_names, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_names, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_names, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel
SELECT COUNT(DISTINCT series_name || '|' || Content) FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) AS distinct_series_names, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel;
SELECT COUNT(*) FROM (SELECT DISTINCT series_name, content FROM TV_Channel);
SELECT COUNT(DISTINCT series_name) AS distinct_series_names, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel;

SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel;
SELECT COUNT(*) FROM (SELECT DISTINCT `series_name` FROM `TV_Channel` UNION ALL SELECT DISTINCT `Content` FROM `TV_Channel`) AS combined_counts
SELECT COUNT(DISTINCT series_name || '|' || Content) FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel;
SELECT COUNT(DISTINCT series_name || '|' || Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series, COUNT(DISTINCT Content) AS distinct_contents FROM TV_Channel
SELECT COUNT(DISTINCT `series_name`) + COUNT(DISTINCT `Content`) FROM `TV_Channel`
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) AS distinct_series_count, COUNT(DISTINCT Content) AS distinct_content_count FROM TV_Channel;
SELECT COUNT(DISTINCT series_name || '|' || Content) FROM TV_Channel
SELECT COUNT(DISTINCT Content) + COUNT(DISTINCT series_name) FROM TV_Channel;
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT content) FROM TV_Channel
SELECT COUNT(DISTINCT Content) + COUNT(DISTINCT series_name) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel;
SELECT COUNT(DISTINCT series_name || ' ' || Content) FROM TV_Channel
SELECT COUNT(DISTINCT series_name) + COUNT(DISTINCT Content) FROM TV_Channel

SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT T1.Content FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT T1.Content FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT T1.Content FROM TV_Channel AS T1 WHERE T1.series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';

SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T1.Content FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T1.Content FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T1.Content FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'

SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'

SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT T2.Package_Option FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'Sky Radio'
SELECT DISTINCT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT T1.Package_Option FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T2.Episode = 'Sky Radio'

SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';

SELECT COUNT(id) FROM TV_Channel WHERE Language = 'English'
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';

SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language HAVING COUNT(id) = (SELECT MIN(channel_count) FROM (SELECT COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language ORDER BY COUNT(id) ASC LIMIT 1
SELECT Language, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language HAVING COUNT(id) = (SELECT MIN(channel_count) FROM (SELECT COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1
SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language ORDER BY COUNT(id) ASC LIMIT 1
SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(id) AS ChannelCount  FROM TV_Channel  GROUP BY Language  HAVING COUNT(id) = (SELECT MIN(ChannelCount) FROM (SELECT COUNT(id) AS ChannelCount FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) AS Channel_Count  FROM TV_Channel  GROUP BY Language  ORDER BY Channel_Count ASC  LIMIT 1
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(*) AS ChannelCount  FROM TV_Channel  GROUP BY Language  HAVING ChannelCount = (SELECT MIN(ChannelCount) FROM (SELECT COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language HAVING ChannelCount = (SELECT MIN(ChannelCount) FROM (SELECT COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) as Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(*) as Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
SELECT Language, COUNT(*) AS Channel_Count  FROM TV_Channel  GROUP BY Language  HAVING COUNT(*) = (SELECT MIN(Channel_Count) FROM (SELECT COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language HAVING COUNT(*) = (SELECT MIN(ChannelCount) FROM (SELECT COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language))

WITH LanguageCounts AS (SELECT `Language`, COUNT(`id`) AS `channel_count` FROM `TV_Channel` GROUP BY `Language`) SELECT `Language`, `channel_count` FROM LanguageCounts WHERE `channel_count` = (SELECT MIN(`channel_count`) FROM LanguageCounts)
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language HAVING COUNT(id) = (SELECT MIN(channel_count) FROM (SELECT COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language HAVING COUNT(id) = (SELECT MIN(channel_count) FROM (SELECT COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language HAVING COUNT(id) = (SELECT MIN(channel_count) FROM (SELECT COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language HAVING channel_count = (SELECT MIN(channel_count) FROM (SELECT COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language))
WITH LanguageCounts AS (SELECT Language, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Language) SELECT Language, channel_count FROM LanguageCounts WHERE channel_count = (SELECT MIN(channel_count) FROM LanguageCounts);
SELECT Language, COUNT(id) AS channel_count  FROM TV_Channel  GROUP BY Language  HAVING COUNT(id) = (SELECT MIN(channel_count)                      FROM (SELECT COUNT(id) AS channel_count                            FROM TV_Channel                            GROUP BY Language))
WITH LanguageCounts AS (SELECT `Language`, COUNT(`id`) AS `ChannelCount` FROM `TV_Channel` GROUP BY `Language`) SELECT `Language`, `ChannelCount` FROM LanguageCounts WHERE `ChannelCount` = (SELECT MIN(`ChannelCount`) FROM LanguageCounts)
SELECT Language, COUNT(id) AS Channel_Count  FROM TV_Channel  GROUP BY Language  HAVING COUNT(id) = (SELECT MIN(Channel_Count) FROM (SELECT COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language))
WITH LanguageCounts AS (SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language) SELECT Language, Channel_Count FROM LanguageCounts WHERE Channel_Count = (SELECT MIN(Channel_Count) FROM LanguageCounts);
SELECT Language, COUNT(*) AS channel_count  FROM TV_Channel  GROUP BY Language  HAVING COUNT(*) = (SELECT MIN(channel_count)                     FROM (SELECT COUNT(*) AS channel_count                           FROM TV_Channel                           GROUP BY Language))
SELECT Language, COUNT(*) AS ChannelCount  FROM TV_Channel  GROUP BY Language  HAVING COUNT(*) = (SELECT MIN(ChannelCount) FROM (SELECT COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(id) AS channel_count  FROM TV_Channel  GROUP BY Language  HAVING channel_count = (SELECT MIN(channel_count)                          FROM (SELECT COUNT(id) AS channel_count                                FROM TV_Channel                                GROUP BY Language))
SELECT Language, COUNT(*) AS Channel_Count  FROM TV_Channel  GROUP BY Language  HAVING COUNT(*) = (SELECT MIN(Channel_Count) FROM (SELECT COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language))
SELECT T1.Language, COUNT(T1.id) AS Channel_Count  FROM TV_Channel AS T1  GROUP BY T1.Language  HAVING COUNT(T1.id) = (SELECT MIN(Channel_Count) FROM (SELECT COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) AS channel_count FROM TV_Channel GROUP BY Language HAVING COUNT(*) = (SELECT MIN(channel_count) FROM (SELECT COUNT(*) AS channel_count FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) as ChannelCount  FROM TV_Channel  GROUP BY Language  HAVING COUNT(*) = (SELECT MIN(ChannelCount) FROM (SELECT COUNT(*) as ChannelCount FROM TV_Channel GROUP BY Language))
SELECT Language, COUNT(*) AS channel_count  FROM TV_Channel  GROUP BY Language  HAVING COUNT(*) = (SELECT MIN(channel_count)                     FROM (SELECT COUNT(*) AS channel_count                           FROM TV_Channel                           GROUP BY Language))
SELECT Language, COUNT(*) AS ChannelCount  FROM TV_Channel  GROUP BY Language  HAVING ChannelCount = (SELECT MIN(ChannelCount)                         FROM (SELECT COUNT(*) AS ChannelCount                               FROM TV_Channel                               GROUP BY Language))
SELECT Language, COUNT(*) AS channel_count  FROM TV_Channel  GROUP BY Language  HAVING channel_count = (SELECT MIN(channel_count)                          FROM (SELECT COUNT(*) AS channel_count                                FROM TV_Channel                                GROUP BY Language))

SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Number_of_TV_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language

SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(id) AS Number_of_TV_Channels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Language
SELECT Language, COUNT(DISTINCT id) AS Channel_Count FROM TV_Channel GROUP BY Language

SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM TV_Channel AS T2 INNER JOIN Cartoon AS T1 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T1.series_name FROM Cartoon AS T0 INNER JOIN TV_Channel AS T1 ON T0.Channel = T1.id WHERE T0.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T1.series_name  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Title = 'The Rise of the Blue Beetle!'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle!'

SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id INNER JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel INNER JOIN TV_Channel AS T3 ON T2.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id INNER JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id INNER JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T3.series_name FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel INNER JOIN TV_Channel AS T3 ON T2.Channel = T3.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle'
SELECT T1.series_name  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = 'The Rise of the Blue Beetle'
SELECT T2.series_name  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Title = 'The Rise of the Blue Beetle'

SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id INNER JOIN TV_series AS T3 ON T2.id = T3.Channel WHERE T3.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Title FROM Cartoon AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'

SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Title FROM Cartoon AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 WHERE T1.Channel IN (SELECT T2.id FROM TV_Channel AS T2 WHERE T2.series_name = 'Sky Radio')
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT C.Title FROM Cartoon AS C INNER JOIN TV_Channel AS T ON C.Channel = T.id WHERE T.series_name = 'Sky Radio'
SELECT T2.Title  FROM Cartoon AS T2  INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id  WHERE T1.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT C.Title  FROM Cartoon AS C  INNER JOIN TV_Channel AS T ON C.Channel = T.id  WHERE T.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Title FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Title FROM Cartoon AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'

SELECT Episode FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY CAST(Rating AS REAL) DESC
SELECT Episode FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY CAST(Rating AS REAL) DESC
SELECT Episode FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY CAST(Rating AS REAL) DESC
SELECT Episode FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY CAST(Rating AS REAL)
SELECT Episode FROM TV_series ORDER BY Rating ASC;
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC

SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode, Rating FROM TV_series ORDER BY CAST(Rating AS REAL);
SELECT Episode FROM TV_series ORDER BY CAST(Rating AS REAL);
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC;
SELECT Episode, Rating FROM TV_series ORDER BY Rating ASC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC;
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY Rating DESC
SELECT Episode FROM TV_series ORDER BY CAST(Rating AS REAL) DESC

SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
SELECT T1.Episode, T1.Rating FROM TV_series AS T1 ORDER BY T1.Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series WHERE Rating IS NOT NULL ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY CAST(Rating AS REAL) DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

SELECT MIN(Share), MAX(Share) FROM TV_series
SELECT MIN(Share), MAX(Share) FROM TV_series
SELECT MIN(Share), MAX(Share) FROM TV_series
SELECT MIN(Share), MAX(Share) FROM TV_series;
SELECT MIN(Share), MAX(Share) FROM TV_series;
SELECT MIN(Share), MAX(Share) FROM TV_series;
SELECT MIN(Share), MAX(Share) FROM TV_series
SELECT MIN("Share"), MAX("Share") FROM TV_series
SELECT MIN(Share), MAX(Share) FROM TV_series
SELECT MIN(Share), MAX(Share) FROM TV_series;
SELECT MIN(Share) AS Minimum_Share, MAX(Share) AS Maximum_Share FROM TV_series WHERE Share IS NOT NULL;
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series;
SELECT MIN(Share) AS min_share, MAX(Share) AS max_share FROM TV_series WHERE Share IS NOT NULL;
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series;
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series;
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series;
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series WHERE Share IS NOT NULL;
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series
SELECT MIN(Share) AS MinShare, MAX(Share) AS MaxShare FROM TV_series WHERE Share IS NOT NULL

SELECT MAX(Share), MIN(Share) FROM TV_series
SELECT MAX("Share"), MIN("Share") FROM TV_series;
SELECT MAX(Share), MIN(Share) FROM TV_series
SELECT MAX(Share), MIN(Share) FROM TV_series;
SELECT MAX(Share), MIN(Share) FROM TV_series
SELECT MAX(Share), MIN(Share) FROM TV_series
SELECT MAX(Share), MIN(Share) FROM TV_series;
SELECT MAX(Share), MIN(Share) FROM TV_series
SELECT MAX("Share"), MIN("Share") FROM TV_series
SELECT MAX(Share), MIN(Share) FROM TV_series
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series
SELECT MAX(Share) AS max_share, MIN(Share) AS min_share FROM TV_series;
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series
SELECT MAX(Share) AS Maximum_Share, MIN(Share) AS Minimum_Share FROM TV_series;
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series
SELECT MAX(Share) AS max_share, MIN(Share) AS min_share FROM TV_series;
SELECT MAX(Share) AS MaxShare, MIN(Share) AS MinShare FROM TV_series;

SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';

SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT T1.Air_Date FROM TV_series AS T1 WHERE T1.Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'

SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'

SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT T1.Weekly_Rank FROM TV_series AS T1 INNER JOIN Cartoon AS T2 ON T1.Channel = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT "Weekly_Rank" FROM TV_series WHERE "Episode" = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'

SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'
SELECT T3.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T1.Channel, T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T3.series_name  FROM TV_series AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name  FROM TV_series AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Episode = 'A Love of a Lifetime'

SELECT T1.Channel FROM TV_series AS T1 WHERE T1.Episode = 'A Love of a Lifetime'
SELECT series_name FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Channel FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT series_name FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT Channel FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT T2.series_name FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T2.Title FROM TV_series AS T1 INNER JOIN Cartoon AS T2 ON T1.Channel = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime'
SELECT DISTINCT Channel FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT series_name FROM TV_series WHERE Episode = 'A Love of a Lifetime'
SELECT DISTINCT T1.Series_name FROM TV_series AS T1 WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T1.Title FROM TV_series AS T2 INNER JOIN Cartoon AS T1 ON T2.Channel = T1.Channel WHERE T2.Episode = 'A Love of a Lifetime'
SELECT series_name FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT T2.series_name FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel WHERE T1.Title = 'A Love of a Lifetime'
SELECT DISTINCT T1.Title FROM TV_series AS T1 WHERE T1.Episode = 'A Love of a Lifetime'
SELECT T1.Channel FROM TV_series AS T1 WHERE T1.Episode = 'A Love of a Lifetime'
SELECT DISTINCT T1.Episode FROM TV_series AS T1 WHERE T1.Episode = 'A Love of a Lifetime'

SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T3.Episode FROM TV_series AS T3 INNER JOIN TV_Channel AS T2 ON T3.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T3.Episode  FROM TV_series AS T3  INNER JOIN TV_Channel AS T2 ON T3.Channel = T2.id  WHERE T2.series_name = 'Sky Radio'
SELECT T3.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T3 ON T1.id = T3.Channel WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'

SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE Content = 'Sky Radio')
SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T1.Episode FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'
SELECT T2.Episode FROM TV_series AS T2 INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T1.series_name = 'Sky Radio'

SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon GROUP BY Directed_by

SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(Title) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS Cartoon_Count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS Cartoon_Count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS Cartoon_Count FROM Cartoon GROUP BY Directed_by
SELECT Directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY Directed_by
SELECT Written_by, COUNT(*) AS Cartoon_Count FROM Cartoon GROUP BY Written_by
SELECT Directed_by, COUNT(*) AS Cartoon_Count FROM Cartoon GROUP BY Directed_by

SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code, Channel FROM Cartoon ORDER BY STRFTIME('%Y-%m-%d', original_air_date) DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1

SELECT T1.production_code, T1.Channel FROM Cartoon AS T1 ORDER BY T1.Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code, channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY STRFTIME('%Y-%m-%d', Original_air_date) DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY STRFTIME('%Y-%m-%d', Original_air_date) DESC LIMIT 1
SELECT production_code, Channel FROM Cartoon WHERE production_code = (SELECT MAX(production_code) FROM Cartoon)
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1

SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T3.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T3 ON T1.id = T3.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T3.Episode AS series_name  FROM TV_Channel AS T1  INNER JOIN TV_series AS T3 ON T1.id = T3.Channel  WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Episode AS series_name  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.Hight_definition_TV = 'yes'

SELECT T1.Package_Option, T2.id FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes';
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.series_name FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Title  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Episode  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT T1.Package_Option, T1.series_name  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.Hight_definition_TV = 'yes'
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes'
SELECT "Package_Option", "series_name" FROM TV_Channel WHERE "Hight_definition_TV" = 'yes'
SELECT T1.Package_Option, T2.Episode FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'

SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel INNER JOIN TV_Channel AS T3 ON T2.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country  FROM Cartoon AS T2  INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id  WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T4.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T4 ON T1.Channel = T4.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'

SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel INNER JOIN TV_Channel AS T3 ON T2.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_series AS T2 ON T1.Channel = T2.Channel INNER JOIN TV_Channel AS T3 ON T2.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T1.Country  FROM Cartoon AS T2  INNER JOIN TV_Channel AS T1 ON T2.Channel = T1.id  WHERE T2.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT TC.Country FROM Cartoon AS C INNER JOIN TV_Channel AS TC ON C.Channel = TC.id WHERE C.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'
SELECT DISTINCT T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Written_by = 'Todd Casey'

SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL;
SELECT T1.Country FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by IS NULL OR T2.Written_by <> 'Todd Casey'
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country FROM TV_Channel AS T2 LEFT JOIN Cartoon AS T1 ON T2.id = T1.Channel AND T1.Written_by = 'Todd Casey' WHERE T1.id IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Written_by IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Written_by IS NULL;
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country  FROM TV_Channel AS T2  LEFT JOIN Cartoon AS T1 ON T2.id = T1.Channel AND T1.Written_by = 'Todd Casey'  WHERE T1.Channel IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL;

SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country FROM TV_Channel AS T2 WHERE T2.id NOT IN (SELECT T1.Channel FROM Cartoon AS T1 WHERE T1.Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country FROM TV_Channel AS T2 WHERE T2.Country NOT IN (SELECT DISTINCT T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country FROM TV_Channel AS T2 WHERE T2.Country NOT IN (SELECT T3.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T1.Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE Country NOT IN (SELECT DISTINCT Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE Country NOT IN (SELECT T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Written_by = 'Todd Casey'  WHERE T2.Channel IS NULL
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT T3.Country  FROM TV_Channel AS T3  WHERE T3.id NOT IN (SELECT T1.Channel FROM Cartoon AS T1 WHERE T1.Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country  FROM TV_Channel AS T2  WHERE T2.id NOT IN (     SELECT T1.Channel      FROM Cartoon AS T1      WHERE T1.Written_by = 'Todd Casey' )
SELECT DISTINCT T3.Country  FROM TV_Channel AS T3  LEFT JOIN (SELECT DISTINCT T1.Channel              FROM Cartoon AS T1              WHERE T1.Written_by = 'Todd Casey') AS T2  ON T3.id = T2.Channel  WHERE T2.Channel IS NULL
SELECT DISTINCT T3.Country  FROM TV_Channel AS T3  WHERE T3.id NOT IN (SELECT T1.Channel FROM Cartoon AS T1 WHERE T1.Written_by = 'Todd Casey')
SELECT DISTINCT T1.Country  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Written_by = 'Todd Casey')
SELECT DISTINCT T2.Country FROM TV_Channel AS T2 LEFT JOIN Cartoon AS T1 ON T2.id = T1.Channel WHERE T1.Written_by IS NULL OR T1.Written_by <> 'Todd Casey'

SELECT T3.series_name, T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id INNER JOIN TV_series AS T3 ON T1.Channel = T3.Channel WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country FROM TV_Channel AS T2 INNER JOIN Cartoon AS T3 ON T2.id = T3.Channel WHERE T3.Directed_by = 'Ben Jones' OR T3.Directed_by = 'Michael Chang'
SELECT T3.series_name, T3.Country FROM TV_Channel AS T3 INNER JOIN Cartoon AS T1 ON T3.id = T1.Channel WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country FROM TV_Channel AS T2 INNER JOIN Cartoon AS T1 ON T1.Channel = T2.id WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country FROM TV_Channel AS T2 INNER JOIN Cartoon AS T1 ON T2.id = T1.Channel WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel INNER JOIN Cartoon AS T3 ON T2.Channel = T3.Channel WHERE T3.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T2.series_name, T1.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T1.Country  FROM TV_Channel AS T2  INNER JOIN TV_series AS T3 ON T2.id = T3.Channel  INNER JOIN Cartoon AS T1 ON T1.Channel = T3.Channel  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T1.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T2.series_name, T1.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T1.series_name, T2.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')

SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang') GROUP BY T1.series_name, T1.Country HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.series_name, T1.Country  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT T1.series_name, T2.country FROM TV_Channel AS T2 INNER JOIN TV_series AS T1 ON T1.Channel = T2.id INNER JOIN Cartoon AS T3 ON T3.Channel = T2.id WHERE T3.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT T1.series_name, T2.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.series_name, T2.Country  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.series_name, T1.Country  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT DISTINCT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.id  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.series_name, T1.Country  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT DISTINCT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.series_name, T1.Country  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.series_name, T1.Country  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT DISTINCT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T3.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T3.series_name, T2.Country  HAVING COUNT(DISTINCT T1.Directed_by) = 2
SELECT DISTINCT TC.series_name, TC.Country  FROM TV_Channel AS TC  WHERE TC.id IN (     SELECT C1.Channel      FROM Cartoon AS C1      WHERE C1.Directed_by = 'Ben Jones' ) AND TC.id IN (     SELECT C2.Channel      FROM Cartoon AS C2      WHERE C2.Directed_by = 'Michael Chang' );
SELECT T1.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T2.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN TV_series AS T2 ON T1.id = T2.Channel  INNER JOIN Cartoon AS T3 ON T2.id = T3.Production_code  WHERE T3.Directed_by IN ('Ben Jones', 'Michael Chang') GROUP BY T2.series_name, T1.Country  HAVING COUNT(DISTINCT T3.Directed_by) = 2
SELECT DISTINCT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T2.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.Channel  HAVING COUNT(DISTINCT T1.Directed_by) = 2
SELECT DISTINCT T2.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T2.Title  HAVING COUNT(DISTINCT T2.Directed_by) = 2
SELECT DISTINCT T1.series_name, T1.Country  FROM TV_Channel AS T1  INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Directed_by IN ('Ben Jones', 'Michael Chang')
SELECT DISTINCT T1.series_name, T2.Country  FROM Cartoon AS T1  INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')  GROUP BY T1.Channel  HAVING COUNT(DISTINCT T1.Directed_by) = 2

SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'

SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
SELECT DISTINCT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
SELECT "Pixel_aspect_ratio_PAR", "Country" FROM TV_Channel WHERE "Language" <> 'English'

SELECT T1.id FROM TV_Channel AS T1 WHERE T1.Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.Country IN (SELECT T2.Country FROM TV_Channel AS T2 GROUP BY T2.Country HAVING COUNT(T2.id) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)
SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)
SELECT DISTINCT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)

SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(Channel) > 2
SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(Channel) > 2 UNION SELECT Channel FROM Cartoon GROUP BY Channel HAVING COUNT(Channel) > 2
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id IN (SELECT T2.Channel FROM TV_series AS T2 GROUP BY T2.Channel HAVING COUNT(*) > 2)
SELECT T1.id  FROM TV_Channel AS T1  LEFT JOIN TV_series AS T2 ON T2.Channel = T1.id  LEFT JOIN Cartoon AS T3 ON T3.Channel = T1.id  GROUP BY T1.id  HAVING COUNT(DISTINCT T2.id) + COUNT(DISTINCT T3.id) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(id) > 2
SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(*) > 2
SELECT DISTINCT T2.id FROM TV_Channel AS T2 WHERE T2.id IN (SELECT T1.Channel FROM TV_series AS T1 GROUP BY T1.Channel HAVING COUNT(*) > 2) OR T2.id IN (SELECT T3.Channel FROM Cartoon AS T3 GROUP BY T3.Channel HAVING COUNT(*) > 2)
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN TV_series AS T2 ON T1.id = T2.Channel LEFT JOIN Cartoon AS T3 ON T1.id = T3.Channel GROUP BY T1.id HAVING COUNT(T2.id) + COUNT(T3.id) > 2
SELECT T1.Channel FROM Cartoon AS T1 GROUP BY T1.Channel HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT T1.id FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel GROUP BY T1.id HAVING COUNT(T2.id) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2
SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2

SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE NOT EXISTS (SELECT 1 FROM Cartoon AS T2 WHERE T2.Channel = T1.id AND T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE NOT EXISTS (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' AND Channel = T1.id)
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT DISTINCT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT DISTINCT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT DISTINCT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')

SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by IS NULL
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE NOT EXISTS (SELECT 1 FROM Cartoon WHERE Cartoon.Channel = TV_Channel.id AND Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE NOT EXISTS (SELECT 1 FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones' AND T2.Channel = T1.id)
SELECT T1.id FROM TV_Channel AS T1 WHERE NOT EXISTS (SELECT 1 FROM Cartoon AS T2 WHERE T2.Channel = T1.id AND T2.Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT DISTINCT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT DISTINCT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT DISTINCT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.id FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT DISTINCT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')

SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel AS T1 WHERE NOT EXISTS (SELECT 1 FROM Cartoon AS T2 WHERE T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.Package_Option FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones' WHERE T2.Channel IS NULL
SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT DISTINCT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones');
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones'  WHERE T2.Channel IS NULL
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T2.Package_Option  FROM TV_Channel AS T2  WHERE T2.id NOT IN (SELECT T1.Channel FROM Cartoon AS T1 WHERE T1.Directed_by = 'Ben Jones')

SELECT DISTINCT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT DISTINCT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel AND T2.Directed_by = 'Ben Jones'  WHERE T2.Channel IS NULL
SELECT DISTINCT TC.Package_Option  FROM TV_Channel AS TC  LEFT JOIN Cartoon AS C ON TC.id = C.Channel AND C.Directed_by = 'Ben Jones'  WHERE C.Channel IS NULL
SELECT DISTINCT T2.Package_Option  FROM TV_Channel AS T2  WHERE T2.id NOT IN (SELECT DISTINCT T1.Channel FROM Cartoon AS T1 WHERE T1.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT DISTINCT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option  FROM TV_Channel AS T1  WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT DISTINCT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')
SELECT DISTINCT TV_Channel.Package_Option  FROM TV_Channel  WHERE TV_Channel.id NOT IN (SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones')
SELECT DISTINCT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT DISTINCT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')

SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT People_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;

SELECT COUNT(Poker_Player_ID) FROM poker_player;
SELECT COUNT(DISTINCT People_ID) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(Poker_Player_ID) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player;
SELECT COUNT(*) FROM poker_player;

SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC

SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC;
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC

SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID
SELECT Final_Table_Made, Best_Finish FROM poker_player;
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player;
SELECT Final_Table_Made, Best_Finish FROM poker_player;
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player;
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1

SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT "Final_Table_Made", "Best_Finish" FROM poker_player
SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1
SELECT Final_Table_Made, Best_Finish FROM poker_player
SELECT T1.Final_Table_Made, T1.Best_Finish FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT Final_Table_Made, Best_Finish FROM poker_player

SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player

SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;
SELECT AVG(Earnings) FROM poker_player;

SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)

SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);

SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX("Final_Table_Made") FROM poker_player WHERE "Earnings" < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX("Final_Table_Made") FROM poker_player WHERE "Earnings" < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000

SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(T1.Final_Table_Made) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX("Final_Table_Made") FROM poker_player WHERE "Earnings" < 200000
SELECT MAX("Final_Table_Made") FROM poker_player WHERE "Earnings" < 200000
SELECT MAX(T1."Final_Table_Made") FROM poker_player AS T1 WHERE T1."Earnings" < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000

SELECT DISTINCT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT Name FROM people
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT Name FROM people
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID

SELECT DISTINCT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT Name FROM people;
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT DISTINCT Name FROM people
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID

SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT DISTINCT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT DISTINCT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings > 300000

SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings > 300000
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000
SELECT T2.Name  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings > 300000
SELECT T1.Name  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Earnings > 300000
SELECT T2.Name  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings > 300000

SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T2.People_ID = T1.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T2.People_ID = T1.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC

SELECT T1.Name, COUNT(T2.Final_Table_Made) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name ORDER BY COUNT(T2.Final_Table_Made) ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY COUNT(T1.Final_Table_Made) ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID GROUP BY T2.People_ID ORDER BY COUNT(T1.Final_Table_Made) ASC
SELECT T2.Name, COUNT(T1.Final_Table_Made) AS Final_Table_Count FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY Final_Table_Count ASC
SELECT T2.Name, COUNT(T1.Final_Table_Made) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY COUNT(T1.Final_Table_Made) ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY COUNT(T1.Final_Table_Made) ASC
SELECT T2.Name FROM people AS T2 LEFT JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID GROUP BY T2.People_ID ORDER BY COUNT(T1.Final_Table_Made) ASC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY COUNT(T1.Final_Table_Made) ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY SUM(T1.Final_Table_Made) ASC
SELECT P.Name FROM people AS P INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID ORDER BY PP.Final_Table_Made ASC
SELECT P.Name FROM poker_player AS PP INNER JOIN people AS P ON PP.People_ID = P.People_ID ORDER BY PP.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T2.Name ORDER BY SUM(T1.Final_Table_Made) ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT P.Name FROM poker_player AS PP INNER JOIN people AS P ON PP.People_ID = P.People_ID GROUP BY P.Name ORDER BY SUM(PP.Final_Table_Made) ASC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC

SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date FROM poker_player AS PP INNER JOIN people AS P ON PP.People_ID = P.People_ID WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date  FROM poker_player AS PP  INNER JOIN people AS P ON PP.People_ID = P.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date  FROM poker_player AS PP  INNER JOIN people AS P ON PP.People_ID = P.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date  FROM poker_player AS PP  INNER JOIN people AS P ON PP.People_ID = P.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player);
SELECT T1.Birth_Date  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1
SELECT P.Birth_Date  FROM poker_player AS PP  INNER JOIN people AS P ON PP.People_ID = P.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date FROM poker_player AS PP INNER JOIN people AS P ON PP.People_ID = P.People_ID WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date  FROM people AS P  INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player);

SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT p.Birth_Date FROM people AS p INNER JOIN poker_player AS pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings ASC LIMIT 1
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)
SELECT B.Birth_Date  FROM people AS B  INNER JOIN poker_player AS P ON B.People_ID = P.People_ID  WHERE P.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date  FROM people AS P  INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date FROM people AS P INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date FROM people AS P INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT P.Birth_Date  FROM people AS P  INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T2.Birth_Date  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Earnings = (SELECT MIN(Earnings) FROM poker_player);
SELECT P.Birth_Date  FROM people AS P  INNER JOIN poker_player AS PP ON P.People_ID = PP.People_ID  WHERE PP.Earnings = (SELECT MIN(Earnings) FROM poker_player)
SELECT T1.Birth_Date  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Earnings = (SELECT MIN(Earnings) FROM poker_player);

SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT pp.Money_Rank  FROM poker_player AS pp  INNER JOIN people AS p ON pp.People_ID = p.People_ID  WHERE p.Height = (SELECT MAX(Height) FROM people);
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(T2.Height) FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player))
SELECT pp.Money_Rank  FROM poker_player AS pp  INNER JOIN people AS p ON pp.People_ID = p.People_ID  WHERE p.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height = (SELECT MAX(Height) FROM people);

SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM poker_player AS T2 INNER JOIN people AS T1 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM poker_player AS T2 INNER JOIN people AS T1 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM poker_player AS T2 INNER JOIN people AS T1 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM poker_player AS T2 INNER JOIN people AS T1 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(T3.Height) FROM people AS T3)
SELECT T2.Money_Rank  FROM people AS T1  INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  WHERE T1.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height = (SELECT MAX(Height) FROM people)
SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)

SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T2.Earnings) FROM poker_player AS T2 INNER JOIN people AS T1 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings)  FROM poker_player AS T1  INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200

SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T2.Earnings) FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200
SELECT AVG(T1.Earnings) FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200

SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM people AS T2 INNER JOIN poker_player AS T1 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC

SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T1.Name FROM people AS T1 INNER JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC
SELECT p.Name FROM people AS p INNER JOIN poker_player AS pp ON p.People_ID = pp.People_ID ORDER BY pp.Earnings DESC

SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) AS Number_of_People FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) AS NumberOfPeople FROM people GROUP BY Nationality;

SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(People_ID) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(People_ID) AS Count FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;

SELECT Nationality, COUNT(*) AS count FROM people GROUP BY Nationality ORDER BY count DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(People_ID) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(Nationality) DESC LIMIT 1
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT nationality FROM people GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(Nationality) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(Nationality) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(People_ID) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT DISTINCT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(DISTINCT People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2

SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT DISTINCT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2

SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC;
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC

SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC;
SELECT Name, Birth_Date FROM people ORDER BY Name ASC;
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name ASC

SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';

SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality <> 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT T1.Name FROM people AS T1 WHERE T1.Nationality <> 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality <> 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia'
SELECT Name FROM people WHERE Nationality != 'Russia';

SELECT T1.Name FROM people AS T1 WHERE T1.People_ID NOT IN (SELECT T2.People_ID FROM poker_player AS T2)
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);
SELECT DISTINCT p.Name FROM people AS p LEFT JOIN poker_player AS pp ON p.People_ID = pp.People_ID WHERE pp.People_ID IS NULL
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT DISTINCT T1.Name  FROM people AS T1  WHERE T1.People_ID NOT IN (SELECT T2.People_ID FROM poker_player AS T2)
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT DISTINCT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 WHERE T1.People_ID NOT IN (SELECT T2.People_ID FROM poker_player AS T2)
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 WHERE T1.People_ID NOT IN (SELECT T2.People_ID FROM poker_player AS T2)
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 WHERE T1.People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT T1.Name FROM people AS T1 WHERE NOT EXISTS (SELECT * FROM poker_player AS T2 WHERE T1.People_ID = T2.People_ID)
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT P.Name FROM people AS P LEFT JOIN poker_player AS PP ON P.People_ID = PP.People_ID WHERE PP.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.People_ID IS NULL
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT T1.Name FROM people AS T1 LEFT JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poker_Player_ID IS NULL

SELECT COUNT(DISTINCT Nationality) FROM people
SELECT COUNT(DISTINCT Nationality) FROM people
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;

SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;
SELECT COUNT(DISTINCT Nationality) FROM people;

SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;

SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC;
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC;
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC

SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES;
SELECT T1.vote_id, T1.phone_number, T2.state FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES
SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES;
SELECT V.vote_id, V.phone_number, V.state FROM VOTES AS V
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES;
SELECT T1.vote_id, T1.phone_number, T1.state FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state
SELECT vote_id, phone_number, state FROM VOTES

SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE;
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE;
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE

SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT MAX(created) FROM VOTES WHERE state = 'CA';

SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';

SELECT DISTINCT state, created FROM VOTES;
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES;
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES;
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES;
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT V.state, V.created FROM VOTES AS V INNER JOIN AREA_CODE_STATE AS A ON V.state = A.state
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES
SELECT DISTINCT state, created FROM VOTES

SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name FROM CONTESTANTS AS T2 INNER JOIN VOTES AS T1 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number, T2.contestant_name HAVING COUNT(T1.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name FROM CONTESTANTS AS T2 WHERE T2.contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)
SELECT T1.contestant_number, T2.contestant_name FROM CONTESTANTS AS T2 INNER JOIN VOTES AS T1 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(T1.vote_id) >= 2
SELECT T1.contestant_number, T2.contestant_name FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T2.contestant_name HAVING COUNT(T1.vote_id) >= 2
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.vote_id) >= 2
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.vote_id) >= 2
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.phone_number) >= 2
SELECT T2.contestant_number, T2.contestant_name FROM CONTESTANTS AS T2 INNER JOIN VOTES AS T1 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number HAVING COUNT(T1.vote_id) >= 2
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) >= 2
SELECT T1.contestant_number, T1.contestant_name  FROM CONTESTANTS AS T1  INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_number, T1.contestant_name  HAVING COUNT(T2.vote_id) >= 2
SELECT T1.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_number  HAVING COUNT(T1.phone_number) >= 2
SELECT T1.contestant_number, T1.contestant_name  FROM CONTESTANTS AS T1  INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_number, T1.contestant_name  HAVING COUNT(T2.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number  HAVING COUNT(T1.vote_id) >= 2
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) >= 2
SELECT T1.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) >= 2

SELECT T1.contestant_number, T2.contestant_name FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY COUNT(T1.vote_id) ASC LIMIT 1
WITH VoteCounts AS (SELECT contestant_number, COUNT(vote_id) AS vote_count FROM VOTES GROUP BY contestant_number) SELECT T1.contestant_number, T2.contestant_name FROM VoteCounts AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.vote_count = (SELECT MIN(vote_count) FROM VoteCounts)
SELECT T2.contestant_number, T2.contestant_name  FROM CONTESTANTS AS T2  INNER JOIN (SELECT contestant_number, COUNT(*) AS vote_count              FROM VOTES              GROUP BY contestant_number) AS T1  ON T2.contestant_number = T1.contestant_number  WHERE T1.vote_count = (SELECT MIN(vote_count)                         FROM (SELECT contestant_number, COUNT(*) AS vote_count                               FROM VOTES                               GROUP BY contestant_number));
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 WHERE T1.contestant_number = (SELECT T2.contestant_number FROM VOTES AS T2 GROUP BY T2.contestant_number ORDER BY COUNT(*) ASC LIMIT 1)
SELECT C.contestant_number, C.contestant_name  FROM CONTESTANTS C  JOIN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) = (SELECT MIN(vote_count) FROM (SELECT COUNT(*) AS vote_count FROM VOTES GROUP BY contestant_number))) AS V ON C.contestant_number = V.contestant_number
SELECT T2.contestant_number, T2.contestant_name FROM CONTESTANTS AS T2 INNER JOIN (SELECT contestant_number, COUNT(*) AS vote_count FROM VOTES GROUP BY contestant_number ORDER BY vote_count ASC LIMIT 1) AS T1 ON T1.contestant_number = T2.contestant_number
SELECT T2.contestant_number, T2.contestant_name FROM CONTESTANTS AS T2 INNER JOIN (SELECT contestant_number, COUNT(*) AS vote_count FROM VOTES GROUP BY contestant_number ORDER BY vote_count ASC LIMIT 1) AS T1 ON T2.contestant_number = T1.contestant_number
SELECT T2.contestant_number, T2.contestant_name  FROM CONTESTANTS AS T2  INNER JOIN (SELECT contestant_number FROM VOTES GROUP BY contestant_number ORDER BY COUNT(*) ASC LIMIT 1) AS T1  ON T2.contestant_number = T1.contestant_number
SELECT T2.contestant_number, T2.contestant_name  FROM CONTESTANTS AS T2  INNER JOIN (SELECT contestant_number, COUNT(vote_id) AS vote_count              FROM VOTES              GROUP BY contestant_number              ORDER BY vote_count ASC              LIMIT 1) AS T1  ON T2.contestant_number = T1.contestant_number;
SELECT T2.contestant_number, T2.contestant_name FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number ORDER BY COUNT(T1.vote_id) ASC LIMIT 1
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number  ORDER BY COUNT(T1.vote_id) ASC  LIMIT 1
SELECT T1.contestant_number, T1.contestant_name  FROM CONTESTANTS AS T1  INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_number, T1.contestant_name  HAVING COUNT(T2.vote_id) = (SELECT MIN(vote_count) FROM (SELECT COUNT(T3.vote_id) AS vote_count FROM VOTES AS T3 GROUP BY T3.contestant_number))
SELECT T1.contestant_number, T2.contestant_name  FROM (SELECT contestant_number, COUNT(*) AS vote_count        FROM VOTES        GROUP BY contestant_number) AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  WHERE T1.vote_count = (SELECT MIN(vote_count) FROM (SELECT COUNT(*) AS vote_count                                                     FROM VOTES                                                     GROUP BY contestant_number))
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T2.contestant_number, T2.contestant_name  HAVING COUNT(T1.vote_id) = (SELECT MIN(vote_count) FROM (SELECT COUNT(*) AS vote_count FROM VOTES GROUP BY contestant_number))
SELECT T2.contestant_number, T2.contestant_name FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number, T2.contestant_name ORDER BY COUNT(T1.vote_id) ASC LIMIT 1
SELECT T2.contestant_number, T2.contestant_name  FROM CONTESTANTS AS T2  INNER JOIN (SELECT contestant_number, COUNT(*) AS vote_count              FROM VOTES              GROUP BY contestant_number) AS T1  ON T2.contestant_number = T1.contestant_number  WHERE T1.vote_count = (SELECT MIN(vote_count) FROM (SELECT COUNT(*) AS vote_count                                                        FROM VOTES                                                        GROUP BY contestant_number))
SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  GROUP BY T1.contestant_number  ORDER BY COUNT(T1.vote_id) ASC  LIMIT 1
SELECT T1.contestant_number, T1.contestant_name  FROM CONTESTANTS AS T1  INNER JOIN (SELECT contestant_number, COUNT(*) AS vote_count              FROM VOTES              GROUP BY contestant_number) AS T2  ON T1.contestant_number = T2.contestant_number  WHERE T2.vote_count = (SELECT MIN(vote_count) FROM (SELECT COUNT(*) AS vote_count FROM VOTES GROUP BY contestant_number))
SELECT T1.contestant_number, T2.contestant_name  FROM (SELECT contestant_number, COUNT(*) AS vote_count        FROM VOTES        GROUP BY contestant_number) AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  ORDER BY T1.vote_count ASC  LIMIT 1
SELECT T1.contestant_number, T1.contestant_name  FROM CONTESTANTS AS T1  INNER JOIN (SELECT contestant_number, COUNT(*) AS vote_count              FROM VOTES              GROUP BY contestant_number) AS T2  ON T1.contestant_number = T2.contestant_number  WHERE T2.vote_count = (SELECT MIN(vote_count) FROM (SELECT COUNT(*) AS vote_count                                                     FROM VOTES                                                     GROUP BY contestant_number))

SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');

SELECT COUNT(contestant_number) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES);
SELECT COUNT(*) FROM CONTESTANTS WHERE NOT EXISTS (SELECT 1 FROM VOTES WHERE VOTES.contestant_number = CONTESTANTS.contestant_number);
SELECT COUNT(*) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id IS NULL
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES);
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM VOTES);
SELECT COUNT(*) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number IS NULL
SELECT COUNT(*) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number IS NULL
SELECT COUNT(T1.contestant_number) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number IS NULL
SELECT COUNT(*) FROM `CONTESTANTS` AS `T1` LEFT JOIN `VOTES` AS `T2` ON `T1`.`contestant_number` = `T2`.`contestant_number` WHERE `T2`.`contestant_number` IS NULL;
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES);
SELECT COUNT(*) FROM CONTESTANTS AS T1 WHERE T1.contestant_number NOT IN (SELECT DISTINCT T2.contestant_number FROM VOTES AS T2)
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM VOTES);
SELECT COUNT(T1.contestant_number)  FROM CONTESTANTS AS T1  LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number  WHERE T2.contestant_number IS NULL
SELECT COUNT(T1.contestant_number) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id IS NULL
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT COUNT(*) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number IS NULL
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM VOTES)
SELECT COUNT(*) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id IS NULL
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM VOTES)
SELECT COUNT(T1.contestant_number)  FROM CONTESTANTS AS T1  LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number  WHERE T2.contestant_number IS NULL

SELECT AREA_CODE_STATE.area_code FROM VOTES INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state GROUP BY AREA_CODE_STATE.area_code ORDER BY COUNT(VOTES.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T2.area_code FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.area_code ORDER BY COUNT(T1.vote_id) DESC LIMIT 1;
SELECT T2.state FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.state ORDER BY COUNT(T1.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT state FROM VOTES INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state GROUP BY state ORDER BY COUNT(vote_id) DESC LIMIT 1
SELECT T2.area_code FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.area_code ORDER BY COUNT(T1.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T2.area_code FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.area_code ORDER BY COUNT(T1.vote_id) DESC LIMIT 1
SELECT T1.area_code  FROM AREA_CODE_STATE AS T1  INNER JOIN VOTES AS T2 ON T1.state = T2.state  GROUP BY T1.area_code  ORDER BY COUNT(T2.vote_id) DESC  LIMIT 1
SELECT T1.area_code  FROM AREA_CODE_STATE AS T1  INNER JOIN VOTES AS T2 ON T1.state = T2.state  GROUP BY T1.area_code  ORDER BY COUNT(T2.vote_id) DESC  LIMIT 1
SELECT T2.area_code FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.area_code ORDER BY COUNT(T1.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM VOTES AS T2 INNER JOIN AREA_CODE_STATE AS T1 ON T2.state = T1.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.phone_number) DESC LIMIT 1
SELECT T2.area_code  FROM VOTES AS T1  INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state  GROUP BY T2.area_code  ORDER BY COUNT(T1.vote_id) DESC  LIMIT 1;
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 INNER JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(T2.vote_id) DESC LIMIT 1

SELECT V.created, V.state, V.phone_number FROM VOTES AS V INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT T1.created, T1.state, T1.phone_number  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'
SELECT V.created, V.state, V.phone_number  FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name = 'Tabatha Gehling'

SELECT DISTINCT V.phone_number FROM VOTES AS V  INNER JOIN CONTESTANTS AS C1 ON V.contestant_number = C1.contestant_number  INNER JOIN CONTESTANTS AS C2 ON V.contestant_number = C2.contestant_number  WHERE C1.contestant_name = 'Tabatha Gehling' AND C2.contestant_name = 'Kelly Clauss'
SELECT T1.area_code  FROM AREA_CODE_STATE AS T1  INNER JOIN VOTES AS T2 ON T1.state = T2.state  INNER JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number  WHERE T3.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss')  GROUP BY T1.area_code  HAVING COUNT(DISTINCT T3.contestant_name) = 2
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 WHERE T1.state IN (SELECT state FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss')) GROUP BY state HAVING COUNT(DISTINCT contestant_number) = 2)
SELECT T3.area_code  FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  INNER JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state  WHERE T1.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY T3.area_code  HAVING COUNT(DISTINCT T1.contestant_number) = 2
SELECT T1.area_code  FROM AREA_CODE_STATE AS T1  INNER JOIN VOTES AS T2 ON T1.state = T2.state  WHERE T2.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY T1.area_code  HAVING COUNT(DISTINCT T2.contestant_number) = 2
SELECT DISTINCT V1.state  FROM VOTES AS V1  INNER JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number  INNER JOIN CONTESTANTS AS C2 ON V1.contestant_number = C2.contestant_number  WHERE C1.contestant_name = 'Tabatha Gehling' AND C2.contestant_name = 'Kelly Clauss'
SELECT AREA_CODE_STATE.area_code  FROM VOTES  INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state  WHERE VOTES.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling')     OR VOTES.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss')  GROUP BY AREA_CODE_STATE.area_code  HAVING COUNT(DISTINCT VOTES.contestant_number) = 2;
SELECT V.state FROM VOTES AS V INNER JOIN CONTESTANTS AS C1 ON V.contestant_number = C1.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND V.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss') GROUP BY V.state
SELECT DISTINCT V.state FROM VOTES AS V INNER JOIN CONTESTANTS AS C1 ON V.contestant_number = C1.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND V.phone_number IN (SELECT V2.phone_number FROM VOTES AS V2 INNER JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number WHERE C2.contestant_name = 'Kelly Clauss')
SELECT V.state FROM VOTES AS V INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY V.state HAVING COUNT(DISTINCT C.contestant_name) = 2
SELECT DISTINCT V1.phone_number FROM VOTES AS V1  WHERE V1.contestant_number IN (SELECT C1.contestant_number FROM CONTESTANTS AS C1 WHERE C1.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY V1.phone_number  HAVING COUNT(DISTINCT V1.contestant_number) = 2
SELECT DISTINCT T1.state FROM VOTES AS T1  INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number  WHERE T2.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss')  GROUP BY T1.phone_number  HAVING COUNT(DISTINCT T2.contestant_name) = 2
SELECT DISTINCT T1.phone_number FROM VOTES AS T1  WHERE T1.contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling')  AND T1.state IN (SELECT state FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss'))
SELECT DISTINCT T1.area_code  FROM AREA_CODE_STATE AS T1  JOIN VOTES AS T2 ON T1.state = T2.state  WHERE T2.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY T2.phone_number  HAVING COUNT(DISTINCT T2.contestant_number) = 2
SELECT T1.state FROM VOTES AS T1  WHERE T1.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY T1.state  HAVING COUNT(DISTINCT T1.contestant_number) = 2
SELECT V.state FROM VOTES AS V  INNER JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number  WHERE C.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss')  GROUP BY V.state  HAVING COUNT(DISTINCT C.contestant_name) = 2
SELECT DISTINCT V1.state  FROM VOTES AS V1  INNER JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number  WHERE C1.contestant_name = 'Tabatha Gehling'  AND V1.state IN (     SELECT V2.state      FROM VOTES AS V2      INNER JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number      WHERE C2.contestant_name = 'Kelly Clauss' )
SELECT DISTINCT T1.area_code  FROM VOTES AS T2  INNER JOIN AREA_CODE_STATE AS T1 ON T2.state = T1.state  WHERE T2.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss'))  GROUP BY T1.area_code  HAVING COUNT(DISTINCT T2.contestant_number) = 2
SELECT DISTINCT T1.state FROM VOTES AS T1 WHERE T1.contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') INTERSECT SELECT DISTINCT T2.state FROM VOTES AS T2 WHERE T2.contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss')
SELECT V1.state FROM VOTES AS V1 INNER JOIN VOTES AS V2 ON V1.phone_number = V2.phone_number WHERE V1.contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') AND V2.contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss') GROUP BY V1.state

SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'

SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT DISTINCT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950;

SELECT Name FROM country WHERE IndepYear > 1950;
SELECT T1.Name FROM country AS T1 WHERE T1.IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT LocalName FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950

SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';

SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(Code) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(Code) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';

SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'

SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'

SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE LocalName = 'Anguilla' OR Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';

SELECT Continent FROM country WHERE Name = 'Anguilla' OR Code = 'AIA'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla' OR Code = 'AIA'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT `Continent` FROM `country` WHERE `Code` = (SELECT `Code` FROM `country` WHERE `Name` = 'Anguilla')
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE LocalName = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla'
SELECT Continent FROM country WHERE Name = 'Anguilla'

SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT Region FROM city WHERE Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT District FROM city WHERE Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'

SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT Region FROM city WHERE Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T1.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT Region FROM city WHERE Name = 'Kabul';
SELECT District FROM city WHERE Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
SELECT T2.Region FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'

SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT `Language` FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba') ORDER BY `Percentage` DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = 'ABW')
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') GROUP BY Language ORDER BY SUM(Percentage) DESC LIMIT 1
SELECT T1.Language  FROM countrylanguage AS T1  WHERE T1.CountryCode = (SELECT T2.Code FROM country AS T2 WHERE T2.Name = 'Aruba')  GROUP BY T1.Language  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') ORDER BY Percentage DESC LIMIT 1

SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Name = 'Aruba' AND CL.IsOfficial = 'T'
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Aruba' ORDER BY T1.Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.Name = 'Aruba' AND T1.IsOfficial = 'T'  GROUP BY T1.Language  ORDER BY COUNT(T1.Language) DESC  LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Aruba' ORDER BY T1.Percentage DESC LIMIT 1
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1

SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Code = 'BRA';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT CT.Population, C.LifeExpectancy FROM country AS C INNER JOIN city AS CT ON C.Code = CT.CountryCode WHERE C.Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'

SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Code = 'BRA'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Code = 'BRA';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil' OR Code = 'BRA'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'

SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Code = 'AGO'
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Code = 'AGO'
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola' OR Code = 'AGO'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'

SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'
SELECT Region, Population FROM country WHERE Name = 'Angola'

SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa' AND LifeExpectancy IS NOT NULL;
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';

SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa' AND LifeExpectancy IS NOT NULL
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa' AND LifeExpectancy IS NOT NULL
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa' AND LifeExpectancy IS NOT NULL
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa' AND LifeExpectancy IS NOT NULL;

SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia') AND Continent = 'Asia'
SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Region = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia') AND Continent = 'Asia'
SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')

SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Region = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.LifeExpectancy = (SELECT MIN(T2.LifeExpectancy) FROM country AS T2 WHERE T2.Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Region = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Region = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Region = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1

SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia';
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS total_population, MAX(GNP) AS max_gnp FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS total_population, MAX(GNP) AS max_GNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaximumGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population) AS total_population, MAX(GNP) AS max_GNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS total_population, MAX(GNP) AS max_gnp FROM country WHERE Continent = 'Asia'

SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia';
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia';
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia';
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaxGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia';
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(T1.Population) AS TotalPopulation, MAX(T2.GNP) AS MaxGNP  FROM city AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Region = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia'

SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm LIKE '%Republic%' AND LifeExpectancy IS NOT NULL;
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic' AND LifeExpectancy IS NOT NULL
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'

SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm LIKE '%Republic%'
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'

SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')

SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Region IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Region IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Region IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')
SELECT SUM(SurfaceArea) FROM country WHERE Region IN ('Asia', 'Europe')

SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'

SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'

SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP) AS average_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US Territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm LIKE '%US territory%'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory';
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm LIKE '%US territory%'
SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm = 'US Territory'
SELECT AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%US territory%'
SELECT AVG(GNP) AS average_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm LIKE '%US Territory%'
SELECT AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%US territory%'
SELECT AVG(GNP) AS average_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm = 'US territory'
SELECT AVG(GNP) AS average_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm = 'US Territory'
SELECT AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%Territory%'
SELECT AVG(GNP) AS average_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm LIKE '%US territory%'
SELECT AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%US territory%'
SELECT AVG(GNP) AS Average_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%US territory%'

SELECT AVG(GNP), SUM(Population) FROM country WHERE Region = 'North America' AND LocalName IN ('American Samoa', 'Guam', 'Northern Mariana Islands', 'Puerto Rico', 'U.S. Virgin Islands')
SELECT AVG(T1.GNP) AS Mean_GNP, SUM(T2.Population) AS Total_Population FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Code IN ('PR', 'GU', 'VI', 'MP', 'AS')
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%Territory%' OR Name IN ('Puerto Rico', 'Guam', 'American Samoa', 'U.S. Virgin Islands')
SELECT AVG(GNP) AS mean_GNP, SUM(Population) AS total_population FROM country WHERE GovernmentForm LIKE '%territory%' OR Region = 'North America'
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%Territory%'
SELECT AVG(GNP), SUM(Population) FROM country WHERE Region = 'North America' OR GovernmentForm LIKE '%Territory%'
SELECT AVG(GNP), SUM(Population) FROM country WHERE Region = 'North America' OR GovernmentForm = 'US Territory'
SELECT AVG(GNP), SUM(Population) FROM country WHERE Region = 'North America' AND GovernmentForm LIKE '%Territory%'
SELECT AVG(GNP), SUM(Population) FROM country WHERE CountryCode IN ('USA', 'GU', 'PR', 'AS', 'MP', 'VI');
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE Region = 'North America' OR Code IN ('PRI', 'GU', 'UM')
SELECT AVG(GNP) AS mean_GNP, SUM(Population) AS total_population FROM country WHERE Code IN ('ASM', 'GUM', 'PRI', 'VIR') -- Assuming these are the US territories in the country table
SELECT AVG(GNP) AS mean_GNP, SUM(Population) AS total_population  FROM country  WHERE GovernmentForm LIKE '%Territory%' OR GovernmentForm LIKE '%Commonwealth%'
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE Region = 'Caribbean' OR Name IN ('Guam', 'Puerto Rico', 'American Samoa', 'U.S. Virgin Islands')
SELECT AVG(GNP) AS mean_GNP, SUM(Population) AS total_population FROM country WHERE Code IN (SELECT Code FROM country WHERE Region = 'US Territory')
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE Region = 'North America'
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE Code IN ('PRI', 'GUM', 'ASM', 'VIR') -- Add other relevant codes for US territories as needed
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE Region = 'North America' OR GovernmentForm LIKE '%Territory%'
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%Territory%' OR Region = 'Caribbean'
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%Territory%'
SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE GovernmentForm LIKE '%Territory%' OR Region = 'North America'

SELECT COUNT(DISTINCT Language) FROM countrylanguage
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage`;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage`
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage
SELECT COUNT(DISTINCT Language) FROM countrylanguage
SELECT COUNT(DISTINCT Language) FROM countrylanguage
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;

SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
SELECT COUNT(DISTINCT Language) FROM countrylanguage;

SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'

SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';

SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba')
SELECT COUNT(DISTINCT CL.Language) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Name = 'Aruba'
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba')
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Aruba'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW';
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW';
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW';
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'

SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Aruba')
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.LocalName = 'Aruba'
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `LocalName` = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE LocalName = 'Aruba')
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'

SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan')
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'AFG';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan')
SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'

SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan')
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'AFG';
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'AFG';
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan');
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode IN (SELECT Code FROM country WHERE Name = 'Afghanistan')
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `IsOfficial` = 'T' AND `CountryCode` = 'AFG';
SELECT COUNT(DISTINCT `Language`) FROM `countrylanguage` WHERE `CountryCode` = (SELECT `Code` FROM `country` WHERE `Name` = 'Afghanistan') AND `IsOfficial` = 'T';
SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Afghanistan' AND T1.IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'AFG';
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Afghanistan' AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Afghanistan' AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'Afghanistan' AND T1.IsOfficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T'

SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(DISTINCT Language) AS LangCount FROM countrylanguage GROUP BY CountryCode) AS T1 ON T1.CountryCode = T2.Code WHERE LangCount = (SELECT MAX(LangCount) FROM (SELECT CountryCode, COUNT(DISTINCT Language) AS LangCount FROM countrylanguage GROUP BY CountryCode));
SELECT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T1.CountryCode = T2.Code GROUP BY T2.Name ORDER BY COUNT(DISTINCT T1.Language) DESC LIMIT 1
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T1 ON T1.CountryCode = T2.Code ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T1.Name FROM country AS T1 WHERE T1.Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)
SELECT c.Name  FROM country AS c  JOIN (SELECT CountryCode, COUNT(Language) AS language_count        FROM countrylanguage        GROUP BY CountryCode        ORDER BY language_count DESC        LIMIT 1) AS cl  ON c.Code = cl.CountryCode
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode ORDER BY LanguageCount DESC LIMIT 1) AS T1 ON T1.CountryCode = T2.Code
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LangCount FROM countrylanguage GROUP BY CountryCode ORDER BY LangCount DESC LIMIT 1) AS T1 ON T2.Code = T1.CountryCode
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode ORDER BY LanguageCount DESC LIMIT 1) AS T1 ON T1.CountryCode = T2.Code
SELECT `c`.`Name` FROM `country` AS `c` INNER JOIN (SELECT `CountryCode`, COUNT(`Language`) AS `LanguageCount` FROM `countrylanguage` GROUP BY `CountryCode` ORDER BY `LanguageCount` DESC LIMIT 1) AS `cl` ON `c`.`Code` = `cl`.`CountryCode`
SELECT T2.Name FROM (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.LanguageCount DESC LIMIT 1
SELECT T2.Name  FROM (SELECT CountryCode, COUNT(Language) AS LanguageCount        FROM countrylanguage        GROUP BY CountryCode        ORDER BY LanguageCount DESC        LIMIT 1) AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code
SELECT T1.Name FROM country AS T1 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.LanguageCount DESC LIMIT 1
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T1 ON T1.CountryCode = T2.Code ORDER BY T1.LanguageCount DESC LIMIT 1
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT C.Name FROM country AS C INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode ORDER BY LanguageCount DESC LIMIT 1) AS CL ON C.Code = CL.CountryCode
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T1 ON T1.CountryCode = T2.Code WHERE T1.LanguageCount = (SELECT MAX(LanguageCount) FROM (SELECT COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode))
SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.CountryCode ORDER BY COUNT(T1.Language) DESC LIMIT 1
SELECT C.Name FROM country AS C INNER JOIN (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode ORDER BY LanguageCount DESC LIMIT 1) AS CL ON C.Code = CL.CountryCode

SELECT T1.Name FROM country AS T1 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode ORDER BY LanguageCount DESC LIMIT 1) AS T2 ON T1.Code = T2.CountryCode
WITH LanguageCounts AS (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) SELECT T2.Name FROM country AS T2 INNER JOIN LanguageCounts AS T1 ON T1.CountryCode = T2.Code WHERE T1.LanguageCount = (SELECT MAX(LanguageCount) FROM LanguageCounts)
SELECT T1.Name FROM country AS T1 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T2 ON T1.Code = T2.CountryCode ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(T2.Language) DESC LIMIT 1
SELECT Name FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS LangCount FROM countrylanguage GROUP BY CountryCode) AS T1 ON T1.CountryCode = T2.Code ORDER BY LangCount DESC LIMIT 1
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(DISTINCT Language) AS language_count FROM countrylanguage GROUP BY CountryCode) AS T1 ON T2.Code = T1.CountryCode ORDER BY language_count DESC LIMIT 1
SELECT T1.Name FROM country AS T1 INNER JOIN (SELECT CountryCode, COUNT(Language) as language_count FROM countrylanguage GROUP BY CountryCode ORDER BY language_count DESC LIMIT 1) AS T2 ON T1.Code = T2.CountryCode
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS language_count FROM countrylanguage GROUP BY CountryCode ORDER BY language_count DESC LIMIT 1) AS T1 ON T1.CountryCode = T2.Code
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS language_count FROM countrylanguage GROUP BY CountryCode ORDER BY language_count DESC LIMIT 1) AS T1 ON T2.Code = T1.CountryCode
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T2.Name FROM country AS T2 INNER JOIN (SELECT CountryCode, COUNT(Language) AS lang_count FROM countrylanguage GROUP BY CountryCode) AS T1 ON T1.CountryCode = T2.Code ORDER BY T1.lang_count DESC LIMIT 1
SELECT T2.Name FROM (SELECT CountryCode, COUNT(DISTINCT Language) AS LanguageCount FROM countrylanguage GROUP BY CountryCode) AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.LanguageCount DESC LIMIT 1
SELECT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  ORDER BY COUNT(DISTINCT T2.Language) DESC  LIMIT 1
SELECT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode GROUP BY T2.Code ORDER BY COUNT(DISTINCT T1.Language) DESC LIMIT 1
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T2.Name  FROM (SELECT CountryCode, COUNT(Language) AS lang_count        FROM countrylanguage        GROUP BY CountryCode) AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  ORDER BY T1.lang_count DESC  LIMIT 1
SELECT T1.Name  FROM country AS T1  INNER JOIN (SELECT CountryCode, COUNT(DISTINCT Language) AS LangCount              FROM countrylanguage              GROUP BY CountryCode) AS T2  ON T1.Code = T2.CountryCode  WHERE T2.LangCount = (SELECT MAX(LangCount) FROM (SELECT COUNT(DISTINCT Language) AS LangCount                                                       FROM countrylanguage                                                       GROUP BY CountryCode))
SELECT T1.Name FROM country AS T1 INNER JOIN (     SELECT CountryCode, COUNT(Language) AS LanguageCount     FROM countrylanguage     GROUP BY CountryCode ) AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.LanguageCount DESC LIMIT 1
SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.CountryCode ORDER BY COUNT(DISTINCT T1.Language) DESC LIMIT 1

SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS language_count FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY language_count DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT Continent, COUNT(DISTINCT Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS language_count FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY language_count DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT Continent, COUNT(DISTINCT Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1
SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T2.Continent FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY COUNT(DISTINCT T1.Language) DESC LIMIT 1
SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  ORDER BY LanguageCount DESC  LIMIT 1

SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT Continent, COUNT(DISTINCT Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS language_count FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY language_count DESC LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1;
SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT C.Continent, COUNT(DISTINCT CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Continent ORDER BY LanguageCount DESC LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T2.Continent FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Continent ORDER BY COUNT(DISTINCT T1.Language) DESC LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T2.Continent, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Continent  ORDER BY LanguageCount DESC  LIMIT 1
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  ORDER BY LanguageCount DESC  LIMIT 1

SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT CL1.CountryCode)  FROM countrylanguage AS CL1  INNER JOIN countrylanguage AS CL2 ON CL1.CountryCode = CL2.CountryCode  WHERE CL1.Language = 'English' AND CL2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT cl1.CountryCode)  FROM countrylanguage AS cl1  INNER JOIN countrylanguage AS cl2  ON cl1.CountryCode = cl2.CountryCode  WHERE cl1.Language = 'English' AND cl2.Language = 'Dutch'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT cl1.CountryCode)  FROM countrylanguage AS cl1  INNER JOIN countrylanguage AS cl2  ON cl1.CountryCode = cl2.CountryCode  WHERE cl1.Language = 'English' AND cl2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT CL1.CountryCode)  FROM countrylanguage AS CL1  INNER JOIN countrylanguage AS CL2  ON CL1.CountryCode = CL2.CountryCode  WHERE CL1.Language = 'English' AND CL2.Language = 'Dutch';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT CL1.CountryCode)  FROM countrylanguage AS CL1  INNER JOIN countrylanguage AS CL2 ON CL1.CountryCode = CL2.CountryCode  WHERE CL1.Language = 'English' AND CL2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T1.IsOfficial = 'T'  AND T2.Language = 'Dutch' AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2  ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2  ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2  ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2  ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'

SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2  ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` IN ('English', 'Dutch') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2
SELECT COUNT(DISTINCT cl1.CountryCode)  FROM countrylanguage AS cl1  INNER JOIN countrylanguage AS cl2  ON cl1.CountryCode = cl2.CountryCode  WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T'  AND cl2.Language = 'Dutch' AND cl2.IsOfficial = 'T';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT cl1.CountryCode)  FROM countrylanguage AS cl1  INNER JOIN countrylanguage AS cl2 ON cl1.CountryCode = cl2.CountryCode  WHERE cl1.Language = 'English' AND cl2.Language = 'Dutch'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT CL1.CountryCode)  FROM countrylanguage AS CL1  INNER JOIN countrylanguage AS CL2  ON CL1.CountryCode = CL2.CountryCode  WHERE CL1.Language = 'English' AND CL2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT CountryCode)  FROM countrylanguage  WHERE Language IN ('English', 'Dutch')  GROUP BY CountryCode  HAVING COUNT(DISTINCT Language) = 2;
SELECT COUNT(DISTINCT CountryCode)  FROM countrylanguage  WHERE Language IN ('English', 'Dutch')  GROUP BY CountryCode  HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2
SELECT COUNT(DISTINCT T1.CountryCode)  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  WHERE T1.Language = 'English' AND T2.Language = 'Dutch'

SELECT T2.Name FROM country AS T2 WHERE T2.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'French') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2)
SELECT T3.Name FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN country AS T3 ON T1.CountryCode = T3.Code WHERE T1.Language = 'English' AND T2.Language = 'French'
SELECT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'French')  GROUP BY T2.Name  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT c.Name FROM country AS c WHERE c.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'French') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2)
SELECT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'French')  GROUP BY T1.Code  HAVING COUNT(DISTINCT T2.Language) = 2
SELECT T1.Name FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  INNER JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode  WHERE T2.Language = 'English' AND T3.Language = 'French'
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') AND T2.IsOfficial = 'T' GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) = 2
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'French') GROUP BY T2.Code HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') GROUP BY T1.Code HAVING COUNT(DISTINCT T2.Language) = 2
SELECT DISTINCT C.Name  FROM countrylanguage CL1  INNER JOIN countrylanguage CL2 ON CL1.CountryCode = CL2.CountryCode  INNER JOIN country C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English' AND CL2.Language = 'French'
SELECT DISTINCT C.Name  FROM countrylanguage AS CL1  INNER JOIN countrylanguage AS CL2 ON CL1.CountryCode = CL2.CountryCode  INNER JOIN country AS C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English' AND CL2.Language = 'French'
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French';
SELECT C.Name  FROM country AS C  JOIN (SELECT CL.CountryCode        FROM countrylanguage AS CL        WHERE CL.Language IN ('English', 'French')        GROUP BY CL.CountryCode        HAVING COUNT(DISTINCT CL.Language) = 2) AS CL  ON C.Code = CL.CountryCode;
SELECT DISTINCT c.Name  FROM country AS c  INNER JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English'  INNER JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French';
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') GROUP BY T1.Name HAVING COUNT(T2.Language) = 2
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'French')  GROUP BY T1.Code  HAVING COUNT(DISTINCT T2.Language) = 2
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French'

SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) = 2
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' AND T1.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
SELECT T2.LocalName FROM country AS T2 WHERE T2.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'French') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2)
SELECT DISTINCT T2.Name FROM country AS T2  INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode  WHERE T1.Language IN ('English', 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T2.Name  FROM country AS T2  JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode  WHERE T1.Language IN ('English', 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'English'  AND T1.CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
SELECT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT `Name` FROM `country` WHERE `Code` IN (SELECT `CountryCode` FROM `countrylanguage` WHERE `Language` IN ('English', 'French') GROUP BY `CountryCode` HAVING COUNT(DISTINCT `Language`) = 2)
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T' AND T2.Language IN ('English', 'French')  GROUP BY T1.Code  HAVING COUNT(DISTINCT T2.Language) = 2
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) = 2
SELECT DISTINCT C.Name  FROM countrylanguage CL  INNER JOIN country C ON CL.CountryCode = C.Code  WHERE CL.Language IN ('English', 'French')  GROUP BY CL.CountryCode  HAVING COUNT(DISTINCT CL.Language) = 2
SELECT DISTINCT T3.Name  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code  WHERE T1.Language = 'English' AND T2.Language = 'French'
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'French')  GROUP BY T1.CountryCode  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT C.LocalName  FROM countrylanguage CL1  INNER JOIN country C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English'  AND CL1.CountryCode IN (SELECT CL2.CountryCode FROM countrylanguage CL2 WHERE CL2.Language = 'French')
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'French')  GROUP BY T1.CountryCode  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT C.Name  FROM countrylanguage CL  JOIN country C ON CL.CountryCode = C.Code  WHERE CL.Language IN ('English', 'French')  GROUP BY CL.CountryCode  HAVING COUNT(DISTINCT CL.Language) = 2
SELECT DISTINCT c.Name  FROM country AS c  INNER JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'  INNER JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French';
SELECT T3.Name  FROM (SELECT CountryCode        FROM countrylanguage        WHERE Language IN ('English', 'French')        GROUP BY CountryCode        HAVING COUNT(DISTINCT Language) = 2) AS T1  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code
SELECT DISTINCT C.Name  FROM countrylanguage CL1  INNER JOIN countrylanguage CL2 ON CL1.CountryCode = CL2.CountryCode  INNER JOIN country C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English' AND CL2.Language = 'French'

SELECT T3.Name FROM country AS T3 WHERE T3.Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND (Language = 'English' OR Language = 'French') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2)
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code HAVING COUNT(DISTINCT T2.Language) = 2 AND MAX(CASE WHEN T2.Language = 'English' THEN 1 ELSE 0 END) = 1 AND MAX(CASE WHEN T2.Language = 'French' THEN 1 ELSE 0 END) = 1
SELECT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE (T1.Language = 'English' OR T1.Language = 'French') AND T1.IsOfficial = 'T' GROUP BY T2.Name HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'French') GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) = 2
SELECT T3.Name FROM country AS T3 INNER JOIN countrylanguage AS T1 ON T3.Code = T1.CountryCode WHERE T1.Language = 'English' AND T1.IsOfficial = 'T' AND T3.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
SELECT T2.Name  FROM country AS T2  INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'French') AND T2.IsOfficial = 'T'  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Language) = 2
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'French') GROUP BY T1.CountryCode HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name FROM country AS T1 WHERE T1.Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language IN ('English', 'French') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2)
SELECT T3.Name  FROM (SELECT CountryCode        FROM countrylanguage        WHERE IsOfficial = 'T' AND (Language = 'English' OR Language = 'French')        GROUP BY CountryCode        HAVING COUNT(DISTINCT Language) = 2) AS T1  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code;
SELECT DISTINCT T1.CountryCode FROM countrylanguage AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T1.IsOfficial = 'T' AND T2.Language = 'French' AND T2.IsOfficial = 'T'
SELECT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'French')  GROUP BY T1.CountryCode  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT T3.Name  FROM countrylanguage AS T1  INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code  WHERE T1.Language = 'English' AND T1.IsOfficial = 'T'  AND T2.Language = 'French' AND T2.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM country AS C  JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
SELECT C.LocalName  FROM countrylanguage CL  JOIN country C ON CL.CountryCode = C.Code  WHERE CL.IsOfficial = 'T' AND (CL.Language = 'English' OR CL.Language = 'French')  GROUP BY CL.CountryCode  HAVING COUNT(DISTINCT CL.Language) = 2;
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE CL.IsOfficial = 'T' AND CL.Language IN ('English', 'French')  GROUP BY C.Code  HAVING COUNT(DISTINCT CL.Language) = 2
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'

SELECT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French') GROUP BY T2.Name HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT T2.Name  FROM country AS T2  INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T' AND T2.Language IN ('English', 'French')  GROUP BY T1.Code  HAVING COUNT(DISTINCT T2.Language) = 2;
SELECT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T' AND T2.Language IN ('English', 'French')  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Language) = 2
SELECT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T1.Language IN ('English', 'French') GROUP BY T2.Code HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T2.Name  FROM country AS T2  INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French')  GROUP BY T2.Code  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) = 2
SELECT T3.Name  FROM countrylanguage AS T1  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French')  GROUP BY T3.Name  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'French')  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Language) = 2
SELECT DISTINCT T3.Name  FROM countrylanguage AS T1  INNER JOIN country AS T3 ON T1.CountryCode = T3.Code  WHERE T1.Language = 'English' AND T1.IsOfficial = 'T'  AND T1.CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
SELECT DISTINCT c.Name  FROM country AS c  INNER JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'  INNER JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'  AND T1.Code IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'French' AND IsOfficial = 'T' )
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T';
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND T1.Language IN ('English', 'French')  GROUP BY T1.CountryCode  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'French')  GROUP BY T1.CountryCode  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND T1.Language IN ('English', 'French')  GROUP BY T1.CountryCode  HAVING COUNT(DISTINCT T1.Language) = 2
SELECT DISTINCT C.Name  FROM countrylanguage CL1  INNER JOIN countrylanguage CL2 ON CL1.CountryCode = CL2.CountryCode  INNER JOIN country C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English' AND CL1.IsOfficial = 'T'  AND CL2.Language = 'French' AND CL2.IsOfficial = 'T';
SELECT DISTINCT C.Name  FROM countrylanguage CL1  INNER JOIN countrylanguage CL2 ON CL1.CountryCode = CL2.CountryCode  INNER JOIN country C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English' AND CL1.IsOfficial = 'T'  AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM countrylanguage CL1  INNER JOIN countrylanguage CL2 ON CL1.CountryCode = CL2.CountryCode  INNER JOIN country C ON CL1.CountryCode = C.Code  WHERE CL1.Language = 'English' AND CL1.IsOfficial = 'T'  AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM country AS C  INNER JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T'  INNER JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'

SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent)  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT C.Continent)  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE CL.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'

SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese' AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese' AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T3.Continent)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Chinese'
SELECT COUNT(DISTINCT T2.Continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Chinese'

SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')
SELECT DISTINCT C.Region FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE CL.Language IN ('English', 'Dutch')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T1.Region  FROM countrylanguage AS T2  INNER JOIN country AS T1 ON T2.CountryCode = T1.Code  WHERE T2.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')

SELECT DISTINCT T1.Region FROM country AS T1 WHERE T1.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' OR Language = 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT C.Region FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE CL.Language IN ('Dutch', 'English')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('Dutch', 'English')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Dutch' OR T1.Language = 'English'
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T1.Region FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language IN ('Dutch', 'English')
SELECT DISTINCT T2.Region FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('Dutch', 'English')

SELECT T2.Name FROM country AS T2 WHERE T2.Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND (Language = 'English' OR Language = 'Dutch'))
SELECT DISTINCT cl.CountryCode FROM countrylanguage AS cl WHERE cl.IsOfficial = 'T' AND (cl.Language = 'English' OR cl.Language = 'Dutch')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T'
SELECT c.Name FROM country AS c INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'Dutch') AND cl.IsOfficial = 'T'
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE (Language = 'English' OR Language = 'Dutch') AND IsOfficial = 'T';
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND (Language = 'English' OR Language = 'Dutch')
SELECT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2  ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T' AND T2.Language IN ('English', 'Dutch');
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'Dutch')
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND (T1.Language = 'English' OR T1.Language = 'Dutch')

SELECT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.Language IN ('English', 'Dutch')
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'
SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T2.Name FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'Dutch')
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'
SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T';
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'Dutch')
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch')
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'Dutch')
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' OR T1.Language = 'Dutch'
SELECT DISTINCT T2.Name FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'
SELECT DISTINCT T1.Name  FROM country AS T1  INNER JOIN countrylanguage AS T2  ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' AND (T2.Language = 'English' OR T2.Language = 'Dutch')
SELECT DISTINCT C.Name  FROM countrylanguage CL  INNER JOIN country C ON CL.CountryCode = C.Code  WHERE CL.IsOfficial = 'T' AND (CL.Language = 'English' OR CL.Language = 'Dutch')
SELECT DISTINCT T3.Name FROM countrylanguage AS T1 INNER JOIN country AS T3 ON T1.CountryCode = T3.Code WHERE T1.Language IN ('English', 'Dutch') AND T1.IsOfficial = 'T'
SELECT DISTINCT T2.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T' AND T1.Language IN ('English', 'Dutch')

SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' ORDER BY CL.Percentage DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' ORDER BY CL.Percentage DESC LIMIT 1
SELECT T1.Language, SUM(T1.Percentage) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY SUM(T1.Percentage) DESC LIMIT 1
SELECT CL.Language, SUM(CL.Percentage) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY SUM(CL.Percentage) DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' ORDER BY CL.Percentage DESC LIMIT 1
SELECT CL.Language, SUM(CL.Percentage) AS TotalPercentage FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY TotalPercentage DESC LIMIT 1
SELECT CL.Language, SUM(CL.Percentage) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY SUM(CL.Percentage) DESC LIMIT 1
SELECT Language, SUM(Percentage) AS TotalPercentage FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY TotalPercentage DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' ORDER BY T1.Percentage DESC LIMIT 1
SELECT CL.Language, SUM(CL.Percentage) AS TotalPercentage FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY TotalPercentage DESC LIMIT 1
SELECT T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.Continent = 'Asia'  GROUP BY T2.Language  ORDER BY SUM(T2.Percentage) DESC  LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Language FROM country AS T2 INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY SUM(T1.Percentage) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY SUM(T1.Percentage) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.Continent = 'Asia'  GROUP BY T2.Language  ORDER BY SUM(T2.Percentage) DESC  LIMIT 1
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY SUM(T2.Percentage) DESC LIMIT 1
SELECT T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.Continent = 'Asia'  GROUP BY T2.Language  ORDER BY SUM(T2.Percentage) DESC  LIMIT 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.Continent = 'Asia'  GROUP BY T1.Language  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT T1.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T1.Language ORDER BY SUM(T2.Percentage) DESC LIMIT 1

SELECT CL.Language, COUNT(DISTINCT C.Code) AS country_count FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.Region = 'Asia' GROUP BY CL.Language ORDER BY country_count DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY COUNT(DISTINCT C.Code) DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY COUNT(DISTINCT C.Code) DESC LIMIT 1
SELECT CL.Language, COUNT(DISTINCT CL.CountryCode) AS CountryCount FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY CountryCount DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY COUNT(DISTINCT C.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY Language ORDER BY COUNT(DISTINCT CL.CountryCode) DESC LIMIT 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY CL.Language ORDER BY COUNT(C.Code) DESC LIMIT 1
SELECT Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.Continent = 'Asia' GROUP BY Language ORDER BY COUNT(DISTINCT C.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(T2.Code) DESC LIMIT 1
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT(DISTINCT T1.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(T2.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Region = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.Continent = 'Asia'  GROUP BY T1.Language  ORDER BY COUNT(DISTINCT T2.Code) DESC  LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY T1.Language ORDER BY COUNT(DISTINCT T2.Code) DESC LIMIT 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.Continent = 'Asia'  GROUP BY T1.Language  ORDER BY COUNT(DISTINCT T2.Code) DESC  LIMIT 1

SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(CL.CountryCode) = 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Republic' GROUP BY T1.Language HAVING COUNT(DISTINCT T1.CountryCode) = 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Republic' GROUP BY T1.Language HAVING COUNT(DISTINCT T2.Code) = 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1) AND T2.GovernmentForm = 'Republic'
SELECT CL.Language  FROM countrylanguage CL  INNER JOIN country C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm LIKE '%Republic%'  GROUP BY CL.Language  HAVING COUNT(DISTINCT CL.CountryCode) = 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(DISTINCT C.Code) = 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(DISTINCT C.Code) = 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(DISTINCT C.Code) = 1
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  GROUP BY CL.Language  HAVING COUNT(DISTINCT CL.CountryCode) = 1 AND C.GovernmentForm = 'Republic';
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE CL.Language IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1) AND C.GovernmentForm = 'Republic'
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm LIKE 'Republic'  GROUP BY CL.Language  HAVING COUNT(C.CountryCode) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(T1.CountryCode) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(DISTINCT T1.CountryCode) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(T2.Code) = 1
SELECT cl.Language  FROM countrylanguage AS cl  INNER JOIN country AS c ON cl.CountryCode = c.Code  WHERE c.GovernmentForm LIKE 'Republic'  GROUP BY cl.Language  HAVING COUNT(DISTINCT c.Code) = 1
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm = 'Republic'  GROUP BY CL.Language  HAVING COUNT(DISTINCT C.Code) = 1
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm = 'Republic'  GROUP BY CL.Language  HAVING COUNT(DISTINCT C.Code) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm LIKE '%Republic%'  GROUP BY T1.Language  HAVING COUNT(T2.Code) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(T1.CountryCode) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm LIKE 'Republic'  GROUP BY T1.Language  HAVING COUNT(DISTINCT T2.Code) = 1

SELECT CL.Language  FROM countrylanguage AS CL  JOIN country AS C ON CL.CountryCode = C.Code  GROUP BY CL.Language  HAVING COUNT(DISTINCT C.Code) = 1 AND C.GovernmentForm LIKE '%Republic%'
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Republic' GROUP BY T1.Language HAVING COUNT(DISTINCT T1.CountryCode) = 1
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  GROUP BY CL.Language  HAVING COUNT(DISTINCT CL.CountryCode) = 1 AND C.GovernmentForm = 'Republic'
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Republic' GROUP BY T1.Language HAVING COUNT(DISTINCT T2.Code) = 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' AND CL.Language IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1)
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(DISTINCT C.Code) = 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm LIKE '%Republic%' GROUP BY CL.Language HAVING COUNT(DISTINCT C.Code) = 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm LIKE '%Republic%' GROUP BY T1.Language HAVING COUNT(DISTINCT T1.CountryCode) = 1
SELECT CL.Language FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY CL.Language HAVING COUNT(DISTINCT CL.CountryCode) = 1
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Republic' GROUP BY T1.Language HAVING COUNT(DISTINCT T1.CountryCode) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(DISTINCT T2.Code) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(DISTINCT T2.Code) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(T2.Code) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(DISTINCT T2.Code) = 1
SELECT DISTINCT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm LIKE '%Republic%'  GROUP BY CL.Language  HAVING COUNT(DISTINCT CL.CountryCode) = 1
SELECT cl.Language  FROM countrylanguage AS cl  JOIN country AS c ON cl.CountryCode = c.Code  WHERE c.GovernmentForm = 'Republic'  GROUP BY cl.Language  HAVING COUNT(DISTINCT c.Code) = 1
SELECT cl.Language  FROM countrylanguage AS cl  INNER JOIN country AS c ON cl.CountryCode = c.Code  WHERE c.GovernmentForm LIKE '%Republic%'  GROUP BY cl.Language  HAVING COUNT(DISTINCT cl.CountryCode) = 1
SELECT DISTINCT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  GROUP BY CL.Language  HAVING COUNT(CL.CountryCode) = 1 AND C.GovernmentForm = 'Republic'
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm = 'Republic'  GROUP BY CL.Language  HAVING COUNT(DISTINCT C.Code) = 1
SELECT T1.Language  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.GovernmentForm = 'Republic'  GROUP BY T1.Language  HAVING COUNT(DISTINCT T1.CountryCode) = 1

SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T2.Name  FROM city AS T2  INNER JOIN country AS T3 ON T2.CountryCode = T3.Code  INNER JOIN countrylanguage AS T1 ON T3.Code = T1.CountryCode  WHERE T1.Language = 'English' AND T1.IsOfficial = 'T'  ORDER BY T2.Population DESC  LIMIT 1
SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' AND T2.Population = (SELECT MAX(Population) FROM city AS T3 INNER JOIN countrylanguage AS T4 ON T3.CountryCode = T4.CountryCode WHERE T4.Language = 'English')
SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' AND T2.Population = (SELECT MAX(Population) FROM city AS T3 INNER JOIN countrylanguage AS T4 ON T3.CountryCode = T4.CountryCode WHERE T4.Language = 'English')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T3 INNER JOIN country AS T1 ON T3.CountryCode = T1.Code INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T3.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T3 INNER JOIN country AS T1 ON T3.CountryCode = T1.Code INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T3.Population DESC LIMIT 1
SELECT Name FROM city WHERE Population = (SELECT MAX(Population) FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English')
SELECT T3.Name FROM city AS T3 INNER JOIN country AS T2 ON T3.CountryCode = T2.Code INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T3.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1

SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1;
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN country AS T3 ON T1.CountryCode = T3.Code WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1
SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T3 INNER JOIN countrylanguage AS T1 ON T3.CountryCode = T1.CountryCode INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' ORDER BY T3.Population DESC LIMIT 1
SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T3 INNER JOIN country AS T2 ON T3.CountryCode = T2.Code INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T3.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T3 INNER JOIN country AS T1 ON T3.CountryCode = T1.Code INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T3.Population DESC LIMIT 1
SELECT T3.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' ORDER BY T1.Population DESC LIMIT 1
SELECT T2.Name FROM city AS T2 INNER JOIN countrylanguage AS T1 ON T2.CountryCode = T1.CountryCode WHERE T1.Language = 'English' ORDER BY T2.Population DESC LIMIT 1

SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT T1.Name, T1.Population, T1.LifeExpectancy FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT T1.Name, T1.Population, T1.LifeExpectancy FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.SurfaceArea = (SELECT MAX(T2.SurfaceArea) FROM country AS T2 WHERE T2.Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Region = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT T1.Name, T1.Population, T1.LifeExpectancy FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy  FROM country  WHERE Continent = 'Asia'  ORDER BY SurfaceArea DESC  LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Region = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy  FROM country  WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy  FROM country  WHERE Continent = 'Asia'  AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia');

SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Region = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Code = (SELECT Code FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1)
SELECT Name, Population, LifeExpectancy FROM country WHERE Code = (SELECT Code FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1)
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')

SELECT AVG(T1.LifeExpectancy) FROM country AS T1 WHERE NOT EXISTS (SELECT 1 FROM countrylanguage AS T2 WHERE T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(C.LifeExpectancy) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE CL.IsOfficial = 'F' AND CL.Language = 'English'
SELECT AVG(c.LifeExpectancy)  FROM country AS c  WHERE c.Code NOT IN (     SELECT cl.CountryCode      FROM countrylanguage AS cl      WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' )
SELECT AVG(T1.LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English' AND T2.IsOfficial = 'T')
SELECT AVG(T2.LifeExpectancy) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' AND T1.IsOfficial = 'F'
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(c.LifeExpectancy) FROM country AS c INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial = 'F'
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(c.LifeExpectancy)  FROM country AS c  WHERE c.Code NOT IN (     SELECT cl.CountryCode      FROM countrylanguage AS cl      WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' )
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')

SELECT AVG(T1.LifeExpectancy) FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T' WHERE T2.CountryCode IS NULL
SELECT AVG(c.LifeExpectancy) FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English' OR cl.IsOfficial != 'T' OR cl.CountryCode IS NULL
SELECT AVG(T1.LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(T1.LifeExpectancy) FROM country AS T1 WHERE NOT EXISTS (SELECT 1 FROM countrylanguage AS T2 WHERE T2.CountryCode = T1.Code AND T2.Language = 'English' AND T2.IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(T1.LifeExpectancy) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(c.LifeExpectancy)  FROM country AS c  WHERE c.Code NOT IN (     SELECT cl.CountryCode      FROM countrylanguage AS cl      WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' )
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country AS T1 WHERE NOT EXISTS (SELECT 1 FROM countrylanguage AS T2 WHERE T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(T1.LifeExpectancy) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'F'
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(c.LifeExpectancy)  FROM country AS c  WHERE c.Code NOT IN (     SELECT cl.CountryCode      FROM countrylanguage AS cl      WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' )
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')

SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT SUM(Population) FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(Population) FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT SUM(c.Population) FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English' WHERE cl.Language IS NULL;
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(c.Population) FROM country AS c WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(c.Population)  FROM country AS c  WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English' AND cl.IsOfficial = 'T')
SELECT SUM(c.Population)  FROM country AS c  WHERE c.Code NOT IN (     SELECT cl.CountryCode      FROM countrylanguage AS cl      WHERE cl.Language = 'English' );
SELECT SUM(c.Population)  FROM country AS c  WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English')
SELECT SUM(T2.Population)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language != 'English'
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(T1.Population)  FROM country AS T1  WHERE T1.Code NOT IN (     SELECT T2.CountryCode      FROM countrylanguage AS T2      WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' )

SELECT SUM(T1.Population) FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(c.Population) FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English' OR cl.Language IS NULL;
SELECT SUM(T1.Population) FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T' WHERE T2.CountryCode IS NULL
SELECT SUM(Population) FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT SUM(T1.Population) FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' AND T2.IsOfficial = 'T' WHERE T2.CountryCode IS NULL
SELECT SUM(T2.Population) FROM country AS T2 WHERE T2.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(Population) FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT SUM(T2.Population) FROM country AS T2 WHERE T2.Code NOT IN (SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language = 'English')
SELECT SUM(T1.Population)  FROM country AS T1  WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English' AND T2.IsOfficial = 'T')
SELECT SUM(c.Population)  FROM country AS c  LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.IsOfficial = 'T' AND cl.Language = 'English'  WHERE cl.CountryCode IS NULL
SELECT SUM(c.Population)  FROM country AS c  WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English' AND cl.IsOfficial = 'T')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(c.Population)  FROM country AS c  WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT SUM(c.Population)  FROM country AS c  WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English')

SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix'
SELECT CL.Language  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.HeadOfState = 'Beatrix'
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Beatrix' AND T1.IsOfficial = 'T'
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix')
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Beatrix'
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix'
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix')
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'

SELECT T1.Language FROM countrylanguage AS T1 WHERE CountryCode = (SELECT T2.Code FROM country AS T2 WHERE T2.HeadOfState = 'Beatrix')
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix'
SELECT T3.Language FROM country AS T1 INNER JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T1.HeadOfState = 'Beatrix'
SELECT cl.Language  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  WHERE c.HeadOfState = 'Beatrix' AND cl.IsOfficial = 'T'
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix')
SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix'
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix')
SELECT T3.Language FROM country AS T1 INNER JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T1.HeadOfState = 'Beatrix'
SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Beatrix'
SELECT CL.Language FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2  ON T1.Code = T2.CountryCode  WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'
SELECT CL.Language FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.HeadOfState = 'Beatrix' AND CL.IsOfficial = 'T'

SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage AS CL WHERE CL.CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.IndepYear < 1930
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930
SELECT COUNT(DISTINCT CL.Language) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language)  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'

SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930);
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930);
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)
SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T2.IndepYear < 1930
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930 AND IndepYear IS NOT NULL) AND IsOfficial = 'T';
SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language)  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'
SELECT COUNT(DISTINCT cl.Language)  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  WHERE c.IndepYear < 1930 AND cl.IsOfficial = 'T'
SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T'
SELECT COUNT(DISTINCT CL.Language) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'

SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe');
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Code, Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Code, Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT DISTINCT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT DISTINCT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT DISTINCT T1.Name  FROM country AS T1  WHERE T1.SurfaceArea > (SELECT MAX(T2.SurfaceArea) FROM country AS T2 WHERE T2.Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')

SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe');
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT DISTINCT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Europe')
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')

SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < ANY (SELECT Population FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT T1.Name FROM country AS T1 WHERE T1.Region = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Region = 'Asia')
SELECT Name FROM country WHERE Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia') AND Continent = 'Africa'
SELECT DISTINCT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT DISTINCT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT DISTINCT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT DISTINCT T1.Name  FROM country AS T1  WHERE T1.Region = 'Africa'  AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Region = 'Asia')

SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia');
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Africa' AND T1.Population < (SELECT MAX(Population) FROM country WHERE Continent = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT `Name` FROM `country` WHERE `Region` = 'Africa' AND `Population` < (SELECT MIN(`Population`) FROM `country` WHERE `Region` = 'Asia')
SELECT T1.Name FROM country AS T1 WHERE T1.Region = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Region = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MAX(Population) FROM country WHERE Continent = 'Asia')
SELECT DISTINCT T1.Name  FROM country AS T1  WHERE T1.Region = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Region = 'Southern and Central Asia')
SELECT DISTINCT T1.Name  FROM country AS T1  WHERE T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Region = 'Asia')  AND T1.Region = 'Africa'
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT DISTINCT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Region = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Asia')
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')
SELECT DISTINCT T1.Name FROM country AS T1 WHERE T1.Continent = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Asia')
SELECT DISTINCT A.Name FROM country AS A WHERE A.Region = 'Africa' AND A.Population < (SELECT MIN(B.Population) FROM country AS B WHERE B.Region = 'Asia')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Africa' AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Asia')
SELECT DISTINCT T1.Name  FROM country AS T1  WHERE T1.Region = 'Africa'  AND T1.Population < (SELECT MIN(T2.Population) FROM country AS T2 WHERE T2.Region = 'Asia')

SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.Population > (SELECT MAX(T2.Population) FROM country AS T2 WHERE T2.Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT `Name` FROM `country` WHERE `Continent` = 'Asia' AND `Population` > (SELECT MAX(`Population`) FROM `country` WHERE `Region` = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country AS T1 WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country AS T2 WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT DISTINCT T1.Name  FROM country AS T1  WHERE T1.Region = 'Asia'  AND T1.Population > (SELECT MAX(T2.Population) FROM country AS T2 WHERE T2.Region = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT DISTINCT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')

SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' AND T1.Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa');
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT DISTINCT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT Name FROM country WHERE Region = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')
SELECT DISTINCT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Africa')

SELECT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IS NULL OR T2.Language <> 'English'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT `CountryCode` FROM `countrylanguage` WHERE `CountryCode` NOT IN (SELECT DISTINCT `CountryCode` FROM `countrylanguage` WHERE `Language` = 'English')
SELECT Code FROM country WHERE NOT EXISTS (SELECT 1 FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code AND countrylanguage.Language = 'English')
SELECT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IS NULL OR T2.Language <> 'English'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' WHERE T2.CountryCode IS NULL
SELECT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT T1.Code  FROM country AS T1  LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English'  WHERE T2.Language IS NULL
SELECT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT C.Code FROM country AS C WHERE C.Code NOT IN (SELECT CL.CountryCode FROM countrylanguage AS CL WHERE CL.Language = 'English' AND CL.IsOfficial = 'T')
SELECT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' WHERE T2.Language IS NULL
SELECT DISTINCT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' WHERE T2.Language IS NULL
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')

SELECT Code FROM country WHERE NOT EXISTS (SELECT 1 FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code AND countrylanguage.Language = 'English')
SELECT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IS NULL OR T2.Language <> 'English'
SELECT DISTINCT `CountryCode` FROM `countrylanguage` WHERE `Language` <> 'English'
SELECT DISTINCT `CountryCode` FROM `countrylanguage` WHERE `CountryCode` NOT IN (SELECT `CountryCode` FROM `countrylanguage` WHERE `Language` = 'English')
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT DISTINCT c.Code FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English' WHERE cl.Language IS NULL
SELECT Code FROM country WHERE NOT EXISTS (SELECT 1 FROM countrylanguage WHERE country.Code = countrylanguage.CountryCode AND countrylanguage.Language = 'English')
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT CountryCode FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IS NULL OR T2.Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT C.Code FROM country AS C WHERE C.Code NOT IN (SELECT CL.CountryCode FROM countrylanguage AS CL WHERE CL.Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT c.Code FROM country AS c WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')

SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'

SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT CountryCode FROM countrylanguage WHERE Language <> 'English';
SELECT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT CountryCode FROM countrylanguage WHERE Language <> 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'

SELECT DISTINCT c.Code FROM country AS c LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language IS NULL AND c.GovernmentForm != 'Republic';
SELECT Code FROM country WHERE GovernmentForm <> 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT T1.Code FROM country AS T1 WHERE T1.GovernmentForm != 'Republic' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T2 WHERE T2.CountryCode = T1.Code AND T2.Language = 'English')
SELECT DISTINCT C.Code  FROM country AS C  LEFT JOIN countrylanguage AS CL ON C.Code = CL.CountryCode AND CL.Language = 'English'  WHERE CL.CountryCode IS NULL AND C.GovernmentForm <> 'Republic'
SELECT c.Code  FROM country AS c  WHERE c.GovernmentForm <> 'Republic'  AND NOT EXISTS (SELECT 1 FROM countrylanguage AS cl WHERE cl.CountryCode = c.Code AND cl.Language = 'English')
SELECT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND T1.GovernmentForm != 'Republic'
SELECT DISTINCT `c`.`Code`  FROM `country` AS `c`  LEFT JOIN `countrylanguage` AS `cl` ON `c`.`Code` = `cl`.`CountryCode` AND `cl`.`Language` = 'English' AND `cl`.`IsOfficial` = 'T'  WHERE `cl`.`CountryCode` IS NULL AND `c`.`GovernmentForm` != 'Republic'
SELECT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'English' WHERE T1.GovernmentForm != 'Republic' AND T2.Language IS NULL
SELECT DISTINCT c.Code  FROM country AS c  LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English'  WHERE cl.Language IS NULL AND c.GovernmentForm != 'Republic'
SELECT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND T1.GovernmentForm <> 'Republic'
SELECT DISTINCT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language <> 'English' OR T2.Language IS NULL AND T1.GovernmentForm <> 'Republic'
SELECT DISTINCT T1.CountryCode  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language != 'English' AND T2.GovernmentForm != 'Republic'
SELECT DISTINCT C.Code  FROM country AS C  WHERE C.GovernmentForm <> 'Republic'  AND C.Code NOT IN (SELECT CL.CountryCode FROM countrylanguage AS CL WHERE CL.Language = 'English')
SELECT DISTINCT T1.Code FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language != 'English' AND T1.GovernmentForm != 'Republic'
SELECT DISTINCT T1.Code  FROM country AS T1  LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language <> 'English' OR T2.Language IS NULL  AND T1.GovernmentForm <> 'Republic'
SELECT DISTINCT T1.Code  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language <> 'English' AND T1.GovernmentForm <> 'Republic'
SELECT DISTINCT T1.Code  FROM country AS T1  WHERE T1.GovernmentForm != 'Republic'  AND T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT DISTINCT T1.Code  FROM country AS T1  WHERE T1.GovernmentForm != 'Republic'  AND T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
SELECT DISTINCT T1.Code  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language != 'English' AND T1.GovernmentForm != 'Republic'
SELECT DISTINCT T1.Code  FROM country AS T1  WHERE T1.GovernmentForm != 'Republic'  AND T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')

SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT T1.Code FROM country AS T1 WHERE T1.GovernmentForm NOT LIKE '%Republic%' AND T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT Code FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND GovernmentForm != 'Republic'
SELECT Code FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND GovernmentForm <> 'Republic'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic';
SELECT T1.Code FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE (T2.Language IS NULL OR T2.Language <> 'English') AND T1.GovernmentForm <> 'Republic'
SELECT c.Code  FROM country AS c  LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English'  WHERE cl.CountryCode IS NULL AND c.GovernmentForm <> 'Republic'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm != 'Republic';
SELECT c.Code  FROM country AS c  LEFT JOIN countrylanguage AS cl ON c.Code = cl.CountryCode AND cl.Language = 'English'  WHERE c.GovernmentForm <> 'Republic' AND cl.Language IS NULL
SELECT DISTINCT T1.CountryCode  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language <> 'English' AND T2.GovernmentForm <> 'Republic'
SELECT DISTINCT C.Code  FROM country AS C  WHERE C.GovernmentForm != 'Republic'  AND C.Code NOT IN (SELECT CL.CountryCode FROM countrylanguage AS CL WHERE CL.Language = 'English')
SELECT DISTINCT C.Code  FROM country AS C  WHERE C.GovernmentForm != 'Republic'  AND C.Code NOT IN (SELECT CL.CountryCode FROM countrylanguage AS CL WHERE CL.Language = 'English')
SELECT DISTINCT C.Code  FROM country AS C  LEFT JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE CL.Language != 'English' OR CL.Language IS NULL  AND C.GovernmentForm != 'Republic'
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND GovernmentForm <> 'Republic'
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND T1.GovernmentForm != 'Republic'
SELECT DISTINCT T1.Code  FROM country AS T1  WHERE T1.GovernmentForm != 'Republic'  AND T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT DISTINCT T1.Code  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language <> 'English'  AND T1.GovernmentForm <> 'Republic'
SELECT DISTINCT T1.CountryCode  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language != 'English' AND T2.GovernmentForm != 'Republic'
SELECT DISTINCT T1.Code  FROM country AS T1  LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.GovernmentForm <> 'Republic' AND (T2.Language <> 'English' OR T2.Language IS NULL)

SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Region = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.Code AND T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND NOT (T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Region = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.Code AND T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Europe' AND NOT (T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Europe' AND T3.Language != 'English' AND T3.IsOfficial = 'F'
SELECT city.Name FROM city INNER JOIN country ON city.CountryCode = country.Code WHERE country.Region = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage WHERE CountryCode = country.Code AND Language = 'English' AND IsOfficial = 'T')
SELECT c.Name FROM city AS c INNER JOIN country AS co ON c.CountryCode = co.Code INNER JOIN countrylanguage AS cl ON co.Code = cl.CountryCode WHERE co.Region = 'Europe' AND cl.Language != 'English' AND cl.IsOfficial != 'T'
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND NOT (T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND T3.Language <> 'English' AND T3.IsOfficial = 'T'
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Region = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.Code AND T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  WHERE Co.Continent = 'Europe'  AND Co.Code NOT IN (     SELECT CL.CountryCode      FROM countrylanguage AS CL      WHERE CL.Language = 'English' AND CL.IsOfficial = 'T' )
SELECT DISTINCT c.Name FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  WHERE co.Region = 'Europe' AND co.Code NOT IN (     SELECT cl.CountryCode FROM countrylanguage AS cl      WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' )
SELECT DISTINCT c.Name  FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  WHERE co.Continent = 'Europe'  AND co.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.IsOfficial = 'T' AND cl.Language = 'English')
SELECT DISTINCT c.Name  FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  WHERE co.Continent = 'Europe'  AND co.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English' AND cl.IsOfficial = 'T')
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND NOT (T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  WHERE Co.Region = 'Europe'  AND C.CountryCode NOT IN (     SELECT CL.CountryCode      FROM countrylanguage AS CL      WHERE CL.Language = 'English' AND CL.IsOfficial = 'T' )
SELECT DISTINCT T2.Name  FROM city AS T2  INNER JOIN country AS T3 ON T2.CountryCode = T3.Code  WHERE T3.Region = 'Europe'  AND T3.Code NOT IN (SELECT T1.CountryCode FROM countrylanguage AS T1 WHERE T1.Language = 'English' AND T1.IsOfficial = 'T')
SELECT DISTINCT T3.Name FROM city AS T3 INNER JOIN country AS T1 ON T3.CountryCode = T1.Code INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = 'Europe' AND T2.Language <> 'English' AND T2.IsOfficial = 'F'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CO ON C.CountryCode = CO.Code  WHERE CO.Region = 'Europe'  AND CO.Code NOT IN (     SELECT CL.CountryCode      FROM countrylanguage AS CL      WHERE CL.Language = 'English' AND CL.IsOfficial = 'T' )
SELECT DISTINCT c.Name  FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  WHERE co.Continent = 'Europe'  AND co.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language = 'English' AND cl.IsOfficial = 'T')

SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND T3.Language != 'English' AND T3.IsOfficial = 'T'
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Region = 'Europe' AND T2.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT C.Name FROM city AS C INNER JOIN country AS Co ON C.CountryCode = Co.Code INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode WHERE Co.Region = 'Europe' AND CL.Language = 'English' AND CL.IsOfficial = 'T'
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND NOT (T3.Language = 'English' AND T3.IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND T3.Language = 'English' AND T3.IsOfficial = 'F'
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Europe' AND T3.Language = 'English' AND T3.IsOfficial = 'F'
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Europe' AND T1.CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Europe' AND T2.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT C.Name FROM city AS C INNER JOIN country AS Co ON C.CountryCode = Co.Code LEFT JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode WHERE Co.Continent = 'Europe' AND (CL.Language != 'English' OR CL.Language IS NULL)
SELECT T1.Name  FROM city AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode  WHERE T2.Region = 'Europe' AND T3.Language <> 'English' AND T3.IsOfficial = 'F'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE Co.Region = 'Europe' AND CL.Language != 'English' AND CL.IsOfficial = 'F'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  WHERE Co.Continent = 'Europe'  AND C.CountryCode NOT IN (SELECT CL.CountryCode FROM countrylanguage AS CL WHERE CL.Language = 'English' AND CL.IsOfficial = 'T')
SELECT DISTINCT T1.Name  FROM city AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T2.Region = 'Europe'  AND T1.CountryCode NOT IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'English' AND IsOfficial = 'T' )
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS T4 WHERE T4.CountryCode = T2.Code AND T4.Language = 'English' AND T4.IsOfficial = 'T')
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CO ON C.CountryCode = CO.Code  LEFT JOIN countrylanguage AS CL ON CO.Code = CL.CountryCode AND CL.Language = 'English'  WHERE CO.Region = 'Europe' AND (CL.IsOfficial IS NULL OR CL.IsOfficial = 'F')
SELECT DISTINCT T1.Name  FROM city AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode  WHERE T2.Continent = 'Europe' AND T3.Language = 'English' AND T3.IsOfficial = 'F'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  LEFT JOIN countrylanguage AS CL ON C.CountryCode = CL.CountryCode AND CL.Language = 'English' AND CL.IsOfficial = 'T'  WHERE Co.Continent = 'Europe' AND CL.Language IS NULL
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  LEFT JOIN countrylanguage AS CL ON C.CountryCode = CL.CountryCode AND CL.Language = 'English'  WHERE Co.Continent = 'Europe' AND (CL.IsOfficial IS NULL OR CL.IsOfficial = 'F')
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CN ON C.CountryCode = CN.Code  LEFT JOIN countrylanguage AS CL ON CN.Code = CL.CountryCode AND CL.Language = 'English' AND CL.IsOfficial = 'T'  WHERE CN.Region = 'Europe' AND CL.CountryCode IS NULL
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  LEFT JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode AND CL.Language = 'English' AND CL.IsOfficial = 'T'  WHERE Co.Region = 'Europe' AND CL.CountryCode IS NULL

SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'Chinese' AND T3.IsOfficial = 'T' AND T2.Continent = 'Asia'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT City.Name FROM city AS City INNER JOIN country AS Country ON City.CountryCode = Country.Code INNER JOIN countrylanguage AS Language ON Country.Code = Language.CountryCode WHERE Country.Continent = 'Asia' AND Language.Language = 'Chinese' AND Language.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'Chinese' AND T3.IsOfficial = 'T' AND T2.Continent = 'Asia'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT C.Name FROM city AS C INNER JOIN country AS Co ON C.CountryCode = Co.Code INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode WHERE CL.Language = 'Chinese' AND CL.IsOfficial = 'T' AND Co.Continent = 'Asia'
SELECT DISTINCT c.Name FROM city AS c INNER JOIN country AS co ON c.CountryCode = co.Code INNER JOIN countrylanguage AS cl ON co.Code = cl.CountryCode WHERE cl.Language = 'Chinese' AND cl.IsOfficial = 'T' AND co.Continent = 'Asia'
SELECT DISTINCT City.Name FROM city AS City INNER JOIN country AS Country ON City.CountryCode = Country.Code INNER JOIN countrylanguage AS Language ON Country.Code = Language.CountryCode WHERE Country.Region = 'Asia' AND Language.Language = 'Chinese' AND Language.IsOfficial = 'T'
SELECT DISTINCT c.Name  FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  INNER JOIN countrylanguage AS cl ON co.Code = cl.CountryCode  WHERE co.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T'
SELECT DISTINCT T1.Name  FROM city AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode  WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T3.Name FROM city AS T3 INNER JOIN country AS T2 ON T3.CountryCode = T2.Code INNER JOIN countrylanguage AS T1 ON T2.Code = T1.CountryCode WHERE T1.Language = 'Chinese' AND T1.IsOfficial = 'T' AND T2.Region = 'Asia'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE CL.Language = 'Chinese' AND CL.IsOfficial = 'T' AND Co.Continent = 'Asia'
SELECT DISTINCT T3.Name  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  INNER JOIN city AS T3 ON T2.Code = T3.CountryCode  WHERE T1.Language = 'Chinese' AND T1.IsOfficial = 'T' AND T2.Continent = 'Asia'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CN ON C.CountryCode = CN.Code  INNER JOIN countrylanguage AS CL ON CN.Code = CL.CountryCode  WHERE CN.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT c.Name  FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  INNER JOIN countrylanguage AS cl ON co.Code = cl.CountryCode  WHERE cl.Language = 'Chinese' AND cl.IsOfficial = 'T' AND co.Continent = 'Asia'
SELECT DISTINCT c.Name  FROM city AS c  INNER JOIN country AS co ON c.CountryCode = co.Code  INNER JOIN countrylanguage AS cl ON co.Code = cl.CountryCode  WHERE cl.Language = 'Chinese' AND cl.IsOfficial = 'T' AND co.Continent = 'Asia'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CO ON C.CountryCode = CO.Code  INNER JOIN countrylanguage AS CL ON CO.Code = CL.CountryCode  WHERE CO.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT c.Name FROM city AS c INNER JOIN country AS co ON c.CountryCode = co.Code INNER JOIN countrylanguage AS cl ON co.Code = cl.CountryCode WHERE co.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T'

SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Region = 'Asia' AND T3.Language = 'Chinese'
SELECT DISTINCT T3.Name FROM city AS T3 INNER JOIN country AS T1 ON T3.CountryCode = T1.Code INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' AND T2.Language = 'Chinese' AND T2.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT C.Name FROM city AS C INNER JOIN country AS Co ON C.CountryCode = Co.Code INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode WHERE Co.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT T1.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT city.Name  FROM city  INNER JOIN country ON city.CountryCode = country.Code  INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'
SELECT DISTINCT C.Name FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE Co.Region = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CO ON C.CountryCode = CO.Code  INNER JOIN countrylanguage AS CL ON CO.Code = CL.CountryCode  WHERE CO.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE Co.Region = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT T1.Name  FROM city AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode  WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE Co.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE Co.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS Co ON C.CountryCode = Co.Code  INNER JOIN countrylanguage AS CL ON Co.Code = CL.CountryCode  WHERE Co.Region = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CN ON C.CountryCode = CN.Code  INNER JOIN countrylanguage AS CL ON CN.Code = CL.CountryCode  WHERE CN.Region = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'
SELECT DISTINCT C.Name  FROM city AS C  INNER JOIN country AS CO ON C.CountryCode = CO.Code  INNER JOIN countrylanguage AS CL ON CO.Code = CL.CountryCode  WHERE CO.Continent = 'Asia' AND CL.Language = 'Chinese' AND CL.IsOfficial = 'T'

SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT T1.Name, T1.IndepYear, T1.SurfaceArea FROM country AS T1 WHERE T1.Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT T1.Name, T1.IndepYear, T1.SurfaceArea FROM country AS T1 WHERE T1.Code = (SELECT T2.CountryCode FROM city AS T2 ORDER BY T2.Population ASC LIMIT 1)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1

SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT T1.Name, T1.IndepYear, T1.SurfaceArea FROM country AS T1 WHERE T1.Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT T1.Name, T1.IndepYear, T1.SurfaceArea FROM country AS T1 WHERE T1.Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT T1.Name, T1.IndepYear, T1.SurfaceArea FROM country AS T1 WHERE T1.Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)

SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)

SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)

SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT T2.Name, COUNT(T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Name HAVING COUNT(T1.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT country.Name, COUNT(countrylanguage.Language) FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING COUNT(countrylanguage.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT c.Name, COUNT(cl.Language) FROM country AS c INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode GROUP BY c.Code HAVING COUNT(cl.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) >= 3
SELECT T2.Name, COUNT(T1.Language) AS NumberOfLanguages  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Name  HAVING COUNT(T1.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) >= 3
SELECT C.Name, COUNT(CL.Language) AS LanguageCount FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Name HAVING COUNT(CL.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) AS NumberOfLanguages  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) >= 3
SELECT C.Name, COUNT(CL.Language) AS NumberOfLanguages FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Name HAVING COUNT(CL.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) >= 3
SELECT T1.Name, COUNT(DISTINCT T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Language) >= 3
SELECT c.Name, COUNT(cl.Language) AS language_count  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  GROUP BY c.Name  HAVING COUNT(cl.Language) >= 3
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) >= 3
SELECT c.Name, COUNT(DISTINCT cl.Language) AS LanguageCount  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  GROUP BY c.Code, c.Name  HAVING COUNT(DISTINCT cl.Language) >= 3

SELECT T2.Name, COUNT(T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Name HAVING COUNT(T1.Language) > 2
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) > 2
SELECT C.Name, COUNT(CL.Language) FROM countrylanguage AS CL INNER JOIN country AS C ON CL.CountryCode = C.Code GROUP BY CL.CountryCode HAVING COUNT(CL.Language) > 2
SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(T2.Language) > 2
SELECT C.Name, COUNT(CL.Language) FROM country AS C INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Name HAVING COUNT(CL.Language) > 2
SELECT T2.Name, COUNT(T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Name HAVING COUNT(T1.Language) > 2
SELECT T2.Name, COUNT(T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Name HAVING COUNT(T1.Language) > 2
SELECT T2.Name, COUNT(T1.Language) AS LanguageCount FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.CountryCode HAVING COUNT(T1.Language) > 2
SELECT C.Name, COUNT(CL.Language) AS LanguageCount  FROM countrylanguage AS CL  INNER JOIN country AS C ON CL.CountryCode = C.Code  GROUP BY CL.CountryCode  HAVING COUNT(CL.Language) > 2
SELECT T3.Name, COUNT(T2.Language) FROM country AS T3 INNER JOIN countrylanguage AS T2 ON T3.Code = T2.CountryCode GROUP BY T3.Name HAVING COUNT(T2.Language) > 2
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) > 2
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) > 2
SELECT C.Name, COUNT(DISTINCT CL.Language) AS LanguageCount  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  GROUP BY C.Code  HAVING COUNT(DISTINCT CL.Language) > 2
SELECT T2.Name, COUNT(DISTINCT T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Name  HAVING COUNT(DISTINCT T1.Language) > 2
SELECT c.Name, COUNT(cl.Language) AS NumberOfLanguages  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  GROUP BY c.Code  HAVING COUNT(cl.Language) > 2
SELECT c.Name, COUNT(cl.Language) AS LanguageCount  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  GROUP BY c.Name  HAVING COUNT(cl.Language) > 2
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) > 2
SELECT C.Name, COUNT(DISTINCT CL.Language) AS LanguageCount  FROM country AS C  INNER JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  GROUP BY C.Code  HAVING COUNT(DISTINCT CL.Language) > 2
SELECT T1.Name, COUNT(T2.Language) AS LanguageCount  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(T2.Language) > 2
SELECT T2.Name, COUNT(T1.Language) AS LanguageCount  FROM countrylanguage AS T1  INNER JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T2.Name  HAVING COUNT(T1.Language) > 2

SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(Name) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) AS CityCount FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) AS NumberOfCities  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District;
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District

SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(Name) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(Name) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District
SELECT District, COUNT(*) AS city_count FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District

SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT T1.GovernmentForm, SUM(T2.Population) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy > 72 GROUP BY T1.GovernmentForm
SELECT T2.GovernmentForm, SUM(T1.Population) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.GovernmentForm HAVING AVG(T1.LifeExpectancy) > 72
SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT T1.GovernmentForm, SUM(T2.Population) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.GovernmentForm HAVING AVG(T1.LifeExpectancy) > 72
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  GROUP BY GovernmentForm  HAVING AVG(LifeExpectancy) > 72
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm;
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm
SELECT T1.GovernmentForm, SUM(T1.Population) AS TotalPopulation  FROM country AS T1  WHERE T1.LifeExpectancy > 72  GROUP BY T1.GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT T1.GovernmentForm, SUM(T1.Population) AS TotalPopulation  FROM country AS T1  WHERE T1.LifeExpectancy > 72  GROUP BY T1.GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm

SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT T1.GovernmentForm, SUM(T2.Population) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy > 72 GROUP BY T1.GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT T1.GovernmentForm, SUM(T2.Population) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy > 72 GROUP BY T1.GovernmentForm
SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm;
SELECT T1.GovernmentForm, SUM(T2.Population) AS TotalPopulation FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy > 72 GROUP BY T1.GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  WHERE LifeExpectancy > 72  GROUP BY GovernmentForm;

SELECT Continent, AVG(LifeExpectancy) AS AvgLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy IS NOT NULL GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT T1.Continent, AVG(T1.LifeExpectancy) AS AverageLifeExpectancy, SUM(T2.Population) AS TotalPopulation FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent HAVING AVG(T1.LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy IS NOT NULL GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT T1.Continent, AVG(T1.LifeExpectancy) AS AverageLifeExpectancy, SUM(T2.Population) AS TotalPopulation FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent HAVING AVG(T1.LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS average_life_expectancy, SUM(Population) AS total_population  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT country.Continent, AVG(country.LifeExpectancy) AS AverageLifeExpectancy, SUM(city.Population) AS TotalPopulation  FROM country  INNER JOIN city ON country.Code = city.CountryCode  GROUP BY country.Continent  HAVING AVG(country.LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72

SELECT Continent, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT T1.Continent, SUM(T2.Population) AS Total_Population, AVG(T1.LifeExpectancy) AS Average_Life_Expectancy FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent HAVING AVG(T1.LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country WHERE LifeExpectancy < 72 GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72
SELECT T1.Continent, SUM(T2.Population) AS TotalPopulation, AVG(T1.LifeExpectancy) AS AverageLifeExpectancy  FROM country AS T1  INNER JOIN city AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  HAVING AVG(T1.LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT T1.Continent, SUM(T2.Population) AS TotalPopulation, AVG(T1.LifeExpectancy) AS AverageLifeExpectancy  FROM country AS T1  INNER JOIN city AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  HAVING AVG(T1.LifeExpectancy) < 72
SELECT T1.Continent, SUM(T2.Population) AS TotalPopulation, AVG(T1.LifeExpectancy) AS AverageLifeExpectancy  FROM country AS T1  INNER JOIN city AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Continent  HAVING AVG(T1.LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72
SELECT Continent, SUM(Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy  FROM country  GROUP BY Continent  HAVING AVG(LifeExpectancy) < 72;

SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT T1.Name, T1.SurfaceArea FROM country AS T1 ORDER BY T1.SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3

SELECT T1.Name FROM country AS T1 INNER JOIN (SELECT CountryCode, SUM(Population) AS TotalPopulation FROM city GROUP BY CountryCode) AS T2 ON T1.Code = T2.CountryCode ORDER BY TotalPopulation DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3

SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country WHERE Population IS NOT NULL ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3

SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3

SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Region = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Region = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';

SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(DISTINCT Code) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(DISTINCT Code) FROM country WHERE Region = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';

SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Europe' AND T2.Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Europe' AND T2.Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000

SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Region = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT LocalName FROM country WHERE Region = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000

SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000;
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000

SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea  FROM country  WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS total_population, AVG(SurfaceArea) AS average_surface_area  FROM country  WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea  FROM country  WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS total_population, AVG(SurfaceArea) AS average_surface_area FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS total_population, AVG(SurfaceArea) AS average_surface_area FROM country WHERE Region = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS TotalPopulation, AVG(SurfaceArea) AS AverageSurfaceArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
SELECT SUM(Population) AS total_population, AVG(SurfaceArea) AS average_surface_area FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000

SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;

SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT DISTINCT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000

SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1
SELECT Language, COUNT(DISTINCT CountryCode) AS CountryCount FROM countrylanguage GROUP BY Language ORDER BY CountryCount DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1
SELECT Language, COUNT(DISTINCT CountryCode) AS CountryCount FROM countrylanguage GROUP BY Language ORDER BY CountryCount DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language, COUNT(DISTINCT CountryCode) AS CountryCount FROM countrylanguage GROUP BY Language ORDER BY CountryCount DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1

SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(CountryCode) DESC LIMIT 1;
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 GROUP BY T1.Language ORDER BY COUNT(DISTINCT T1.CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = (SELECT MAX(lang_count) FROM (SELECT COUNT(DISTINCT CountryCode) AS lang_count FROM countrylanguage GROUP BY Language))

SELECT T1.CountryCode, T1.Language, T1.Percentage  FROM countrylanguage AS T1  INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage              FROM countrylanguage              GROUP BY CountryCode) AS T2  ON T1.CountryCode = T2.CountryCode  AND T1.Percentage = T2.MaxPercentage
SELECT T1.CountryCode, T1.Language FROM countrylanguage AS T1 INNER JOIN (SELECT CountryCode, MAX(Percentage) AS max_percentage FROM countrylanguage GROUP BY CountryCode) AS T2 ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.max_percentage
SELECT cl.CountryCode, cl.Language  FROM countrylanguage AS cl  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS maxLang ON cl.CountryCode = maxLang.CountryCode AND cl.Percentage = maxLang.MaxPercentage
SELECT cl.CountryCode, cl.Language  FROM countrylanguage AS cl  JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage        FROM countrylanguage        GROUP BY CountryCode) AS maxLang  ON cl.CountryCode = maxLang.CountryCode AND cl.Percentage = maxLang.MaxPercentage
SELECT cl.CountryCode, cl.Language  FROM countrylanguage AS cl  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS maxLang ON cl.CountryCode = maxLang.CountryCode AND cl.Percentage = maxLang.MaxPercentage
SELECT T1.CountryCode, T2.Language  FROM (SELECT CountryCode, MAX(Percentage) AS MaxPercentage        FROM countrylanguage        GROUP BY CountryCode) AS T1  INNER JOIN countrylanguage AS T2  ON T1.CountryCode = T2.CountryCode AND T1.MaxPercentage = T2.Percentage
SELECT CL.CountryCode, CL.Language  FROM countrylanguage AS CL  INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage FROM countrylanguage GROUP BY CountryCode) AS MaxLang  ON CL.CountryCode = MaxLang.CountryCode AND CL.Percentage = MaxLang.MaxPercentage
SELECT CL.CountryCode, CL.Language  FROM countrylanguage AS CL  INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage              FROM countrylanguage              GROUP BY CountryCode) AS MaxLang  ON CL.CountryCode = MaxLang.CountryCode AND CL.Percentage = MaxLang.MaxPercentage
SELECT cl.CountryCode, cl.Language  FROM countrylanguage AS cl  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS max_cl ON cl.CountryCode = max_cl.CountryCode AND cl.Percentage = max_cl.MaxPercentage
SELECT T1.CountryCode, T1.Language FROM countrylanguage AS T1 INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage FROM countrylanguage GROUP BY CountryCode) AS T2 ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS T2 ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS T2  ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT cl.CountryCode, cl.Language  FROM countrylanguage AS cl  INNER JOIN (      SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode  ) AS maxLang ON cl.CountryCode = maxLang.CountryCode AND cl.Percentage = maxLang.MaxPercentage
SELECT T2.Name, T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE (T1.CountryCode, T1.Percentage) IN (     SELECT CountryCode, MAX(Percentage)     FROM countrylanguage     GROUP BY CountryCode )
SELECT CL.CountryCode, CL.Language  FROM countrylanguage AS CL  INNER JOIN (      SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode  ) AS MaxLang ON CL.CountryCode = MaxLang.CountryCode AND CL.Percentage = MaxLang.MaxPercentage
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T1.Code)
SELECT CL.Language, CL.CountryCode FROM countrylanguage AS CL INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage     FROM countrylanguage     GROUP BY CountryCode ) AS MaxLang ON CL.CountryCode = MaxLang.CountryCode AND CL.Percentage = MaxLang.MaxPercentage
SELECT T1.CountryCode, T1.Language, T1.Percentage  FROM countrylanguage AS T1  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS T2  ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT CL.CountryCode, CL.Language  FROM countrylanguage AS CL  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS MaxLang ON CL.CountryCode = MaxLang.CountryCode AND CL.Percentage = MaxLang.MaxPercentage
SELECT T1.CountryCode, T1.Language, MAX(T1.Percentage)  FROM countrylanguage AS T1  GROUP BY T1.CountryCode  HAVING T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage AS T2 WHERE T2.CountryCode = T1.CountryCode)

SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage              FROM countrylanguage              GROUP BY CountryCode) AS T2  ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT CountryCode, Language FROM countrylanguage WHERE Percentage = (SELECT MAX(Percentage) FROM countrylanguage AS T2 WHERE T2.CountryCode = countrylanguage.CountryCode);
SELECT CL.CountryCode, CL.Language  FROM countrylanguage AS CL  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS MaxLang ON CL.CountryCode = MaxLang.CountryCode AND CL.Percentage = MaxLang.MaxPercentage
WITH MaxLang AS (     SELECT CountryCode, Language, Percentage,            ROW_NUMBER() OVER (PARTITION BY CountryCode ORDER BY Percentage DESC) AS rn     FROM countrylanguage ) SELECT c.Code, ml.Language FROM country AS c JOIN MaxLang AS ml ON c.Code = ml.CountryCode WHERE ml.rn = 1;
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(T3.Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.CountryCode)
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)
SELECT T1.Code AS CountryCode, T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T2.CountryCode)
SELECT T1.Code, T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = (SELECT MAX(T3.Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T2.CountryCode)
SELECT cl.CountryCode, cl.Language FROM countrylanguage AS cl INNER JOIN (SELECT CountryCode, MAX(Percentage) AS max_percentage FROM countrylanguage GROUP BY CountryCode) AS max_lang ON cl.CountryCode = max_lang.CountryCode AND cl.Percentage = max_lang.max_percentage
SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage              FROM countrylanguage              GROUP BY CountryCode) AS T2  ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T1.Code)
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage AS T3 WHERE T3.CountryCode = T1.Code)
SELECT T1.CountryCode, T1.Language FROM countrylanguage AS T1 INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage     FROM countrylanguage     GROUP BY CountryCode ) AS T2 ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT T1.Code AS CountryCode, T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = (     SELECT MAX(Percentage)     FROM countrylanguage AS T3     WHERE T3.CountryCode = T1.Code )
SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (     SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode ) AS T2 ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage
SELECT T1.Code AS CountryCode, T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage IN (     SELECT MAX(Percentage)     FROM countrylanguage     GROUP BY CountryCode )
SELECT T1.Code, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)
SELECT T1.Code AS CountryCode, T2.Language  FROM country AS T1  INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)  GROUP BY T1.Code
SELECT T1.CountryCode, T1.Language  FROM countrylanguage AS T1  INNER JOIN (      SELECT CountryCode, MAX(Percentage) AS MaxPercentage      FROM countrylanguage      GROUP BY CountryCode  ) AS T2  ON T1.CountryCode = T2.CountryCode AND T1.Percentage = T2.MaxPercentage

SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
WITH MaxSpanishPercentage AS (     SELECT `CountryCode`, MAX(`Percentage`) AS MaxPercentage     FROM `countrylanguage`     WHERE `Language` = 'Spanish'     GROUP BY `CountryCode` ) SELECT COUNT(DISTINCT `CountryCode`) FROM countrylanguage AS CL JOIN MaxSpanishPercentage AS MSP ON CL.CountryCode = MSP.CountryCode WHERE CL.Language = 'Spanish' AND CL.Percentage = MSP.MaxPercentage;
SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 WHERE T1.Language = 'Spanish' AND T1.Percentage > (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.CountryCode AND Language <> 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage IN (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish' GROUP BY CountryCode)
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` = 'Spanish' AND `Percentage` = (SELECT MAX(`Percentage`) FROM `countrylanguage` WHERE `Language` = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT `CountryCode`) FROM `countrylanguage` WHERE `Language` = 'Spanish' AND `Percentage` = (SELECT MAX(`Percentage`) FROM `countrylanguage` WHERE `Language` = 'Spanish')
SELECT COUNT(DISTINCT CountryCode)  FROM countrylanguage  WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish');
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode)  FROM countrylanguage  WHERE Language = 'Spanish'  AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')

SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50 AND IsOfficial = 'T';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50;
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50;
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50;
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT COUNT(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 WHERE T1.Language = 'Spanish' AND T1.IsOfficial = 'T'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50;
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50.0;

SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT T1.CountryCode  FROM countrylanguage AS T1  WHERE T1.Language = 'Spanish'  ORDER BY T1.Percentage DESC  LIMIT 1
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')

SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage >= 50.0;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish' GROUP BY CountryCode)
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT T1.Code FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND (T2.IsOfficial = 'T' OR T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code))
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50 AND IsOfficial = 'T'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'
SELECT DISTINCT CL.CountryCode  FROM countrylanguage AS CL  WHERE CL.Language = 'Spanish'  AND CL.Percentage = (SELECT MAX(Percentage)                       FROM countrylanguage                       WHERE CountryCode = CL.CountryCode)

SELECT COUNT(Conductor_ID) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(Conductor_ID) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;

SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(Conductor_ID) FROM conductor;
SELECT COUNT(Conductor_ID) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(Conductor_ID) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(DISTINCT "Conductor_ID") FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT COUNT(*) FROM conductor;

SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT T1.Name FROM conductor AS T1 ORDER BY T1.Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT T1.Name FROM conductor AS T1 ORDER BY T1.Age ASC
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC

SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age ASC

SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA';

SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT T1.Name FROM conductor AS T1 WHERE T1.Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA';
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'
SELECT Name FROM conductor WHERE Nationality <> 'USA'
SELECT Name FROM conductor WHERE Nationality != 'USA'

SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT DISTINCT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT record_company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT DISTINCT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;

SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;
SELECT AVG(Attendance) FROM show;

SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final';
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS max_share, MIN(Share) AS min_share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS max_share, MIN(Share) AS min_share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share) AS max_share, MIN(Share) AS min_share FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'

SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final';
SELECT MAX("Share"), MIN("Share") FROM performance WHERE "Type" != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final'
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX("Share") AS max_share, MIN("Share") AS min_share FROM performance WHERE "Type" != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type <> 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM performance WHERE Type != 'Live final'

SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT "Nationality") FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;

SELECT COUNT(DISTINCT "Nationality") FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;

SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT T1.Name FROM conductor AS T1 ORDER BY T1.Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC

SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC

SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)

SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)

SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T3.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T3 ON T1.Conductor_ID = T3.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T3.Orchestra  FROM conductor AS T1  INNER JOIN orchestra AS T3 ON T1.Conductor_ID = T3.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name AS Conductor_Name, T2.Orchestra AS Orchestra_Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 WHERE T1.Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1)
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Orchestra_ID) > 1
SELECT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Orchestra_ID) > 1
SELECT DISTINCT C.Name  FROM conductor AS C  INNER JOIN orchestra AS O ON C.Conductor_ID = O.Conductor_ID  GROUP BY C.Conductor_ID  HAVING COUNT(O.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  HAVING COUNT(T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Orchestra_ID) > 1

SELECT T1.Name FROM conductor AS T1 WHERE T1.Conductor_ID IN (SELECT T2.Conductor_ID FROM orchestra AS T2 GROUP BY T2.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1)
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(DISTINCT T1.Orchestra_ID) > 1
SELECT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Name HAVING COUNT(DISTINCT T1.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(T2.Orchestra_ID) > 1
SELECT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T2.Conductor_ID = T1.Conductor_ID GROUP BY T2.Name HAVING COUNT(DISTINCT T1.Orchestra_ID) > 1
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN performance AS T2 ON T1.Conductor_ID = T2.Orchestra_ID INNER JOIN orchestra AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T3.Orchestra) > 1
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Orchestra_ID) > 1

SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T3.Name FROM conductor AS T3 INNER JOIN performance AS T2 ON T3.Conductor_ID = T2.Orchestra_ID INNER JOIN orchestra AS T1 ON T2.Orchestra_ID = T1.Orchestra_ID GROUP BY T3.Name ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC LIMIT 1
SELECT T3.Name FROM (SELECT T1.Conductor_ID, COUNT(DISTINCT T1.Orchestra_ID) AS OrchestraCount FROM performance AS T1 INNER JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Conductor_ID) AS T4 INNER JOIN conductor AS T3 ON T4.Conductor_ID = T3.Conductor_ID ORDER BY T4.OrchestraCount DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  ORDER BY COUNT(DISTINCT T2.Orchestra_ID) DESC  LIMIT 1

SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(DISTINCT T1.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(T1.Orchestra) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T2.Name  FROM orchestra AS T1  INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  ORDER BY COUNT(T1.Orchestra_ID) DESC  LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1
SELECT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T2.Conductor_ID = T1.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1

SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T2.Name  FROM orchestra AS T1  INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2  ON T1.Conductor_ID = T2.Conductor_ID  WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT C.Name FROM conductor AS C INNER JOIN orchestra AS O ON C.Conductor_ID = O.Conductor_ID WHERE O.Year_of_Founded > 2008
SELECT DISTINCT C.Name  FROM conductor AS C  INNER JOIN orchestra AS O ON C.Conductor_ID = O.Conductor_ID  WHERE O.Year_of_Founded > 2008
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  WHERE T2.Year_of_Founded > 2008

SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM conductor AS T2 INNER JOIN orchestra AS T1 ON T2.Conductor_ID = T1.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T3.Name FROM conductor AS T3 INNER JOIN orchestra AS T2 ON T3.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T2.Name  FROM orchestra AS T1  INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID  WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008
SELECT DISTINCT T1.Name  FROM conductor AS T1  INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  WHERE T2.Year_of_Founded > 2008
SELECT DISTINCT T2.Name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Year_of_Founded > 2008

SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(Orchestra_ID) AS NumberOfOrchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS NumberOfOrchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company

SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT T1.Record_Company, COUNT(T1.Orchestra_ID) FROM orchestra AS T1 INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT T1.Record_Company, COUNT(DISTINCT T1.Orchestra_ID) AS Orchestra_Count  FROM orchestra AS T1  GROUP BY T1.Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(Orchestra_ID) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company
SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company

SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;
SELECT Major_Record_Format, COUNT(*) AS count FROM orchestra GROUP BY Major_Record_Format ORDER BY count ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(Orchestra_ID) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(Orchestra_ID) ASC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT Major_Record_Format, COUNT(*) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC
SELECT Major_Record_Format, COUNT(*) AS count FROM orchestra GROUP BY Major_Record_Format ORDER BY count ASC
SELECT Major_Record_Format, COUNT(*) AS format_count FROM orchestra GROUP BY Major_Record_Format ORDER BY format_count ASC
SELECT Major_Record_Format, COUNT(*) AS format_count FROM orchestra GROUP BY Major_Record_Format ORDER BY format_count ASC
SELECT Major_Record_Format, COUNT(*) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC
SELECT Major_Record_Format, COUNT(*) AS format_count FROM orchestra GROUP BY Major_Record_Format ORDER BY format_count ASC
SELECT Major_Record_Format, COUNT(*) AS format_count FROM orchestra GROUP BY Major_Record_Format ORDER BY format_count ASC
SELECT Major_Record_Format, COUNT(*) AS count FROM orchestra GROUP BY Major_Record_Format ORDER BY count ASC
SELECT Major_Record_Format, COUNT(*) AS format_count FROM orchestra GROUP BY Major_Record_Format ORDER BY format_count ASC
SELECT Major_Record_Format, COUNT(*) AS count FROM orchestra GROUP BY Major_Record_Format ORDER BY count ASC

SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) AS frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY frequency DESC
SELECT Major_Record_Format, COUNT(*) AS frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY frequency DESC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC;
SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
SELECT Major_Record_Format, COUNT(*) as Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC
SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC
SELECT Major_Record_Format, COUNT(*) AS frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY frequency DESC
SELECT "Major_Record_Format", COUNT(*) AS frequency FROM orchestra GROUP BY "Major_Record_Format" ORDER BY frequency DESC
SELECT Major_Record_Format, COUNT(*) AS frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY frequency DESC
SELECT Major_Record_Format, COUNT(*) as Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC
SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC
SELECT Major_Record_Format, COUNT(*) as frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY frequency DESC;
SELECT "Major_Record_Format", COUNT(*) AS frequency FROM orchestra GROUP BY "Major_Record_Format" ORDER BY frequency DESC
SELECT Major_Record_Format, COUNT(*) AS format_count FROM orchestra GROUP BY Major_Record_Format ORDER BY format_count DESC

SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1;
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1;
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT T1.Record_Company FROM orchestra AS T1 GROUP BY T1.Record_Company ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company HAVING COUNT(Orchestra_ID) = (SELECT MAX(OrchestraCount) FROM (SELECT COUNT(Orchestra_ID) AS OrchestraCount FROM orchestra GROUP BY Record_Company))
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra) DESC LIMIT 1

SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(DISTINCT Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(DISTINCT Orchestra) DESC LIMIT 1;
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(DISTINCT Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1

SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Orchestra_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT DISTINCT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL
SELECT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Orchestra_ID IS NULL
SELECT DISTINCT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Orchestra_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL

SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 WHERE T1.Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
SELECT T1.Orchestra_ID, T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT O.Orchestra  FROM orchestra AS O  LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID  WHERE P.Performance_ID IS NULL
SELECT o.Orchestra_ID, o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Performance_ID IS NULL
SELECT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Performance_ID IS NULL
SELECT DISTINCT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT DISTINCT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT DISTINCT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra_ID IS NULL
SELECT DISTINCT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Performance_ID IS NULL
SELECT DISTINCT T1.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL
SELECT O.Orchestra FROM orchestra AS O LEFT JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE P.Performance_ID IS NULL

SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003
SELECT Record_Company FROM orchestra GROUP BY Record_Company HAVING COUNT(CASE WHEN Year_of_Founded < 2003 THEN 1 END) > 0 AND COUNT(CASE WHEN Year_of_Founded > 2003 THEN 1 END) > 0
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT DISTINCT T1.Record_Company FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company FROM orchestra AS T1 WHERE T1.Year_of_Founded < 2003 AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  INTERSECT  SELECT DISTINCT T2.Record_Company  FROM orchestra AS T2  WHERE T2.Year_of_Founded > 2003;
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)

SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 OR Year_of_Founded > 2003 GROUP BY Record_Company HAVING COUNT(DISTINCT CASE WHEN Year_of_Founded < 2003 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Year_of_Founded > 2003 THEN 1 END) > 0
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 OR Year_of_Founded > 2003 GROUP BY Record_Company HAVING COUNT(CASE WHEN Year_of_Founded < 2003 THEN 1 END) > 0 AND COUNT(CASE WHEN Year_of_Founded > 2003 THEN 1 END) > 0
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company  FROM orchestra  WHERE Year_of_Founded < 2003 OR Year_of_Founded > 2003  GROUP BY Record_Company  HAVING COUNT(CASE WHEN Year_of_Founded < 2003 THEN 1 END) > 0     AND COUNT(CASE WHEN Year_of_Founded > 2003 THEN 1 END) > 0
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company  FROM orchestra  WHERE Year_of_Founded < 2003  GROUP BY Record_Company  HAVING Record_Company IN (SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003)
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Orchestra_ID IN (SELECT T2.Orchestra_ID FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded >= 2003)
SELECT DISTINCT T1.Record_Company  FROM orchestra AS T1  WHERE T1.Year_of_Founded < 2003  AND T1.Record_Company IN (SELECT T2.Record_Company FROM orchestra AS T2 WHERE T2.Year_of_Founded > 2003)

SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD';
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')
SELECT COUNT(Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD';
SELECT COUNT(Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');

SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');

SELECT DISTINCT T1.Year_of_Founded FROM orchestra AS T1 INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)
SELECT DISTINCT O.Year_of_Founded FROM orchestra AS O INNER JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID WHERE O.Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT O.Year_of_Founded FROM orchestra AS O WHERE O.Orchestra_ID IN (SELECT P.Orchestra_ID FROM performance AS P GROUP BY P.Orchestra_ID HAVING COUNT(P.Performance_ID) > 1)
SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT T1.Year_of_Founded FROM orchestra AS T1 INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Year_of_Founded HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT O.Year_of_Founded  FROM orchestra AS O  INNER JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID  GROUP BY O.Orchestra_ID  HAVING COUNT(P.Performance_ID) > 1
SELECT DISTINCT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT o.Year_of_Founded  FROM orchestra AS o  INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID  GROUP BY o.Orchestra_ID  HAVING COUNT(p.Performance_ID) > 1
SELECT DISTINCT o.Year_of_Founded  FROM orchestra AS o  INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID  GROUP BY o.Orchestra_ID  HAVING COUNT(p.Performance_ID) > 1
SELECT DISTINCT o.Year_of_Founded  FROM orchestra AS o  INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID  GROUP BY o.Orchestra_ID  HAVING COUNT(p.Performance_ID) > 1
SELECT DISTINCT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT T2.Year_of_Founded  FROM orchestra AS T2  INNER JOIN (SELECT Orchestra_ID              FROM performance              GROUP BY Orchestra_ID              HAVING COUNT(*) > 1) AS T1  ON T2.Orchestra_ID = T1.Orchestra_ID
SELECT DISTINCT o.Year_of_Founded  FROM orchestra AS o  INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID  GROUP BY o.Orchestra_ID  HAVING COUNT(p.Performance_ID) > 1
SELECT DISTINCT o.Year_of_Founded  FROM orchestra AS o  INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID  GROUP BY o.Orchestra_ID  HAVING COUNT(p.Performance_ID) > 1
SELECT DISTINCT O.Year_of_Founded  FROM orchestra AS O  INNER JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID  GROUP BY O.Orchestra_ID  HAVING COUNT(P.Performance_ID) > 1

SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1);
SELECT O.Year_of_Founded FROM orchestra AS O INNER JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID GROUP BY O.Orchestra_ID HAVING COUNT(P.Performance_ID) > 1
SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT T1.Year_of_Founded FROM orchestra AS T1 INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Year_of_Founded HAVING COUNT(T2.Performance_ID) > 1
SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT Year_of_Founded FROM orchestra AS T1 INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1
SELECT T1.Year_of_Founded FROM orchestra AS T1 WHERE T1.Orchestra_ID IN (SELECT T2.Orchestra_ID FROM performance AS T2 GROUP BY T2.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1)
SELECT O.Year_of_Founded FROM orchestra AS O INNER JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID GROUP BY O.Orchestra_ID HAVING COUNT(P.Performance_ID) > 1
SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)
SELECT DISTINCT o.Year_of_Founded  FROM orchestra AS o  INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID  GROUP BY o.Orchestra_ID  HAVING COUNT(p.Performance_ID) > 1
SELECT DISTINCT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1
SELECT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1
SELECT T1.Year_of_Founded FROM orchestra AS T1 INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra_ID HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT T2.Year_of_Founded  FROM performance AS T1  INNER JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T1.Performance_ID) > 1
SELECT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1) AS T2  ON T1.Orchestra_ID = T2.Orchestra_ID
SELECT T2.Year_of_Founded  FROM performance AS T1  INNER JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T1.Performance_ID) > 1
SELECT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1
SELECT DISTINCT T1.Year_of_Founded  FROM orchestra AS T1  INNER JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T2.Performance_ID) > 1

SELECT COUNT(ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(ID) FROM Highschooler;
SELECT COUNT(ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;

SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(ID) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(DISTINCT ID) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;
SELECT COUNT(*) FROM Highschooler;

SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler

SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT T1.name, T1.grade FROM Highschooler AS T1
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler

SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;
SELECT DISTINCT grade FROM Highschooler;

SELECT ID, grade FROM Highschooler
SELECT ID, grade FROM Highschooler
SELECT T1.ID, T1.grade FROM Highschooler AS T1
SELECT name, grade FROM Highschooler
SELECT grade, name FROM Highschooler;
SELECT ID, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT grade, name FROM Highschooler;
SELECT name, grade FROM Highschooler;
SELECT name, grade FROM Highschooler
SELECT ID, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT ID, name, grade FROM Highschooler
SELECT name, grade FROM Highschooler;
SELECT ID, name, grade FROM Highschooler
SELECT ID, grade FROM Highschooler;
SELECT name, grade FROM Highschooler

SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'

SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'
SELECT grade FROM Highschooler WHERE name = 'Kyle'

SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10

SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;

SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'

SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'
SELECT ID FROM Highschooler WHERE name = 'Kyle'

SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);

SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(DISTINCT ID) FROM Highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);

SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_highschoolers FROM Highschooler GROUP BY grade

SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS number_of_students FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(ID) AS count FROM Highschooler GROUP BY grade
SELECT grade, COUNT(ID) AS number_of_highschoolers FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS student_count FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS highschooler_count FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade

SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1

SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.grade FROM Highschooler AS T1 GROUP BY T1.grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1;
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1

SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4

SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4

SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id;
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT student_id, COUNT(DISTINCT friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT student_id, COUNT(friend_id) AS number_of_friends FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS number_of_friends FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS number_of_friends FROM Friend GROUP BY student_id
SELECT T1.ID AS student_id, COUNT(T2.friend_id) AS number_of_friends  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID
SELECT T1.student_id, COUNT(T1.friend_id) AS number_of_friends  FROM Friend AS T1  GROUP BY T1.student_id
SELECT T1.student_id, COUNT(T1.friend_id) AS number_of_friends  FROM Friend AS T1  GROUP BY T1.student_id
SELECT student_id, COUNT(friend_id) AS number_of_friends FROM Friend GROUP BY student_id
SELECT T1.student_id, COUNT(T1.friend_id) AS number_of_friends  FROM Friend AS T1  GROUP BY T1.student_id
SELECT T1.ID AS student_id, COUNT(T2.friend_id) AS number_of_friends  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID
SELECT T1.student_id, COUNT(T1.friend_id) AS number_of_friends FROM Friend AS T1 GROUP BY T1.student_id

SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(DISTINCT friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id;
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id;
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(DISTINCT friend_id) FROM Friend GROUP BY student_id;
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(DISTINCT friend_id) AS friend_count FROM Friend GROUP BY student_id
SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id

SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) AS number_of_friends FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) AS number_of_friends FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID, H.name
SELECT T1.name, COUNT(T2.friend_id) AS number_of_friends FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID;
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT T1.name, COUNT(T2.friend_id) AS number_of_friends  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID, T1.name
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.name
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID;
SELECT H.name, COUNT(F.friend_id) AS number_of_friends  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.name

SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
SELECT T1.name, COUNT(T2.friend_id) AS friend_count  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID, T1.name
SELECT T1.name, COUNT(T2.friend_id) AS friend_count  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID, H.name;
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID
SELECT T1.name, COUNT(T2.friend_id) AS friend_count  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.name
SELECT H.name, COUNT(F.friend_id) AS friend_count  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID, H.name

SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Friend AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T2 ON T1.ID = T2.student_id ORDER BY T2.friend_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.friend_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = (SELECT T2.student_id FROM Friend AS T2 GROUP BY T2.student_id ORDER BY COUNT(T2.friend_id) DESC LIMIT 1)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT T1.student_id FROM Friend AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1) AS T1 ON T2.ID = T1.student_id
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Friend AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.friend_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T2.ID = T1.student_id GROUP BY T2.ID ORDER BY COUNT(T1.friend_id) DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T2.ID = T1.student_id ORDER BY friend_count DESC LIMIT 1
SELECT T1.name  FROM Highschooler AS T1  JOIN (SELECT student_id        FROM Likes        GROUP BY student_id        ORDER BY COUNT(liked_id) DESC        LIMIT 1) AS T2  ON T1.ID = T2.student_id;
SELECT T2.name FROM (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1
SELECT H.name FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.ID ORDER BY COUNT(F.friend_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id, T2.name ORDER BY COUNT(T1.friend_id) DESC LIMIT 1
SELECT T2.name FROM (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID ORDER BY T1.friend_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T2 ON T1.ID = T2.student_id WHERE T2.friend_count = (SELECT MAX(friend_count) FROM (SELECT COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id))
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1

SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T2.ID = T1.student_id ORDER BY friend_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.friend_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.friend_count DESC LIMIT 1
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T1.student_id = T2.ID WHERE friend_count = (SELECT MAX(friend_count) FROM (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id))
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Friend AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.friend_id) DESC LIMIT 1)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.friend_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id FROM (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1)) AS T2 ON T1.ID = T2.student_id
SELECT T2.name  FROM Highschooler AS T2  INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count              FROM Friend              GROUP BY student_id              ORDER BY friend_count DESC              LIMIT 1) AS T1  ON T2.ID = T1.student_id
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T2 ON T1.ID = T2.student_id ORDER BY T2.friend_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T2 ON T1.ID = T2.student_id ORDER BY T2.friend_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T1 ON T2.ID = T1.student_id ORDER BY T1.friend_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T1 ON T2.ID = T1.student_id
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T2 ON T1.ID = T2.student_id ORDER BY T2.friend_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS T2 ON T1.ID = T2.student_id WHERE T2.friend_count = (SELECT MAX(friend_count) FROM (SELECT COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id))
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  ORDER BY COUNT(T2.friend_id) DESC  LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1
SELECT H.name FROM Highschooler AS H INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id) AS F ON H.ID = F.student_id ORDER BY F.friend_count DESC LIMIT 1

SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3) AS T2 ON T1.ID = T2.student_id
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3) AS T2 ON T1.ID = T2.student_id
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T1.student_id = T2.ID GROUP BY T2.name HAVING COUNT(T1.friend_id) >= 3
SELECT H.name  FROM Highschooler AS H  INNER JOIN (      SELECT F.student_id      FROM Friend AS F      GROUP BY F.student_id      HAVING COUNT(F.friend_id) >= 3  ) AS FR ON H.ID = FR.student_id
SELECT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID  HAVING COUNT(F.friend_id) >= 3
SELECT H.name FROM Highschooler AS H INNER JOIN ( SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3 ) AS F ON H.ID = F.student_id
SELECT H.name  FROM Highschooler AS H  INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count              FROM Friend              GROUP BY student_id              HAVING COUNT(friend_id) >= 3) AS F  ON H.ID = F.student_id
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T2.name  FROM Friend AS T1  INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID  GROUP BY T1.student_id  HAVING COUNT(T1.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T2.name FROM (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3) AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3

SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(DISTINCT friend_id) >= 3)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Friend AS T2 GROUP BY T2.student_id HAVING COUNT(T2.friend_id) >= 3)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T2.ID = T1.student_id GROUP BY T2.ID HAVING COUNT(T1.friend_id) >= 3
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T1.student_id = T2.ID GROUP BY T2.name HAVING COUNT(T1.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 3
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3) AS T2 ON T1.ID = T2.student_id
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 3
SELECT T2.name  FROM (SELECT student_id, COUNT(friend_id) AS friend_count        FROM Friend        GROUP BY student_id        HAVING COUNT(friend_id) >= 3) AS T1  INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID
SELECT H.name FROM Highschooler AS H INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3) AS F ON H.ID = F.student_id
SELECT H.name  FROM Highschooler AS H  INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count              FROM Friend              GROUP BY student_id              HAVING COUNT(friend_id) >= 3) AS F  ON H.ID = F.student_id;
SELECT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID  HAVING COUNT(F.friend_id) >= 3
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN (SELECT student_id, COUNT(friend_id) AS friend_count              FROM Friend              GROUP BY student_id              HAVING COUNT(friend_id) >= 3) AS T2  ON T1.ID = T2.student_id
SELECT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  GROUP BY H.ID  HAVING COUNT(F.friend_id) >= 3
SELECT T2.name  FROM Friend AS T1  INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID  GROUP BY T1.student_id  HAVING COUNT(T1.friend_id) >= 3
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 3

SELECT T2.name FROM Highschooler AS T1 INNER JOIN Friend AS T3 ON T1.ID = T3.friend_id INNER JOIN Highschooler AS T2 ON T3.student_id = T2.ID WHERE T1.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT H2.name  FROM Highschooler AS H1  INNER JOIN Friend AS F ON H1.ID = F.friend_id  WHERE F.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');
SELECT T2.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T1.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID IN (SELECT friend_id FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle'))
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID IN (SELECT T1.friend_id FROM Friend AS T1 WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle'))
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T2.ID = T1.friend_id WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT H2.name  FROM Friend AS F  INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID  INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID  WHERE H1.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name  FROM Friend AS T1  INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID  WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT H2.name FROM Friend AS F INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle'
SELECT DISTINCT H2.name  FROM Friend AS F  INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID  INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID  WHERE H1.name = 'Kyle'
SELECT H2.name FROM Friend AS F INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle'
SELECT H2.name FROM Friend AS F INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle'
SELECT DISTINCT T2.name  FROM Friend AS T1  INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID  WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT DISTINCT H2.name  FROM Highschooler AS H1  INNER JOIN Friend AS F ON H1.ID = F.student_id  INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID  WHERE H1.name = 'Kyle'

SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T2.ID = T1.friend_id INNER JOIN Highschooler AS T3 ON T1.student_id = T3.ID WHERE T3.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Friend AS T1 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT H2.name FROM Friend AS F INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT DISTINCT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT DISTINCT H2.name  FROM Highschooler AS H1  INNER JOIN Friend AS F ON H1.ID = F.student_id  INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID  WHERE H1.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT DISTINCT H.name  FROM Friend AS F  INNER JOIN Highschooler AS H ON F.friend_id = H.ID  INNER JOIN Highschooler AS S ON F.student_id = S.ID  WHERE S.name = 'Kyle'
SELECT T2.name FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT H2.name FROM Friend AS F INNER JOIN Highschooler AS H1 ON F.student_id = H1.ID INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle'
SELECT DISTINCT H2.name  FROM Highschooler AS H1  INNER JOIN Friend AS F ON H1.ID = F.student_id  INNER JOIN Highschooler AS H2 ON F.friend_id = H2.ID  WHERE H1.name = 'Kyle'

SELECT COUNT(F.friend_id) FROM Friend AS F INNER JOIN Highschooler AS H ON F.student_id = H.ID WHERE H.name = 'Kyle'
SELECT COUNT(DISTINCT F.friend_id) FROM Friend F INNER JOIN Highschooler H ON F.student_id = H.ID WHERE H.name = 'Kyle'
SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT `friend_id`) FROM `Friend` WHERE `student_id` = (SELECT `ID` FROM `Highschooler` WHERE `name` = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(F.friend_id) FROM Friend AS F INNER JOIN Highschooler AS H ON F.friend_id = H.ID WHERE F.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT `friend_id`) FROM `Friend` WHERE `student_id` = (SELECT `ID` FROM `Highschooler` WHERE `name` = 'Kyle')
SELECT COUNT(F.friend_id) FROM Friend AS F INNER JOIN Highschooler AS H ON F.student_id = H.ID WHERE H.name = 'Kyle'
SELECT COUNT(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT T1.friend_id) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(DISTINCT T2.friend_id)  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.name = 'Kyle'
SELECT COUNT(DISTINCT T2.friend_id) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT T1.friend_id) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(T2.friend_id) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name = 'Kyle'
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

SELECT COUNT(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT F.friend_id) FROM Friend AS F INNER JOIN Highschooler AS H ON F.student_id = H.ID WHERE H.name = 'Kyle'
SELECT COUNT(DISTINCT T1.friend_id) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT T2.friend_id) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name = 'Kyle'
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend);
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)
SELECT T1.ID FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT friend_id FROM Friend);
SELECT ID FROM Highschooler WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID)
SELECT ID FROM Highschooler WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID);
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT DISTINCT H.id FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT DISTINCT H.ID FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL

SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 WHERE NOT EXISTS (SELECT 1 FROM Friend AS T2 WHERE T2.student_id = T1.ID)
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT friend_id FROM Friend);
SELECT H.ID FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS F ON T1.ID = F.student_id WHERE F.student_id IS NULL
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend)
SELECT ID FROM Highschooler WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID)
SELECT H.ID FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)
SELECT DISTINCT H.ID FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT H.ID FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL
SELECT T1.ID FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)

SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT `name` FROM `Highschooler` WHERE `ID` NOT IN (SELECT `student_id` FROM `Friend` UNION SELECT `friend_id` FROM `Friend`)
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT name FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT student_id FROM Friend);
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT DISTINCT H.name FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL
SELECT T1.name  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T2.friend_id IS NULL
SELECT H.name FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)
SELECT H.name FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)

SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend);
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend);
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT T1.name FROM Highschooler AS T1 WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = T1.ID)
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT friend_id FROM Friend)
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT DISTINCT student_id FROM Friend);
SELECT H.name FROM Highschooler H LEFT JOIN Friend F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend)
SELECT H.name FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT H.name FROM Highschooler AS H WHERE H.ID NOT IN (SELECT F.student_id FROM Friend AS F)
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT T1.name  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T2.student_id IS NULL

SELECT T1.ID FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT H.ID  FROM Highschooler H  INNER JOIN Friend F ON H.ID = F.student_id  INNER JOIN Likes L ON H.ID = L.student_id
SELECT DISTINCT H.ID  FROM Highschooler H  INNER JOIN Friend F ON H.ID = F.student_id  INNER JOIN Likes L ON H.ID = L.liked_id
SELECT DISTINCT T1.ID FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.ID FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend) AND T1.ID IN (SELECT liked_id FROM Likes)
SELECT DISTINCT T1.ID FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.ID  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id;
SELECT DISTINCT T1.ID FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.ID FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.ID FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend) AND T1.ID IN (SELECT DISTINCT liked_id FROM Likes)
SELECT DISTINCT F.student_id  FROM Friend AS F  INNER JOIN Likes AS L ON F.student_id = L.liked_id
SELECT DISTINCT student_id FROM Friend INTERSECT SELECT DISTINCT liked_id FROM Likes
SELECT DISTINCT F.student_id FROM Friend AS F INNER JOIN Likes AS L ON F.student_id = L.liked_id
SELECT DISTINCT H.ID  FROM Highschooler AS H  WHERE H.ID IN (SELECT F.student_id FROM Friend AS F)  AND H.ID IN (SELECT L.liked_id FROM Likes AS L)
SELECT DISTINCT H.ID  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT T1.ID FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT H.ID  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT student_id FROM Friend WHERE student_id IN (SELECT liked_id FROM Likes)
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id

SELECT DISTINCT F.student_id FROM Friend F INNER JOIN Likes L ON F.student_id = L.student_id
SELECT DISTINCT F.student_id FROM Friend AS F INNER JOIN Likes AS L ON F.student_id = L.student_id
SELECT DISTINCT F.student_id FROM Friend AS F INNER JOIN Likes AS L ON F.student_id = L.student_id
SELECT DISTINCT F.student_id FROM Friend AS F INNER JOIN Likes AS L ON F.student_id = L.student_id
SELECT DISTINCT L.student_id FROM Likes AS L INNER JOIN Friend AS F ON L.student_id = F.student_id
SELECT DISTINCT student_id FROM Friend INTERSECT SELECT DISTINCT student_id FROM Likes
SELECT DISTINCT student_id FROM Friend INTERSECT SELECT DISTINCT student_id FROM Likes
SELECT DISTINCT T1.student_id FROM Friend AS T1 INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT F.student_id FROM Friend AS F INNER JOIN Likes AS L ON F.student_id = L.student_id
SELECT DISTINCT T1.student_id FROM Friend AS T1 INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT student_id FROM Friend INTERSECT SELECT DISTINCT student_id FROM Likes
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2  ON T1.student_id = T2.student_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT T1.student_id  FROM Friend AS T1  INNER JOIN Likes AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT F.student_id FROM Friend AS F INNER JOIN Likes AS L ON F.student_id = L.student_id
SELECT DISTINCT T1.student_id FROM Likes AS T1 INNER JOIN Friend AS T2 ON T1.student_id = T2.student_id

SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend) AND T1.ID IN (SELECT liked_id FROM Likes)
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id;
SELECT DISTINCT T3.name FROM Highschooler AS T3 INNER JOIN Friend AS F ON T3.ID = F.student_id INNER JOIN Likes AS L ON T3.ID = L.liked_id
SELECT DISTINCT T1.name FROM Highschooler AS T1  WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend)  AND T1.ID IN (SELECT DISTINCT liked_id FROM Likes);
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T3.name FROM Highschooler AS T3 INNER JOIN Friend AS F ON T3.ID = F.student_id INNER JOIN Likes AS L ON T3.ID = L.student_id
SELECT DISTINCT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id;
SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend) AND T1.ID IN (SELECT liked_id FROM Likes)
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.student_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id;
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT H.name  FROM Highschooler AS H  WHERE H.ID IN (SELECT F.student_id FROM Friend AS F)  AND H.ID IN (SELECT L.liked_id FROM Likes AS L)
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.student_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT H.name  FROM Highschooler AS H  WHERE H.ID IN (SELECT DISTINCT F.student_id FROM Friend AS F)  AND H.ID IN (SELECT DISTINCT L.liked_id FROM Likes AS L)
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id

SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT T3.name FROM Highschooler AS T3 INNER JOIN Friend AS T1 ON T3.ID = T1.student_id INNER JOIN Likes AS T2 ON T3.ID = T2.student_id
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id INNER JOIN Likes AS T3 ON T1.ID = T3.student_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.student_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  INNER JOIN Friend AS F ON H.ID = F.student_id;
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  INNER JOIN Friend AS F ON H.ID = F.student_id;
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.student_id
SELECT DISTINCT H.name  FROM Highschooler AS H  WHERE H.ID IN (SELECT F.student_id FROM Friend AS F)  AND H.ID IN (SELECT L.liked_id FROM Likes AS L);
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id;
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.liked_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  INNER JOIN Likes AS L ON H.ID = L.student_id
SELECT DISTINCT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  INNER JOIN Likes AS T3 ON T1.ID = T3.liked_id
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  INNER JOIN Friend AS F ON H.ID = F.student_id

SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id;
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id

SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id;
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) as like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS total_likes FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id
SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id

SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id IS NOT NULL GROUP BY T1.ID
SELECT T1.name, COUNT(T2.liked_id) AS number_of_likes FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.ID;
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS number_of_likes  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.ID;

SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) > 0
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) > 0
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) > 0
SELECT T1.name, COUNT(T2.liked_id) FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) > 0
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.ID, H.name
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name;
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name;
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.name
SELECT T1.name, COUNT(T2.liked_id) AS like_count  FROM Highschooler AS T1  INNER JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name;
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.name
SELECT H.name, COUNT(L.liked_id) AS like_count  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.ID, H.name

SELECT T1.name FROM Highschooler AS T1 LEFT JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.liked_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id ORDER BY like_count DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Likes AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.liked_id) DESC LIMIT 1)
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID GROUP BY T2.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
WITH LikeCounts AS (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id) SELECT H.name FROM Highschooler H INNER JOIN LikeCounts LC ON H.ID = LC.student_id WHERE LC.like_count = (SELECT MAX(like_count) FROM LikeCounts)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id) AS T1 ON T1.liked_id = T2.ID ORDER BY T1.like_count DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.like_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id) AS T2 ON T1.ID = T2.student_id ORDER BY T2.like_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id) AS T2 ON T1.ID = T2.liked_id ORDER BY T2.like_count DESC LIMIT 1
SELECT T2.name FROM (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id ORDER BY like_count DESC LIMIT 1) AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Likes AS T1 ON T2.ID = T1.liked_id GROUP BY T2.ID, T2.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID, T1.name ORDER BY COUNT(T2.liked_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id  GROUP BY T1.ID  ORDER BY COUNT(T2.student_id) DESC  LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id) AS T1 ON T1.student_id = T2.ID ORDER BY T1.like_count DESC LIMIT 1
SELECT H.name FROM Highschooler AS H INNER JOIN (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id) AS L ON H.ID = L.liked_id ORDER BY L.like_count DESC LIMIT 1
SELECT T2.name FROM (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id ORDER BY like_count DESC LIMIT 1) AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID

SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(liked_id) DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Likes AS T1 ON T1.student_id = T2.ID GROUP BY T2.name ORDER BY COUNT(T1.liked_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id ORDER BY like_count DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id ORDER BY like_count DESC LIMIT 1) AS T1 ON T2.ID = T1.student_id
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = (SELECT T2.student_id FROM Likes AS T2 GROUP BY T2.student_id ORDER BY COUNT(T2.liked_id) DESC LIMIT 1)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id ORDER BY like_count DESC LIMIT 1) AS T1 ON T2.ID = T1.student_id
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Likes AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.liked_id) DESC LIMIT 1)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = (SELECT T2.liked_id FROM Likes AS T2 GROUP BY T2.liked_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T2.name FROM Highschooler AS T2 WHERE T2.ID = (SELECT T1.student_id FROM Likes AS T1 GROUP BY T1.student_id ORDER BY COUNT(T1.liked_id) DESC LIMIT 1)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id ORDER BY like_count DESC LIMIT 1) AS T1 ON T1.student_id = T2.ID
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id) AS T2 ON T1.ID = T2.liked_id WHERE T2.like_count = (SELECT MAX(like_count) FROM (SELECT liked_id, COUNT(*) AS like_count FROM Likes GROUP BY liked_id))
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id) AS T2 ON T1.ID = T2.student_id ORDER BY T2.like_count DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT H.name FROM Highschooler AS H INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id) AS L ON H.ID = L.student_id ORDER BY L.like_count DESC LIMIT 1
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY COUNT(T1.liked_id) DESC LIMIT 1
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.name ORDER BY COUNT(T2.student_id) DESC LIMIT 1
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Likes AS T1 ON T2.ID = T1.student_id GROUP BY T2.ID ORDER BY COUNT(T1.liked_id) DESC LIMIT 1
SELECT T2.name  FROM (SELECT liked_id, COUNT(student_id) AS like_count        FROM Likes        GROUP BY liked_id        ORDER BY like_count DESC        LIMIT 1) AS T1  INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID GROUP BY T1.liked_id ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT H.name FROM Highschooler AS H INNER JOIN (SELECT liked_id, COUNT(*) as like_count FROM Likes GROUP BY liked_id) AS L ON H.ID = L.liked_id ORDER BY L.like_count DESC LIMIT 1

SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Likes AS T2 GROUP BY T2.student_id HAVING COUNT(T2.liked_id) >= 2)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Likes AS T1 ON T1.student_id = T2.ID GROUP BY T2.name HAVING COUNT(T1.liked_id) >= 2
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.liked_id FROM Likes AS T2 GROUP BY T2.liked_id HAVING COUNT(*) >= 2)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) >= 2
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Likes AS T1 ON T2.ID = T1.student_id GROUP BY T2.ID HAVING COUNT(T1.liked_id) >= 2
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Likes AS T2 GROUP BY T2.student_id HAVING COUNT(T2.liked_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT H.name FROM Likes AS L INNER JOIN Highschooler AS H ON L.liked_id = H.ID GROUP BY L.liked_id HAVING COUNT(*) >= 2
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY L.student_id  HAVING COUNT(L.liked_id) >= 2
SELECT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY H.ID  HAVING COUNT(L.student_id) >= 2
SELECT H.name  FROM Likes AS L  INNER JOIN Highschooler AS H ON L.student_id = H.ID  GROUP BY L.student_id  HAVING COUNT(L.liked_id) >= 2
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id HAVING COUNT(T1.liked_id) >= 2
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY L.student_id  HAVING COUNT(L.liked_id) >= 2
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY L.student_id  HAVING COUNT(L.liked_id) >= 2
SELECT T1.name  FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.liked_id) >= 2
SELECT H.name FROM Highschooler AS H INNER JOIN Likes AS L ON H.ID = L.student_id GROUP BY H.ID HAVING COUNT(L.liked_id) >= 2
SELECT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY L.student_id  HAVING COUNT(L.liked_id) >= 2

SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.liked_id) >= 2
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT T3.name FROM Likes AS T1 INNER JOIN Highschooler AS T3 ON T1.student_id = T3.ID GROUP BY T1.student_id HAVING COUNT(T1.liked_id) >= 2
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id HAVING COUNT(T1.liked_id) >= 2
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id HAVING COUNT(T1.liked_id) >= 2
SELECT T2.name FROM Highschooler AS T2 INNER JOIN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2) AS T1 ON T1.student_id = T2.ID
SELECT T2.name FROM Highschooler AS T2 INNER JOIN Likes AS T1 ON T1.student_id = T2.ID GROUP BY T2.name HAVING COUNT(T1.liked_id) >= 2
SELECT T1.name FROM Highschooler AS T1 INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count FROM Likes GROUP BY student_id HAVING like_count >= 2) AS T2 ON T1.ID = T2.student_id
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  HAVING COUNT(T2.liked_id) >= 2
SELECT H.name FROM Highschooler AS H INNER JOIN Likes AS L ON H.ID = L.student_id GROUP BY H.ID HAVING COUNT(L.liked_id) >= 2
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY L.student_id  HAVING COUNT(L.liked_id) >= 2
SELECT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.student_id  GROUP BY H.ID  HAVING COUNT(L.liked_id) >= 2
SELECT H.name  FROM Highschooler AS H  INNER JOIN Likes AS L ON H.ID = L.liked_id  GROUP BY L.liked_id  HAVING COUNT(L.student_id) >= 2
SELECT H.name FROM Highschooler AS H INNER JOIN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2) AS L ON H.ID = L.student_id
SELECT H.name  FROM Highschooler AS H  INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count              FROM Likes              GROUP BY student_id              HAVING COUNT(liked_id) >= 2) AS L  ON H.ID = L.student_id
SELECT H.name  FROM Highschooler AS H  INNER JOIN (SELECT student_id, COUNT(liked_id) AS like_count              FROM Likes              GROUP BY student_id              HAVING COUNT(liked_id) >= 2) AS L  ON H.ID = L.student_id;
SELECT T2.name FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id HAVING COUNT(T1.liked_id) >= 2
SELECT T2.name  FROM Likes AS T1  INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID  GROUP BY T1.student_id  HAVING COUNT(T1.liked_id) >= 2

SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(DISTINCT friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  WHERE H.grade > 5  GROUP BY H.ID  HAVING COUNT(DISTINCT F.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT DISTINCT H.name  FROM Highschooler AS H  INNER JOIN Friend AS F ON H.ID = F.student_id  WHERE H.grade > 5  GROUP BY H.ID  HAVING COUNT(F.friend_id) >= 2
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.ID HAVING COUNT(DISTINCT T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2

SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT T2.student_id FROM Friend AS T2 GROUP BY T2.student_id HAVING COUNT(T2.friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT T2.student_id FROM Friend AS T2 GROUP BY T2.student_id HAVING COUNT(T2.friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.ID HAVING COUNT(T2.friend_id) >= 2
SELECT DISTINCT H.name  FROM Highschooler AS H  LEFT JOIN Friend AS F ON H.ID = F.student_id  WHERE H.grade > 5  GROUP BY H.ID  HAVING COUNT(F.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2
SELECT T1.name  FROM Highschooler AS T1  INNER JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  HAVING COUNT(T2.friend_id) >= 2 AND T1.grade > 5

SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.liked_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(L.liked_id) FROM Likes AS L INNER JOIN Highschooler AS H ON L.student_id = H.ID WHERE H.name = 'Kyle'
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM `Likes` WHERE `student_id` = (SELECT `ID` FROM `Highschooler` WHERE `name` = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');
SELECT COUNT(DISTINCT liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(DISTINCT liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

SELECT COUNT(T1.liked_id) FROM Likes AS T1 WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(L.liked_id) FROM Likes AS L INNER JOIN Highschooler AS H ON L.student_id = H.ID WHERE H.name = 'Kyle'
SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(T1.liked_id) FROM Likes AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(T2.liked_id)  FROM Highschooler AS T1  INNER JOIN Likes AS T2 ON T1.ID = T2.student_id  WHERE T1.name = 'Kyle'

SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend)
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT friend.student_id FROM Friend AS friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Friend AS T2)
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id

SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT T2.student_id FROM Friend AS T2 WHERE T2.student_id = T1.ID OR T2.friend_id = T1.ID)
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend);
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend)
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T2.grade) FROM Friend AS T1 INNER JOIN Highschooler AS T2 ON T1.student_id = T2.ID
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id
SELECT AVG(H.grade) FROM Highschooler AS H INNER JOIN Friend AS F ON H.ID = F.student_id
SELECT AVG(T1.grade) FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID = T2.student_id

SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(H.grade) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL;
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT T2.student_id FROM Friend AS T2)
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT DISTINCT student_id FROM Friend)
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE NOT EXISTS (SELECT 1 FROM Friend AS T2 WHERE T1.ID = T2.student_id);
SELECT MIN(grade) FROM Highschooler WHERE NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.student_id = Highschooler.ID) AND NOT EXISTS (SELECT 1 FROM Friend WHERE Friend.friend_id = Highschooler.ID)
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT T2.student_id FROM Friend AS T2)
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(H.grade) FROM Highschooler AS H WHERE H.ID NOT IN (SELECT F.student_id FROM Friend AS F)

SELECT MIN(H.grade) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(H.grade) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.friend_id IS NULL
SELECT MIN(H.grade) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id WHERE F.student_id IS NULL
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.student_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT T2.student_id FROM Friend AS T2)
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT DISTINCT T2.friend_id FROM Friend AS T2)
SELECT MIN(T1.grade) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id IS NULL
SELECT MIN(T1.grade) FROM Highschooler AS T1 WHERE T1.ID NOT IN (SELECT T2.student_id FROM Friend AS T2)

SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT O.state FROM Owners AS O INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals);
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
SELECT DISTINCT state FROM Professionals WHERE state IN (SELECT DISTINCT state FROM Owners)
SELECT DISTINCT T1.state  FROM Owners AS T1  INNER JOIN Professionals AS T2 ON T1.state = T2.state;
SELECT DISTINCT O.state FROM Owners AS O INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT O.state FROM Owners AS O INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state  FROM Owners AS T1  INNER JOIN Professionals AS T2 ON T1.state = T2.state;
SELECT DISTINCT O.state  FROM Owners AS O  INNER JOIN Professionals AS P ON O.state = P.state

SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals);
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT O.state  FROM Owners AS O  INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals)
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state
SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals);
SELECT DISTINCT O.state FROM Owners AS O INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state  FROM Owners AS T1  INNER JOIN Professionals AS T2  ON T1.state = T2.state;
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT O.state FROM Owners AS O INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT O.state  FROM Owners AS O  INNER JOIN Professionals AS P ON O.state = P.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state
SELECT DISTINCT T1.state FROM Owners AS T1 INNER JOIN Professionals AS T2 ON T1.state = T2.state

SELECT AVG(D.age) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(T1.age AS INTEGER)) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments);
SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(D.age) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG((julianday('now') - julianday(D.date_of_birth)) / 365.25) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(CAST(age AS INTEGER)) AS average_age FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS DECIMAL)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(D.age) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(age) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments);
SELECT AVG(CAST(T1.age AS INTEGER)) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(D.age) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments);
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(D.age AS INTEGER)) FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT AVG(age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
SELECT AVG(CAST(age AS DECIMAL)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT P.professional_id, P.last_name, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) > 2
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana'  UNION  SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals AS P INNER JOIN Treatments AS T ON P.professional_id = T.professional_id GROUP BY P.professional_id HAVING COUNT(T.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT P.professional_id, P.last_name, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT T1.professional_id, T1.last_name, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T2.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT P.professional_id, P.last_name, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) > 2;
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT T1.professional_id, T2.last_name, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T1.treatment_id) > 2
SELECT DISTINCT T1.professional_id, T1.last_name, T1.cell_number  FROM Professionals AS T1  WHERE T1.state = 'Indiana'  UNION  SELECT T2.professional_id, T1.last_name, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T2.professional_id  HAVING COUNT(T2.treatment_id) > 2
SELECT DISTINCT T1.professional_id, T1.last_name, T1.cell_number  FROM Professionals AS T1  WHERE T1.state = 'Indiana'  UNION  SELECT T2.professional_id, T1.last_name, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T2.professional_id  HAVING COUNT(T2.treatment_id) > 2
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) > 2
SELECT DISTINCT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT P.professional_id, P.last_name, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) > 2

SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 WHERE T1.state = 'Indiana' OR T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) > 2)
SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING T1.state = 'Indiana' OR COUNT(T2.treatment_id) > 2
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT T1.professional_id, T2.last_name, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T1.treatment_id) > 2
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana'  UNION  SELECT professional_id, last_name, cell_number FROM Professionals AS P INNER JOIN Treatments AS T ON P.professional_id = T.professional_id GROUP BY P.professional_id HAVING COUNT(T.treatment_id) > 2
SELECT DISTINCT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT T.professional_id, P.last_name, P.cell_number  FROM Treatments AS T  INNER JOIN Professionals AS P ON T.professional_id = P.professional_id  GROUP BY T.professional_id  HAVING COUNT(T.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id, T2.last_name, T2.cell_number FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T1.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)
SELECT DISTINCT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT DISTINCT P.professional_id, P.last_name, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id, P.last_name  HAVING COUNT(T.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT T1.professional_id, T2.last_name, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T1.treatment_id) > 2
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana'  UNION  SELECT professional_id, last_name, cell_number  FROM Professionals  INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id  GROUP BY Professionals.professional_id  HAVING COUNT(Treatments.treatment_id) > 2
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number  FROM Professionals AS P  LEFT JOIN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2) AS T  ON P.professional_id = T.professional_id  WHERE P.state = 'Indiana' OR T.professional_id IS NOT NULL

SELECT T1.name FROM Dogs AS T1 WHERE T1.dog_id IN (SELECT T2.dog_id FROM Treatments AS T2 GROUP BY T2.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000)
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 WHERE T1.dog_id IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) <= 1000)
SELECT T1.name FROM Dogs AS T1 INNER JOIN (SELECT T2.dog_id, SUM(T2.cost_of_treatment) AS total_cost FROM Treatments AS T2 GROUP BY T2.dog_id) AS T3 ON T1.dog_id = T3.dog_id WHERE T3.total_cost <= 1000
SELECT T2.name FROM Dogs AS T2 INNER JOIN Treatments AS T1 ON T2.dog_id = T1.dog_id GROUP BY T2.dog_id HAVING SUM(T1.cost_of_treatment) <= 1000
SELECT D.name FROM Dogs AS D INNER JOIN (SELECT dog_id, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY dog_id HAVING total_cost <= 1000) AS T ON D.dog_id = T.dog_id
SELECT T1.name FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  GROUP BY T1.dog_id  HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.name HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.name HAVING SUM(T2.cost_of_treatment) <= 1000 OR SUM(T2.cost_of_treatment) IS NULL
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  GROUP BY T1.dog_id  HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T2.name FROM Dogs AS T2 INNER JOIN Treatments AS T1 ON T2.dog_id = T1.dog_id GROUP BY T2.dog_id HAVING SUM(T1.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT DISTINCT D.name FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY D.dog_id HAVING SUM(T.cost_of_treatment) <= 1000

SELECT T3.name FROM Dogs AS T3 INNER JOIN Owners AS T2 ON T3.owner_id = T2.owner_id INNER JOIN (SELECT dog_id, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY dog_id) AS T1 ON T3.dog_id = T1.dog_id WHERE T1.total_cost <= 1000
SELECT D.name FROM Dogs AS D WHERE D.owner_id IN (SELECT D2.owner_id FROM Treatments AS T INNER JOIN Dogs AS D2 ON T.dog_id = D2.dog_id GROUP BY D2.owner_id HAVING SUM(T.cost_of_treatment) <= 1000)
SELECT D.name FROM Dogs AS D INNER JOIN (SELECT dog_id, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY dog_id HAVING total_cost <= 1000) AS T ON D.dog_id = T.dog_id
SELECT D.name FROM Dogs AS D INNER JOIN Owners AS O ON D.owner_id = O.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY D.owner_id HAVING SUM(T.cost_of_treatment) <= 1000
SELECT D.name FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY D.owner_id HAVING SUM(T.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id INNER JOIN Owners AS T3 ON T1.owner_id = T3.owner_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT D.name FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id INNER JOIN Owners AS O ON D.owner_id = O.owner_id GROUP BY D.dog_id, D.name HAVING SUM(T.cost_of_treatment) <= 1000
SELECT D.name FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY D.dog_id HAVING SUM(T.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 WHERE T1.dog_id IN (SELECT T2.dog_id FROM Treatments AS T2 GROUP BY T2.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000)
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.owner_id, T1.name HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING SUM(T2.cost_of_treatment) <= 1000
SELECT DISTINCT D.name  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  GROUP BY D.dog_id, O.owner_id  HAVING SUM(T.cost_of_treatment) <= 1000
SELECT D.name  FROM Dogs AS D  JOIN Owners AS O ON D.owner_id = O.owner_id  JOIN (SELECT T.dog_id, SUM(T.cost_of_treatment) AS total_spent        FROM Treatments AS T        GROUP BY T.dog_id        HAVING SUM(T.cost_of_treatment) <= 1000) AS T  ON D.dog_id = T.dog_id;
SELECT DISTINCT D.name  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY D.dog_id  HAVING SUM(T.cost_of_treatment) <= 1000
SELECT DISTINCT D.name  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  GROUP BY D.dog_id  HAVING SUM(T.cost_of_treatment) <= 1000
SELECT T1.name FROM Dogs AS T1 INNER JOIN (SELECT dog_id, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY dog_id HAVING total_cost <= 1000) AS T2 ON T1.dog_id = T2.dog_id
SELECT DISTINCT D.name  FROM Dogs AS D  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id  HAVING SUM(T.cost_of_treatment) <= 1000
SELECT D.name  FROM Dogs AS D  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id  HAVING SUM(T.cost_of_treatment) <= 1000;
SELECT DISTINCT D.name  FROM Dogs AS D  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id  HAVING SUM(T.cost_of_treatment) <= 1000
SELECT D.name  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  GROUP BY D.dog_id  HAVING SUM(T.cost_of_treatment) <= 1000

SELECT `first_name` FROM `Professionals` UNION SELECT `first_name` FROM `Owners` WHERE `first_name` NOT IN (SELECT `name` FROM `Dogs`)
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION  SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT DISTINCT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs);
SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs) UNION SELECT DISTINCT first_name FROM Owners WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs)
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs);
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs);
SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs) UNION SELECT DISTINCT first_name FROM Owners WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs)
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT `first_name` FROM `Professionals` WHERE `first_name` NOT IN (SELECT DISTINCT `name` FROM `Dogs`)  UNION  SELECT DISTINCT `first_name` FROM `Owners` WHERE `first_name` NOT IN (SELECT DISTINCT `name` FROM `Dogs`)
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT name FROM (     SELECT first_name FROM Professionals     UNION     SELECT first_name FROM Owners ) AS combined_names WHERE name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT DISTINCT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)

SELECT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT DISTINCT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION  SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name  FROM (     SELECT first_name FROM Professionals     UNION      SELECT first_name FROM Owners ) AS combined_names  WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs)
SELECT DISTINCT `first_name` FROM `Professionals` WHERE `first_name` NOT IN (SELECT DISTINCT `name` FROM `Dogs`) UNION  SELECT DISTINCT `first_name` FROM `Owners` WHERE `first_name` NOT IN (SELECT DISTINCT `name` FROM `Dogs`)
SELECT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT `first_name` FROM `Professionals` WHERE `first_name` NOT IN (SELECT `name` FROM `Dogs`)  UNION  SELECT `first_name` FROM `Owners` WHERE `first_name` NOT IN (SELECT `name` FROM `Dogs`)
SELECT DISTINCT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT DISTINCT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs);
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS CombinedNames WHERE first_name NOT IN (SELECT name FROM Dogs)
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS combined_names WHERE first_name NOT IN (SELECT name FROM Dogs)

SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT T2.professional_id FROM Treatments AS T2)
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL;
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT T2.professional_id FROM Treatments AS T2)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT T2.professional_id FROM Treatments AS T2)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.treatment_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments)
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.treatment_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL

SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL;
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT T2.professional_id FROM Treatments AS T2)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT T2.professional_id FROM Treatments AS T2)
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments)
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL
SELECT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.professional_id IS NULL;
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT DISTINCT T1.professional_id, T1.role_code, T1.email_address  FROM Professionals AS T1  WHERE T1.professional_id NOT IN (SELECT T2.professional_id FROM Treatments AS T2)
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL
SELECT P.professional_id, P.role_code, P.email_address  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.treatment_id IS NULL

SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN (SELECT owner_id, COUNT(*) AS dog_count FROM Dogs GROUP BY owner_id) AS T1 ON T1.owner_id = T2.owner_id ORDER BY dog_count DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN (SELECT owner_id, COUNT(dog_id) AS dog_count FROM Dogs GROUP BY owner_id ORDER BY dog_count DESC LIMIT 1) AS T1 ON T2.owner_id = T1.owner_id
SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id, T1.first_name, T1.last_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id, T2.first_name, T2.last_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id, T2.first_name, T2.last_name  HAVING COUNT(T1.dog_id) = (SELECT MAX(dog_count) FROM (SELECT COUNT(dog_id) AS dog_count FROM Dogs GROUP BY owner_id))
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id  GROUP BY T2.owner_id  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T2.first_name, T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id, T2.first_name, T2.last_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN (SELECT owner_id, COUNT(dog_id) AS dog_count              FROM Dogs              GROUP BY owner_id) AS T1  ON T2.owner_id = T1.owner_id  ORDER BY T1.dog_count DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Dogs AS T1  INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T2.owner_id, T2.first_name, T2.last_name  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id, T2.first_name, T2.last_name  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id, T1.first_name, T1.last_name  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id  HAVING COUNT(T1.dog_id) = (SELECT MAX(dog_count) FROM (SELECT COUNT(dog_id) AS dog_count FROM Dogs GROUP BY owner_id))

SELECT O.owner_id, O.first_name, O.last_name  FROM Owners O INNER JOIN Dogs D ON O.owner_id = D.owner_id  GROUP BY O.owner_id ORDER BY COUNT(D.dog_id) DESC  LIMIT 1;
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  GROUP BY T2.owner_id  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1;
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1;
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN (SELECT owner_id, COUNT(*) AS dog_count FROM Dogs GROUP BY owner_id ORDER BY dog_count DESC LIMIT 1) AS T1 ON T2.owner_id = T1.owner_id
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
WITH DogCounts AS (SELECT owner_id, COUNT(dog_id) AS dog_count FROM Dogs GROUP BY owner_id) SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  WHERE T1.owner_id = (SELECT owner_id FROM DogCounts WHERE dog_count = (SELECT MAX(dog_count) FROM DogCounts))
SELECT T2.owner_id, T2.first_name, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id GROUP BY T2.owner_id ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT O.owner_id, O.first_name, O.last_name  FROM Owners O  INNER JOIN (SELECT owner_id, COUNT(dog_id) AS dog_count              FROM Dogs              GROUP BY owner_id              ORDER BY dog_count DESC              LIMIT 1) AS D  ON O.owner_id = D.owner_id;
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id, T1.first_name, T1.last_name  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T2.owner_id, T2.first_name, T2.last_name  FROM Owners AS T2  INNER JOIN (SELECT owner_id, COUNT(dog_id) AS dog_count              FROM Dogs              GROUP BY owner_id              ORDER BY dog_count DESC              LIMIT 1) AS T1  ON T2.owner_id = T1.owner_id
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T2.first_name, T2.last_name  FROM Dogs AS T1  INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T1.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id, T1.first_name, T1.last_name  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1
SELECT T1.owner_id, T1.first_name, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  GROUP BY T1.owner_id  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1

SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.role_code, T1.first_name HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN (SELECT professional_id, COUNT(*) AS treatment_count FROM Treatments GROUP BY professional_id HAVING treatment_count >= 2) AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN (SELECT professional_id              FROM Treatments              GROUP BY professional_id              HAVING COUNT(treatment_id) >= 2) AS T  ON P.professional_id = T.professional_id
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.role_code, T1.first_name  HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.role_code, T1.first_name  HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.role_code, T1.first_name  HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.role_code, T1.first_name  HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN (     SELECT professional_id, COUNT(*) AS treatment_count      FROM Treatments      GROUP BY professional_id      HAVING COUNT(*) >= 2 ) AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T2.treatment_id) >= 2

SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.role_code, T1.first_name HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) >= 2)
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(T2.treatment_id) >= 2)
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.role_code, T1.first_name HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(T2.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.role_code, T1.first_name  HAVING COUNT(T2.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id, P.role_code, P.first_name  HAVING COUNT(T.treatment_id) >= 2
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(T2.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN (      SELECT professional_id, COUNT(treatment_id) AS treatment_count      FROM Treatments      GROUP BY professional_id      HAVING COUNT(treatment_id) >= 2  ) AS T ON P.professional_id = T.professional_id
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN (SELECT professional_id, COUNT(treatment_id) AS treatment_count              FROM Treatments              GROUP BY professional_id              HAVING COUNT(treatment_id) >= 2) AS T  ON P.professional_id = T.professional_id;
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN (SELECT professional_id, COUNT(treatment_id) AS treatment_count              FROM Treatments              GROUP BY professional_id              HAVING COUNT(treatment_id) >= 2) AS T2  ON T1.professional_id = T2.professional_id
SELECT T1.professional_id, T1.role_code, T1.first_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.role_code, T1.first_name  HAVING COUNT(T2.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) >= 2
SELECT P.professional_id, P.role_code, P.first_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(T.treatment_id) >= 2;

SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT B.breed_name  FROM Breeds AS B  INNER JOIN (SELECT breed_code, COUNT(*) AS dog_count              FROM Dogs              GROUP BY breed_code              ORDER BY dog_count DESC              LIMIT 1) AS D  ON B.breed_code = D.breed_code;
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT B.breed_name  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  GROUP BY D.breed_code  ORDER BY COUNT(D.dog_id) DESC  LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN Dogs AS T1 ON T2.breed_code = T1.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Breeds AS T2 INNER JOIN (SELECT breed_code, COUNT(*) AS dog_count FROM Dogs GROUP BY breed_code) AS T1 ON T1.breed_code = T2.breed_code ORDER BY T1.dog_count DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1

SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_code ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT B.breed_name FROM Breeds AS B INNER JOIN Dogs AS D ON B.breed_code = D.breed_code GROUP BY B.breed_name ORDER BY COUNT(D.dog_id) DESC LIMIT 1
SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT B.breed_name  FROM Breeds AS B  INNER JOIN Dogs AS D ON B.breed_code = D.breed_code  GROUP BY B.breed_name  ORDER BY COUNT(D.dog_id) DESC  LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1
SELECT B.breed_name  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  GROUP BY D.breed_code  ORDER BY COUNT(D.dog_id) DESC  LIMIT 1
SELECT B.breed_name FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code GROUP BY B.breed_name ORDER BY COUNT(D.dog_id) DESC LIMIT 1
SELECT B.breed_name  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  GROUP BY B.breed_name  ORDER BY COUNT(D.dog_id) DESC  LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(T1.dog_id) DESC LIMIT 1
SELECT T2.breed_name FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.breed_name ORDER BY COUNT(*) DESC LIMIT 1

SELECT T1.owner_id, T1.last_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT O.owner_id, O.last_name, SUM(T.cost_of_treatment) AS total_cost FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY total_cost DESC LIMIT 1
SELECT O.owner_id, O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1
SELECT T1.owner_id, T1.last_name, SUM(T3.cost_of_treatment) AS total_spent  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.last_name  ORDER BY total_spent DESC  LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT O.owner_id, O.last_name FROM Owners AS O INNER JOIN (SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_cost FROM Treatments AS T INNER JOIN Dogs AS D ON T.dog_id = D.dog_id GROUP BY D.owner_id) AS total_treatments ON O.owner_id = total_treatments.owner_id ORDER BY total_cost DESC LIMIT 1
SELECT O.owner_id, O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1
SELECT T1.owner_id, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.last_name  ORDER BY COUNT(T3.treatment_id) DESC  LIMIT 1
SELECT T1.owner_id, T2.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T3 ON T1.owner_id = T3.owner_id  INNER JOIN Treatments AS T4 ON T3.dog_id = T4.dog_id  GROUP BY T1.owner_id, T2.last_name  ORDER BY SUM(T4.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T4.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T4.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T1.last_name  FROM Treatments AS T2  INNER JOIN Dogs AS T3 ON T2.dog_id = T3.dog_id  INNER JOIN Owners AS T1 ON T3.owner_id = T1.owner_id  GROUP BY T3.owner_id, T1.last_name  ORDER BY COUNT(T2.treatment_id) DESC  LIMIT 1
SELECT T1.owner_id, T2.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T3 ON T1.owner_id = T3.owner_id  INNER JOIN Treatments AS T4 ON T3.dog_id = T4.dog_id  GROUP BY T1.owner_id, T2.last_name  ORDER BY COUNT(T4.treatment_id) DESC  LIMIT 1
SELECT T3.owner_id, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T3.owner_id, T1.last_name  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T4.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T4.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T4.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T4.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T1.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T1.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T2.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T2.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1

SELECT O.owner_id, O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT O.owner_id, O.last_name  FROM Owners AS O  INNER JOIN (SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spent              FROM Dogs AS D              INNER JOIN Treatments AS T ON D.dog_id = T.dog_id              GROUP BY D.owner_id              ORDER BY total_spent DESC              LIMIT 1) AS max_spender  ON O.owner_id = max_spender.owner_id
WITH OwnerSpending AS (     SELECT O.owner_id, O.last_name, SUM(T.cost_of_treatment) AS total_spent     FROM Owners AS O     INNER JOIN Dogs AS D ON O.owner_id = D.owner_id     INNER JOIN Treatments AS T ON D.dog_id = T.dog_id     GROUP BY O.owner_id ) SELECT owner_id, last_name FROM OwnerSpending WHERE total_spent = (SELECT MAX(total_spent) FROM OwnerSpending);
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.last_name FROM Owners AS T2 INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT O.owner_id, O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id, O.last_name  ORDER BY SUM(T.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T1.last_name FROM Owners AS T1 INNER JOIN (SELECT T3.owner_id, SUM(T2.cost_of_treatment) AS total_spent FROM Treatments AS T2 INNER JOIN Dogs AS T3 ON T2.dog_id = T3.dog_id GROUP BY T3.owner_id ORDER BY total_spent DESC LIMIT 1) AS T4 ON T1.owner_id = T4.owner_id
SELECT T1.owner_id, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.last_name  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T4.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T4.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1;
SELECT T3.owner_id, T2.last_name  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T2.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T3.last_name FROM Owners AS T3 INNER JOIN Dogs AS T2 ON T3.owner_id = T2.owner_id INNER JOIN Treatments AS T1 ON T2.dog_id = T1.dog_id GROUP BY T3.owner_id, T3.last_name ORDER BY SUM(T1.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T1.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T3 ON T2.owner_id = T3.owner_id  INNER JOIN Treatments AS T1 ON T3.dog_id = T1.dog_id  GROUP BY T2.owner_id, T2.last_name  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T4.last_name  FROM (SELECT T1.owner_id, SUM(T1.cost_of_treatment) AS total_spent        FROM Treatments AS T1        INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id        GROUP BY T1.dog_id, T2.owner_id) AS T3  INNER JOIN Owners AS T4 ON T3.owner_id = T4.owner_id  ORDER BY T3.total_spent DESC  LIMIT 1
SELECT T3.owner_id, T3.last_name  FROM Owners AS T3  INNER JOIN Dogs AS T1 ON T3.owner_id = T1.owner_id  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  GROUP BY T3.owner_id, T3.last_name  ORDER BY SUM(T2.cost_of_treatment) DESC  LIMIT 1
SELECT O.owner_id, O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id, O.last_name  ORDER BY SUM(T.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T3.last_name  FROM Owners AS T3  INNER JOIN Dogs AS T2 ON T3.owner_id = T2.owner_id  INNER JOIN Treatments AS T1 ON T2.dog_id = T1.dog_id  GROUP BY T3.owner_id, T3.last_name  HAVING SUM(T1.cost_of_treatment) = (SELECT MAX(total_spent) FROM (SELECT SUM(T1.cost_of_treatment) AS total_spent FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T2.owner_id))
SELECT T3.owner_id, T1.last_name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.last_name  HAVING SUM(T3.cost_of_treatment) = (SELECT MAX(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments AS T INNER JOIN Dogs AS D ON T.dog_id = D.dog_id GROUP BY D.owner_id))

SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T1 ON T1.treatment_type_code = T2.treatment_type_code
SELECT TT.treatment_type_description  FROM Treatment_Types TT  JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code) T  ON TT.treatment_type_code = T.treatment_type_code  ORDER BY T.total_cost ASC  LIMIT 1
SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS T1 ON T1.treatment_type_code = T2.treatment_type_code ORDER BY total_cost ASC LIMIT 1
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT T2.treatment_type_code FROM (SELECT T1.treatment_type_code, SUM(T2.cost_of_treatment) AS total_cost FROM Treatments AS T2 INNER JOIN Treatment_Types AS T1 ON T2.treatment_type_code = T1.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY total_cost ASC LIMIT 1)
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS T1 ON T2.treatment_type_code = T1.treatment_type_code WHERE T1.total_cost = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code))
SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) as total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T1 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN Treatments AS T1 ON T2.treatment_type_code = T1.treatment_type_code GROUP BY T2.treatment_type_description ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 INNER JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_description ORDER BY SUM(T2.cost_of_treatment) ASC LIMIT 1
SELECT T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_description ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1
SELECT T2.treatment_type_description  FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code) AS T1  INNER JOIN Treatment_Types AS T2  ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost                                                        FROM Treatments                                                        GROUP BY treatment_type_code))
SELECT T2.treatment_type_description  FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code        ORDER BY total_cost ASC        LIMIT 1) AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost              FROM Treatments              GROUP BY treatment_type_code) AS T1  ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost)                          FROM (SELECT SUM(cost_of_treatment) AS total_cost                                FROM Treatments                                GROUP BY treatment_type_code))
SELECT T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code, T2.treatment_type_description ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1
SELECT T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code  GROUP BY T1.treatment_type_code  ORDER BY SUM(T1.cost_of_treatment) ASC  LIMIT 1
SELECT T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code  GROUP BY T2.treatment_type_code, T2.treatment_type_description  ORDER BY SUM(T1.cost_of_treatment) ASC  LIMIT 1
SELECT T2.treatment_type_description  FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code) AS T1  INNER JOIN Treatment_Types AS T2  ON T1.treatment_type_code = T2.treatment_type_code  ORDER BY T1.total_cost ASC  LIMIT 1
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (      SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost      FROM Treatments      GROUP BY treatment_type_code  ) AS T1 ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost) FROM (      SELECT SUM(cost_of_treatment) AS total_cost      FROM Treatments      GROUP BY treatment_type_code  ))
SELECT T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code  GROUP BY T2.treatment_type_code  ORDER BY SUM(T1.cost_of_treatment) ASC  LIMIT 1
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost              FROM Treatments              GROUP BY treatment_type_code) AS T1  ON T1.treatment_type_code = T2.treatment_type_code  ORDER BY T1.total_cost ASC  LIMIT 1

SELECT T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code HAVING SUM(T1.cost_of_treatment) = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code))
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost              FROM Treatments              GROUP BY treatment_type_code) AS T1  ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost)                         FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost                               FROM Treatments                               GROUP BY treatment_type_code))
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1)
SELECT T1.treatment_type_description  FROM Treatment_Types AS T1  INNER JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code  GROUP BY T1.treatment_type_description  HAVING SUM(T2.cost_of_treatment) = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code))
SELECT T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN Treatments AS T1 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_description ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1)
SELECT T2.treatment_type_description FROM Treatment_Types AS T2 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS T1 ON T2.treatment_type_code = T1.treatment_type_code WHERE T1.total_cost = (SELECT MIN(total_cost) FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code))
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (      SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost      FROM Treatments      GROUP BY treatment_type_code  ) AS T1 ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost) FROM (      SELECT SUM(cost_of_treatment) AS total_cost      FROM Treatments      GROUP BY treatment_type_code  ))
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code) AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.total_cost = (SELECT MIN(total_cost) FROM (SELECT SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code))
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (     SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost      FROM Treatments      GROUP BY treatment_type_code ) AS T1 ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost) FROM (     SELECT SUM(cost_of_treatment) AS total_cost      FROM Treatments      GROUP BY treatment_type_code ) AS T3)
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost              FROM Treatments              GROUP BY treatment_type_code) AS T1  ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost)                          FROM (SELECT SUM(cost_of_treatment) AS total_cost                                FROM Treatments                                GROUP BY treatment_type_code))
SELECT T2.treatment_type_description  FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code        ORDER BY total_cost ASC        LIMIT 1) AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description  FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code        ORDER BY total_cost ASC        LIMIT 1) AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description  FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost        FROM Treatments        GROUP BY treatment_type_code        ORDER BY total_cost ASC        LIMIT 1) AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description FROM (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1) AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost              FROM Treatments              GROUP BY treatment_type_code) AS T1  ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost)                          FROM (SELECT SUM(cost_of_treatment) AS total_cost                                FROM Treatments                                GROUP BY treatment_type_code))
SELECT T2.treatment_type_description  FROM Treatment_Types AS T2  INNER JOIN (SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost              FROM Treatments              GROUP BY treatment_type_code) AS T1  ON T1.treatment_type_code = T2.treatment_type_code  WHERE T1.total_cost = (SELECT MIN(total_cost)                          FROM (SELECT SUM(cost_of_treatment) AS total_cost                                FROM Treatments                                GROUP BY treatment_type_code))

SELECT T1.owner_id, T3.zip_code FROM (SELECT T2.owner_id, SUM(T1.cost_of_treatment) AS total_paid FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T2.owner_id) AS T1 INNER JOIN Owners AS T3 ON T1.owner_id = T3.owner_id ORDER BY total_paid DESC LIMIT 1
SELECT T2.owner_id, T2.zip_code FROM Owners AS T2 INNER JOIN (SELECT T2.owner_id, SUM(T1.cost_of_treatment) AS total_spent FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T2.owner_id) AS T1 ON T1.owner_id = T2.owner_id ORDER BY T1.total_spent DESC LIMIT 1
SELECT O.owner_id, O.zip_code  FROM Owners AS O  WHERE O.owner_id = (SELECT D.owner_id                      FROM (SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_cost                            FROM Treatments AS T                            INNER JOIN Dogs AS D ON T.dog_id = D.dog_id                            GROUP BY D.owner_id                            ORDER BY total_cost DESC                            LIMIT 1)                    )
SELECT O.owner_id, O.zip_code FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id INNER JOIN Charges AS C ON T.cost_of_treatment = C.charge_amount GROUP BY O.owner_id, O.zip_code ORDER BY SUM(C.charge_amount) DESC LIMIT 1
SELECT T2.owner_id, T2.zip_code FROM Owners AS T2 INNER JOIN (SELECT T3.owner_id, SUM(T1.cost_of_treatment) AS total_paid FROM Treatments AS T1 INNER JOIN Dogs AS T3 ON T1.dog_id = T3.dog_id GROUP BY T3.owner_id ORDER BY total_paid DESC LIMIT 1) AS T4 ON T2.owner_id = T4.owner_id
SELECT O.owner_id, O.zip_code FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.zip_code ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1
WITH total_payments AS (     SELECT D.owner_id, SUM(C.charge_amount) AS total_payment     FROM Dogs AS D     INNER JOIN Treatments AS T ON D.dog_id = T.dog_id     INNER JOIN Charges AS C ON T.treatment_type_code = C.charge_type     GROUP BY D.owner_id ) SELECT O.owner_id, O.zip_code FROM Owners AS O WHERE O.owner_id = (SELECT owner_id FROM total_payments WHERE total_payment = (SELECT MAX(total_payment) FROM total_payments));
SELECT O.owner_id, O.zip_code FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.zip_code ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1
SELECT O.owner_id, O.zip_code  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id, O.zip_code  ORDER BY SUM(T.cost_of_treatment) DESC  LIMIT 1
SELECT T2.owner_id, T2.zip_code FROM Owners AS T2 WHERE T2.owner_id = (SELECT T1.owner_id FROM (SELECT T2.owner_id, SUM(T3.cost_of_treatment) AS total_payment FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id) AS total_payments WHERE total_payment = (SELECT MAX(total_payment) FROM (SELECT SUM(T3.cost_of_treatment) AS total_payment FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.owner_id)))
SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  INNER JOIN Dogs AS T2 ON T3.owner_id = T2.owner_id  INNER JOIN Treatments AS T1 ON T2.dog_id = T1.dog_id  GROUP BY T3.owner_id, T3.zip_code  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T2.zip_code  FROM Owners AS T2  INNER JOIN (     SELECT owner_id, SUM(cost_of_treatment) AS total_spent      FROM Dogs AS T1      INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id      GROUP BY owner_id ) AS T4 ON T2.owner_id = T4.owner_id  WHERE total_spent = (SELECT MAX(total_spent) FROM (     SELECT SUM(cost_of_treatment) AS total_spent      FROM Dogs AS T1      INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id      GROUP BY owner_id ) AS T5)
SELECT T1.owner_id, T2.zip_code  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id  GROUP BY T1.owner_id, T2.zip_code  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT O.owner_id, O.zip_code FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id INNER JOIN Charges AS C ON T.treatment_type_code = C.charge_type GROUP BY O.owner_id, O.zip_code ORDER BY SUM(C.charge_amount) DESC LIMIT 1
SELECT T1.owner_id, T1.zip_code  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.zip_code  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T2.owner_id, T2.zip_code  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id  INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id  GROUP BY T2.owner_id, T2.zip_code  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T1.zip_code  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.zip_code  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T2.zip_code  FROM Owners AS T2  INNER JOIN (      SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_paid      FROM Treatments AS T      INNER JOIN Dogs AS D ON T.dog_id = D.dog_id      GROUP BY D.owner_id  ) AS T1 ON T2.owner_id = T1.owner_id  ORDER BY T1.total_paid DESC  LIMIT 1
SELECT O.owner_id, O.zip_code  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  GROUP BY O.owner_id, O.zip_code  ORDER BY SUM(T.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  INNER JOIN Dogs AS T1 ON T3.owner_id = T1.owner_id  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  GROUP BY T3.owner_id, T3.zip_code  ORDER BY SUM(T2.cost_of_treatment) DESC  LIMIT 1

SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  INNER JOIN (SELECT T2.owner_id, SUM(T1.cost_of_treatment) AS total_spent              FROM Treatments AS T1              INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id              GROUP BY T2.owner_id              ORDER BY total_spent DESC LIMIT 1) AS T4  ON T3.owner_id = T4.owner_id
SELECT O.owner_id, O.zip_code  FROM Owners AS O  INNER JOIN (SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spent              FROM Treatments AS T              INNER JOIN Dogs AS D ON T.dog_id = D.dog_id              GROUP BY D.owner_id              ORDER BY total_spent DESC              LIMIT 1) AS max_spender  ON O.owner_id = max_spender.owner_id;
SELECT O.owner_id, O.zip_code  FROM Owners AS O  INNER JOIN (SELECT owner_id, SUM(charge_amount) AS total_spent              FROM Charges              GROUP BY owner_id              ORDER BY total_spent DESC              LIMIT 1) AS C  ON O.owner_id = C.owner_id
SELECT O.owner_id, O.zip_code FROM Owners AS O WHERE O.owner_id = (SELECT D.owner_id FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY D.owner_id ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1);
SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  INNER JOIN (SELECT T2.owner_id, SUM(T1.cost_of_treatment) AS total_spent              FROM Treatments AS T1              INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id              GROUP BY T2.owner_id) AS T4  ON T3.owner_id = T4.owner_id  ORDER BY T4.total_spent DESC  LIMIT 1
SELECT T2.owner_id, T2.zip_code FROM Owners AS T2 INNER JOIN (SELECT T3.owner_id, SUM(T1.cost_of_treatment) AS total_spent FROM Treatments AS T1 INNER JOIN Dogs AS T3 ON T1.dog_id = T3.dog_id GROUP BY T3.owner_id ORDER BY total_spent DESC LIMIT 1) AS T4 ON T2.owner_id = T4.owner_id
SELECT O.owner_id, O.zip_code  FROM Owners AS O  INNER JOIN (SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spent              FROM Dogs AS D              INNER JOIN Treatments AS T ON D.dog_id = T.dog_id              GROUP BY D.owner_id              ORDER BY total_spent DESC              LIMIT 1) AS max_spender ON O.owner_id = max_spender.owner_id
SELECT owner_id, zip_code FROM Owners WHERE owner_id IN (SELECT O.owner_id FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id INNER JOIN Treatments AS T ON D.dog_id = T.dog_id GROUP BY O.owner_id ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1)
SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.zip_code ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1
SELECT T2.owner_id, T2.zip_code FROM Owners AS T2 INNER JOIN (SELECT owner_id, SUM(cost_of_treatment) AS total_spent FROM Treatments AS T1 INNER JOIN Dogs AS T3 ON T1.dog_id = T3.dog_id GROUP BY owner_id ORDER BY total_spent DESC LIMIT 1) AS T1 ON T2.owner_id = T1.owner_id
SELECT T3.owner_id, T3.zip_code  FROM Treatments AS T1  INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  INNER JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  GROUP BY T3.owner_id, T3.zip_code  ORDER BY SUM(T1.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T1.zip_code  FROM Owners AS T1  INNER JOIN (     SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spent     FROM Dogs AS D      INNER JOIN Treatments AS T ON D.dog_id = T.dog_id      GROUP BY D.owner_id ) AS T2 ON T1.owner_id = T2.owner_id  ORDER BY T2.total_spent DESC  LIMIT 1
SELECT T3.owner_id, T3.zip_code FROM Owners AS T3 INNER JOIN (SELECT T1.owner_id, SUM(T2.cost_of_treatment) AS total_spent FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.owner_id) AS T4 ON T3.owner_id = T4.owner_id WHERE T4.total_spent = (SELECT MAX(total_spent) FROM (SELECT SUM(cost_of_treatment) AS total_spent FROM Treatments GROUP BY dog_id))
SELECT T1.owner_id, T1.zip_code  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.zip_code  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T1.zip_code  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Charges AS T3 ON T2.dog_id = T3.charge_id  GROUP BY T1.owner_id, T1.zip_code  ORDER BY SUM(T3.charge_amount) DESC  LIMIT 1
SELECT O.owner_id, O.zip_code  FROM Owners AS O  JOIN (      SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spent      FROM Dogs AS D      JOIN Treatments AS T ON D.dog_id = T.dog_id      GROUP BY D.owner_id  ) AS Spending ON O.owner_id = Spending.owner_id  WHERE Spending.total_spent = (SELECT MAX(total_spent) FROM (      SELECT SUM(T.cost_of_treatment) AS total_spent      FROM Dogs AS D      JOIN Treatments AS T ON D.dog_id = T.dog_id      GROUP BY D.owner_id  ))
SELECT T3.owner_id, T3.zip_code FROM Owners AS T3 INNER JOIN Dogs AS T1 ON T3.owner_id = T1.owner_id INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T3.owner_id, T3.zip_code ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1
SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  INNER JOIN Dogs AS T1 ON T3.owner_id = T1.owner_id  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  GROUP BY T3.owner_id, T3.zip_code  ORDER BY SUM(T2.cost_of_treatment) DESC  LIMIT 1
SELECT T1.owner_id, T1.zip_code  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.zip_code  ORDER BY SUM(T3.cost_of_treatment) DESC  LIMIT 1
SELECT T3.owner_id, T3.zip_code  FROM Owners AS T3  JOIN (     SELECT D.owner_id, SUM(T.cost_of_treatment) AS total_spending      FROM Dogs AS D      INNER JOIN Treatments AS T ON D.dog_id = T.dog_id      GROUP BY D.owner_id      ORDER BY total_spending DESC      LIMIT 1 ) AS T1 ON T3.owner_id = T1.owner_id

SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT P.professional_id, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(DISTINCT T.treatment_type_code) >= 2
SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id, T1.cell_number HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T2.cell_number  FROM (SELECT professional_id, COUNT(DISTINCT treatment_type_code) AS treatment_count        FROM Treatments        GROUP BY professional_id        HAVING treatment_count >= 2) AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN (      SELECT professional_id, COUNT(DISTINCT treatment_type_code) AS treatment_count      FROM Treatments      GROUP BY professional_id      HAVING treatment_count >= 2  ) AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2

SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2)
SELECT T1.professional_id, T2.cell_number FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 GROUP BY T2.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2)
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT P.professional_id, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(DISTINCT T.treatment_type_code) >= 2
SELECT P.professional_id, P.cell_number  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  GROUP BY P.professional_id  HAVING COUNT(DISTINCT T.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.cell_number  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T2.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T2.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T2.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T2.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T2.cell_number  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T1.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id, T1.cell_number  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2

SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT T1.first_name, T1.last_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT T1.first_name, T1.last_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T2.first_name, T2.last_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  WHERE T1.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T2.first_name, T2.last_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  WHERE T1.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)

SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT T2.professional_id FROM Treatments AS T2 WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING AVG(cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT T3.first_name, T3.last_name FROM Treatments AS T1 INNER JOIN Professionals AS T3 ON T1.professional_id = T3.professional_id WHERE T1.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT T2.first_name, T2.last_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id WHERE T1.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT T1.first_name, T1.last_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT T2.first_name, T2.last_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  WHERE T1.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT T1.first_name, T1.last_name  FROM Professionals AS T1  INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  WHERE T2.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Treatments AS T  INNER JOIN Professionals AS P ON T.professional_id = P.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
SELECT DISTINCT P.first_name, P.last_name  FROM Treatments AS T  INNER JOIN Professionals AS P ON T.professional_id = P.professional_id  WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)

SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T1.date_of_treatment, T2.first_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id

SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name  FROM Treatments AS T1  INNER JOIN Professionals AS T2  ON T1.professional_id = T2.professional_id
SELECT T.date_of_treatment, P.first_name  FROM Treatments AS T  INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T.date_of_treatment, P.first_name FROM Treatments AS T INNER JOIN Professionals AS P ON T.professional_id = P.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT T1.date_of_treatment, T2.first_name FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id

SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code;
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2  ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2  ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2  ON T1.treatment_type_code = T2.treatment_type_code

SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2  ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
SELECT T1.cost_of_treatment, T2.treatment_type_description  FROM Treatments AS T1  INNER JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code

SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id
SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT T1.first_name, T1.last_name, T3.size_description  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT T1.first_name, T1.last_name, T3.size_description  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code;
SELECT O.first_name, O.last_name, D.size_code  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, O.last_name, D.size_code  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT O.first_name, O.last_name, D.size_code FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id

SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T2.size_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT O.first_name, O.last_name, D.size_code  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT T1.first_name, T1.last_name, T3.size_description  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT T1.first_name, T1.last_name, T3.size_description  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT O.first_name, O.last_name, D.size_code FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT T1.first_name, T1.last_name, T3.size_description  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  INNER JOIN Sizes AS T3 ON T2.size_code = T3.size_code
SELECT O.first_name, O.last_name, S.size_description  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  INNER JOIN Sizes AS S ON D.size_code = S.size_code

SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT Owners.first_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT Owners.first_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id

SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT Owners.first_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id

SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(dog_id) ASC LIMIT 1))
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code IN (SELECT breed_code                         FROM Dogs                         GROUP BY breed_code                         HAVING COUNT(*) = (SELECT MIN(dog_count)                                            FROM (SELECT COUNT(*) AS dog_count                                                  FROM Dogs                                                  GROUP BY breed_code) AS counts))
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code                        FROM Dogs                        GROUP BY breed_code                        ORDER BY COUNT(*) ASC                        LIMIT 1)
SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT T1.name, T2.date_of_treatment  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  WHERE T1.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM (SELECT breed_code, COUNT(*) AS dog_count FROM Dogs GROUP BY breed_code ORDER BY dog_count ASC LIMIT 1))
SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM (SELECT breed_code, COUNT(*) AS count FROM Dogs GROUP BY breed_code ORDER BY count ASC LIMIT 1))
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code                        FROM Dogs                        GROUP BY breed_code                        ORDER BY COUNT(*) ASC                        LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (     SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY COUNT(*) ASC      LIMIT 1 )
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs                        GROUP BY breed_code                        ORDER BY COUNT(*) ASC                        LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code HAVING COUNT(*) = (SELECT MIN(breed_count) FROM (SELECT COUNT(*) AS breed_count FROM Dogs GROUP BY breed_code))))
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code                        FROM Breeds AS B                        LEFT JOIN Dogs AS D2 ON B.breed_code = D2.breed_code                        GROUP BY B.breed_code                        ORDER BY COUNT(D2.dog_id) ASC                        LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)

SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT T1.name, T2.date_of_treatment  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  WHERE T1.breed_code = (SELECT breed_code                         FROM Dogs                         GROUP BY breed_code                         ORDER BY COUNT(dog_id) ASC                         LIMIT 1)
SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE D.breed_code = (SELECT D.breed_code FROM Dogs AS D GROUP BY D.breed_code ORDER BY COUNT(D.dog_id) ASC LIMIT 1)
SELECT T1.name, T2.date_of_treatment  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  WHERE T1.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code                        FROM Dogs                        GROUP BY breed_code                        ORDER BY COUNT(dog_id) ASC                        LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code IN (SELECT breed_code                         FROM Dogs                         GROUP BY breed_code                         HAVING COUNT(*) = (SELECT MIN(breed_count)                                            FROM (SELECT COUNT(*) AS breed_count                                                  FROM Dogs                                                  GROUP BY breed_code)))
SELECT T1.name, T2.date_of_treatment  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  WHERE T1.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code HAVING COUNT(*) = (SELECT MIN(breed_count) FROM (SELECT COUNT(*) AS breed_count FROM Dogs GROUP BY breed_code)))
SELECT T1.name, T2.date_of_treatment  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  WHERE T1.breed_code = (SELECT breed_code                          FROM Dogs                          GROUP BY breed_code                          ORDER BY COUNT(*) ASC                          LIMIT 1);
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (     SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY COUNT(*) ASC      LIMIT 1 )
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE B.breed_code IN (     SELECT B.breed_code      FROM Breeds AS B      INNER JOIN Dogs AS D ON B.breed_code = D.breed_code      GROUP BY B.breed_code      HAVING COUNT(D.dog_id) = (         SELECT MIN(breed_count)          FROM (             SELECT COUNT(D.dog_id) AS breed_count              FROM Breeds AS B              INNER JOIN Dogs AS D ON B.breed_code = D.breed_code              GROUP BY B.breed_code         )     ) )
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code                        FROM Dogs                        GROUP BY breed_code                        ORDER BY COUNT(*) ASC                        LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (     SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY COUNT(*) ASC      LIMIT 1 )
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Breeds WHERE breed_name IN (SELECT breed_name FROM Dogs GROUP BY breed_code HAVING COUNT(*) = (SELECT MIN(breed_count) FROM (SELECT COUNT(*) AS breed_count FROM Dogs GROUP BY breed_code))))
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)
SELECT D.name, T.date_of_treatment  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id  WHERE D.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)

SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
SELECT T2.first_name, T1.name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
SELECT T1.first_name, T2.name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.state = 'Virginia'
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE O.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT T1.first_name, T2.name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'

SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT O.first_name, D.name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE O.state = 'Virginia'
SELECT T1.first_name, T2.name  FROM Owners AS T1  INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.state = 'Virginia'
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia'
SELECT O.first_name, D.name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE O.state = 'Virginia';
SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'

SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments);
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT T1.date_arrived, T1.date_departed  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id;
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id

SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments);
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 WHERE T1.dog_id IN (SELECT dog_id FROM Treatments)
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed  FROM Dogs AS D  INNER JOIN Treatments AS T ON D.dog_id = T.dog_id;
SELECT T1.date_arrived, T1.date_departed  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT D.date_arrived, D.date_departed FROM Dogs AS D INNER JOIN Treatments AS T ON D.dog_id = T.dog_id
SELECT T1.date_arrived, T1.date_departed  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id;
SELECT T1.date_arrived, T1.date_departed  FROM Dogs AS T1  INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

SELECT O.last_name  FROM Owners O  INNER JOIN Dogs D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Dogs AS D  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  ORDER BY D.date_of_birth DESC  LIMIT 1
SELECT O.last_name  FROM Dogs AS D  INNER JOIN Owners AS O ON D.owner_id = O.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name  FROM Dogs AS T1  INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name  FROM Owners AS T2  INNER JOIN Dogs AS T1 ON T1.owner_id = T2.owner_id  WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs);
SELECT T2.last_name  FROM Dogs AS T1  INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)

SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MIN(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs ORDER BY date_of_birth DESC LIMIT 1);
SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs ORDER BY date_of_birth DESC LIMIT 1)
SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs ORDER BY date_of_birth DESC LIMIT 1)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs ORDER BY date_of_birth DESC LIMIT 1)
SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs ORDER BY date_of_birth DESC LIMIT 1)
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id ORDER BY D.date_of_birth DESC LIMIT 1
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id ORDER BY T1.date_of_birth DESC LIMIT 1
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Owners AS O  JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name  FROM Dogs AS T1  INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT T2.last_name FROM Dogs AS T1 INNER JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)
SELECT O.last_name  FROM Owners AS O  INNER JOIN Dogs AS D ON O.owner_id = D.owner_id  WHERE D.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs)

SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT DISTINCT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')

SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')

SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;

SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;
SELECT date_arrived, date_departed FROM Dogs;

SELECT COUNT(DISTINCT dog_id) FROM Treatments WHERE dog_id IS NOT NULL;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments WHERE dog_id IS NOT NULL;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.dog_id) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT COUNT(DISTINCT dog_id) FROM Treatments WHERE dog_id IS NOT NULL;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments
SELECT COUNT(DISTINCT dog_id) FROM Treatments
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments
SELECT COUNT(DISTINCT dog_id) FROM Treatments
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.dog_id) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
SELECT COUNT(DISTINCT dog_id) FROM Treatments;

SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.dog_id) FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments
SELECT COUNT(DISTINCT dog_id) FROM Treatments

SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id WHERE T1.dog_id IS NOT NULL
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT T.professional_id) FROM Treatments AS T INNER JOIN Dogs AS D ON T.dog_id = D.dog_id
SELECT COUNT(DISTINCT T2.professional_id) FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 WHERE T1.professional_id IS NOT NULL;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments

SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 WHERE T1.dog_id IS NOT NULL;
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 WHERE T1.professional_id IS NOT NULL;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Dogs AS T3 ON T2.dog_id = T3.dog_id
SELECT COUNT(DISTINCT professional_id) FROM Treatments WHERE dog_id IS NOT NULL;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 INNER JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1 WHERE T1.dog_id IS NOT NULL
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments WHERE dog_id IS NOT NULL
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT T1.professional_id) FROM Treatments AS T1

SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT T1.role_code, T1.street, T1.city, T1.state FROM Professionals AS T1 WHERE T1.city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'

SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'

SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'

SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'

SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);

SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS DECIMAL) < (SELECT AVG(CAST(age AS DECIMAL)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE CAST(age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs)

SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);

SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)

SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL
SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL
SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL
SELECT COUNT(*) FROM Dogs AS D WHERE NOT EXISTS (SELECT 1 FROM Treatments AS T WHERE T.dog_id = D.dog_id)
SELECT COUNT(D.dog_id) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL
SELECT COUNT(D.dog_id) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL;
SELECT COUNT(*) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL;
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments);
SELECT COUNT(D.dog_id) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL
SELECT COUNT(*) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.treatment_id IS NULL;
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.treatment_id IS NULL
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT(*) FROM Dogs AS D WHERE D.dog_id NOT IN (SELECT T.dog_id FROM Treatments AS T)
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL

SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL
SELECT COUNT(*) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL;
SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL
SELECT COUNT(*) FROM Dogs AS D WHERE D.dog_id NOT IN (SELECT T.dog_id FROM Treatments AS T)
SELECT COUNT(*) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL;
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(T1.dog_id) FROM Dogs AS T1 LEFT JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.dog_id IS NULL
SELECT COUNT(D.dog_id) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL
SELECT COUNT(D.dog_id) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL
SELECT COUNT(*) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL;
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.treatment_id IS NULL
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(*) FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.dog_id IS NULL
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.treatment_id IS NULL
SELECT COUNT(D1.dog_id) FROM Dogs AS D1 LEFT JOIN Treatments AS T1 ON D1.dog_id = T1.dog_id WHERE T1.dog_id IS NULL

SELECT COUNT(*) FROM Owners O WHERE NOT EXISTS (SELECT 1 FROM Dogs D WHERE D.owner_id = O.owner_id)
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(*) FROM Owners WHERE NOT EXISTS (SELECT 1 FROM Dogs WHERE Dogs.owner_id = Owners.owner_id);
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs);
SELECT COUNT(O.owner_id) FROM Owners O LEFT JOIN Dogs D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL;
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(T1.owner_id) FROM Owners AS T1 LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.dog_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL;
SELECT COUNT(T1.owner_id) FROM Owners AS T1 LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.dog_id IS NULL
SELECT COUNT(T1.owner_id) FROM Owners AS T1 LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.owner_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL;
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL;
SELECT COUNT(T1.owner_id) FROM Owners AS T1 LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.dog_id IS NULL
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(*) FROM Owners AS T1 LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.owner_id IS NULL

SELECT COUNT(owner_id) FROM Owners WHERE NOT EXISTS (SELECT 1 FROM Dogs WHERE Dogs.owner_id = Owners.owner_id);
SELECT COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs);
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(*) FROM Owners O WHERE NOT EXISTS (SELECT 1 FROM Dogs D WHERE D.owner_id = O.owner_id);
SELECT COUNT(*) FROM Owners AS O WHERE NOT EXISTS (SELECT 1 FROM Dogs AS D WHERE D.owner_id = O.owner_id);
SELECT COUNT(O.owner_id) FROM Owners O LEFT JOIN Dogs D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL;
SELECT COUNT(*) FROM Owners AS T1 WHERE NOT EXISTS (SELECT 1 FROM Dogs AS T2 WHERE T1.owner_id = T2.owner_id)
SELECT COUNT(*) FROM Owners O WHERE NOT EXISTS (SELECT 1 FROM Dogs D WHERE D.owner_id = O.owner_id)
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL;
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL;
SELECT COUNT(DISTINCT T1.owner_id)  FROM Owners AS T1  LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T2.owner_id IS NULL
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(*) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL
SELECT COUNT(T1.owner_id) FROM Owners AS T1 LEFT JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.owner_id IS NULL
SELECT COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.owner_id IS NULL
SELECT COUNT(O.owner_id) FROM Owners AS O LEFT JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.dog_id IS NULL

SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM `Professionals` AS P LEFT JOIN `Treatments` AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL;
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.treatment_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.treatment_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.treatment_id IS NULL;
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.treatment_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.treatment_id IS NULL
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments)
SELECT COUNT(P.professional_id)  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL
SELECT COUNT(P.professional_id)  FROM Professionals AS P  LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id  WHERE T.professional_id IS NULL;
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL

SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(P.professional_id) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.treatment_id IS NULL
SELECT COUNT(*) FROM `Professionals` AS P LEFT JOIN `Treatments` AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL;
SELECT COUNT(DISTINCT P.professional_id) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.professional_id IS NULL
SELECT COUNT(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL
SELECT COUNT(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL
SELECT COUNT(*) FROM Professionals AS P LEFT JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.treatment_id IS NULL
SELECT COUNT(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL

SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT T1.name, T1.age, T1.weight FROM Dogs AS T1 WHERE T1.abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT T1.name, T1.age, T1.weight FROM Dogs AS T1 WHERE T1.abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'

SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT T1.name, T1.age, T1.weight FROM Dogs AS T1 WHERE T1.abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'

SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE age IS NOT NULL;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE age IS NOT NULL;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE age IS NOT NULL;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE age IS NOT NULL;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS DECIMAL)) FROM Dogs;
SELECT AVG(CAST(age AS FLOAT)) FROM Dogs

SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs WHERE age IS NOT NULL AND age GLOB '[0-9]*'
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(age) FROM Dogs WHERE age IS NOT NULL;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS DECIMAL)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS DECIMAL)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs;
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs
SELECT AVG(CAST(age AS INTEGER)) FROM Dogs

SELECT MAX(CAST(age AS INTEGER)) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(CAST(age AS INTEGER)) FROM Dogs;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT (julianday('now') - julianday(MAX(date_of_birth))) / 365.25 AS age FROM Dogs;
SELECT MAX((julianday('now') - julianday(date_of_birth)) / 365.25) FROM Dogs
SELECT MAX(age) FROM Dogs;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS oldest_age FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS oldest_dog_age FROM Dogs

SELECT MAX(age) FROM Dogs;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(CAST(age AS INTEGER)) FROM Dogs;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', `date_of_birth`)) FROM `Dogs`;
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) FROM Dogs
SELECT MAX(CAST(age AS INTEGER)) FROM Dogs
SELECT MAX(age) FROM Dogs;
SELECT MAX(CAST(age AS INTEGER)) FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS age FROM Dogs
SELECT MAX(STRFTIME('%Y', 'now') - STRFTIME('%Y', date_of_birth)) AS oldest_age FROM Dogs
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs
SELECT MAX(age) FROM Dogs
SELECT MAX(CAST(age AS INTEGER)) FROM Dogs;

SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;

SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;

SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;

SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) FROM Charges;

SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals

SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals;
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals
SELECT email_address, cell_number, home_phone FROM Professionals

SELECT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S
SELECT T1.breed_name, T2.size_description FROM Breeds AS T1 CROSS JOIN Sizes AS T2
SELECT T1.breed_name, T2.size_description FROM Breeds AS T1 CROSS JOIN Sizes AS T2
SELECT DISTINCT B.breed_name, S.size_description FROM Breeds AS B, Sizes AS S
SELECT DISTINCT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S
SELECT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S
SELECT DISTINCT breed_name, size_description FROM Breeds CROSS JOIN Sizes
SELECT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S
SELECT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S
SELECT T1.breed_name, T2.size_description FROM Breeds AS T1 CROSS JOIN Sizes AS T2
SELECT B.breed_name, S.size_description  FROM Breeds AS B  CROSS JOIN Sizes AS S
SELECT T1.breed_name, T2.size_description  FROM Breeds AS T1  CROSS JOIN Sizes AS T2
SELECT B.breed_name, S.size_description  FROM Breeds AS B  CROSS JOIN Sizes AS S;
SELECT B.breed_name, S.size_description  FROM Breeds AS B, Sizes AS S
SELECT B.breed_name, S.size_description  FROM Breeds AS B  CROSS JOIN Sizes AS S
SELECT B.breed_name, S.size_description FROM Breeds AS B CROSS JOIN Sizes AS S
SELECT B.breed_name, S.size_description  FROM Breeds AS B  CROSS JOIN Sizes AS S
SELECT T1.breed_name, T2.size_description  FROM Breeds AS T1  CROSS JOIN Sizes AS T2
SELECT B.breed_name, S.size_description  FROM Breeds AS B  CROSS JOIN Sizes AS S
SELECT T1.breed_name, T2.size_description FROM Breeds AS T1 CROSS JOIN Sizes AS T2

SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT T2.breed_code, T1.size_code FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code
SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description FROM Dogs AS D INNER JOIN Breeds AS B ON D.breed_code = B.breed_code INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT Breed.breed_name, Size.size_description FROM Dogs AS D INNER JOIN Breeds AS Breed ON D.breed_code = Breed.breed_code INNER JOIN Sizes AS Size ON D.size_code = Size.size_code
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs INNER JOIN Breeds ON Dogs.breed_code = Breeds.breed_code INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code
SELECT DISTINCT T2.breed_name, T3.size_description FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code INNER JOIN Sizes AS T3 ON T1.size_code = T3.size_code
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code;
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT D.breed_code, S.size_code  FROM Dogs AS D  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code;
SELECT DISTINCT breed_code, size_code FROM Dogs
SELECT DISTINCT B.breed_name, S.size_description  FROM Dogs AS D  INNER JOIN Breeds AS B ON D.breed_code = B.breed_code  INNER JOIN Sizes AS S ON D.size_code = S.size_code

SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT P.first_name, TTD.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TTD ON T.treatment_type_code = TTD.treatment_type_code;
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS Tr ON P.professional_id = Tr.professional_id  INNER JOIN Treatment_Types AS TT ON Tr.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS R ON P.professional_id = R.professional_id  INNER JOIN Treatment_Types AS T ON R.treatment_type_code = T.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Treatments AS T  INNER JOIN Professionals AS P ON T.professional_id = P.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS R ON P.professional_id = R.professional_id  INNER JOIN Treatment_Types AS TT ON R.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS R ON P.professional_id = R.professional_id  INNER JOIN Treatment_Types AS TT ON R.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code

SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT T1.first_name, T3.treatment_type_description FROM Professionals AS T1 INNER JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id INNER JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT P.first_name, TTD.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TTD ON T.treatment_type_code = TTD.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS R ON P.professional_id = R.professional_id  INNER JOIN Treatment_Types AS TT ON R.treatment_type_code = TT.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description  FROM Professionals AS T1  INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id  INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT T1.first_name, T2.treatment_type_description  FROM Professionals AS T1  INNER JOIN Treatments AS T3 ON T1.professional_id = T3.professional_id  INNER JOIN Treatment_Types AS T2 ON T3.treatment_type_code = T2.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, T.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS R ON P.professional_id = R.professional_id  INNER JOIN Treatment_Types AS T ON R.treatment_type_code = T.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code
SELECT P.first_name, TT.treatment_type_description  FROM Professionals AS P  INNER JOIN Treatments AS T ON P.professional_id = T.professional_id  INNER JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code

SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(DISTINCT "Singer_ID") FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT Singer_ID) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

SELECT T1.Name FROM singer AS T1 ORDER BY T1.Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT T1.Name FROM singer AS T1 ORDER BY T1.Net_Worth_Millions ASC
SELECT T1.Name FROM singer AS T1 ORDER BY T1.Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

SELECT Birth_Year, Citizenship FROM singer
SELECT T1.Birth_Year, T1.Citizenship FROM singer AS T1
SELECT T1.Birth_Year, T1.Citizenship FROM singer AS T1
SELECT T1.Birth_Year, T1.Citizenship FROM singer AS T1
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;

SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer
SELECT Birth_Year, Citizenship FROM singer

SELECT Name FROM singer WHERE Citizenship <> 'France'
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France'

SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT T1.Name FROM singer AS T1 WHERE T1.Citizenship <> 'France'
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT T1.Name FROM singer AS T1 WHERE T1.Citizenship <> 'France'
SELECT T1.Name FROM singer AS T1 WHERE T1.Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France';
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France'
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship != 'France';
SELECT Name FROM singer WHERE Citizenship <> 'France'
SELECT Name FROM singer WHERE Citizenship <> 'France'
SELECT Name FROM singer WHERE Citizenship != 'France'
SELECT Name FROM singer WHERE Citizenship <> 'France'

SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)

SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);

SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT T1.Name FROM singer AS T1 WHERE T1.Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)

SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT T1.Name FROM singer AS T1 WHERE T1.Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)

SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(Singer_ID) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship

SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(Singer_ID) AS Singer_Count FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS Singer_Count FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS number_of_singers FROM singer GROUP BY Citizenship
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship

SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(Citizenship) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT DISTINCT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship

SELECT T1.Citizenship, MAX(T1.Net_Worth_Millions) FROM singer AS T1 GROUP BY T1.Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship

SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID

SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT S.Title, S.Name FROM song AS S INNER JOIN singer AS S2 ON S.Singer_ID = S2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID
SELECT T1.Title, T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID

SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000

SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
SELECT DISTINCT T2.Name FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Sales > 300000
SELECT DISTINCT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T1.Sales > 300000

SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 WHERE T2.Singer_ID IN (SELECT T1.Singer_ID FROM song AS T1 GROUP BY T1.Singer_ID HAVING COUNT(T1.Song_ID) > 1)
SELECT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name  HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name  HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name  FROM singer AS T2  INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID  GROUP BY T2.Singer_ID  HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Singer_ID, T2.Name  HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name  FROM singer AS T2  INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID  GROUP BY T2.Name  HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1

SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT DISTINCT T2.Name FROM singer AS T2 INNER JOIN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1) AS T1 ON T1.Singer_ID = T2.Singer_ID
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID) > 1
SELECT DISTINCT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name  HAVING COUNT(T2.Song_ID) > 1
SELECT DISTINCT T2.Name  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Singer_ID, T2.Name  HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID  HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Singer_ID, T1.Name  HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1
SELECT T2.Name FROM singer AS T2 INNER JOIN song AS T1 ON T2.Singer_ID = T1.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID) > 1
SELECT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name  HAVING COUNT(T2.Song_ID) > 1
SELECT T1.Name  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name  HAVING COUNT(T2.Song_ID) > 1

SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name;
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name

SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) FROM song AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales  FROM singer AS T1  INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name
SELECT T2.Name, SUM(T1.Sales) AS Total_Sales  FROM song AS T1  INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T2.Name

SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T2.Name FROM singer AS T2 LEFT JOIN song AS T1 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Song_ID IS NULL
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
SELECT T1.Name FROM singer AS T1 WHERE NOT EXISTS (SELECT 1 FROM song AS T2 WHERE T2.Singer_ID = T1.Singer_ID)
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT DISTINCT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL

SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL
SELECT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IS NULL
SELECT DISTINCT T1.Name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Singer_ID IS NULL

SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT CASE WHEN Birth_Year < 1945 THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN Birth_Year > 1955 THEN 1 END) > 0
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) = (SELECT COUNT(DISTINCT Singer_ID) FROM singer WHERE Birth_Year < 1945) + (SELECT COUNT(DISTINCT Singer_ID) FROM singer WHERE Birth_Year > 1955)
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(CASE WHEN Birth_Year < 1945 THEN 1 END) > 0 AND COUNT(CASE WHEN Birth_Year > 1955 THEN 1 END) > 0
SELECT Citizenship FROM singer WHERE (Birth_Year < 1945 OR Birth_Year > 1955) AND Citizenship IS NOT NULL GROUP BY Citizenship HAVING COUNT(*) > 1
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(CASE WHEN Birth_Year < 1945 THEN 1 END) > 0 AND COUNT(CASE WHEN Birth_Year > 1955 THEN 1 END) > 0
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(CASE WHEN Birth_Year < 1945 THEN 1 END) > 0 AND COUNT(CASE WHEN Birth_Year > 1955 THEN 1 END) > 0
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship
SELECT citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY citizenship HAVING COUNT(*) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(*) > 1
SELECT citizenship FROM singer WHERE birth_year < 1945 OR birth_year > 1955 GROUP BY citizenship HAVING COUNT(singer_id) > 1
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(*) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(*) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(CASE WHEN Birth_Year < 1945 THEN 1 END) > 0 AND COUNT(CASE WHEN Birth_Year > 1955 THEN 1 END) > 0

SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) > 1
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) > 1
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(*) > 1
SELECT Citizenship  FROM singer  WHERE Birth_Year < 1945  INTERSECT  SELECT Citizenship  FROM singer  WHERE Birth_Year > 1955;
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) > 1
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(*) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(Singer_ID) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT T1.Citizenship  FROM singer AS T1  WHERE T1.Birth_Year < 1945  GROUP BY T1.Citizenship  HAVING COUNT(T1.Singer_ID) > 0  INTERSECT  SELECT T2.Citizenship  FROM singer AS T2  WHERE T2.Birth_Year > 1955  GROUP BY T2.Citizenship  HAVING COUNT(T2.Singer_ID) > 0
SELECT citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY citizenship HAVING COUNT(*) > 1
SELECT DISTINCT T1.Citizenship  FROM singer AS T1  WHERE T1.Birth_Year < 1945  AND T1.Citizenship IN (SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Birth_Year > 1955)
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(Singer_ID) > 1
SELECT DISTINCT T1.Citizenship FROM singer AS T1 WHERE T1.Birth_Year < 1945 OR T1.Birth_Year > 1955 GROUP BY T1.Citizenship HAVING COUNT(T1.Singer_ID) > 1
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955
SELECT citizenship FROM singer WHERE birth_year < 1945 OR birth_year > 1955 GROUP BY citizenship HAVING COUNT(*) > 1
SELECT DISTINCT T1.Citizenship  FROM singer AS T1  WHERE T1.Birth_Year < 1945  AND T1.Citizenship IN (SELECT T2.Citizenship FROM singer AS T2 WHERE T2.Birth_Year > 1955)

SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;
SELECT COUNT(feature_id) FROM Other_Available_Features;
SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;
SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(feature_id) FROM Other_Available_Features;
SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(DISTINCT feature_id) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;
SELECT COUNT(*) FROM Other_Available_Features;

SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon'
SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon'
SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon'
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name FROM Other_Available_Features AS T1 INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = 'AirCon'
SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 INNER JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_name = 'AirCon'
SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = 'AirCon')
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2  ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'
SELECT T2.feature_type_name  FROM Other_Available_Features AS T1  INNER JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code  WHERE T1.feature_name = 'AirCon'

SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code IS NOT NULL
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code = <specific_code_placeholder>
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code = <specific_code>
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code
SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = '<specific_code>';
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code = '<specific_code>'
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.property_type_code IS NOT NULL
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code = '<specific_code>'
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT DISTINCT RPT.property_type_description  FROM Properties AS P  INNER JOIN Ref_Property_Types AS RPT  ON P.property_type_code = RPT.property_type_code;
SELECT T2.property_type_description  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2  ON T1.property_type_code = T2.property_type_code;
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T2.property_type_description FROM Properties AS T1 INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T1.property_type_description FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code
SELECT T2.property_type_description  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2  ON T1.property_type_code = T2.property_type_code

SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN (SELECT property_type_code FROM Ref_Property_Types WHERE property_type_description IN ('House', 'Apartment')) AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1;
SELECT property_name FROM Properties WHERE property_type_code IN (SELECT property_type_code FROM Ref_Property_Types WHERE property_type_description IN ('House', 'Apartment')) AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1;
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
SELECT T1.property_name  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  WHERE (T2.property_type_description LIKE '%House%' OR T2.property_type_description LIKE '%Apartment%')  AND T1.room_count > 1
SELECT T1.property_name  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  WHERE (T2.property_type_code = 'House' OR T2.property_type_code = 'Apartment')  AND T1.room_count > 1
SELECT DISTINCT P.property_name  FROM Properties AS P  INNER JOIN Ref_Property_Types AS R ON P.property_type_code = R.property_type_code  WHERE (R.property_type_description = 'House' OR R.property_type_description = 'Apartment')  AND P.room_count > 1
SELECT property_name FROM Properties WHERE (property_type_code = 'House' OR property_type_code = 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE (property_type_code = 'House' OR property_type_code = 'Apartment') AND room_count > 1
SELECT property_name FROM Properties WHERE (property_type_code = 'House' OR property_type_code = 'Apartment') AND room_count > 1
SELECT T1.property_name  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2  ON T1.property_type_code = T2.property_type_code  WHERE (T2.property_type_description = 'House' OR T2.property_type_description = 'Apartment')  AND T1.room_count > 1
SELECT T1.property_name  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  WHERE (T2.property_type_description = 'House' OR T2.property_type_description = 'Apartment')  AND T1.room_count > 1
SELECT T1.property_name  FROM Properties AS T1  INNER JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code  WHERE (T2.property_type_description = 'House' OR T2.property_type_description = 'Apartment')  AND T1.room_count > 1
SELECT property_name FROM Properties WHERE property_type_code IN ('House', 'Apartment') AND room_count > 1
